/* tslint:disable */
/* eslint-disable */
/**
 * GitHub v3 REST API
 * GitHub\'s v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
import type { RequestArgs } from './base';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, BaseAPI, RequiredError, operationServerMap } from './base';

/**
 * 
 * @export
 * @interface ActionsBillingUsage
 */
export interface ActionsBillingUsage {
    /**
     * The sum of the free and paid GitHub Actions minutes used.
     * @type {number}
     * @memberof ActionsBillingUsage
     */
    'total_minutes_used': number;
    /**
     * The total paid GitHub Actions minutes used.
     * @type {number}
     * @memberof ActionsBillingUsage
     */
    'total_paid_minutes_used': number;
    /**
     * The amount of free GitHub Actions minutes available.
     * @type {number}
     * @memberof ActionsBillingUsage
     */
    'included_minutes': number;
    /**
     * 
     * @type {ActionsBillingUsageMinutesUsedBreakdown}
     * @memberof ActionsBillingUsage
     */
    'minutes_used_breakdown': ActionsBillingUsageMinutesUsedBreakdown;
}
/**
 * 
 * @export
 * @interface ActionsBillingUsageMinutesUsedBreakdown
 */
export interface ActionsBillingUsageMinutesUsedBreakdown {
    /**
     * Total minutes used on Ubuntu runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'UBUNTU'?: number;
    /**
     * Total minutes used on macOS runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'MACOS'?: number;
    /**
     * Total minutes used on Windows runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'WINDOWS'?: number;
    /**
     * Total minutes used on Ubuntu 4 core runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'ubuntu_4_core'?: number;
    /**
     * Total minutes used on Ubuntu 8 core runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'ubuntu_8_core'?: number;
    /**
     * Total minutes used on Ubuntu 16 core runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'ubuntu_16_core'?: number;
    /**
     * Total minutes used on Ubuntu 32 core runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'ubuntu_32_core'?: number;
    /**
     * Total minutes used on Ubuntu 64 core runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'ubuntu_64_core'?: number;
    /**
     * Total minutes used on Windows 4 core runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'windows_4_core'?: number;
    /**
     * Total minutes used on Windows 8 core runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'windows_8_core'?: number;
    /**
     * Total minutes used on Windows 16 core runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'windows_16_core'?: number;
    /**
     * Total minutes used on Windows 32 core runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'windows_32_core'?: number;
    /**
     * Total minutes used on Windows 64 core runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'windows_64_core'?: number;
    /**
     * Total minutes used on macOS 12 core runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'macos_12_core'?: number;
    /**
     * Total minutes used on all runner machines.
     * @type {number}
     * @memberof ActionsBillingUsageMinutesUsedBreakdown
     */
    'total'?: number;
}
/**
 * Repository actions caches
 * @export
 * @interface ActionsCacheList
 */
export interface ActionsCacheList {
    /**
     * Total number of caches
     * @type {number}
     * @memberof ActionsCacheList
     */
    'total_count': number;
    /**
     * Array of caches
     * @type {Array<ActionsCacheListActionsCachesInner>}
     * @memberof ActionsCacheList
     */
    'actions_caches': Array<ActionsCacheListActionsCachesInner>;
}
/**
 * 
 * @export
 * @interface ActionsCacheListActionsCachesInner
 */
export interface ActionsCacheListActionsCachesInner {
    /**
     * 
     * @type {number}
     * @memberof ActionsCacheListActionsCachesInner
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof ActionsCacheListActionsCachesInner
     */
    'ref'?: string;
    /**
     * 
     * @type {string}
     * @memberof ActionsCacheListActionsCachesInner
     */
    'key'?: string;
    /**
     * 
     * @type {string}
     * @memberof ActionsCacheListActionsCachesInner
     */
    'version'?: string;
    /**
     * 
     * @type {string}
     * @memberof ActionsCacheListActionsCachesInner
     */
    'last_accessed_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof ActionsCacheListActionsCachesInner
     */
    'created_at'?: string;
    /**
     * 
     * @type {number}
     * @memberof ActionsCacheListActionsCachesInner
     */
    'size_in_bytes'?: number;
}
/**
 * GitHub Actions Cache Usage by repository.
 * @export
 * @interface ActionsCacheUsageByRepository
 */
export interface ActionsCacheUsageByRepository {
    /**
     * The repository owner and name for the cache usage being shown.
     * @type {string}
     * @memberof ActionsCacheUsageByRepository
     */
    'full_name': string;
    /**
     * The sum of the size in bytes of all the active cache items in the repository.
     * @type {number}
     * @memberof ActionsCacheUsageByRepository
     */
    'active_caches_size_in_bytes': number;
    /**
     * The number of active caches in the repository.
     * @type {number}
     * @memberof ActionsCacheUsageByRepository
     */
    'active_caches_count': number;
}
/**
 * 
 * @export
 * @interface ActionsCacheUsageOrgEnterprise
 */
export interface ActionsCacheUsageOrgEnterprise {
    /**
     * The count of active caches across all repositories of an enterprise or an organization.
     * @type {number}
     * @memberof ActionsCacheUsageOrgEnterprise
     */
    'total_active_caches_count': number;
    /**
     * The total size in bytes of all active cache items across all repositories of an enterprise or an organization.
     * @type {number}
     * @memberof ActionsCacheUsageOrgEnterprise
     */
    'total_active_caches_size_in_bytes': number;
}
/**
 * The default workflow permissions granted to the GITHUB_TOKEN when running workflows.
 * @export
 * @enum {string}
 */

export const ActionsDefaultWorkflowPermissions = {
    Read: 'read',
    Write: 'write'
} as const;

export type ActionsDefaultWorkflowPermissions = typeof ActionsDefaultWorkflowPermissions[keyof typeof ActionsDefaultWorkflowPermissions];


/**
 * 
 * @export
 * @interface ActionsGetDefaultWorkflowPermissions
 */
export interface ActionsGetDefaultWorkflowPermissions {
    /**
     * 
     * @type {ActionsDefaultWorkflowPermissions}
     * @memberof ActionsGetDefaultWorkflowPermissions
     */
    'default_workflow_permissions': ActionsDefaultWorkflowPermissions;
    /**
     * Whether GitHub Actions can approve pull requests. Enabling this can be a security risk.
     * @type {boolean}
     * @memberof ActionsGetDefaultWorkflowPermissions
     */
    'can_approve_pull_request_reviews': boolean;
}


/**
 * A Github-hosted hosted runner.
 * @export
 * @interface ActionsHostedRunner
 */
export interface ActionsHostedRunner {
    /**
     * The unique identifier of the hosted runner.
     * @type {number}
     * @memberof ActionsHostedRunner
     */
    'id': number;
    /**
     * The name of the hosted runner.
     * @type {string}
     * @memberof ActionsHostedRunner
     */
    'name': string;
    /**
     * The unique identifier of the group that the hosted runner belongs to.
     * @type {number}
     * @memberof ActionsHostedRunner
     */
    'runner_group_id'?: number;
    /**
     * 
     * @type {NullableActionsHostedRunnerPoolImage}
     * @memberof ActionsHostedRunner
     */
    'image_details': NullableActionsHostedRunnerPoolImage | null;
    /**
     * 
     * @type {ActionsHostedRunnerMachineSpec}
     * @memberof ActionsHostedRunner
     */
    'machine_size_details': ActionsHostedRunnerMachineSpec;
    /**
     * The status of the runner.
     * @type {string}
     * @memberof ActionsHostedRunner
     */
    'status': ActionsHostedRunnerStatusEnum;
    /**
     * The operating system of the image.
     * @type {string}
     * @memberof ActionsHostedRunner
     */
    'platform': string;
    /**
     * The maximum amount of hosted runners. Runners will not scale automatically above this number. Use this setting to limit your cost.
     * @type {number}
     * @memberof ActionsHostedRunner
     */
    'maximum_runners'?: number;
    /**
     * Whether public IP is enabled for the hosted runners.
     * @type {boolean}
     * @memberof ActionsHostedRunner
     */
    'public_ip_enabled': boolean;
    /**
     * The public IP ranges when public IP is enabled for the hosted runners.
     * @type {Array<PublicIp>}
     * @memberof ActionsHostedRunner
     */
    'public_ips'?: Array<PublicIp>;
    /**
     * The time at which the runner was last used, in ISO 8601 format.
     * @type {string}
     * @memberof ActionsHostedRunner
     */
    'last_active_on'?: string | null;
}

export const ActionsHostedRunnerStatusEnum = {
    Ready: 'Ready',
    Provisioning: 'Provisioning',
    Shutdown: 'Shutdown',
    Deleting: 'Deleting',
    Stuck: 'Stuck'
} as const;

export type ActionsHostedRunnerStatusEnum = typeof ActionsHostedRunnerStatusEnum[keyof typeof ActionsHostedRunnerStatusEnum];

/**
 * Provides details of a hosted runner image
 * @export
 * @interface ActionsHostedRunnerImage
 */
export interface ActionsHostedRunnerImage {
    /**
     * The ID of the image. Use this ID for the `image` parameter when creating a new larger runner.
     * @type {string}
     * @memberof ActionsHostedRunnerImage
     */
    'id': string;
    /**
     * The operating system of the image.
     * @type {string}
     * @memberof ActionsHostedRunnerImage
     */
    'platform': string;
    /**
     * Image size in GB.
     * @type {number}
     * @memberof ActionsHostedRunnerImage
     */
    'size_gb': number;
    /**
     * Display name for this image.
     * @type {string}
     * @memberof ActionsHostedRunnerImage
     */
    'display_name': string;
    /**
     * The image provider.
     * @type {string}
     * @memberof ActionsHostedRunnerImage
     */
    'source': ActionsHostedRunnerImageSourceEnum;
}

export const ActionsHostedRunnerImageSourceEnum = {
    Github: 'github',
    Partner: 'partner',
    Custom: 'custom'
} as const;

export type ActionsHostedRunnerImageSourceEnum = typeof ActionsHostedRunnerImageSourceEnum[keyof typeof ActionsHostedRunnerImageSourceEnum];

/**
 * 
 * @export
 * @interface ActionsHostedRunnerLimits
 */
export interface ActionsHostedRunnerLimits {
    /**
     * 
     * @type {StaticPublicIPLimitsForGitHubHostedHostedRunners}
     * @memberof ActionsHostedRunnerLimits
     */
    'public_ips': StaticPublicIPLimitsForGitHubHostedHostedRunners;
}
/**
 * Provides details of a particular machine spec.
 * @export
 * @interface ActionsHostedRunnerMachineSpec
 */
export interface ActionsHostedRunnerMachineSpec {
    /**
     * The ID used for the `size` parameter when creating a new runner.
     * @type {string}
     * @memberof ActionsHostedRunnerMachineSpec
     */
    'id': string;
    /**
     * The number of cores.
     * @type {number}
     * @memberof ActionsHostedRunnerMachineSpec
     */
    'cpu_cores': number;
    /**
     * The available RAM for the machine spec.
     * @type {number}
     * @memberof ActionsHostedRunnerMachineSpec
     */
    'memory_gb': number;
    /**
     * The available SSD storage for the machine spec.
     * @type {number}
     * @memberof ActionsHostedRunnerMachineSpec
     */
    'storage_gb': number;
}
/**
 * 
 * @export
 * @interface ActionsOrganizationPermissions
 */
export interface ActionsOrganizationPermissions {
    /**
     * 
     * @type {EnabledRepositories}
     * @memberof ActionsOrganizationPermissions
     */
    'enabled_repositories': EnabledRepositories;
    /**
     * The API URL to use to get or set the selected repositories that are allowed to run GitHub Actions, when `enabled_repositories` is set to `selected`.
     * @type {string}
     * @memberof ActionsOrganizationPermissions
     */
    'selected_repositories_url'?: string;
    /**
     * 
     * @type {AllowedActions}
     * @memberof ActionsOrganizationPermissions
     */
    'allowed_actions'?: AllowedActions;
    /**
     * The API URL to use to get or set the actions and reusable workflows that are allowed to run, when `allowed_actions` is set to `selected`.
     * @type {string}
     * @memberof ActionsOrganizationPermissions
     */
    'selected_actions_url'?: string;
}


/**
 * The public key used for setting Actions Secrets.
 * @export
 * @interface ActionsPublicKey
 */
export interface ActionsPublicKey {
    /**
     * The identifier for the key.
     * @type {string}
     * @memberof ActionsPublicKey
     */
    'key_id': string;
    /**
     * The Base64 encoded public key.
     * @type {string}
     * @memberof ActionsPublicKey
     */
    'key': string;
    /**
     * 
     * @type {number}
     * @memberof ActionsPublicKey
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof ActionsPublicKey
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof ActionsPublicKey
     */
    'title'?: string;
    /**
     * 
     * @type {string}
     * @memberof ActionsPublicKey
     */
    'created_at'?: string;
}
/**
 * 
 * @export
 * @interface ActionsRepositoryPermissions
 */
export interface ActionsRepositoryPermissions {
    /**
     * Whether GitHub Actions is enabled on the repository.
     * @type {boolean}
     * @memberof ActionsRepositoryPermissions
     */
    'enabled': boolean;
    /**
     * 
     * @type {AllowedActions}
     * @memberof ActionsRepositoryPermissions
     */
    'allowed_actions'?: AllowedActions;
    /**
     * The API URL to use to get or set the actions and reusable workflows that are allowed to run, when `allowed_actions` is set to `selected`.
     * @type {string}
     * @memberof ActionsRepositoryPermissions
     */
    'selected_actions_url'?: string;
}


/**
 * Set secrets for GitHub Actions.
 * @export
 * @interface ActionsSecret
 */
export interface ActionsSecret {
    /**
     * The name of the secret.
     * @type {string}
     * @memberof ActionsSecret
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof ActionsSecret
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof ActionsSecret
     */
    'updated_at': string;
}
/**
 * 
 * @export
 * @interface ActionsSetDefaultWorkflowPermissions
 */
export interface ActionsSetDefaultWorkflowPermissions {
    /**
     * 
     * @type {ActionsDefaultWorkflowPermissions}
     * @memberof ActionsSetDefaultWorkflowPermissions
     */
    'default_workflow_permissions'?: ActionsDefaultWorkflowPermissions;
    /**
     * Whether GitHub Actions can approve pull requests. Enabling this can be a security risk.
     * @type {boolean}
     * @memberof ActionsSetDefaultWorkflowPermissions
     */
    'can_approve_pull_request_reviews'?: boolean;
}


/**
 * 
 * @export
 * @interface ActionsVariable
 */
export interface ActionsVariable {
    /**
     * The name of the variable.
     * @type {string}
     * @memberof ActionsVariable
     */
    'name': string;
    /**
     * The value of the variable.
     * @type {string}
     * @memberof ActionsVariable
     */
    'value': string;
    /**
     * The date and time at which the variable was created, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof ActionsVariable
     */
    'created_at': string;
    /**
     * The date and time at which the variable was last updated, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof ActionsVariable
     */
    'updated_at': string;
}
/**
 * 
 * @export
 * @interface ActionsWorkflowAccessToRepository
 */
export interface ActionsWorkflowAccessToRepository {
    /**
     * Defines the level of access that workflows outside of the repository have to actions and reusable workflows within the repository.  `none` means the access is only possible from workflows in this repository. `user` level access allows sharing across user owned private repositories only. `organization` level access allows sharing across the organization.
     * @type {string}
     * @memberof ActionsWorkflowAccessToRepository
     */
    'access_level': ActionsWorkflowAccessToRepositoryAccessLevelEnum;
}

export const ActionsWorkflowAccessToRepositoryAccessLevelEnum = {
    None: 'none',
    User: 'user',
    Organization: 'organization'
} as const;

export type ActionsWorkflowAccessToRepositoryAccessLevelEnum = typeof ActionsWorkflowAccessToRepositoryAccessLevelEnum[keyof typeof ActionsWorkflowAccessToRepositoryAccessLevelEnum];

/**
 * Activity
 * @export
 * @interface Activity
 */
export interface Activity {
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    'node_id': string;
    /**
     * The SHA of the commit before the activity.
     * @type {string}
     * @memberof Activity
     */
    'before': string;
    /**
     * The SHA of the commit after the activity.
     * @type {string}
     * @memberof Activity
     */
    'after': string;
    /**
     * The full Git reference, formatted as `refs/heads/<branch name>`.
     * @type {string}
     * @memberof Activity
     */
    'ref': string;
    /**
     * The time when the activity occurred.
     * @type {string}
     * @memberof Activity
     */
    'timestamp': string;
    /**
     * The type of the activity that was performed.
     * @type {string}
     * @memberof Activity
     */
    'activity_type': ActivityActivityTypeEnum;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof Activity
     */
    'actor': NullableSimpleUser | null;
}

export const ActivityActivityTypeEnum = {
    Push: 'push',
    ForcePush: 'force_push',
    BranchDeletion: 'branch_deletion',
    BranchCreation: 'branch_creation',
    PrMerge: 'pr_merge',
    MergeQueueMerge: 'merge_queue_merge'
} as const;

export type ActivityActivityTypeEnum = typeof ActivityActivityTypeEnum[keyof typeof ActivityActivityTypeEnum];

/**
 * Actor
 * @export
 * @interface Actor
 */
export interface Actor {
    /**
     * 
     * @type {number}
     * @memberof Actor
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Actor
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof Actor
     */
    'display_login'?: string;
    /**
     * 
     * @type {string}
     * @memberof Actor
     */
    'gravatar_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof Actor
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Actor
     */
    'avatar_url': string;
}
/**
 * Added to Project Issue Event
 * @export
 * @interface AddedToProjectIssueEvent
 */
export interface AddedToProjectIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof AddedToProjectIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof AddedToProjectIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof AddedToProjectIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof AddedToProjectIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof AddedToProjectIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof AddedToProjectIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof AddedToProjectIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof AddedToProjectIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof AddedToProjectIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {AddedToProjectIssueEventProjectCard}
     * @memberof AddedToProjectIssueEvent
     */
    'project_card'?: AddedToProjectIssueEventProjectCard;
}
/**
 * 
 * @export
 * @interface AddedToProjectIssueEventProjectCard
 */
export interface AddedToProjectIssueEventProjectCard {
    /**
     * 
     * @type {number}
     * @memberof AddedToProjectIssueEventProjectCard
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof AddedToProjectIssueEventProjectCard
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof AddedToProjectIssueEventProjectCard
     */
    'project_id': number;
    /**
     * 
     * @type {string}
     * @memberof AddedToProjectIssueEventProjectCard
     */
    'project_url': string;
    /**
     * 
     * @type {string}
     * @memberof AddedToProjectIssueEventProjectCard
     */
    'column_name': string;
    /**
     * 
     * @type {string}
     * @memberof AddedToProjectIssueEventProjectCard
     */
    'previous_column_name'?: string;
}
/**
 * 
 * @export
 * @interface AlertInstance
 */
export interface AlertInstance {
    /**
     * Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name.
     * @type {string}
     * @memberof AlertInstance
     */
    'analysis_key': string;
    /**
     * Identifies the configuration under which the analysis was executed.
     * @type {string}
     * @memberof AlertInstance
     */
    'category'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AlertInstance
     */
    'classifications'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof AlertInstance
     */
    'commit_sha'?: string;
    /**
     * Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed.
     * @type {string}
     * @memberof AlertInstance
     */
    'environment': string;
    /**
     * 
     * @type {AlertInstanceLocation}
     * @memberof AlertInstance
     */
    'location'?: AlertInstanceLocation;
    /**
     * 
     * @type {CodeScanningAlertInstanceMessage}
     * @memberof AlertInstance
     */
    'message'?: CodeScanningAlertInstanceMessage;
    /**
     * The full Git reference, formatted as `refs/heads/<branch name>`.
     * @type {string}
     * @memberof AlertInstance
     */
    'ref': string;
    /**
     * State of a code scanning alert.
     * @type {string}
     * @memberof AlertInstance
     */
    'state': AlertInstanceStateEnum;
}

export const AlertInstanceStateEnum = {
    Open: 'open',
    Dismissed: 'dismissed',
    Fixed: 'fixed'
} as const;

export type AlertInstanceStateEnum = typeof AlertInstanceStateEnum[keyof typeof AlertInstanceStateEnum];

/**
 * 
 * @export
 * @interface AlertInstanceLocation
 */
export interface AlertInstanceLocation {
    /**
     * 
     * @type {number}
     * @memberof AlertInstanceLocation
     */
    'end_column'?: number;
    /**
     * 
     * @type {number}
     * @memberof AlertInstanceLocation
     */
    'end_line'?: number;
    /**
     * 
     * @type {string}
     * @memberof AlertInstanceLocation
     */
    'path'?: string;
    /**
     * 
     * @type {number}
     * @memberof AlertInstanceLocation
     */
    'start_column'?: number;
    /**
     * 
     * @type {number}
     * @memberof AlertInstanceLocation
     */
    'start_line'?: number;
}
/**
 * The permissions policy that controls the actions and reusable workflows that are allowed to run.
 * @export
 * @enum {string}
 */

export const AllowedActions = {
    All: 'all',
    LocalOnly: 'local_only',
    Selected: 'selected'
} as const;

export type AllowedActions = typeof AllowedActions[keyof typeof AllowedActions];


/**
 * 
 * @export
 * @interface ApiInsightsRouteStatsInner
 */
export interface ApiInsightsRouteStatsInner {
    /**
     * The HTTP method
     * @type {string}
     * @memberof ApiInsightsRouteStatsInner
     */
    'http_method'?: string;
    /**
     * The API path\'s route template
     * @type {string}
     * @memberof ApiInsightsRouteStatsInner
     */
    'api_route'?: string;
    /**
     * The total number of requests within the queried time period
     * @type {number}
     * @memberof ApiInsightsRouteStatsInner
     */
    'total_request_count'?: number;
    /**
     * The total number of requests that were rate limited within the queried time period
     * @type {number}
     * @memberof ApiInsightsRouteStatsInner
     */
    'rate_limited_request_count'?: number;
    /**
     * 
     * @type {string}
     * @memberof ApiInsightsRouteStatsInner
     */
    'last_rate_limited_timestamp'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApiInsightsRouteStatsInner
     */
    'last_request_timestamp'?: string;
}
/**
 * 
 * @export
 * @interface ApiInsightsSubjectStatsInner
 */
export interface ApiInsightsSubjectStatsInner {
    /**
     * 
     * @type {string}
     * @memberof ApiInsightsSubjectStatsInner
     */
    'subject_type'?: string;
    /**
     * 
     * @type {string}
     * @memberof ApiInsightsSubjectStatsInner
     */
    'subject_name'?: string;
    /**
     * 
     * @type {number}
     * @memberof ApiInsightsSubjectStatsInner
     */
    'subject_id'?: number;
    /**
     * 
     * @type {number}
     * @memberof ApiInsightsSubjectStatsInner
     */
    'total_request_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof ApiInsightsSubjectStatsInner
     */
    'rate_limited_request_count'?: number;
    /**
     * 
     * @type {string}
     * @memberof ApiInsightsSubjectStatsInner
     */
    'last_rate_limited_timestamp'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApiInsightsSubjectStatsInner
     */
    'last_request_timestamp'?: string;
}
/**
 * API Insights usage summary stats for an organization
 * @export
 * @interface ApiInsightsSummaryStats
 */
export interface ApiInsightsSummaryStats {
    /**
     * The total number of requests within the queried time period
     * @type {number}
     * @memberof ApiInsightsSummaryStats
     */
    'total_request_count'?: number;
    /**
     * The total number of requests that were rate limited within the queried time period
     * @type {number}
     * @memberof ApiInsightsSummaryStats
     */
    'rate_limited_request_count'?: number;
}
/**
 * 
 * @export
 * @interface ApiInsightsTimeStatsInner
 */
export interface ApiInsightsTimeStatsInner {
    /**
     * 
     * @type {string}
     * @memberof ApiInsightsTimeStatsInner
     */
    'timestamp'?: string;
    /**
     * 
     * @type {number}
     * @memberof ApiInsightsTimeStatsInner
     */
    'total_request_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof ApiInsightsTimeStatsInner
     */
    'rate_limited_request_count'?: number;
}
/**
 * 
 * @export
 * @interface ApiInsightsUserStatsInner
 */
export interface ApiInsightsUserStatsInner {
    /**
     * 
     * @type {string}
     * @memberof ApiInsightsUserStatsInner
     */
    'actor_type'?: string;
    /**
     * 
     * @type {string}
     * @memberof ApiInsightsUserStatsInner
     */
    'actor_name'?: string;
    /**
     * 
     * @type {number}
     * @memberof ApiInsightsUserStatsInner
     */
    'actor_id'?: number;
    /**
     * 
     * @type {number}
     * @memberof ApiInsightsUserStatsInner
     */
    'integration_id'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ApiInsightsUserStatsInner
     */
    'oauth_application_id'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ApiInsightsUserStatsInner
     */
    'total_request_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof ApiInsightsUserStatsInner
     */
    'rate_limited_request_count'?: number;
    /**
     * 
     * @type {string}
     * @memberof ApiInsightsUserStatsInner
     */
    'last_rate_limited_timestamp'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApiInsightsUserStatsInner
     */
    'last_request_timestamp'?: string;
}
/**
 * Api Overview
 * @export
 * @interface ApiOverview
 */
export interface ApiOverview {
    /**
     * 
     * @type {boolean}
     * @memberof ApiOverview
     */
    'verifiable_password_authentication': boolean;
    /**
     * 
     * @type {ApiOverviewSshKeyFingerprints}
     * @memberof ApiOverview
     */
    'ssh_key_fingerprints'?: ApiOverviewSshKeyFingerprints;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'ssh_keys'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'hooks'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'github_enterprise_importer'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'web'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'api'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'git'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'packages'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'pages'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'importer'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'actions'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'actions_macos'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'codespaces'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'dependabot'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverview
     */
    'copilot'?: Array<string>;
    /**
     * 
     * @type {ApiOverviewDomains}
     * @memberof ApiOverview
     */
    'domains'?: ApiOverviewDomains;
}
/**
 * 
 * @export
 * @interface ApiOverviewDomains
 */
export interface ApiOverviewDomains {
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverviewDomains
     */
    'website'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverviewDomains
     */
    'codespaces'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverviewDomains
     */
    'copilot'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverviewDomains
     */
    'packages'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverviewDomains
     */
    'actions'?: Array<string>;
    /**
     * 
     * @type {ApiOverviewDomainsActionsInbound}
     * @memberof ApiOverviewDomains
     */
    'actions_inbound'?: ApiOverviewDomainsActionsInbound;
    /**
     * 
     * @type {ApiOverviewDomainsArtifactAttestations}
     * @memberof ApiOverviewDomains
     */
    'artifact_attestations'?: ApiOverviewDomainsArtifactAttestations;
}
/**
 * 
 * @export
 * @interface ApiOverviewDomainsActionsInbound
 */
export interface ApiOverviewDomainsActionsInbound {
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverviewDomainsActionsInbound
     */
    'full_domains'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverviewDomainsActionsInbound
     */
    'wildcard_domains'?: Array<string>;
}
/**
 * 
 * @export
 * @interface ApiOverviewDomainsArtifactAttestations
 */
export interface ApiOverviewDomainsArtifactAttestations {
    /**
     * 
     * @type {string}
     * @memberof ApiOverviewDomainsArtifactAttestations
     */
    'trust_domain'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiOverviewDomainsArtifactAttestations
     */
    'services'?: Array<string>;
}
/**
 * 
 * @export
 * @interface ApiOverviewSshKeyFingerprints
 */
export interface ApiOverviewSshKeyFingerprints {
    /**
     * 
     * @type {string}
     * @memberof ApiOverviewSshKeyFingerprints
     */
    'SHA256_RSA'?: string;
    /**
     * 
     * @type {string}
     * @memberof ApiOverviewSshKeyFingerprints
     */
    'SHA256_DSA'?: string;
    /**
     * 
     * @type {string}
     * @memberof ApiOverviewSshKeyFingerprints
     */
    'SHA256_ECDSA'?: string;
    /**
     * 
     * @type {string}
     * @memberof ApiOverviewSshKeyFingerprints
     */
    'SHA256_ED25519'?: string;
}
/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App
 */
export interface App {
    /**
     * 
     * @type {string}
     * @memberof App
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App
     */
    'events'?: Array<AppEventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App
     */
    'owner': User2 | null;
    /**
     * 
     * @type {AppPermissions}
     * @memberof App
     */
    'permissions'?: AppPermissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App
     */
    'updated_at': string | null;
}

export const AppEventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    Reminder: 'reminder',
    PullRequestReviewThread: 'pull_request_review_thread'
} as const;

export type AppEventsEnum = typeof AppEventsEnum[keyof typeof AppEventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App1
 */
export interface App1 {
    /**
     * 
     * @type {string}
     * @memberof App1
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App1
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App1
     */
    'events'?: Array<App1EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App1
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App1
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App1
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App1
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App1
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App1
     */
    'owner': User2 | null;
    /**
     * 
     * @type {App1Permissions}
     * @memberof App1
     */
    'permissions'?: App1Permissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App1
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App1
     */
    'updated_at': string | null;
}

export const App1EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run'
} as const;

export type App1EventsEnum = typeof App1EventsEnum[keyof typeof App1EventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App10
 */
export interface App10 {
    /**
     * 
     * @type {string}
     * @memberof App10
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App10
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App10
     */
    'events'?: Array<App10EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App10
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App10
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App10
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App10
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App10
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App10
     */
    'owner': User2 | null;
    /**
     * 
     * @type {App1Permissions}
     * @memberof App10
     */
    'permissions'?: App1Permissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App10
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App10
     */
    'updated_at': string | null;
}

export const App10EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    Reminder: 'reminder'
} as const;

export type App10EventsEnum = typeof App10EventsEnum[keyof typeof App10EventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App11
 */
export interface App11 {
    /**
     * 
     * @type {string}
     * @memberof App11
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App11
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App11
     */
    'events'?: Array<App11EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App11
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App11
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App11
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App11
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App11
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App11
     */
    'owner': User2 | null;
    /**
     * 
     * @type {AppPermissions}
     * @memberof App11
     */
    'permissions'?: AppPermissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App11
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App11
     */
    'updated_at': string | null;
}

export const App11EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run'
} as const;

export type App11EventsEnum = typeof App11EventsEnum[keyof typeof App11EventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App12
 */
export interface App12 {
    /**
     * 
     * @type {string}
     * @memberof App12
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App12
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App12
     */
    'events'?: Array<App12EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App12
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App12
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App12
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App12
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App12
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App12
     */
    'owner': User2 | null;
    /**
     * 
     * @type {AppPermissions}
     * @memberof App12
     */
    'permissions'?: AppPermissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App12
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App12
     */
    'updated_at': string | null;
}

export const App12EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    SecurityAndAnalysis: 'security_and_analysis',
    PullRequestReviewThread: 'pull_request_review_thread',
    Reminder: 'reminder'
} as const;

export type App12EventsEnum = typeof App12EventsEnum[keyof typeof App12EventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App13
 */
export interface App13 {
    /**
     * 
     * @type {string}
     * @memberof App13
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App13
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App13
     */
    'events'?: Array<App13EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App13
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App13
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App13
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App13
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App13
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App13
     */
    'owner': User2 | null;
    /**
     * 
     * @type {AppPermissions}
     * @memberof App13
     */
    'permissions'?: AppPermissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App13
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App13
     */
    'updated_at': string | null;
}

export const App13EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    PullRequestReviewThread: 'pull_request_review_thread',
    Reminder: 'reminder'
} as const;

export type App13EventsEnum = typeof App13EventsEnum[keyof typeof App13EventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App14
 */
export interface App14 {
    /**
     * 
     * @type {string}
     * @memberof App14
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App14
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App14
     */
    'events'?: Array<App14EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App14
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App14
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App14
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App14
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App14
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App14
     */
    'owner': User2 | null;
    /**
     * 
     * @type {App1Permissions}
     * @memberof App14
     */
    'permissions'?: App1Permissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App14
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App14
     */
    'updated_at': string | null;
}

export const App14EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    Reminder: 'reminder',
    SecurityAndAnalysis: 'security_and_analysis'
} as const;

export type App14EventsEnum = typeof App14EventsEnum[keyof typeof App14EventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App15
 */
export interface App15 {
    /**
     * 
     * @type {string}
     * @memberof App15
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App15
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App15
     */
    'events'?: Array<App15EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App15
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App15
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App15
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App15
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App15
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App15
     */
    'owner': User2 | null;
    /**
     * 
     * @type {AppPermissions}
     * @memberof App15
     */
    'permissions'?: AppPermissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App15
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App15
     */
    'updated_at': string | null;
}

export const App15EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    Reminder: 'reminder'
} as const;

export type App15EventsEnum = typeof App15EventsEnum[keyof typeof App15EventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App16
 */
export interface App16 {
    /**
     * 
     * @type {string}
     * @memberof App16
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App16
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App16
     */
    'events'?: Array<App16EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App16
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App16
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App16
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App16
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App16
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App16
     */
    'owner': User2 | null;
    /**
     * 
     * @type {App2Permissions}
     * @memberof App16
     */
    'permissions'?: App2Permissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App16
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App16
     */
    'updated_at': string | null;
}

export const App16EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    PullRequestReviewThread: 'pull_request_review_thread',
    Reminder: 'reminder'
} as const;

export type App16EventsEnum = typeof App16EventsEnum[keyof typeof App16EventsEnum];

/**
 * The set of permissions for the GitHub app
 * @export
 * @interface App1Permissions
 */
export interface App1Permissions {
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'actions'?: App1PermissionsActionsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'administration'?: App1PermissionsAdministrationEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'checks'?: App1PermissionsChecksEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'content_references'?: App1PermissionsContentReferencesEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'contents'?: App1PermissionsContentsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'deployments'?: App1PermissionsDeploymentsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'discussions'?: App1PermissionsDiscussionsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'emails'?: App1PermissionsEmailsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'environments'?: App1PermissionsEnvironmentsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'issues'?: App1PermissionsIssuesEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'keys'?: App1PermissionsKeysEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'members'?: App1PermissionsMembersEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'metadata'?: App1PermissionsMetadataEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'organization_administration'?: App1PermissionsOrganizationAdministrationEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'organization_hooks'?: App1PermissionsOrganizationHooksEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'organization_packages'?: App1PermissionsOrganizationPackagesEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'organization_plan'?: App1PermissionsOrganizationPlanEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'organization_projects'?: App1PermissionsOrganizationProjectsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'organization_secrets'?: App1PermissionsOrganizationSecretsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'organization_self_hosted_runners'?: App1PermissionsOrganizationSelfHostedRunnersEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'organization_user_blocking'?: App1PermissionsOrganizationUserBlockingEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'packages'?: App1PermissionsPackagesEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'pages'?: App1PermissionsPagesEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'pull_requests'?: App1PermissionsPullRequestsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'repository_hooks'?: App1PermissionsRepositoryHooksEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'repository_projects'?: App1PermissionsRepositoryProjectsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'secret_scanning_alerts'?: App1PermissionsSecretScanningAlertsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'secrets'?: App1PermissionsSecretsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'security_events'?: App1PermissionsSecurityEventsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'security_scanning_alert'?: App1PermissionsSecurityScanningAlertEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'single_file'?: App1PermissionsSingleFileEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'statuses'?: App1PermissionsStatusesEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'team_discussions'?: App1PermissionsTeamDiscussionsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'vulnerability_alerts'?: App1PermissionsVulnerabilityAlertsEnum;
    /**
     * 
     * @type {string}
     * @memberof App1Permissions
     */
    'workflows'?: App1PermissionsWorkflowsEnum;
}

export const App1PermissionsActionsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsActionsEnum = typeof App1PermissionsActionsEnum[keyof typeof App1PermissionsActionsEnum];
export const App1PermissionsAdministrationEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsAdministrationEnum = typeof App1PermissionsAdministrationEnum[keyof typeof App1PermissionsAdministrationEnum];
export const App1PermissionsChecksEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsChecksEnum = typeof App1PermissionsChecksEnum[keyof typeof App1PermissionsChecksEnum];
export const App1PermissionsContentReferencesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsContentReferencesEnum = typeof App1PermissionsContentReferencesEnum[keyof typeof App1PermissionsContentReferencesEnum];
export const App1PermissionsContentsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsContentsEnum = typeof App1PermissionsContentsEnum[keyof typeof App1PermissionsContentsEnum];
export const App1PermissionsDeploymentsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsDeploymentsEnum = typeof App1PermissionsDeploymentsEnum[keyof typeof App1PermissionsDeploymentsEnum];
export const App1PermissionsDiscussionsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsDiscussionsEnum = typeof App1PermissionsDiscussionsEnum[keyof typeof App1PermissionsDiscussionsEnum];
export const App1PermissionsEmailsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsEmailsEnum = typeof App1PermissionsEmailsEnum[keyof typeof App1PermissionsEmailsEnum];
export const App1PermissionsEnvironmentsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsEnvironmentsEnum = typeof App1PermissionsEnvironmentsEnum[keyof typeof App1PermissionsEnvironmentsEnum];
export const App1PermissionsIssuesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsIssuesEnum = typeof App1PermissionsIssuesEnum[keyof typeof App1PermissionsIssuesEnum];
export const App1PermissionsKeysEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsKeysEnum = typeof App1PermissionsKeysEnum[keyof typeof App1PermissionsKeysEnum];
export const App1PermissionsMembersEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsMembersEnum = typeof App1PermissionsMembersEnum[keyof typeof App1PermissionsMembersEnum];
export const App1PermissionsMetadataEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsMetadataEnum = typeof App1PermissionsMetadataEnum[keyof typeof App1PermissionsMetadataEnum];
export const App1PermissionsOrganizationAdministrationEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsOrganizationAdministrationEnum = typeof App1PermissionsOrganizationAdministrationEnum[keyof typeof App1PermissionsOrganizationAdministrationEnum];
export const App1PermissionsOrganizationHooksEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsOrganizationHooksEnum = typeof App1PermissionsOrganizationHooksEnum[keyof typeof App1PermissionsOrganizationHooksEnum];
export const App1PermissionsOrganizationPackagesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsOrganizationPackagesEnum = typeof App1PermissionsOrganizationPackagesEnum[keyof typeof App1PermissionsOrganizationPackagesEnum];
export const App1PermissionsOrganizationPlanEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsOrganizationPlanEnum = typeof App1PermissionsOrganizationPlanEnum[keyof typeof App1PermissionsOrganizationPlanEnum];
export const App1PermissionsOrganizationProjectsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsOrganizationProjectsEnum = typeof App1PermissionsOrganizationProjectsEnum[keyof typeof App1PermissionsOrganizationProjectsEnum];
export const App1PermissionsOrganizationSecretsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsOrganizationSecretsEnum = typeof App1PermissionsOrganizationSecretsEnum[keyof typeof App1PermissionsOrganizationSecretsEnum];
export const App1PermissionsOrganizationSelfHostedRunnersEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsOrganizationSelfHostedRunnersEnum = typeof App1PermissionsOrganizationSelfHostedRunnersEnum[keyof typeof App1PermissionsOrganizationSelfHostedRunnersEnum];
export const App1PermissionsOrganizationUserBlockingEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsOrganizationUserBlockingEnum = typeof App1PermissionsOrganizationUserBlockingEnum[keyof typeof App1PermissionsOrganizationUserBlockingEnum];
export const App1PermissionsPackagesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsPackagesEnum = typeof App1PermissionsPackagesEnum[keyof typeof App1PermissionsPackagesEnum];
export const App1PermissionsPagesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsPagesEnum = typeof App1PermissionsPagesEnum[keyof typeof App1PermissionsPagesEnum];
export const App1PermissionsPullRequestsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsPullRequestsEnum = typeof App1PermissionsPullRequestsEnum[keyof typeof App1PermissionsPullRequestsEnum];
export const App1PermissionsRepositoryHooksEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsRepositoryHooksEnum = typeof App1PermissionsRepositoryHooksEnum[keyof typeof App1PermissionsRepositoryHooksEnum];
export const App1PermissionsRepositoryProjectsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsRepositoryProjectsEnum = typeof App1PermissionsRepositoryProjectsEnum[keyof typeof App1PermissionsRepositoryProjectsEnum];
export const App1PermissionsSecretScanningAlertsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsSecretScanningAlertsEnum = typeof App1PermissionsSecretScanningAlertsEnum[keyof typeof App1PermissionsSecretScanningAlertsEnum];
export const App1PermissionsSecretsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsSecretsEnum = typeof App1PermissionsSecretsEnum[keyof typeof App1PermissionsSecretsEnum];
export const App1PermissionsSecurityEventsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsSecurityEventsEnum = typeof App1PermissionsSecurityEventsEnum[keyof typeof App1PermissionsSecurityEventsEnum];
export const App1PermissionsSecurityScanningAlertEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsSecurityScanningAlertEnum = typeof App1PermissionsSecurityScanningAlertEnum[keyof typeof App1PermissionsSecurityScanningAlertEnum];
export const App1PermissionsSingleFileEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsSingleFileEnum = typeof App1PermissionsSingleFileEnum[keyof typeof App1PermissionsSingleFileEnum];
export const App1PermissionsStatusesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsStatusesEnum = typeof App1PermissionsStatusesEnum[keyof typeof App1PermissionsStatusesEnum];
export const App1PermissionsTeamDiscussionsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsTeamDiscussionsEnum = typeof App1PermissionsTeamDiscussionsEnum[keyof typeof App1PermissionsTeamDiscussionsEnum];
export const App1PermissionsVulnerabilityAlertsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsVulnerabilityAlertsEnum = typeof App1PermissionsVulnerabilityAlertsEnum[keyof typeof App1PermissionsVulnerabilityAlertsEnum];
export const App1PermissionsWorkflowsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App1PermissionsWorkflowsEnum = typeof App1PermissionsWorkflowsEnum[keyof typeof App1PermissionsWorkflowsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App2
 */
export interface App2 {
    /**
     * 
     * @type {string}
     * @memberof App2
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App2
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App2
     */
    'events'?: Array<App2EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App2
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App2
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App2
     */
    'id': number | null;
    /**
     * The client ID of the GitHub app
     * @type {string}
     * @memberof App2
     */
    'client_id'?: string | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App2
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App2
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App2
     */
    'owner': User2 | null;
    /**
     * 
     * @type {App2Permissions}
     * @memberof App2
     */
    'permissions'?: App2Permissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App2
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App2
     */
    'updated_at': string | null;
}

export const App2EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    MergeGroup: 'merge_group',
    PullRequestReviewThread: 'pull_request_review_thread',
    WorkflowJob: 'workflow_job',
    MergeQueueEntry: 'merge_queue_entry',
    SecurityAndAnalysis: 'security_and_analysis',
    ProjectsV2Item: 'projects_v2_item',
    SecretScanningAlertLocation: 'secret_scanning_alert_location'
} as const;

export type App2EventsEnum = typeof App2EventsEnum[keyof typeof App2EventsEnum];

/**
 * The set of permissions for the GitHub app
 * @export
 * @interface App2Permissions
 */
export interface App2Permissions {
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'actions'?: App2PermissionsActionsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'administration'?: App2PermissionsAdministrationEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'checks'?: App2PermissionsChecksEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'content_references'?: App2PermissionsContentReferencesEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'contents'?: App2PermissionsContentsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'deployments'?: App2PermissionsDeploymentsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'discussions'?: App2PermissionsDiscussionsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'emails'?: App2PermissionsEmailsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'environments'?: App2PermissionsEnvironmentsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'issues'?: App2PermissionsIssuesEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'keys'?: App2PermissionsKeysEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'members'?: App2PermissionsMembersEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'metadata'?: App2PermissionsMetadataEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'organization_administration'?: App2PermissionsOrganizationAdministrationEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'organization_hooks'?: App2PermissionsOrganizationHooksEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'organization_packages'?: App2PermissionsOrganizationPackagesEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'organization_plan'?: App2PermissionsOrganizationPlanEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'organization_projects'?: App2PermissionsOrganizationProjectsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'organization_secrets'?: App2PermissionsOrganizationSecretsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'organization_self_hosted_runners'?: App2PermissionsOrganizationSelfHostedRunnersEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'organization_user_blocking'?: App2PermissionsOrganizationUserBlockingEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'packages'?: App2PermissionsPackagesEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'pages'?: App2PermissionsPagesEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'pull_requests'?: App2PermissionsPullRequestsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'repository_hooks'?: App2PermissionsRepositoryHooksEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'repository_projects'?: App2PermissionsRepositoryProjectsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'secret_scanning_alerts'?: App2PermissionsSecretScanningAlertsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'secrets'?: App2PermissionsSecretsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'security_events'?: App2PermissionsSecurityEventsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'security_scanning_alert'?: App2PermissionsSecurityScanningAlertEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'single_file'?: App2PermissionsSingleFileEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'statuses'?: App2PermissionsStatusesEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'team_discussions'?: App2PermissionsTeamDiscussionsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'vulnerability_alerts'?: App2PermissionsVulnerabilityAlertsEnum;
    /**
     * 
     * @type {string}
     * @memberof App2Permissions
     */
    'workflows'?: App2PermissionsWorkflowsEnum;
}

export const App2PermissionsActionsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsActionsEnum = typeof App2PermissionsActionsEnum[keyof typeof App2PermissionsActionsEnum];
export const App2PermissionsAdministrationEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsAdministrationEnum = typeof App2PermissionsAdministrationEnum[keyof typeof App2PermissionsAdministrationEnum];
export const App2PermissionsChecksEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsChecksEnum = typeof App2PermissionsChecksEnum[keyof typeof App2PermissionsChecksEnum];
export const App2PermissionsContentReferencesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsContentReferencesEnum = typeof App2PermissionsContentReferencesEnum[keyof typeof App2PermissionsContentReferencesEnum];
export const App2PermissionsContentsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsContentsEnum = typeof App2PermissionsContentsEnum[keyof typeof App2PermissionsContentsEnum];
export const App2PermissionsDeploymentsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsDeploymentsEnum = typeof App2PermissionsDeploymentsEnum[keyof typeof App2PermissionsDeploymentsEnum];
export const App2PermissionsDiscussionsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsDiscussionsEnum = typeof App2PermissionsDiscussionsEnum[keyof typeof App2PermissionsDiscussionsEnum];
export const App2PermissionsEmailsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsEmailsEnum = typeof App2PermissionsEmailsEnum[keyof typeof App2PermissionsEmailsEnum];
export const App2PermissionsEnvironmentsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsEnvironmentsEnum = typeof App2PermissionsEnvironmentsEnum[keyof typeof App2PermissionsEnvironmentsEnum];
export const App2PermissionsIssuesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsIssuesEnum = typeof App2PermissionsIssuesEnum[keyof typeof App2PermissionsIssuesEnum];
export const App2PermissionsKeysEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsKeysEnum = typeof App2PermissionsKeysEnum[keyof typeof App2PermissionsKeysEnum];
export const App2PermissionsMembersEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsMembersEnum = typeof App2PermissionsMembersEnum[keyof typeof App2PermissionsMembersEnum];
export const App2PermissionsMetadataEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsMetadataEnum = typeof App2PermissionsMetadataEnum[keyof typeof App2PermissionsMetadataEnum];
export const App2PermissionsOrganizationAdministrationEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsOrganizationAdministrationEnum = typeof App2PermissionsOrganizationAdministrationEnum[keyof typeof App2PermissionsOrganizationAdministrationEnum];
export const App2PermissionsOrganizationHooksEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsOrganizationHooksEnum = typeof App2PermissionsOrganizationHooksEnum[keyof typeof App2PermissionsOrganizationHooksEnum];
export const App2PermissionsOrganizationPackagesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsOrganizationPackagesEnum = typeof App2PermissionsOrganizationPackagesEnum[keyof typeof App2PermissionsOrganizationPackagesEnum];
export const App2PermissionsOrganizationPlanEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsOrganizationPlanEnum = typeof App2PermissionsOrganizationPlanEnum[keyof typeof App2PermissionsOrganizationPlanEnum];
export const App2PermissionsOrganizationProjectsEnum = {
    Read: 'read',
    Write: 'write',
    Admin: 'admin'
} as const;

export type App2PermissionsOrganizationProjectsEnum = typeof App2PermissionsOrganizationProjectsEnum[keyof typeof App2PermissionsOrganizationProjectsEnum];
export const App2PermissionsOrganizationSecretsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsOrganizationSecretsEnum = typeof App2PermissionsOrganizationSecretsEnum[keyof typeof App2PermissionsOrganizationSecretsEnum];
export const App2PermissionsOrganizationSelfHostedRunnersEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsOrganizationSelfHostedRunnersEnum = typeof App2PermissionsOrganizationSelfHostedRunnersEnum[keyof typeof App2PermissionsOrganizationSelfHostedRunnersEnum];
export const App2PermissionsOrganizationUserBlockingEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsOrganizationUserBlockingEnum = typeof App2PermissionsOrganizationUserBlockingEnum[keyof typeof App2PermissionsOrganizationUserBlockingEnum];
export const App2PermissionsPackagesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsPackagesEnum = typeof App2PermissionsPackagesEnum[keyof typeof App2PermissionsPackagesEnum];
export const App2PermissionsPagesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsPagesEnum = typeof App2PermissionsPagesEnum[keyof typeof App2PermissionsPagesEnum];
export const App2PermissionsPullRequestsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsPullRequestsEnum = typeof App2PermissionsPullRequestsEnum[keyof typeof App2PermissionsPullRequestsEnum];
export const App2PermissionsRepositoryHooksEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsRepositoryHooksEnum = typeof App2PermissionsRepositoryHooksEnum[keyof typeof App2PermissionsRepositoryHooksEnum];
export const App2PermissionsRepositoryProjectsEnum = {
    Read: 'read',
    Write: 'write',
    Admin: 'admin'
} as const;

export type App2PermissionsRepositoryProjectsEnum = typeof App2PermissionsRepositoryProjectsEnum[keyof typeof App2PermissionsRepositoryProjectsEnum];
export const App2PermissionsSecretScanningAlertsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsSecretScanningAlertsEnum = typeof App2PermissionsSecretScanningAlertsEnum[keyof typeof App2PermissionsSecretScanningAlertsEnum];
export const App2PermissionsSecretsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsSecretsEnum = typeof App2PermissionsSecretsEnum[keyof typeof App2PermissionsSecretsEnum];
export const App2PermissionsSecurityEventsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsSecurityEventsEnum = typeof App2PermissionsSecurityEventsEnum[keyof typeof App2PermissionsSecurityEventsEnum];
export const App2PermissionsSecurityScanningAlertEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsSecurityScanningAlertEnum = typeof App2PermissionsSecurityScanningAlertEnum[keyof typeof App2PermissionsSecurityScanningAlertEnum];
export const App2PermissionsSingleFileEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsSingleFileEnum = typeof App2PermissionsSingleFileEnum[keyof typeof App2PermissionsSingleFileEnum];
export const App2PermissionsStatusesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsStatusesEnum = typeof App2PermissionsStatusesEnum[keyof typeof App2PermissionsStatusesEnum];
export const App2PermissionsTeamDiscussionsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsTeamDiscussionsEnum = typeof App2PermissionsTeamDiscussionsEnum[keyof typeof App2PermissionsTeamDiscussionsEnum];
export const App2PermissionsVulnerabilityAlertsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsVulnerabilityAlertsEnum = typeof App2PermissionsVulnerabilityAlertsEnum[keyof typeof App2PermissionsVulnerabilityAlertsEnum];
export const App2PermissionsWorkflowsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type App2PermissionsWorkflowsEnum = typeof App2PermissionsWorkflowsEnum[keyof typeof App2PermissionsWorkflowsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App3
 */
export interface App3 {
    /**
     * 
     * @type {string}
     * @memberof App3
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App3
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App3
     */
    'events'?: Array<App3EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App3
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App3
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App3
     */
    'id': number | null;
    /**
     * Client ID of the GitHub app
     * @type {string}
     * @memberof App3
     */
    'client_id'?: string | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App3
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App3
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App3
     */
    'owner': User2 | null;
    /**
     * 
     * @type {App2Permissions}
     * @memberof App3
     */
    'permissions'?: App2Permissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App3
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App3
     */
    'updated_at': string | null;
}

export const App3EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    PullRequestReviewThread: 'pull_request_review_thread',
    WorkflowJob: 'workflow_job',
    MergeQueueEntry: 'merge_queue_entry',
    SecurityAndAnalysis: 'security_and_analysis',
    SecretScanningAlertLocation: 'secret_scanning_alert_location',
    ProjectsV2Item: 'projects_v2_item',
    MergeGroup: 'merge_group',
    RepositoryImport: 'repository_import'
} as const;

export type App3EventsEnum = typeof App3EventsEnum[keyof typeof App3EventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App4
 */
export interface App4 {
    /**
     * 
     * @type {string}
     * @memberof App4
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App4
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App4
     */
    'events'?: Array<App4EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App4
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App4
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App4
     */
    'id': number | null;
    /**
     * The Client ID for the GitHub app
     * @type {string}
     * @memberof App4
     */
    'client_id'?: string | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App4
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App4
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App4
     */
    'owner': User2 | null;
    /**
     * 
     * @type {App2Permissions}
     * @memberof App4
     */
    'permissions'?: App2Permissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App4
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App4
     */
    'updated_at': string | null;
}

export const App4EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    PullRequestReviewThread: 'pull_request_review_thread',
    MergeQueueEntry: 'merge_queue_entry',
    WorkflowJob: 'workflow_job'
} as const;

export type App4EventsEnum = typeof App4EventsEnum[keyof typeof App4EventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App5
 */
export interface App5 {
    /**
     * 
     * @type {string}
     * @memberof App5
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App5
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App5
     */
    'events'?: Array<App5EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App5
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App5
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App5
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App5
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App5
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App5
     */
    'owner': User2 | null;
    /**
     * 
     * @type {App1Permissions}
     * @memberof App5
     */
    'permissions'?: App1Permissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App5
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App5
     */
    'updated_at': string | null;
}

export const App5EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    WorkflowJob: 'workflow_job',
    PullRequestReviewThread: 'pull_request_review_thread',
    MergeQueueEntry: 'merge_queue_entry',
    SecretScanningAlertLocation: 'secret_scanning_alert_location',
    MergeGroup: 'merge_group'
} as const;

export type App5EventsEnum = typeof App5EventsEnum[keyof typeof App5EventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App6
 */
export interface App6 {
    /**
     * 
     * @type {string}
     * @memberof App6
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App6
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App6
     */
    'events'?: Array<App6EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App6
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App6
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App6
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App6
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App6
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App6
     */
    'owner': User2 | null;
    /**
     * 
     * @type {App1Permissions}
     * @memberof App6
     */
    'permissions'?: App1Permissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App6
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App6
     */
    'updated_at': string | null;
}

export const App6EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    MergeQueueEntry: 'merge_queue_entry',
    WorkflowJob: 'workflow_job',
    PullRequestReviewThread: 'pull_request_review_thread',
    SecretScanningAlertLocation: 'secret_scanning_alert_location',
    MergeGroup: 'merge_group'
} as const;

export type App6EventsEnum = typeof App6EventsEnum[keyof typeof App6EventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App7
 */
export interface App7 {
    /**
     * 
     * @type {string}
     * @memberof App7
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App7
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App7
     */
    'events'?: Array<App7EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App7
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App7
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App7
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App7
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App7
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App7
     */
    'owner': User2 | null;
    /**
     * 
     * @type {App1Permissions}
     * @memberof App7
     */
    'permissions'?: App1Permissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App7
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App7
     */
    'updated_at': string | null;
}

export const App7EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    PullRequestReviewThread: 'pull_request_review_thread',
    MergeQueueEntry: 'merge_queue_entry',
    WorkflowJob: 'workflow_job',
    MergeGroup: 'merge_group',
    SecretScanningAlertLocation: 'secret_scanning_alert_location'
} as const;

export type App7EventsEnum = typeof App7EventsEnum[keyof typeof App7EventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App8
 */
export interface App8 {
    /**
     * 
     * @type {string}
     * @memberof App8
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App8
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App8
     */
    'events'?: Array<App8EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App8
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App8
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App8
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App8
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App8
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App8
     */
    'owner': User2 | null;
    /**
     * 
     * @type {App2Permissions}
     * @memberof App8
     */
    'permissions'?: App2Permissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App8
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App8
     */
    'updated_at': string | null;
}

export const App8EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    Reminder: 'reminder',
    PullRequestReviewThread: 'pull_request_review_thread'
} as const;

export type App8EventsEnum = typeof App8EventsEnum[keyof typeof App8EventsEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface App9
 */
export interface App9 {
    /**
     * 
     * @type {string}
     * @memberof App9
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof App9
     */
    'description': string | null;
    /**
     * The list of events for the GitHub app
     * @type {Array<string>}
     * @memberof App9
     */
    'events'?: Array<App9EventsEnum>;
    /**
     * 
     * @type {string}
     * @memberof App9
     */
    'external_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof App9
     */
    'html_url': string;
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof App9
     */
    'id': number | null;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof App9
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof App9
     */
    'node_id': string;
    /**
     * 
     * @type {User2}
     * @memberof App9
     */
    'owner': User2 | null;
    /**
     * 
     * @type {AppPermissions}
     * @memberof App9
     */
    'permissions'?: AppPermissions;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof App9
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof App9
     */
    'updated_at': string | null;
}

export const App9EventsEnum = {
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    ContentReference: 'content_reference',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentReview: 'deployment_review',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryDispatch: 'repository_dispatch',
    SecretScanningAlert: 'secret_scanning_alert',
    Star: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowDispatch: 'workflow_dispatch',
    WorkflowRun: 'workflow_run',
    SecurityAndAnalysis: 'security_and_analysis',
    Reminder: 'reminder',
    PullRequestReviewThread: 'pull_request_review_thread'
} as const;

export type App9EventsEnum = typeof App9EventsEnum[keyof typeof App9EventsEnum];

/**
 * The set of permissions for the GitHub app
 * @export
 * @interface AppPermissions
 */
export interface AppPermissions {
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'actions'?: AppPermissionsActionsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'administration'?: AppPermissionsAdministrationEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'checks'?: AppPermissionsChecksEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'content_references'?: AppPermissionsContentReferencesEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'contents'?: AppPermissionsContentsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'deployments'?: AppPermissionsDeploymentsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'discussions'?: AppPermissionsDiscussionsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'emails'?: AppPermissionsEmailsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'environments'?: AppPermissionsEnvironmentsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'issues'?: AppPermissionsIssuesEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'keys'?: AppPermissionsKeysEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'members'?: AppPermissionsMembersEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'metadata'?: AppPermissionsMetadataEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'organization_administration'?: AppPermissionsOrganizationAdministrationEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'organization_hooks'?: AppPermissionsOrganizationHooksEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'organization_packages'?: AppPermissionsOrganizationPackagesEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'organization_plan'?: AppPermissionsOrganizationPlanEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'organization_projects'?: AppPermissionsOrganizationProjectsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'organization_secrets'?: AppPermissionsOrganizationSecretsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'organization_self_hosted_runners'?: AppPermissionsOrganizationSelfHostedRunnersEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'organization_user_blocking'?: AppPermissionsOrganizationUserBlockingEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'packages'?: AppPermissionsPackagesEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'pages'?: AppPermissionsPagesEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'pull_requests'?: AppPermissionsPullRequestsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'repository_hooks'?: AppPermissionsRepositoryHooksEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'repository_projects'?: AppPermissionsRepositoryProjectsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'secret_scanning_alerts'?: AppPermissionsSecretScanningAlertsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'secrets'?: AppPermissionsSecretsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'security_events'?: AppPermissionsSecurityEventsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'security_scanning_alert'?: AppPermissionsSecurityScanningAlertEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'single_file'?: AppPermissionsSingleFileEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'statuses'?: AppPermissionsStatusesEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'team_discussions'?: AppPermissionsTeamDiscussionsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'vulnerability_alerts'?: AppPermissionsVulnerabilityAlertsEnum;
    /**
     * 
     * @type {string}
     * @memberof AppPermissions
     */
    'workflows'?: AppPermissionsWorkflowsEnum;
}

export const AppPermissionsActionsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsActionsEnum = typeof AppPermissionsActionsEnum[keyof typeof AppPermissionsActionsEnum];
export const AppPermissionsAdministrationEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsAdministrationEnum = typeof AppPermissionsAdministrationEnum[keyof typeof AppPermissionsAdministrationEnum];
export const AppPermissionsChecksEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsChecksEnum = typeof AppPermissionsChecksEnum[keyof typeof AppPermissionsChecksEnum];
export const AppPermissionsContentReferencesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsContentReferencesEnum = typeof AppPermissionsContentReferencesEnum[keyof typeof AppPermissionsContentReferencesEnum];
export const AppPermissionsContentsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsContentsEnum = typeof AppPermissionsContentsEnum[keyof typeof AppPermissionsContentsEnum];
export const AppPermissionsDeploymentsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsDeploymentsEnum = typeof AppPermissionsDeploymentsEnum[keyof typeof AppPermissionsDeploymentsEnum];
export const AppPermissionsDiscussionsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsDiscussionsEnum = typeof AppPermissionsDiscussionsEnum[keyof typeof AppPermissionsDiscussionsEnum];
export const AppPermissionsEmailsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsEmailsEnum = typeof AppPermissionsEmailsEnum[keyof typeof AppPermissionsEmailsEnum];
export const AppPermissionsEnvironmentsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsEnvironmentsEnum = typeof AppPermissionsEnvironmentsEnum[keyof typeof AppPermissionsEnvironmentsEnum];
export const AppPermissionsIssuesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsIssuesEnum = typeof AppPermissionsIssuesEnum[keyof typeof AppPermissionsIssuesEnum];
export const AppPermissionsKeysEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsKeysEnum = typeof AppPermissionsKeysEnum[keyof typeof AppPermissionsKeysEnum];
export const AppPermissionsMembersEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsMembersEnum = typeof AppPermissionsMembersEnum[keyof typeof AppPermissionsMembersEnum];
export const AppPermissionsMetadataEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsMetadataEnum = typeof AppPermissionsMetadataEnum[keyof typeof AppPermissionsMetadataEnum];
export const AppPermissionsOrganizationAdministrationEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsOrganizationAdministrationEnum = typeof AppPermissionsOrganizationAdministrationEnum[keyof typeof AppPermissionsOrganizationAdministrationEnum];
export const AppPermissionsOrganizationHooksEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsOrganizationHooksEnum = typeof AppPermissionsOrganizationHooksEnum[keyof typeof AppPermissionsOrganizationHooksEnum];
export const AppPermissionsOrganizationPackagesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsOrganizationPackagesEnum = typeof AppPermissionsOrganizationPackagesEnum[keyof typeof AppPermissionsOrganizationPackagesEnum];
export const AppPermissionsOrganizationPlanEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsOrganizationPlanEnum = typeof AppPermissionsOrganizationPlanEnum[keyof typeof AppPermissionsOrganizationPlanEnum];
export const AppPermissionsOrganizationProjectsEnum = {
    Read: 'read',
    Write: 'write',
    Admin: 'admin'
} as const;

export type AppPermissionsOrganizationProjectsEnum = typeof AppPermissionsOrganizationProjectsEnum[keyof typeof AppPermissionsOrganizationProjectsEnum];
export const AppPermissionsOrganizationSecretsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsOrganizationSecretsEnum = typeof AppPermissionsOrganizationSecretsEnum[keyof typeof AppPermissionsOrganizationSecretsEnum];
export const AppPermissionsOrganizationSelfHostedRunnersEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsOrganizationSelfHostedRunnersEnum = typeof AppPermissionsOrganizationSelfHostedRunnersEnum[keyof typeof AppPermissionsOrganizationSelfHostedRunnersEnum];
export const AppPermissionsOrganizationUserBlockingEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsOrganizationUserBlockingEnum = typeof AppPermissionsOrganizationUserBlockingEnum[keyof typeof AppPermissionsOrganizationUserBlockingEnum];
export const AppPermissionsPackagesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsPackagesEnum = typeof AppPermissionsPackagesEnum[keyof typeof AppPermissionsPackagesEnum];
export const AppPermissionsPagesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsPagesEnum = typeof AppPermissionsPagesEnum[keyof typeof AppPermissionsPagesEnum];
export const AppPermissionsPullRequestsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsPullRequestsEnum = typeof AppPermissionsPullRequestsEnum[keyof typeof AppPermissionsPullRequestsEnum];
export const AppPermissionsRepositoryHooksEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsRepositoryHooksEnum = typeof AppPermissionsRepositoryHooksEnum[keyof typeof AppPermissionsRepositoryHooksEnum];
export const AppPermissionsRepositoryProjectsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsRepositoryProjectsEnum = typeof AppPermissionsRepositoryProjectsEnum[keyof typeof AppPermissionsRepositoryProjectsEnum];
export const AppPermissionsSecretScanningAlertsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsSecretScanningAlertsEnum = typeof AppPermissionsSecretScanningAlertsEnum[keyof typeof AppPermissionsSecretScanningAlertsEnum];
export const AppPermissionsSecretsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsSecretsEnum = typeof AppPermissionsSecretsEnum[keyof typeof AppPermissionsSecretsEnum];
export const AppPermissionsSecurityEventsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsSecurityEventsEnum = typeof AppPermissionsSecurityEventsEnum[keyof typeof AppPermissionsSecurityEventsEnum];
export const AppPermissionsSecurityScanningAlertEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsSecurityScanningAlertEnum = typeof AppPermissionsSecurityScanningAlertEnum[keyof typeof AppPermissionsSecurityScanningAlertEnum];
export const AppPermissionsSingleFileEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsSingleFileEnum = typeof AppPermissionsSingleFileEnum[keyof typeof AppPermissionsSingleFileEnum];
export const AppPermissionsStatusesEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsStatusesEnum = typeof AppPermissionsStatusesEnum[keyof typeof AppPermissionsStatusesEnum];
export const AppPermissionsTeamDiscussionsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsTeamDiscussionsEnum = typeof AppPermissionsTeamDiscussionsEnum[keyof typeof AppPermissionsTeamDiscussionsEnum];
export const AppPermissionsVulnerabilityAlertsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsVulnerabilityAlertsEnum = typeof AppPermissionsVulnerabilityAlertsEnum[keyof typeof AppPermissionsVulnerabilityAlertsEnum];
export const AppPermissionsWorkflowsEnum = {
    Read: 'read',
    Write: 'write'
} as const;

export type AppPermissionsWorkflowsEnum = typeof AppPermissionsWorkflowsEnum[keyof typeof AppPermissionsWorkflowsEnum];

/**
 * An artifact
 * @export
 * @interface Artifact
 */
export interface Artifact {
    /**
     * 
     * @type {number}
     * @memberof Artifact
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Artifact
     */
    'node_id': string;
    /**
     * The name of the artifact.
     * @type {string}
     * @memberof Artifact
     */
    'name': string;
    /**
     * The size in bytes of the artifact.
     * @type {number}
     * @memberof Artifact
     */
    'size_in_bytes': number;
    /**
     * 
     * @type {string}
     * @memberof Artifact
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Artifact
     */
    'archive_download_url': string;
    /**
     * Whether or not the artifact has expired.
     * @type {boolean}
     * @memberof Artifact
     */
    'expired': boolean;
    /**
     * 
     * @type {string}
     * @memberof Artifact
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof Artifact
     */
    'expires_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof Artifact
     */
    'updated_at': string | null;
    /**
     * The SHA256 digest of the artifact. This field will only be populated on artifacts uploaded with upload-artifact v4 or newer. For older versions, this field will be null.
     * @type {string}
     * @memberof Artifact
     */
    'digest'?: string | null;
    /**
     * 
     * @type {ArtifactWorkflowRun}
     * @memberof Artifact
     */
    'workflow_run'?: ArtifactWorkflowRun | null;
}
/**
 * 
 * @export
 * @interface ArtifactWorkflowRun
 */
export interface ArtifactWorkflowRun {
    /**
     * 
     * @type {number}
     * @memberof ArtifactWorkflowRun
     */
    'id'?: number;
    /**
     * 
     * @type {number}
     * @memberof ArtifactWorkflowRun
     */
    'repository_id'?: number;
    /**
     * 
     * @type {number}
     * @memberof ArtifactWorkflowRun
     */
    'head_repository_id'?: number;
    /**
     * 
     * @type {string}
     * @memberof ArtifactWorkflowRun
     */
    'head_branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof ArtifactWorkflowRun
     */
    'head_sha'?: string;
}
/**
 * Assigned Issue Event
 * @export
 * @interface AssignedIssueEvent
 */
export interface AssignedIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof AssignedIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof AssignedIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof AssignedIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof AssignedIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof AssignedIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof AssignedIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof AssignedIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof AssignedIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {Integration}
     * @memberof AssignedIssueEvent
     */
    'performed_via_github_app': Integration | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof AssignedIssueEvent
     */
    'assignee': SimpleUser;
    /**
     * 
     * @type {SimpleUser}
     * @memberof AssignedIssueEvent
     */
    'assigner': SimpleUser;
}
/**
 * Authentication Token
 * @export
 * @interface AuthenticationToken
 */
export interface AuthenticationToken {
    /**
     * The token used for authentication
     * @type {string}
     * @memberof AuthenticationToken
     */
    'token': string;
    /**
     * The time this token expires
     * @type {string}
     * @memberof AuthenticationToken
     */
    'expires_at': string;
    /**
     * 
     * @type {object}
     * @memberof AuthenticationToken
     */
    'permissions'?: object;
    /**
     * The repositories this token has access to
     * @type {Array<Repository>}
     * @memberof AuthenticationToken
     */
    'repositories'?: Array<Repository>;
    /**
     * 
     * @type {string}
     * @memberof AuthenticationToken
     */
    'single_file'?: string | null;
    /**
     * Describe whether all repositories have been selected or there\'s a selection involved
     * @type {string}
     * @memberof AuthenticationToken
     */
    'repository_selection'?: AuthenticationTokenRepositorySelectionEnum;
}

export const AuthenticationTokenRepositorySelectionEnum = {
    All: 'all',
    Selected: 'selected'
} as const;

export type AuthenticationTokenRepositorySelectionEnum = typeof AuthenticationTokenRepositorySelectionEnum[keyof typeof AuthenticationTokenRepositorySelectionEnum];

/**
 * How the author is associated with the repository.
 * @export
 * @enum {string}
 */

export const AuthorAssociation = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type AuthorAssociation = typeof AuthorAssociation[keyof typeof AuthorAssociation];


/**
 * The authorization for an OAuth app, GitHub App, or a Personal Access Token.
 * @export
 * @interface Authorization
 */
export interface Authorization {
    /**
     * 
     * @type {number}
     * @memberof Authorization
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Authorization
     */
    'url': string;
    /**
     * A list of scopes that this authorization is in.
     * @type {Array<string>}
     * @memberof Authorization
     */
    'scopes': Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof Authorization
     */
    'token': string;
    /**
     * 
     * @type {string}
     * @memberof Authorization
     */
    'token_last_eight': string | null;
    /**
     * 
     * @type {string}
     * @memberof Authorization
     */
    'hashed_token': string | null;
    /**
     * 
     * @type {AuthorizationApp}
     * @memberof Authorization
     */
    'app': AuthorizationApp;
    /**
     * 
     * @type {string}
     * @memberof Authorization
     */
    'note': string | null;
    /**
     * 
     * @type {string}
     * @memberof Authorization
     */
    'note_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof Authorization
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Authorization
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof Authorization
     */
    'fingerprint': string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof Authorization
     */
    'user'?: NullableSimpleUser | null;
    /**
     * 
     * @type {NullableScopedInstallation}
     * @memberof Authorization
     */
    'installation'?: NullableScopedInstallation | null;
    /**
     * 
     * @type {string}
     * @memberof Authorization
     */
    'expires_at': string | null;
}
/**
 * 
 * @export
 * @interface AuthorizationApp
 */
export interface AuthorizationApp {
    /**
     * 
     * @type {string}
     * @memberof AuthorizationApp
     */
    'client_id': string;
    /**
     * 
     * @type {string}
     * @memberof AuthorizationApp
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof AuthorizationApp
     */
    'url': string;
}
/**
 * The status of auto merging a pull request.
 * @export
 * @interface AutoMerge
 */
export interface AutoMerge {
    /**
     * 
     * @type {SimpleUser}
     * @memberof AutoMerge
     */
    'enabled_by': SimpleUser;
    /**
     * The merge method to use.
     * @type {string}
     * @memberof AutoMerge
     */
    'merge_method': AutoMergeMergeMethodEnum;
    /**
     * Title for the merge commit message.
     * @type {string}
     * @memberof AutoMerge
     */
    'commit_title': string;
    /**
     * Commit message for the merge commit.
     * @type {string}
     * @memberof AutoMerge
     */
    'commit_message': string;
}

export const AutoMergeMergeMethodEnum = {
    Merge: 'merge',
    Squash: 'squash',
    Rebase: 'rebase'
} as const;

export type AutoMergeMergeMethodEnum = typeof AutoMergeMergeMethodEnum[keyof typeof AutoMergeMergeMethodEnum];

/**
 * An autolink reference.
 * @export
 * @interface Autolink
 */
export interface Autolink {
    /**
     * 
     * @type {number}
     * @memberof Autolink
     */
    'id': number;
    /**
     * The prefix of a key that is linkified.
     * @type {string}
     * @memberof Autolink
     */
    'key_prefix': string;
    /**
     * A template for the target URL that is generated if a key was found.
     * @type {string}
     * @memberof Autolink
     */
    'url_template': string;
    /**
     * Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters.
     * @type {boolean}
     * @memberof Autolink
     */
    'is_alphanumeric': boolean;
}
/**
 * Base Gist
 * @export
 * @interface BaseGist
 */
export interface BaseGist {
    /**
     * 
     * @type {string}
     * @memberof BaseGist
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof BaseGist
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof BaseGist
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof BaseGist
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof BaseGist
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof BaseGist
     */
    'git_pull_url': string;
    /**
     * 
     * @type {string}
     * @memberof BaseGist
     */
    'git_push_url': string;
    /**
     * 
     * @type {string}
     * @memberof BaseGist
     */
    'html_url': string;
    /**
     * 
     * @type {{ [key: string]: BaseGistFilesValue; }}
     * @memberof BaseGist
     */
    'files': { [key: string]: BaseGistFilesValue; };
    /**
     * 
     * @type {boolean}
     * @memberof BaseGist
     */
    'public': boolean;
    /**
     * 
     * @type {string}
     * @memberof BaseGist
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof BaseGist
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof BaseGist
     */
    'description': string | null;
    /**
     * 
     * @type {number}
     * @memberof BaseGist
     */
    'comments': number;
    /**
     * 
     * @type {boolean}
     * @memberof BaseGist
     */
    'comments_enabled'?: boolean;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof BaseGist
     */
    'user': NullableSimpleUser | null;
    /**
     * 
     * @type {string}
     * @memberof BaseGist
     */
    'comments_url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof BaseGist
     */
    'owner'?: SimpleUser;
    /**
     * 
     * @type {boolean}
     * @memberof BaseGist
     */
    'truncated'?: boolean;
    /**
     * 
     * @type {Array<any>}
     * @memberof BaseGist
     */
    'forks'?: Array<any>;
    /**
     * 
     * @type {Array<any>}
     * @memberof BaseGist
     */
    'history'?: Array<any>;
}
/**
 * 
 * @export
 * @interface BaseGistFilesValue
 */
export interface BaseGistFilesValue {
    /**
     * 
     * @type {string}
     * @memberof BaseGistFilesValue
     */
    'filename'?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseGistFilesValue
     */
    'type'?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseGistFilesValue
     */
    'language'?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseGistFilesValue
     */
    'raw_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof BaseGistFilesValue
     */
    'size'?: number;
    /**
     * The encoding used for `content`. Currently, `\"utf-8\"` and `\"base64\"` are supported.
     * @type {string}
     * @memberof BaseGistFilesValue
     */
    'encoding'?: string;
}
/**
 * Basic Error
 * @export
 * @interface BasicError
 */
export interface BasicError {
    /**
     * 
     * @type {string}
     * @memberof BasicError
     */
    'message'?: string;
    /**
     * 
     * @type {string}
     * @memberof BasicError
     */
    'documentation_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BasicError
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BasicError
     */
    'status'?: string;
}
/**
 * 
 * @export
 * @interface BillingUsageReport
 */
export interface BillingUsageReport {
    /**
     * 
     * @type {Array<BillingUsageReportUsageItemsInner>}
     * @memberof BillingUsageReport
     */
    'usageItems'?: Array<BillingUsageReportUsageItemsInner>;
}
/**
 * 
 * @export
 * @interface BillingUsageReportUsageItemsInner
 */
export interface BillingUsageReportUsageItemsInner {
    /**
     * Date of the usage line item.
     * @type {string}
     * @memberof BillingUsageReportUsageItemsInner
     */
    'date': string;
    /**
     * Product name.
     * @type {string}
     * @memberof BillingUsageReportUsageItemsInner
     */
    'product': string;
    /**
     * SKU name.
     * @type {string}
     * @memberof BillingUsageReportUsageItemsInner
     */
    'sku': string;
    /**
     * Quantity of the usage line item.
     * @type {number}
     * @memberof BillingUsageReportUsageItemsInner
     */
    'quantity': number;
    /**
     * Unit type of the usage line item.
     * @type {string}
     * @memberof BillingUsageReportUsageItemsInner
     */
    'unitType': string;
    /**
     * Price per unit of the usage line item.
     * @type {number}
     * @memberof BillingUsageReportUsageItemsInner
     */
    'pricePerUnit': number;
    /**
     * Gross amount of the usage line item.
     * @type {number}
     * @memberof BillingUsageReportUsageItemsInner
     */
    'grossAmount': number;
    /**
     * Discount amount of the usage line item.
     * @type {number}
     * @memberof BillingUsageReportUsageItemsInner
     */
    'discountAmount': number;
    /**
     * Net amount of the usage line item.
     * @type {number}
     * @memberof BillingUsageReportUsageItemsInner
     */
    'netAmount': number;
    /**
     * Name of the organization.
     * @type {string}
     * @memberof BillingUsageReportUsageItemsInner
     */
    'organizationName': string;
    /**
     * Name of the repository.
     * @type {string}
     * @memberof BillingUsageReportUsageItemsInner
     */
    'repositoryName'?: string;
}
/**
 * 
 * @export
 * @interface BillingUsageReportUser
 */
export interface BillingUsageReportUser {
    /**
     * 
     * @type {Array<BillingUsageReportUserUsageItemsInner>}
     * @memberof BillingUsageReportUser
     */
    'usageItems'?: Array<BillingUsageReportUserUsageItemsInner>;
}
/**
 * 
 * @export
 * @interface BillingUsageReportUserUsageItemsInner
 */
export interface BillingUsageReportUserUsageItemsInner {
    /**
     * Date of the usage line item.
     * @type {string}
     * @memberof BillingUsageReportUserUsageItemsInner
     */
    'date': string;
    /**
     * Product name.
     * @type {string}
     * @memberof BillingUsageReportUserUsageItemsInner
     */
    'product': string;
    /**
     * SKU name.
     * @type {string}
     * @memberof BillingUsageReportUserUsageItemsInner
     */
    'sku': string;
    /**
     * Quantity of the usage line item.
     * @type {number}
     * @memberof BillingUsageReportUserUsageItemsInner
     */
    'quantity': number;
    /**
     * Unit type of the usage line item.
     * @type {string}
     * @memberof BillingUsageReportUserUsageItemsInner
     */
    'unitType': string;
    /**
     * Price per unit of the usage line item.
     * @type {number}
     * @memberof BillingUsageReportUserUsageItemsInner
     */
    'pricePerUnit': number;
    /**
     * Gross amount of the usage line item.
     * @type {number}
     * @memberof BillingUsageReportUserUsageItemsInner
     */
    'grossAmount': number;
    /**
     * Discount amount of the usage line item.
     * @type {number}
     * @memberof BillingUsageReportUserUsageItemsInner
     */
    'discountAmount': number;
    /**
     * Net amount of the usage line item.
     * @type {number}
     * @memberof BillingUsageReportUserUsageItemsInner
     */
    'netAmount': number;
    /**
     * Name of the repository.
     * @type {string}
     * @memberof BillingUsageReportUserUsageItemsInner
     */
    'repositoryName'?: string;
}
/**
 * Blob
 * @export
 * @interface Blob
 */
export interface Blob {
    /**
     * 
     * @type {string}
     * @memberof Blob
     */
    'content': string;
    /**
     * 
     * @type {string}
     * @memberof Blob
     */
    'encoding': string;
    /**
     * 
     * @type {string}
     * @memberof Blob
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Blob
     */
    'sha': string;
    /**
     * 
     * @type {number}
     * @memberof Blob
     */
    'size': number | null;
    /**
     * 
     * @type {string}
     * @memberof Blob
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Blob
     */
    'highlighted_content'?: string;
}
/**
 * Branch Protection
 * @export
 * @interface BranchProtection
 */
export interface BranchProtection {
    /**
     * 
     * @type {string}
     * @memberof BranchProtection
     */
    'url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BranchProtection
     */
    'enabled'?: boolean;
    /**
     * 
     * @type {ProtectedBranchRequiredStatusCheck}
     * @memberof BranchProtection
     */
    'required_status_checks'?: ProtectedBranchRequiredStatusCheck;
    /**
     * 
     * @type {ProtectedBranchAdminEnforced}
     * @memberof BranchProtection
     */
    'enforce_admins'?: ProtectedBranchAdminEnforced;
    /**
     * 
     * @type {ProtectedBranchPullRequestReview}
     * @memberof BranchProtection
     */
    'required_pull_request_reviews'?: ProtectedBranchPullRequestReview;
    /**
     * 
     * @type {BranchRestrictionPolicy}
     * @memberof BranchProtection
     */
    'restrictions'?: BranchRestrictionPolicy;
    /**
     * 
     * @type {BranchProtectionRequiredLinearHistory}
     * @memberof BranchProtection
     */
    'required_linear_history'?: BranchProtectionRequiredLinearHistory;
    /**
     * 
     * @type {BranchProtectionRequiredLinearHistory}
     * @memberof BranchProtection
     */
    'allow_force_pushes'?: BranchProtectionRequiredLinearHistory;
    /**
     * 
     * @type {BranchProtectionRequiredLinearHistory}
     * @memberof BranchProtection
     */
    'allow_deletions'?: BranchProtectionRequiredLinearHistory;
    /**
     * 
     * @type {BranchProtectionRequiredLinearHistory}
     * @memberof BranchProtection
     */
    'block_creations'?: BranchProtectionRequiredLinearHistory;
    /**
     * 
     * @type {BranchProtectionRequiredLinearHistory}
     * @memberof BranchProtection
     */
    'required_conversation_resolution'?: BranchProtectionRequiredLinearHistory;
    /**
     * 
     * @type {string}
     * @memberof BranchProtection
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchProtection
     */
    'protection_url'?: string;
    /**
     * 
     * @type {BranchProtectionRequiredSignatures}
     * @memberof BranchProtection
     */
    'required_signatures'?: BranchProtectionRequiredSignatures;
    /**
     * 
     * @type {BranchProtectionLockBranch}
     * @memberof BranchProtection
     */
    'lock_branch'?: BranchProtectionLockBranch;
    /**
     * 
     * @type {BranchProtectionAllowForkSyncing}
     * @memberof BranchProtection
     */
    'allow_fork_syncing'?: BranchProtectionAllowForkSyncing;
}
/**
 * Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.
 * @export
 * @interface BranchProtectionAllowForkSyncing
 */
export interface BranchProtectionAllowForkSyncing {
    /**
     * 
     * @type {boolean}
     * @memberof BranchProtectionAllowForkSyncing
     */
    'enabled'?: boolean;
}
/**
 * Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.
 * @export
 * @interface BranchProtectionLockBranch
 */
export interface BranchProtectionLockBranch {
    /**
     * 
     * @type {boolean}
     * @memberof BranchProtectionLockBranch
     */
    'enabled'?: boolean;
}
/**
 * 
 * @export
 * @interface BranchProtectionRequiredLinearHistory
 */
export interface BranchProtectionRequiredLinearHistory {
    /**
     * 
     * @type {boolean}
     * @memberof BranchProtectionRequiredLinearHistory
     */
    'enabled'?: boolean;
}
/**
 * 
 * @export
 * @interface BranchProtectionRequiredSignatures
 */
export interface BranchProtectionRequiredSignatures {
    /**
     * 
     * @type {string}
     * @memberof BranchProtectionRequiredSignatures
     */
    'url': string;
    /**
     * 
     * @type {boolean}
     * @memberof BranchProtectionRequiredSignatures
     */
    'enabled': boolean;
}
/**
 * Branch Restriction Policy
 * @export
 * @interface BranchRestrictionPolicy
 */
export interface BranchRestrictionPolicy {
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicy
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicy
     */
    'users_url': string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicy
     */
    'teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicy
     */
    'apps_url': string;
    /**
     * 
     * @type {Array<BranchRestrictionPolicyUsersInner>}
     * @memberof BranchRestrictionPolicy
     */
    'users': Array<BranchRestrictionPolicyUsersInner>;
    /**
     * 
     * @type {Array<BranchRestrictionPolicyTeamsInner>}
     * @memberof BranchRestrictionPolicy
     */
    'teams': Array<BranchRestrictionPolicyTeamsInner>;
    /**
     * 
     * @type {Array<BranchRestrictionPolicyAppsInner>}
     * @memberof BranchRestrictionPolicy
     */
    'apps': Array<BranchRestrictionPolicyAppsInner>;
}
/**
 * 
 * @export
 * @interface BranchRestrictionPolicyAppsInner
 */
export interface BranchRestrictionPolicyAppsInner {
    /**
     * 
     * @type {number}
     * @memberof BranchRestrictionPolicyAppsInner
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInner
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInner
     */
    'node_id'?: string;
    /**
     * 
     * @type {BranchRestrictionPolicyAppsInnerOwner}
     * @memberof BranchRestrictionPolicyAppsInner
     */
    'owner'?: BranchRestrictionPolicyAppsInnerOwner;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInner
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInner
     */
    'client_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInner
     */
    'description'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInner
     */
    'external_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInner
     */
    'html_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInner
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInner
     */
    'updated_at'?: string;
    /**
     * 
     * @type {BranchRestrictionPolicyAppsInnerPermissions}
     * @memberof BranchRestrictionPolicyAppsInner
     */
    'permissions'?: BranchRestrictionPolicyAppsInnerPermissions;
    /**
     * 
     * @type {Array<string>}
     * @memberof BranchRestrictionPolicyAppsInner
     */
    'events'?: Array<string>;
}
/**
 * 
 * @export
 * @interface BranchRestrictionPolicyAppsInnerOwner
 */
export interface BranchRestrictionPolicyAppsInnerOwner {
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'login'?: string;
    /**
     * 
     * @type {number}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'repos_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'hooks_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'issues_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'members_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'public_members_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'description'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'html_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'type'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerOwner
     */
    'user_view_type'?: string;
}
/**
 * 
 * @export
 * @interface BranchRestrictionPolicyAppsInnerPermissions
 */
export interface BranchRestrictionPolicyAppsInnerPermissions {
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerPermissions
     */
    'metadata'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerPermissions
     */
    'contents'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerPermissions
     */
    'issues'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyAppsInnerPermissions
     */
    'single_file'?: string;
}
/**
 * 
 * @export
 * @interface BranchRestrictionPolicyTeamsInner
 */
export interface BranchRestrictionPolicyTeamsInner {
    /**
     * 
     * @type {number}
     * @memberof BranchRestrictionPolicyTeamsInner
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyTeamsInner
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyTeamsInner
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyTeamsInner
     */
    'html_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyTeamsInner
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyTeamsInner
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyTeamsInner
     */
    'description'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyTeamsInner
     */
    'privacy'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyTeamsInner
     */
    'notification_setting'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyTeamsInner
     */
    'permission'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyTeamsInner
     */
    'members_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyTeamsInner
     */
    'repositories_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyTeamsInner
     */
    'parent'?: string | null;
}
/**
 * 
 * @export
 * @interface BranchRestrictionPolicyUsersInner
 */
export interface BranchRestrictionPolicyUsersInner {
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'login'?: string;
    /**
     * 
     * @type {number}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'html_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'repos_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'type'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BranchRestrictionPolicyUsersInner
     */
    'user_view_type'?: string;
}
/**
 * Branch Short
 * @export
 * @interface BranchShort
 */
export interface BranchShort {
    /**
     * 
     * @type {string}
     * @memberof BranchShort
     */
    'name': string;
    /**
     * 
     * @type {BranchShortCommit}
     * @memberof BranchShort
     */
    'commit': BranchShortCommit;
    /**
     * 
     * @type {boolean}
     * @memberof BranchShort
     */
    'protected': boolean;
}
/**
 * 
 * @export
 * @interface BranchShortCommit
 */
export interface BranchShortCommit {
    /**
     * 
     * @type {string}
     * @memberof BranchShortCommit
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof BranchShortCommit
     */
    'url': string;
}
/**
 * Branch With Protection
 * @export
 * @interface BranchWithProtection
 */
export interface BranchWithProtection {
    /**
     * 
     * @type {string}
     * @memberof BranchWithProtection
     */
    'name': string;
    /**
     * 
     * @type {Commit}
     * @memberof BranchWithProtection
     */
    'commit': Commit;
    /**
     * 
     * @type {BranchWithProtectionLinks}
     * @memberof BranchWithProtection
     */
    '_links': BranchWithProtectionLinks;
    /**
     * 
     * @type {boolean}
     * @memberof BranchWithProtection
     */
    'protected': boolean;
    /**
     * 
     * @type {BranchProtection}
     * @memberof BranchWithProtection
     */
    'protection': BranchProtection;
    /**
     * 
     * @type {string}
     * @memberof BranchWithProtection
     */
    'protection_url': string;
    /**
     * 
     * @type {string}
     * @memberof BranchWithProtection
     */
    'pattern'?: string;
    /**
     * 
     * @type {number}
     * @memberof BranchWithProtection
     */
    'required_approving_review_count'?: number;
}
/**
 * 
 * @export
 * @interface BranchWithProtectionLinks
 */
export interface BranchWithProtectionLinks {
    /**
     * 
     * @type {string}
     * @memberof BranchWithProtectionLinks
     */
    'html': string;
    /**
     * 
     * @type {string}
     * @memberof BranchWithProtectionLinks
     */
    'self': string;
}
/**
 * Indicates whether a campaign is open or closed
 * @export
 * @enum {string}
 */

export const CampaignState = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type CampaignState = typeof CampaignState[keyof typeof CampaignState];


/**
 * The campaign metadata and alert stats.
 * @export
 * @interface CampaignSummary
 */
export interface CampaignSummary {
    /**
     * The number of the newly created campaign
     * @type {number}
     * @memberof CampaignSummary
     */
    'number': number;
    /**
     * The date and time the campaign was created, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof CampaignSummary
     */
    'created_at': string;
    /**
     * The date and time the campaign was last updated, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof CampaignSummary
     */
    'updated_at': string;
    /**
     * The campaign name
     * @type {string}
     * @memberof CampaignSummary
     */
    'name'?: string;
    /**
     * The campaign description
     * @type {string}
     * @memberof CampaignSummary
     */
    'description': string;
    /**
     * The campaign managers
     * @type {Array<SimpleUser>}
     * @memberof CampaignSummary
     */
    'managers': Array<SimpleUser>;
    /**
     * The campaign team managers
     * @type {Array<Team>}
     * @memberof CampaignSummary
     */
    'team_managers'?: Array<Team>;
    /**
     * The date and time the campaign was published, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof CampaignSummary
     */
    'published_at'?: string;
    /**
     * The date and time the campaign has ended, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof CampaignSummary
     */
    'ends_at': string;
    /**
     * The date and time the campaign was closed, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ. Will be null if the campaign is still open.
     * @type {string}
     * @memberof CampaignSummary
     */
    'closed_at'?: string | null;
    /**
     * 
     * @type {CampaignState}
     * @memberof CampaignSummary
     */
    'state': CampaignState;
    /**
     * The contact link of the campaign.
     * @type {string}
     * @memberof CampaignSummary
     */
    'contact_link': string | null;
    /**
     * 
     * @type {CampaignSummaryAlertStats}
     * @memberof CampaignSummary
     */
    'alert_stats'?: CampaignSummaryAlertStats;
}


/**
 * 
 * @export
 * @interface CampaignSummaryAlertStats
 */
export interface CampaignSummaryAlertStats {
    /**
     * The number of open alerts
     * @type {number}
     * @memberof CampaignSummaryAlertStats
     */
    'open_count': number;
    /**
     * The number of closed alerts
     * @type {number}
     * @memberof CampaignSummaryAlertStats
     */
    'closed_count': number;
    /**
     * The number of in-progress alerts
     * @type {number}
     * @memberof CampaignSummaryAlertStats
     */
    'in_progress_count': number;
}
/**
 * Check Annotation
 * @export
 * @interface CheckAnnotation
 */
export interface CheckAnnotation {
    /**
     * 
     * @type {string}
     * @memberof CheckAnnotation
     */
    'path': string;
    /**
     * 
     * @type {number}
     * @memberof CheckAnnotation
     */
    'start_line': number;
    /**
     * 
     * @type {number}
     * @memberof CheckAnnotation
     */
    'end_line': number;
    /**
     * 
     * @type {number}
     * @memberof CheckAnnotation
     */
    'start_column': number | null;
    /**
     * 
     * @type {number}
     * @memberof CheckAnnotation
     */
    'end_column': number | null;
    /**
     * 
     * @type {string}
     * @memberof CheckAnnotation
     */
    'annotation_level': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckAnnotation
     */
    'title': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckAnnotation
     */
    'message': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckAnnotation
     */
    'raw_details': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckAnnotation
     */
    'blob_href': string;
}
/**
 * Check Dependabot security updates
 * @export
 * @interface CheckAutomatedSecurityFixes
 */
export interface CheckAutomatedSecurityFixes {
    /**
     * Whether Dependabot security updates are enabled for the repository.
     * @type {boolean}
     * @memberof CheckAutomatedSecurityFixes
     */
    'enabled': boolean;
    /**
     * Whether Dependabot security updates are paused for the repository.
     * @type {boolean}
     * @memberof CheckAutomatedSecurityFixes
     */
    'paused': boolean;
}
/**
 * A check performed on the code of a given code change
 * @export
 * @interface CheckRun
 */
export interface CheckRun {
    /**
     * The id of the check.
     * @type {number}
     * @memberof CheckRun
     */
    'id': number;
    /**
     * The SHA of the commit that is being checked.
     * @type {string}
     * @memberof CheckRun
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof CheckRun
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof CheckRun
     */
    'external_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckRun
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof CheckRun
     */
    'html_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckRun
     */
    'details_url': string | null;
    /**
     * The phase of the lifecycle that the check is currently in. Statuses of waiting, requested, and pending are reserved for GitHub Actions check runs.
     * @type {string}
     * @memberof CheckRun
     */
    'status': CheckRunStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof CheckRun
     */
    'conclusion': CheckRunConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof CheckRun
     */
    'started_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckRun
     */
    'completed_at': string | null;
    /**
     * 
     * @type {CheckRunOutput}
     * @memberof CheckRun
     */
    'output': CheckRunOutput;
    /**
     * The name of the check.
     * @type {string}
     * @memberof CheckRun
     */
    'name': string;
    /**
     * 
     * @type {CheckRunCheckSuite}
     * @memberof CheckRun
     */
    'check_suite': CheckRunCheckSuite | null;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof CheckRun
     */
    'app': NullableIntegration | null;
    /**
     * Pull requests that are open with a `head_sha` or `head_branch` that matches the check. The returned pull requests do not necessarily indicate pull requests that triggered the check.
     * @type {Array<PullRequestMinimal>}
     * @memberof CheckRun
     */
    'pull_requests': Array<PullRequestMinimal>;
    /**
     * 
     * @type {DeploymentSimple}
     * @memberof CheckRun
     */
    'deployment'?: DeploymentSimple;
}

export const CheckRunStatusEnum = {
    Queued: 'queued',
    InProgress: 'in_progress',
    Completed: 'completed',
    Waiting: 'waiting',
    Requested: 'requested',
    Pending: 'pending'
} as const;

export type CheckRunStatusEnum = typeof CheckRunStatusEnum[keyof typeof CheckRunStatusEnum];
export const CheckRunConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    Skipped: 'skipped',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required'
} as const;

export type CheckRunConclusionEnum = typeof CheckRunConclusionEnum[keyof typeof CheckRunConclusionEnum];

/**
 * 
 * @export
 * @interface CheckRunCheckSuite
 */
export interface CheckRunCheckSuite {
    /**
     * 
     * @type {number}
     * @memberof CheckRunCheckSuite
     */
    'id': number;
}
/**
 * 
 * @export
 * @interface CheckRunOutput
 */
export interface CheckRunOutput {
    /**
     * 
     * @type {string}
     * @memberof CheckRunOutput
     */
    'title': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckRunOutput
     */
    'summary': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckRunOutput
     */
    'text': string | null;
    /**
     * 
     * @type {number}
     * @memberof CheckRunOutput
     */
    'annotations_count': number;
    /**
     * 
     * @type {string}
     * @memberof CheckRunOutput
     */
    'annotations_url': string;
}
/**
 * 
 * @export
 * @interface CheckRunPullRequest
 */
export interface CheckRunPullRequest {
    /**
     * 
     * @type {CheckRunPullRequestBase}
     * @memberof CheckRunPullRequest
     */
    'base': CheckRunPullRequestBase;
    /**
     * 
     * @type {CheckRunPullRequestBase}
     * @memberof CheckRunPullRequest
     */
    'head': CheckRunPullRequestBase;
    /**
     * 
     * @type {number}
     * @memberof CheckRunPullRequest
     */
    'id': number;
    /**
     * 
     * @type {number}
     * @memberof CheckRunPullRequest
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof CheckRunPullRequest
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface CheckRunPullRequestBase
 */
export interface CheckRunPullRequestBase {
    /**
     * 
     * @type {string}
     * @memberof CheckRunPullRequestBase
     */
    'ref': string;
    /**
     * 
     * @type {RepoRef}
     * @memberof CheckRunPullRequestBase
     */
    'repo': RepoRef;
    /**
     * 
     * @type {string}
     * @memberof CheckRunPullRequestBase
     */
    'sha': string;
}
/**
 * A check performed on the code of a given code change
 * @export
 * @interface CheckRunWithSimpleCheckSuite
 */
export interface CheckRunWithSimpleCheckSuite {
    /**
     * 
     * @type {NullableIntegration}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'app': NullableIntegration | null;
    /**
     * 
     * @type {SimpleCheckSuite}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'check_suite': SimpleCheckSuite;
    /**
     * 
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'completed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'conclusion': CheckRunWithSimpleCheckSuiteConclusionEnum | null;
    /**
     * 
     * @type {DeploymentSimple}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'deployment'?: DeploymentSimple;
    /**
     * 
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'details_url': string;
    /**
     * 
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'external_id': string;
    /**
     * The SHA of the commit that is being checked.
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'html_url': string;
    /**
     * The id of the check.
     * @type {number}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'id': number;
    /**
     * The name of the check.
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'node_id': string;
    /**
     * 
     * @type {CheckRunWithSimpleCheckSuiteOutput}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'output': CheckRunWithSimpleCheckSuiteOutput;
    /**
     * 
     * @type {Array<PullRequestMinimal>}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'pull_requests': Array<PullRequestMinimal>;
    /**
     * 
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'started_at': string;
    /**
     * The phase of the lifecycle that the check is currently in.
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'status': CheckRunWithSimpleCheckSuiteStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuite
     */
    'url': string;
}

export const CheckRunWithSimpleCheckSuiteConclusionEnum = {
    Waiting: 'waiting',
    Pending: 'pending',
    StartupFailure: 'startup_failure',
    Stale: 'stale',
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    Skipped: 'skipped',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required'
} as const;

export type CheckRunWithSimpleCheckSuiteConclusionEnum = typeof CheckRunWithSimpleCheckSuiteConclusionEnum[keyof typeof CheckRunWithSimpleCheckSuiteConclusionEnum];
export const CheckRunWithSimpleCheckSuiteStatusEnum = {
    Queued: 'queued',
    InProgress: 'in_progress',
    Completed: 'completed',
    Pending: 'pending'
} as const;

export type CheckRunWithSimpleCheckSuiteStatusEnum = typeof CheckRunWithSimpleCheckSuiteStatusEnum[keyof typeof CheckRunWithSimpleCheckSuiteStatusEnum];

/**
 * 
 * @export
 * @interface CheckRunWithSimpleCheckSuiteOutput
 */
export interface CheckRunWithSimpleCheckSuiteOutput {
    /**
     * 
     * @type {number}
     * @memberof CheckRunWithSimpleCheckSuiteOutput
     */
    'annotations_count': number;
    /**
     * 
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuiteOutput
     */
    'annotations_url': string;
    /**
     * 
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuiteOutput
     */
    'summary': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuiteOutput
     */
    'text': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckRunWithSimpleCheckSuiteOutput
     */
    'title': string | null;
}
/**
 * A suite of checks performed on the code of a given code change
 * @export
 * @interface CheckSuite
 */
export interface CheckSuite {
    /**
     * 
     * @type {number}
     * @memberof CheckSuite
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof CheckSuite
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof CheckSuite
     */
    'head_branch': string | null;
    /**
     * The SHA of the head commit that is being checked.
     * @type {string}
     * @memberof CheckSuite
     */
    'head_sha': string;
    /**
     * The phase of the lifecycle that the check suite is currently in. Statuses of waiting, requested, and pending are reserved for GitHub Actions check suites.
     * @type {string}
     * @memberof CheckSuite
     */
    'status': CheckSuiteStatusEnum | null;
    /**
     * 
     * @type {string}
     * @memberof CheckSuite
     */
    'conclusion': CheckSuiteConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof CheckSuite
     */
    'url': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckSuite
     */
    'before': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckSuite
     */
    'after': string | null;
    /**
     * 
     * @type {Array<PullRequestMinimal>}
     * @memberof CheckSuite
     */
    'pull_requests': Array<PullRequestMinimal> | null;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof CheckSuite
     */
    'app': NullableIntegration | null;
    /**
     * 
     * @type {MinimalRepository}
     * @memberof CheckSuite
     */
    'repository': MinimalRepository;
    /**
     * 
     * @type {string}
     * @memberof CheckSuite
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckSuite
     */
    'updated_at': string | null;
    /**
     * 
     * @type {SimpleCommit}
     * @memberof CheckSuite
     */
    'head_commit': SimpleCommit;
    /**
     * 
     * @type {number}
     * @memberof CheckSuite
     */
    'latest_check_runs_count': number;
    /**
     * 
     * @type {string}
     * @memberof CheckSuite
     */
    'check_runs_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof CheckSuite
     */
    'rerequestable'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CheckSuite
     */
    'runs_rerequestable'?: boolean;
}

export const CheckSuiteStatusEnum = {
    Queued: 'queued',
    InProgress: 'in_progress',
    Completed: 'completed',
    Waiting: 'waiting',
    Requested: 'requested',
    Pending: 'pending'
} as const;

export type CheckSuiteStatusEnum = typeof CheckSuiteStatusEnum[keyof typeof CheckSuiteStatusEnum];
export const CheckSuiteConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    Skipped: 'skipped',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required',
    StartupFailure: 'startup_failure',
    Stale: 'stale'
} as const;

export type CheckSuiteConclusionEnum = typeof CheckSuiteConclusionEnum[keyof typeof CheckSuiteConclusionEnum];

/**
 * Check suite configuration preferences for a repository.
 * @export
 * @interface CheckSuitePreference
 */
export interface CheckSuitePreference {
    /**
     * 
     * @type {CheckSuitePreferencePreferences}
     * @memberof CheckSuitePreference
     */
    'preferences': CheckSuitePreferencePreferences;
    /**
     * 
     * @type {MinimalRepository}
     * @memberof CheckSuitePreference
     */
    'repository': MinimalRepository;
}
/**
 * 
 * @export
 * @interface CheckSuitePreferencePreferences
 */
export interface CheckSuitePreferencePreferences {
    /**
     * 
     * @type {Array<CheckSuitePreferencePreferencesAutoTriggerChecksInner>}
     * @memberof CheckSuitePreferencePreferences
     */
    'auto_trigger_checks'?: Array<CheckSuitePreferencePreferencesAutoTriggerChecksInner>;
}
/**
 * 
 * @export
 * @interface CheckSuitePreferencePreferencesAutoTriggerChecksInner
 */
export interface CheckSuitePreferencePreferencesAutoTriggerChecksInner {
    /**
     * 
     * @type {number}
     * @memberof CheckSuitePreferencePreferencesAutoTriggerChecksInner
     */
    'app_id': number;
    /**
     * 
     * @type {boolean}
     * @memberof CheckSuitePreferencePreferencesAutoTriggerChecksInner
     */
    'setting': boolean;
}
/**
 * A GitHub Classroom classroom
 * @export
 * @interface Classroom
 */
export interface Classroom {
    /**
     * Unique identifier of the classroom.
     * @type {number}
     * @memberof Classroom
     */
    'id': number;
    /**
     * The name of the classroom.
     * @type {string}
     * @memberof Classroom
     */
    'name': string;
    /**
     * Whether classroom is archived.
     * @type {boolean}
     * @memberof Classroom
     */
    'archived': boolean;
    /**
     * 
     * @type {SimpleClassroomOrganization}
     * @memberof Classroom
     */
    'organization': SimpleClassroomOrganization;
    /**
     * The URL of the classroom on GitHub Classroom.
     * @type {string}
     * @memberof Classroom
     */
    'url': string;
}
/**
 * A GitHub Classroom accepted assignment
 * @export
 * @interface ClassroomAcceptedAssignment
 */
export interface ClassroomAcceptedAssignment {
    /**
     * Unique identifier of the repository.
     * @type {number}
     * @memberof ClassroomAcceptedAssignment
     */
    'id': number;
    /**
     * Whether an accepted assignment has been submitted.
     * @type {boolean}
     * @memberof ClassroomAcceptedAssignment
     */
    'submitted': boolean;
    /**
     * Whether a submission passed.
     * @type {boolean}
     * @memberof ClassroomAcceptedAssignment
     */
    'passing': boolean;
    /**
     * Count of student commits.
     * @type {number}
     * @memberof ClassroomAcceptedAssignment
     */
    'commit_count': number;
    /**
     * Most recent grade.
     * @type {string}
     * @memberof ClassroomAcceptedAssignment
     */
    'grade': string;
    /**
     * 
     * @type {Array<SimpleClassroomUser>}
     * @memberof ClassroomAcceptedAssignment
     */
    'students': Array<SimpleClassroomUser>;
    /**
     * 
     * @type {SimpleClassroomRepository}
     * @memberof ClassroomAcceptedAssignment
     */
    'repository': SimpleClassroomRepository;
    /**
     * 
     * @type {SimpleClassroomAssignment}
     * @memberof ClassroomAcceptedAssignment
     */
    'assignment': SimpleClassroomAssignment;
}
/**
 * A GitHub Classroom assignment
 * @export
 * @interface ClassroomAssignment
 */
export interface ClassroomAssignment {
    /**
     * Unique identifier of the repository.
     * @type {number}
     * @memberof ClassroomAssignment
     */
    'id': number;
    /**
     * Whether an accepted assignment creates a public repository.
     * @type {boolean}
     * @memberof ClassroomAssignment
     */
    'public_repo': boolean;
    /**
     * Assignment title.
     * @type {string}
     * @memberof ClassroomAssignment
     */
    'title': string;
    /**
     * Whether it\'s a group assignment or individual assignment.
     * @type {string}
     * @memberof ClassroomAssignment
     */
    'type': ClassroomAssignmentTypeEnum;
    /**
     * The link that a student can use to accept the assignment.
     * @type {string}
     * @memberof ClassroomAssignment
     */
    'invite_link': string;
    /**
     * Whether the invitation link is enabled. Visiting an enabled invitation link will accept the assignment.
     * @type {boolean}
     * @memberof ClassroomAssignment
     */
    'invitations_enabled': boolean;
    /**
     * Sluggified name of the assignment.
     * @type {string}
     * @memberof ClassroomAssignment
     */
    'slug': string;
    /**
     * Whether students are admins on created repository when a student accepts the assignment.
     * @type {boolean}
     * @memberof ClassroomAssignment
     */
    'students_are_repo_admins': boolean;
    /**
     * Whether feedback pull request will be created when a student accepts the assignment.
     * @type {boolean}
     * @memberof ClassroomAssignment
     */
    'feedback_pull_requests_enabled': boolean;
    /**
     * The maximum allowable teams for the assignment.
     * @type {number}
     * @memberof ClassroomAssignment
     */
    'max_teams': number | null;
    /**
     * The maximum allowable members per team.
     * @type {number}
     * @memberof ClassroomAssignment
     */
    'max_members': number | null;
    /**
     * The selected editor for the assignment.
     * @type {string}
     * @memberof ClassroomAssignment
     */
    'editor': string;
    /**
     * The number of students that have accepted the assignment.
     * @type {number}
     * @memberof ClassroomAssignment
     */
    'accepted': number;
    /**
     * The number of students that have submitted the assignment.
     * @type {number}
     * @memberof ClassroomAssignment
     */
    'submitted': number;
    /**
     * The number of students that have passed the assignment.
     * @type {number}
     * @memberof ClassroomAssignment
     */
    'passing': number;
    /**
     * The programming language used in the assignment.
     * @type {string}
     * @memberof ClassroomAssignment
     */
    'language': string;
    /**
     * The time at which the assignment is due.
     * @type {string}
     * @memberof ClassroomAssignment
     */
    'deadline': string | null;
    /**
     * 
     * @type {SimpleClassroomRepository}
     * @memberof ClassroomAssignment
     */
    'starter_code_repository': SimpleClassroomRepository;
    /**
     * 
     * @type {Classroom}
     * @memberof ClassroomAssignment
     */
    'classroom': Classroom;
}

export const ClassroomAssignmentTypeEnum = {
    Individual: 'individual',
    Group: 'group'
} as const;

export type ClassroomAssignmentTypeEnum = typeof ClassroomAssignmentTypeEnum[keyof typeof ClassroomAssignmentTypeEnum];

/**
 * Grade for a student or groups GitHub Classroom assignment
 * @export
 * @interface ClassroomAssignmentGrade
 */
export interface ClassroomAssignmentGrade {
    /**
     * Name of the assignment
     * @type {string}
     * @memberof ClassroomAssignmentGrade
     */
    'assignment_name': string;
    /**
     * URL of the assignment
     * @type {string}
     * @memberof ClassroomAssignmentGrade
     */
    'assignment_url': string;
    /**
     * URL of the starter code for the assignment
     * @type {string}
     * @memberof ClassroomAssignmentGrade
     */
    'starter_code_url': string;
    /**
     * GitHub username of the student
     * @type {string}
     * @memberof ClassroomAssignmentGrade
     */
    'github_username': string;
    /**
     * Roster identifier of the student
     * @type {string}
     * @memberof ClassroomAssignmentGrade
     */
    'roster_identifier': string;
    /**
     * Name of the student\'s assignment repository
     * @type {string}
     * @memberof ClassroomAssignmentGrade
     */
    'student_repository_name': string;
    /**
     * URL of the student\'s assignment repository
     * @type {string}
     * @memberof ClassroomAssignmentGrade
     */
    'student_repository_url': string;
    /**
     * Timestamp of the student\'s assignment submission
     * @type {string}
     * @memberof ClassroomAssignmentGrade
     */
    'submission_timestamp': string;
    /**
     * Number of points awarded to the student
     * @type {number}
     * @memberof ClassroomAssignmentGrade
     */
    'points_awarded': number;
    /**
     * Number of points available for the assignment
     * @type {number}
     * @memberof ClassroomAssignmentGrade
     */
    'points_available': number;
    /**
     * If a group assignment, name of the group the student is in
     * @type {string}
     * @memberof ClassroomAssignmentGrade
     */
    'group_name'?: string;
}
/**
 * Clone Traffic
 * @export
 * @interface CloneTraffic
 */
export interface CloneTraffic {
    /**
     * 
     * @type {number}
     * @memberof CloneTraffic
     */
    'count': number;
    /**
     * 
     * @type {number}
     * @memberof CloneTraffic
     */
    'uniques': number;
    /**
     * 
     * @type {Array<Traffic>}
     * @memberof CloneTraffic
     */
    'clones': Array<Traffic>;
}
/**
 * Code Of Conduct
 * @export
 * @interface CodeOfConduct
 */
export interface CodeOfConduct {
    /**
     * 
     * @type {string}
     * @memberof CodeOfConduct
     */
    'key': string;
    /**
     * 
     * @type {string}
     * @memberof CodeOfConduct
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof CodeOfConduct
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof CodeOfConduct
     */
    'body'?: string;
    /**
     * 
     * @type {string}
     * @memberof CodeOfConduct
     */
    'html_url': string | null;
}
/**
 * Code of Conduct Simple
 * @export
 * @interface CodeOfConductSimple
 */
export interface CodeOfConductSimple {
    /**
     * 
     * @type {string}
     * @memberof CodeOfConductSimple
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof CodeOfConductSimple
     */
    'key': string;
    /**
     * 
     * @type {string}
     * @memberof CodeOfConductSimple
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof CodeOfConductSimple
     */
    'html_url': string | null;
}
/**
 * 
 * @export
 * @interface CodeScanningAlert
 */
export interface CodeScanningAlert {
    /**
     * The security alert number.
     * @type {number}
     * @memberof CodeScanningAlert
     */
    'number': number;
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningAlert
     */
    'created_at': string;
    /**
     * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningAlert
     */
    'updated_at'?: string;
    /**
     * The REST API URL of the alert resource.
     * @type {string}
     * @memberof CodeScanningAlert
     */
    'url': string;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof CodeScanningAlert
     */
    'html_url': string;
    /**
     * The REST API URL for fetching the list of instances for an alert.
     * @type {string}
     * @memberof CodeScanningAlert
     */
    'instances_url': string;
    /**
     * 
     * @type {CodeScanningAlertState}
     * @memberof CodeScanningAlert
     */
    'state': CodeScanningAlertState | null;
    /**
     * The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningAlert
     */
    'fixed_at'?: string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof CodeScanningAlert
     */
    'dismissed_by': NullableSimpleUser | null;
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningAlert
     */
    'dismissed_at': string | null;
    /**
     * 
     * @type {CodeScanningAlertDismissedReason}
     * @memberof CodeScanningAlert
     */
    'dismissed_reason': CodeScanningAlertDismissedReason | null;
    /**
     * The dismissal comment associated with the dismissal of the alert.
     * @type {string}
     * @memberof CodeScanningAlert
     */
    'dismissed_comment'?: string | null;
    /**
     * 
     * @type {CodeScanningAlertRule}
     * @memberof CodeScanningAlert
     */
    'rule': CodeScanningAlertRule;
    /**
     * 
     * @type {CodeScanningAnalysisTool}
     * @memberof CodeScanningAlert
     */
    'tool': CodeScanningAnalysisTool;
    /**
     * 
     * @type {CodeScanningAlertInstance}
     * @memberof CodeScanningAlert
     */
    'most_recent_instance': CodeScanningAlertInstance;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof CodeScanningAlert
     */
    'dismissal_approved_by'?: NullableSimpleUser | null;
}


/**
 * A classification of the file. For example to identify it as generated.
 * @export
 * @enum {string}
 */

export const CodeScanningAlertClassification = {
    Source: 'source',
    Generated: 'generated',
    Test: 'test',
    Library: 'library'
} as const;

export type CodeScanningAlertClassification = typeof CodeScanningAlertClassification[keyof typeof CodeScanningAlertClassification];


/**
 * **Required when the state is dismissed.** The reason for dismissing or closing the alert.
 * @export
 * @enum {string}
 */

export const CodeScanningAlertDismissedReason = {
    FalsePositive: 'false positive',
    WontFix: 'won\'t fix',
    UsedInTests: 'used in tests'
} as const;

export type CodeScanningAlertDismissedReason = typeof CodeScanningAlertDismissedReason[keyof typeof CodeScanningAlertDismissedReason];


/**
 * 
 * @export
 * @interface CodeScanningAlertInstance
 */
export interface CodeScanningAlertInstance {
    /**
     * The Git reference, formatted as `refs/pull/<number>/merge`, `refs/pull/<number>/head`, `refs/heads/<branch name>` or simply `<branch name>`.
     * @type {string}
     * @memberof CodeScanningAlertInstance
     */
    'ref'?: string;
    /**
     * Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name.
     * @type {string}
     * @memberof CodeScanningAlertInstance
     */
    'analysis_key'?: string;
    /**
     * Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed.
     * @type {string}
     * @memberof CodeScanningAlertInstance
     */
    'environment'?: string;
    /**
     * Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code.
     * @type {string}
     * @memberof CodeScanningAlertInstance
     */
    'category'?: string;
    /**
     * 
     * @type {CodeScanningAlertState}
     * @memberof CodeScanningAlertInstance
     */
    'state'?: CodeScanningAlertState | null;
    /**
     * 
     * @type {string}
     * @memberof CodeScanningAlertInstance
     */
    'commit_sha'?: string;
    /**
     * 
     * @type {CodeScanningAlertInstanceMessage}
     * @memberof CodeScanningAlertInstance
     */
    'message'?: CodeScanningAlertInstanceMessage;
    /**
     * 
     * @type {CodeScanningAlertLocation}
     * @memberof CodeScanningAlertInstance
     */
    'location'?: CodeScanningAlertLocation;
    /**
     * 
     * @type {string}
     * @memberof CodeScanningAlertInstance
     */
    'html_url'?: string;
    /**
     * Classifications that have been applied to the file that triggered the alert. For example identifying it as documentation, or a generated file.
     * @type {Array<CodeScanningAlertClassification>}
     * @memberof CodeScanningAlertInstance
     */
    'classifications'?: Array<CodeScanningAlertClassification>;
}


/**
 * 
 * @export
 * @interface CodeScanningAlertInstanceMessage
 */
export interface CodeScanningAlertInstanceMessage {
    /**
     * 
     * @type {string}
     * @memberof CodeScanningAlertInstanceMessage
     */
    'text'?: string;
}
/**
 * 
 * @export
 * @interface CodeScanningAlertItems
 */
export interface CodeScanningAlertItems {
    /**
     * The security alert number.
     * @type {number}
     * @memberof CodeScanningAlertItems
     */
    'number': number;
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningAlertItems
     */
    'created_at': string;
    /**
     * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningAlertItems
     */
    'updated_at'?: string;
    /**
     * The REST API URL of the alert resource.
     * @type {string}
     * @memberof CodeScanningAlertItems
     */
    'url': string;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof CodeScanningAlertItems
     */
    'html_url': string;
    /**
     * The REST API URL for fetching the list of instances for an alert.
     * @type {string}
     * @memberof CodeScanningAlertItems
     */
    'instances_url': string;
    /**
     * 
     * @type {CodeScanningAlertState}
     * @memberof CodeScanningAlertItems
     */
    'state': CodeScanningAlertState | null;
    /**
     * The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningAlertItems
     */
    'fixed_at'?: string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof CodeScanningAlertItems
     */
    'dismissed_by': NullableSimpleUser | null;
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningAlertItems
     */
    'dismissed_at': string | null;
    /**
     * 
     * @type {CodeScanningAlertDismissedReason}
     * @memberof CodeScanningAlertItems
     */
    'dismissed_reason': CodeScanningAlertDismissedReason | null;
    /**
     * The dismissal comment associated with the dismissal of the alert.
     * @type {string}
     * @memberof CodeScanningAlertItems
     */
    'dismissed_comment'?: string | null;
    /**
     * 
     * @type {CodeScanningAlertRuleSummary}
     * @memberof CodeScanningAlertItems
     */
    'rule': CodeScanningAlertRuleSummary;
    /**
     * 
     * @type {CodeScanningAnalysisTool}
     * @memberof CodeScanningAlertItems
     */
    'tool': CodeScanningAnalysisTool;
    /**
     * 
     * @type {CodeScanningAlertInstance}
     * @memberof CodeScanningAlertItems
     */
    'most_recent_instance': CodeScanningAlertInstance;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof CodeScanningAlertItems
     */
    'dismissal_approved_by'?: NullableSimpleUser | null;
}


/**
 * Describe a region within a file for the alert.
 * @export
 * @interface CodeScanningAlertLocation
 */
export interface CodeScanningAlertLocation {
    /**
     * 
     * @type {string}
     * @memberof CodeScanningAlertLocation
     */
    'path'?: string;
    /**
     * 
     * @type {number}
     * @memberof CodeScanningAlertLocation
     */
    'start_line'?: number;
    /**
     * 
     * @type {number}
     * @memberof CodeScanningAlertLocation
     */
    'end_line'?: number;
    /**
     * 
     * @type {number}
     * @memberof CodeScanningAlertLocation
     */
    'start_column'?: number;
    /**
     * 
     * @type {number}
     * @memberof CodeScanningAlertLocation
     */
    'end_column'?: number;
}
/**
 * 
 * @export
 * @interface CodeScanningAlertRule
 */
export interface CodeScanningAlertRule {
    /**
     * A unique identifier for the rule used to detect the alert.
     * @type {string}
     * @memberof CodeScanningAlertRule
     */
    'id'?: string | null;
    /**
     * The name of the rule used to detect the alert.
     * @type {string}
     * @memberof CodeScanningAlertRule
     */
    'name'?: string;
    /**
     * The severity of the alert.
     * @type {string}
     * @memberof CodeScanningAlertRule
     */
    'severity'?: CodeScanningAlertRuleSeverityEnum | null;
    /**
     * The security severity of the alert.
     * @type {string}
     * @memberof CodeScanningAlertRule
     */
    'security_severity_level'?: CodeScanningAlertRuleSecuritySeverityLevelEnum | null;
    /**
     * A short description of the rule used to detect the alert.
     * @type {string}
     * @memberof CodeScanningAlertRule
     */
    'description'?: string;
    /**
     * A description of the rule used to detect the alert.
     * @type {string}
     * @memberof CodeScanningAlertRule
     */
    'full_description'?: string;
    /**
     * A set of tags applicable for the rule.
     * @type {Array<string>}
     * @memberof CodeScanningAlertRule
     */
    'tags'?: Array<string> | null;
    /**
     * Detailed documentation for the rule as GitHub Flavored Markdown.
     * @type {string}
     * @memberof CodeScanningAlertRule
     */
    'help'?: string | null;
    /**
     * A link to the documentation for the rule used to detect the alert.
     * @type {string}
     * @memberof CodeScanningAlertRule
     */
    'help_uri'?: string | null;
}

export const CodeScanningAlertRuleSeverityEnum = {
    None: 'none',
    Note: 'note',
    Warning: 'warning',
    Error: 'error'
} as const;

export type CodeScanningAlertRuleSeverityEnum = typeof CodeScanningAlertRuleSeverityEnum[keyof typeof CodeScanningAlertRuleSeverityEnum];
export const CodeScanningAlertRuleSecuritySeverityLevelEnum = {
    Low: 'low',
    Medium: 'medium',
    High: 'high',
    Critical: 'critical'
} as const;

export type CodeScanningAlertRuleSecuritySeverityLevelEnum = typeof CodeScanningAlertRuleSecuritySeverityLevelEnum[keyof typeof CodeScanningAlertRuleSecuritySeverityLevelEnum];

/**
 * 
 * @export
 * @interface CodeScanningAlertRuleSummary
 */
export interface CodeScanningAlertRuleSummary {
    /**
     * A unique identifier for the rule used to detect the alert.
     * @type {string}
     * @memberof CodeScanningAlertRuleSummary
     */
    'id'?: string | null;
    /**
     * The name of the rule used to detect the alert.
     * @type {string}
     * @memberof CodeScanningAlertRuleSummary
     */
    'name'?: string;
    /**
     * The severity of the alert.
     * @type {string}
     * @memberof CodeScanningAlertRuleSummary
     */
    'severity'?: CodeScanningAlertRuleSummarySeverityEnum | null;
    /**
     * The security severity of the alert.
     * @type {string}
     * @memberof CodeScanningAlertRuleSummary
     */
    'security_severity_level'?: CodeScanningAlertRuleSummarySecuritySeverityLevelEnum | null;
    /**
     * A short description of the rule used to detect the alert.
     * @type {string}
     * @memberof CodeScanningAlertRuleSummary
     */
    'description'?: string;
    /**
     * A description of the rule used to detect the alert.
     * @type {string}
     * @memberof CodeScanningAlertRuleSummary
     */
    'full_description'?: string;
    /**
     * A set of tags applicable for the rule.
     * @type {Array<string>}
     * @memberof CodeScanningAlertRuleSummary
     */
    'tags'?: Array<string> | null;
    /**
     * Detailed documentation for the rule as GitHub Flavored Markdown.
     * @type {string}
     * @memberof CodeScanningAlertRuleSummary
     */
    'help'?: string | null;
    /**
     * A link to the documentation for the rule used to detect the alert.
     * @type {string}
     * @memberof CodeScanningAlertRuleSummary
     */
    'help_uri'?: string | null;
}

export const CodeScanningAlertRuleSummarySeverityEnum = {
    None: 'none',
    Note: 'note',
    Warning: 'warning',
    Error: 'error'
} as const;

export type CodeScanningAlertRuleSummarySeverityEnum = typeof CodeScanningAlertRuleSummarySeverityEnum[keyof typeof CodeScanningAlertRuleSummarySeverityEnum];
export const CodeScanningAlertRuleSummarySecuritySeverityLevelEnum = {
    Low: 'low',
    Medium: 'medium',
    High: 'high',
    Critical: 'critical'
} as const;

export type CodeScanningAlertRuleSummarySecuritySeverityLevelEnum = typeof CodeScanningAlertRuleSummarySecuritySeverityLevelEnum[keyof typeof CodeScanningAlertRuleSummarySecuritySeverityLevelEnum];

/**
 * Sets the state of the code scanning alert. You must provide `dismissed_reason` when you set the state to `dismissed`.
 * @export
 * @enum {string}
 */

export const CodeScanningAlertSetState = {
    Open: 'open',
    Dismissed: 'dismissed'
} as const;

export type CodeScanningAlertSetState = typeof CodeScanningAlertSetState[keyof typeof CodeScanningAlertSetState];


/**
 * Severity of a code scanning alert.
 * @export
 * @enum {string}
 */

export const CodeScanningAlertSeverity = {
    Critical: 'critical',
    High: 'high',
    Medium: 'medium',
    Low: 'low',
    Warning: 'warning',
    Note: 'note',
    Error: 'error'
} as const;

export type CodeScanningAlertSeverity = typeof CodeScanningAlertSeverity[keyof typeof CodeScanningAlertSeverity];


/**
 * State of a code scanning alert.
 * @export
 * @enum {string}
 */

export const CodeScanningAlertState = {
    Open: 'open',
    Dismissed: 'dismissed',
    Fixed: 'fixed'
} as const;

export type CodeScanningAlertState = typeof CodeScanningAlertState[keyof typeof CodeScanningAlertState];


/**
 * State of a code scanning alert.
 * @export
 * @enum {string}
 */

export const CodeScanningAlertStateQuery = {
    Open: 'open',
    Closed: 'closed',
    Dismissed: 'dismissed',
    Fixed: 'fixed'
} as const;

export type CodeScanningAlertStateQuery = typeof CodeScanningAlertStateQuery[keyof typeof CodeScanningAlertStateQuery];


/**
 * 
 * @export
 * @interface CodeScanningAnalysis
 */
export interface CodeScanningAnalysis {
    /**
     * The Git reference, formatted as `refs/pull/<number>/merge`, `refs/pull/<number>/head`, `refs/heads/<branch name>` or simply `<branch name>`.
     * @type {string}
     * @memberof CodeScanningAnalysis
     */
    'ref': string;
    /**
     * The SHA of the commit to which the analysis you are uploading relates.
     * @type {string}
     * @memberof CodeScanningAnalysis
     */
    'commit_sha': string;
    /**
     * Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name.
     * @type {string}
     * @memberof CodeScanningAnalysis
     */
    'analysis_key': string;
    /**
     * Identifies the variable values associated with the environment in which this analysis was performed.
     * @type {string}
     * @memberof CodeScanningAnalysis
     */
    'environment': string;
    /**
     * Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code.
     * @type {string}
     * @memberof CodeScanningAnalysis
     */
    'category'?: string;
    /**
     * 
     * @type {string}
     * @memberof CodeScanningAnalysis
     */
    'error': string;
    /**
     * The time that the analysis was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningAnalysis
     */
    'created_at': string;
    /**
     * The total number of results in the analysis.
     * @type {number}
     * @memberof CodeScanningAnalysis
     */
    'results_count': number;
    /**
     * The total number of rules used in the analysis.
     * @type {number}
     * @memberof CodeScanningAnalysis
     */
    'rules_count': number;
    /**
     * Unique identifier for this analysis.
     * @type {number}
     * @memberof CodeScanningAnalysis
     */
    'id': number;
    /**
     * The REST API URL of the analysis resource.
     * @type {string}
     * @memberof CodeScanningAnalysis
     */
    'url': string;
    /**
     * An identifier for the upload.
     * @type {string}
     * @memberof CodeScanningAnalysis
     */
    'sarif_id': string;
    /**
     * 
     * @type {CodeScanningAnalysisTool}
     * @memberof CodeScanningAnalysis
     */
    'tool': CodeScanningAnalysisTool;
    /**
     * 
     * @type {boolean}
     * @memberof CodeScanningAnalysis
     */
    'deletable': boolean;
    /**
     * Warning generated when processing the analysis
     * @type {string}
     * @memberof CodeScanningAnalysis
     */
    'warning': string;
}
/**
 * Successful deletion of a code scanning analysis
 * @export
 * @interface CodeScanningAnalysisDeletion
 */
export interface CodeScanningAnalysisDeletion {
    /**
     * Next deletable analysis in chain, without last analysis deletion confirmation
     * @type {string}
     * @memberof CodeScanningAnalysisDeletion
     */
    'next_analysis_url': string | null;
    /**
     * Next deletable analysis in chain, with last analysis deletion confirmation
     * @type {string}
     * @memberof CodeScanningAnalysisDeletion
     */
    'confirm_delete_url': string | null;
}
/**
 * 
 * @export
 * @interface CodeScanningAnalysisTool
 */
export interface CodeScanningAnalysisTool {
    /**
     * The name of the tool used to generate the code scanning analysis.
     * @type {string}
     * @memberof CodeScanningAnalysisTool
     */
    'name'?: string;
    /**
     * The version of the tool used to generate the code scanning analysis.
     * @type {string}
     * @memberof CodeScanningAnalysisTool
     */
    'version'?: string | null;
    /**
     * The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.
     * @type {string}
     * @memberof CodeScanningAnalysisTool
     */
    'guid'?: string | null;
}
/**
 * 
 * @export
 * @interface CodeScanningAutofix
 */
export interface CodeScanningAutofix {
    /**
     * 
     * @type {CodeScanningAutofixStatus}
     * @memberof CodeScanningAutofix
     */
    'status': CodeScanningAutofixStatus;
    /**
     * The description of an autofix.
     * @type {string}
     * @memberof CodeScanningAutofix
     */
    'description': string | null;
    /**
     * The start time of an autofix in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningAutofix
     */
    'started_at': string;
}


/**
 * Commit an autofix for a code scanning alert
 * @export
 * @interface CodeScanningAutofixCommits
 */
export interface CodeScanningAutofixCommits {
    /**
     * The Git reference of target branch for the commit. Branch needs to already exist.  For more information, see \"[Git References](https://git-scm.com/book/en/v2/Git-Internals-Git-References)\" in the Git documentation.
     * @type {string}
     * @memberof CodeScanningAutofixCommits
     */
    'target_ref'?: string;
    /**
     * Commit message to be used.
     * @type {string}
     * @memberof CodeScanningAutofixCommits
     */
    'message'?: string;
}
/**
 * 
 * @export
 * @interface CodeScanningAutofixCommitsResponse
 */
export interface CodeScanningAutofixCommitsResponse {
    /**
     * The Git reference of target branch for the commit. For more information, see \"[Git References](https://git-scm.com/book/en/v2/Git-Internals-Git-References)\" in the Git documentation.
     * @type {string}
     * @memberof CodeScanningAutofixCommitsResponse
     */
    'target_ref'?: string;
    /**
     * SHA of commit with autofix.
     * @type {string}
     * @memberof CodeScanningAutofixCommitsResponse
     */
    'sha'?: string;
}
/**
 * The status of an autofix.
 * @export
 * @enum {string}
 */

export const CodeScanningAutofixStatus = {
    Pending: 'pending',
    Error: 'error',
    Success: 'success',
    Outdated: 'outdated'
} as const;

export type CodeScanningAutofixStatus = typeof CodeScanningAutofixStatus[keyof typeof CodeScanningAutofixStatus];


/**
 * A CodeQL database.
 * @export
 * @interface CodeScanningCodeqlDatabase
 */
export interface CodeScanningCodeqlDatabase {
    /**
     * The ID of the CodeQL database.
     * @type {number}
     * @memberof CodeScanningCodeqlDatabase
     */
    'id': number;
    /**
     * The name of the CodeQL database.
     * @type {string}
     * @memberof CodeScanningCodeqlDatabase
     */
    'name': string;
    /**
     * The language of the CodeQL database.
     * @type {string}
     * @memberof CodeScanningCodeqlDatabase
     */
    'language': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof CodeScanningCodeqlDatabase
     */
    'uploader': SimpleUser;
    /**
     * The MIME type of the CodeQL database file.
     * @type {string}
     * @memberof CodeScanningCodeqlDatabase
     */
    'content_type': string;
    /**
     * The size of the CodeQL database file in bytes.
     * @type {number}
     * @memberof CodeScanningCodeqlDatabase
     */
    'size': number;
    /**
     * The date and time at which the CodeQL database was created, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof CodeScanningCodeqlDatabase
     */
    'created_at': string;
    /**
     * The date and time at which the CodeQL database was last updated, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof CodeScanningCodeqlDatabase
     */
    'updated_at': string;
    /**
     * The URL at which to download the CodeQL database. The `Accept` header must be set to the value of the `content_type` property.
     * @type {string}
     * @memberof CodeScanningCodeqlDatabase
     */
    'url': string;
    /**
     * The commit SHA of the repository at the time the CodeQL database was created.
     * @type {string}
     * @memberof CodeScanningCodeqlDatabase
     */
    'commit_oid'?: string | null;
}
/**
 * Configuration for code scanning default setup.
 * @export
 * @interface CodeScanningDefaultSetup
 */
export interface CodeScanningDefaultSetup {
    /**
     * Code scanning default setup has been configured or not.
     * @type {string}
     * @memberof CodeScanningDefaultSetup
     */
    'state'?: CodeScanningDefaultSetupStateEnum;
    /**
     * Languages to be analyzed.
     * @type {Array<string>}
     * @memberof CodeScanningDefaultSetup
     */
    'languages'?: Array<CodeScanningDefaultSetupLanguagesEnum>;
    /**
     * Runner type to be used.
     * @type {string}
     * @memberof CodeScanningDefaultSetup
     */
    'runner_type'?: CodeScanningDefaultSetupRunnerTypeEnum | null;
    /**
     * Runner label to be used if the runner type is labeled.
     * @type {string}
     * @memberof CodeScanningDefaultSetup
     */
    'runner_label'?: string | null;
    /**
     * CodeQL query suite to be used.
     * @type {string}
     * @memberof CodeScanningDefaultSetup
     */
    'query_suite'?: CodeScanningDefaultSetupQuerySuiteEnum;
    /**
     * Threat model to be used for code scanning analysis. Use `remote` to analyze only network sources and `remote_and_local` to include local sources like filesystem access, command-line arguments, database reads, environment variable and standard input.
     * @type {string}
     * @memberof CodeScanningDefaultSetup
     */
    'threat_model'?: CodeScanningDefaultSetupThreatModelEnum;
    /**
     * Timestamp of latest configuration update.
     * @type {string}
     * @memberof CodeScanningDefaultSetup
     */
    'updated_at'?: string | null;
    /**
     * The frequency of the periodic analysis.
     * @type {string}
     * @memberof CodeScanningDefaultSetup
     */
    'schedule'?: CodeScanningDefaultSetupScheduleEnum | null;
}

export const CodeScanningDefaultSetupStateEnum = {
    Configured: 'configured',
    NotConfigured: 'not-configured'
} as const;

export type CodeScanningDefaultSetupStateEnum = typeof CodeScanningDefaultSetupStateEnum[keyof typeof CodeScanningDefaultSetupStateEnum];
export const CodeScanningDefaultSetupLanguagesEnum = {
    Actions: 'actions',
    CCpp: 'c-cpp',
    Csharp: 'csharp',
    Go: 'go',
    JavaKotlin: 'java-kotlin',
    JavascriptTypescript: 'javascript-typescript',
    Javascript: 'javascript',
    Python: 'python',
    Ruby: 'ruby',
    Typescript: 'typescript',
    Swift: 'swift'
} as const;

export type CodeScanningDefaultSetupLanguagesEnum = typeof CodeScanningDefaultSetupLanguagesEnum[keyof typeof CodeScanningDefaultSetupLanguagesEnum];
export const CodeScanningDefaultSetupRunnerTypeEnum = {
    Standard: 'standard',
    Labeled: 'labeled'
} as const;

export type CodeScanningDefaultSetupRunnerTypeEnum = typeof CodeScanningDefaultSetupRunnerTypeEnum[keyof typeof CodeScanningDefaultSetupRunnerTypeEnum];
export const CodeScanningDefaultSetupQuerySuiteEnum = {
    Default: 'default',
    Extended: 'extended'
} as const;

export type CodeScanningDefaultSetupQuerySuiteEnum = typeof CodeScanningDefaultSetupQuerySuiteEnum[keyof typeof CodeScanningDefaultSetupQuerySuiteEnum];
export const CodeScanningDefaultSetupThreatModelEnum = {
    Remote: 'remote',
    RemoteAndLocal: 'remote_and_local'
} as const;

export type CodeScanningDefaultSetupThreatModelEnum = typeof CodeScanningDefaultSetupThreatModelEnum[keyof typeof CodeScanningDefaultSetupThreatModelEnum];
export const CodeScanningDefaultSetupScheduleEnum = {
    Weekly: 'weekly'
} as const;

export type CodeScanningDefaultSetupScheduleEnum = typeof CodeScanningDefaultSetupScheduleEnum[keyof typeof CodeScanningDefaultSetupScheduleEnum];

/**
 * Feature options for code scanning default setup
 * @export
 * @interface CodeScanningDefaultSetupOptions
 */
export interface CodeScanningDefaultSetupOptions {
    /**
     * Whether to use labeled runners or standard GitHub runners.
     * @type {string}
     * @memberof CodeScanningDefaultSetupOptions
     */
    'runner_type'?: CodeScanningDefaultSetupOptionsRunnerTypeEnum;
    /**
     * The label of the runner to use for code scanning default setup when runner_type is \'labeled\'.
     * @type {string}
     * @memberof CodeScanningDefaultSetupOptions
     */
    'runner_label'?: string | null;
}

export const CodeScanningDefaultSetupOptionsRunnerTypeEnum = {
    Standard: 'standard',
    Labeled: 'labeled',
    NotSet: 'not_set'
} as const;

export type CodeScanningDefaultSetupOptionsRunnerTypeEnum = typeof CodeScanningDefaultSetupOptionsRunnerTypeEnum[keyof typeof CodeScanningDefaultSetupOptionsRunnerTypeEnum];

/**
 * Configuration for code scanning default setup.
 * @export
 * @interface CodeScanningDefaultSetupUpdate
 */
export interface CodeScanningDefaultSetupUpdate {
    /**
     * The desired state of code scanning default setup.
     * @type {string}
     * @memberof CodeScanningDefaultSetupUpdate
     */
    'state'?: CodeScanningDefaultSetupUpdateStateEnum;
    /**
     * Runner type to be used.
     * @type {string}
     * @memberof CodeScanningDefaultSetupUpdate
     */
    'runner_type'?: CodeScanningDefaultSetupUpdateRunnerTypeEnum;
    /**
     * Runner label to be used if the runner type is labeled.
     * @type {string}
     * @memberof CodeScanningDefaultSetupUpdate
     */
    'runner_label'?: string | null;
    /**
     * CodeQL query suite to be used.
     * @type {string}
     * @memberof CodeScanningDefaultSetupUpdate
     */
    'query_suite'?: CodeScanningDefaultSetupUpdateQuerySuiteEnum;
    /**
     * Threat model to be used for code scanning analysis. Use `remote` to analyze only network sources and `remote_and_local` to include local sources like filesystem access, command-line arguments, database reads, environment variable and standard input.
     * @type {string}
     * @memberof CodeScanningDefaultSetupUpdate
     */
    'threat_model'?: CodeScanningDefaultSetupUpdateThreatModelEnum;
    /**
     * CodeQL languages to be analyzed.
     * @type {Array<string>}
     * @memberof CodeScanningDefaultSetupUpdate
     */
    'languages'?: Array<CodeScanningDefaultSetupUpdateLanguagesEnum>;
}

export const CodeScanningDefaultSetupUpdateStateEnum = {
    Configured: 'configured',
    NotConfigured: 'not-configured'
} as const;

export type CodeScanningDefaultSetupUpdateStateEnum = typeof CodeScanningDefaultSetupUpdateStateEnum[keyof typeof CodeScanningDefaultSetupUpdateStateEnum];
export const CodeScanningDefaultSetupUpdateRunnerTypeEnum = {
    Standard: 'standard',
    Labeled: 'labeled'
} as const;

export type CodeScanningDefaultSetupUpdateRunnerTypeEnum = typeof CodeScanningDefaultSetupUpdateRunnerTypeEnum[keyof typeof CodeScanningDefaultSetupUpdateRunnerTypeEnum];
export const CodeScanningDefaultSetupUpdateQuerySuiteEnum = {
    Default: 'default',
    Extended: 'extended'
} as const;

export type CodeScanningDefaultSetupUpdateQuerySuiteEnum = typeof CodeScanningDefaultSetupUpdateQuerySuiteEnum[keyof typeof CodeScanningDefaultSetupUpdateQuerySuiteEnum];
export const CodeScanningDefaultSetupUpdateThreatModelEnum = {
    Remote: 'remote',
    RemoteAndLocal: 'remote_and_local'
} as const;

export type CodeScanningDefaultSetupUpdateThreatModelEnum = typeof CodeScanningDefaultSetupUpdateThreatModelEnum[keyof typeof CodeScanningDefaultSetupUpdateThreatModelEnum];
export const CodeScanningDefaultSetupUpdateLanguagesEnum = {
    Actions: 'actions',
    CCpp: 'c-cpp',
    Csharp: 'csharp',
    Go: 'go',
    JavaKotlin: 'java-kotlin',
    JavascriptTypescript: 'javascript-typescript',
    Python: 'python',
    Ruby: 'ruby',
    Swift: 'swift'
} as const;

export type CodeScanningDefaultSetupUpdateLanguagesEnum = typeof CodeScanningDefaultSetupUpdateLanguagesEnum[keyof typeof CodeScanningDefaultSetupUpdateLanguagesEnum];

/**
 * You can use `run_url` to track the status of the run. This includes a property status and conclusion. You should not rely on this always being an actions workflow run object.
 * @export
 * @interface CodeScanningDefaultSetupUpdateResponse
 */
export interface CodeScanningDefaultSetupUpdateResponse {
    /**
     * ID of the corresponding run.
     * @type {number}
     * @memberof CodeScanningDefaultSetupUpdateResponse
     */
    'run_id'?: number;
    /**
     * URL of the corresponding run.
     * @type {string}
     * @memberof CodeScanningDefaultSetupUpdateResponse
     */
    'run_url'?: string;
}
/**
 * 
 * @export
 * @interface CodeScanningOrganizationAlertItems
 */
export interface CodeScanningOrganizationAlertItems {
    /**
     * The security alert number.
     * @type {number}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'number': number;
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'created_at': string;
    /**
     * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'updated_at'?: string;
    /**
     * The REST API URL of the alert resource.
     * @type {string}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'url': string;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'html_url': string;
    /**
     * The REST API URL for fetching the list of instances for an alert.
     * @type {string}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'instances_url': string;
    /**
     * 
     * @type {CodeScanningAlertState}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'state': CodeScanningAlertState | null;
    /**
     * The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'fixed_at'?: string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'dismissed_by': NullableSimpleUser | null;
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'dismissed_at': string | null;
    /**
     * 
     * @type {CodeScanningAlertDismissedReason}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'dismissed_reason': CodeScanningAlertDismissedReason | null;
    /**
     * The dismissal comment associated with the dismissal of the alert.
     * @type {string}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'dismissed_comment'?: string | null;
    /**
     * 
     * @type {CodeScanningAlertRuleSummary}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'rule': CodeScanningAlertRuleSummary;
    /**
     * 
     * @type {CodeScanningAnalysisTool}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'tool': CodeScanningAnalysisTool;
    /**
     * 
     * @type {CodeScanningAlertInstance}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'most_recent_instance': CodeScanningAlertInstance;
    /**
     * 
     * @type {SimpleRepository}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'repository': SimpleRepository;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof CodeScanningOrganizationAlertItems
     */
    'dismissal_approved_by'?: NullableSimpleUser | null;
}


/**
 * 
 * @export
 * @interface CodeScanningSarifsReceipt
 */
export interface CodeScanningSarifsReceipt {
    /**
     * An identifier for the upload.
     * @type {string}
     * @memberof CodeScanningSarifsReceipt
     */
    'id'?: string;
    /**
     * The REST API URL for checking the status of the upload.
     * @type {string}
     * @memberof CodeScanningSarifsReceipt
     */
    'url'?: string;
}
/**
 * 
 * @export
 * @interface CodeScanningSarifsStatus
 */
export interface CodeScanningSarifsStatus {
    /**
     * `pending` files have not yet been processed, while `complete` means results from the SARIF have been stored. `failed` files have either not been processed at all, or could only be partially processed.
     * @type {string}
     * @memberof CodeScanningSarifsStatus
     */
    'processing_status'?: CodeScanningSarifsStatusProcessingStatusEnum;
    /**
     * The REST API URL for getting the analyses associated with the upload.
     * @type {string}
     * @memberof CodeScanningSarifsStatus
     */
    'analyses_url'?: string | null;
    /**
     * Any errors that ocurred during processing of the delivery.
     * @type {Array<string>}
     * @memberof CodeScanningSarifsStatus
     */
    'errors'?: Array<string> | null;
}

export const CodeScanningSarifsStatusProcessingStatusEnum = {
    Pending: 'pending',
    Complete: 'complete',
    Failed: 'failed'
} as const;

export type CodeScanningSarifsStatusProcessingStatusEnum = typeof CodeScanningSarifsStatusProcessingStatusEnum[keyof typeof CodeScanningSarifsStatusProcessingStatusEnum];

/**
 * A run of a CodeQL query against one or more repositories.
 * @export
 * @interface CodeScanningVariantAnalysis
 */
export interface CodeScanningVariantAnalysis {
    /**
     * The ID of the variant analysis.
     * @type {number}
     * @memberof CodeScanningVariantAnalysis
     */
    'id': number;
    /**
     * 
     * @type {SimpleRepository}
     * @memberof CodeScanningVariantAnalysis
     */
    'controller_repo': SimpleRepository;
    /**
     * 
     * @type {SimpleUser}
     * @memberof CodeScanningVariantAnalysis
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {CodeScanningVariantAnalysisLanguage}
     * @memberof CodeScanningVariantAnalysis
     */
    'query_language': CodeScanningVariantAnalysisLanguage;
    /**
     * The download url for the query pack.
     * @type {string}
     * @memberof CodeScanningVariantAnalysis
     */
    'query_pack_url': string;
    /**
     * The date and time at which the variant analysis was created, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof CodeScanningVariantAnalysis
     */
    'created_at'?: string;
    /**
     * The date and time at which the variant analysis was last updated, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof CodeScanningVariantAnalysis
     */
    'updated_at'?: string;
    /**
     * The date and time at which the variant analysis was completed, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ. Will be null if the variant analysis has not yet completed or this information is not available.
     * @type {string}
     * @memberof CodeScanningVariantAnalysis
     */
    'completed_at'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CodeScanningVariantAnalysis
     */
    'status': CodeScanningVariantAnalysisStatusEnum;
    /**
     * The GitHub Actions workflow run used to execute this variant analysis. This is only available if the workflow run has started.
     * @type {number}
     * @memberof CodeScanningVariantAnalysis
     */
    'actions_workflow_run_id'?: number;
    /**
     * The reason for a failure of the variant analysis. This is only available if the variant analysis has failed.
     * @type {string}
     * @memberof CodeScanningVariantAnalysis
     */
    'failure_reason'?: CodeScanningVariantAnalysisFailureReasonEnum;
    /**
     * 
     * @type {Array<CodeScanningVariantAnalysisScannedRepositoriesInner>}
     * @memberof CodeScanningVariantAnalysis
     */
    'scanned_repositories'?: Array<CodeScanningVariantAnalysisScannedRepositoriesInner>;
    /**
     * 
     * @type {CodeScanningVariantAnalysisSkippedRepositories}
     * @memberof CodeScanningVariantAnalysis
     */
    'skipped_repositories'?: CodeScanningVariantAnalysisSkippedRepositories;
}

export const CodeScanningVariantAnalysisStatusEnum = {
    InProgress: 'in_progress',
    Succeeded: 'succeeded',
    Failed: 'failed',
    Cancelled: 'cancelled'
} as const;

export type CodeScanningVariantAnalysisStatusEnum = typeof CodeScanningVariantAnalysisStatusEnum[keyof typeof CodeScanningVariantAnalysisStatusEnum];
export const CodeScanningVariantAnalysisFailureReasonEnum = {
    NoReposQueried: 'no_repos_queried',
    ActionsWorkflowRunFailed: 'actions_workflow_run_failed',
    InternalError: 'internal_error'
} as const;

export type CodeScanningVariantAnalysisFailureReasonEnum = typeof CodeScanningVariantAnalysisFailureReasonEnum[keyof typeof CodeScanningVariantAnalysisFailureReasonEnum];

/**
 * The language targeted by the CodeQL query
 * @export
 * @enum {string}
 */

export const CodeScanningVariantAnalysisLanguage = {
    Cpp: 'cpp',
    Csharp: 'csharp',
    Go: 'go',
    Java: 'java',
    Javascript: 'javascript',
    Python: 'python',
    Ruby: 'ruby',
    Rust: 'rust',
    Swift: 'swift'
} as const;

export type CodeScanningVariantAnalysisLanguage = typeof CodeScanningVariantAnalysisLanguage[keyof typeof CodeScanningVariantAnalysisLanguage];


/**
 * 
 * @export
 * @interface CodeScanningVariantAnalysisRepoTask
 */
export interface CodeScanningVariantAnalysisRepoTask {
    /**
     * 
     * @type {SimpleRepository}
     * @memberof CodeScanningVariantAnalysisRepoTask
     */
    'repository': SimpleRepository;
    /**
     * 
     * @type {CodeScanningVariantAnalysisStatus}
     * @memberof CodeScanningVariantAnalysisRepoTask
     */
    'analysis_status': CodeScanningVariantAnalysisStatus;
    /**
     * The size of the artifact. This is only available for successful analyses.
     * @type {number}
     * @memberof CodeScanningVariantAnalysisRepoTask
     */
    'artifact_size_in_bytes'?: number;
    /**
     * The number of results in the case of a successful analysis. This is only available for successful analyses.
     * @type {number}
     * @memberof CodeScanningVariantAnalysisRepoTask
     */
    'result_count'?: number;
    /**
     * The reason of the failure of this repo task. This is only available if the repository task has failed.
     * @type {string}
     * @memberof CodeScanningVariantAnalysisRepoTask
     */
    'failure_message'?: string;
    /**
     * The SHA of the commit the CodeQL database was built against. This is only available for successful analyses.
     * @type {string}
     * @memberof CodeScanningVariantAnalysisRepoTask
     */
    'database_commit_sha'?: string;
    /**
     * The source location prefix to use. This is only available for successful analyses.
     * @type {string}
     * @memberof CodeScanningVariantAnalysisRepoTask
     */
    'source_location_prefix'?: string;
    /**
     * The URL of the artifact. This is only available for successful analyses.
     * @type {string}
     * @memberof CodeScanningVariantAnalysisRepoTask
     */
    'artifact_url'?: string;
}


/**
 * Repository Identifier
 * @export
 * @interface CodeScanningVariantAnalysisRepository
 */
export interface CodeScanningVariantAnalysisRepository {
    /**
     * A unique identifier of the repository.
     * @type {number}
     * @memberof CodeScanningVariantAnalysisRepository
     */
    'id': number;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof CodeScanningVariantAnalysisRepository
     */
    'name': string;
    /**
     * The full, globally unique, name of the repository.
     * @type {string}
     * @memberof CodeScanningVariantAnalysisRepository
     */
    'full_name': string;
    /**
     * Whether the repository is private.
     * @type {boolean}
     * @memberof CodeScanningVariantAnalysisRepository
     */
    'private': boolean;
    /**
     * 
     * @type {number}
     * @memberof CodeScanningVariantAnalysisRepository
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof CodeScanningVariantAnalysisRepository
     */
    'updated_at': string | null;
}
/**
 * 
 * @export
 * @interface CodeScanningVariantAnalysisScannedRepositoriesInner
 */
export interface CodeScanningVariantAnalysisScannedRepositoriesInner {
    /**
     * 
     * @type {CodeScanningVariantAnalysisRepository}
     * @memberof CodeScanningVariantAnalysisScannedRepositoriesInner
     */
    'repository': CodeScanningVariantAnalysisRepository;
    /**
     * 
     * @type {CodeScanningVariantAnalysisStatus}
     * @memberof CodeScanningVariantAnalysisScannedRepositoriesInner
     */
    'analysis_status': CodeScanningVariantAnalysisStatus;
    /**
     * The number of results in the case of a successful analysis. This is only available for successful analyses.
     * @type {number}
     * @memberof CodeScanningVariantAnalysisScannedRepositoriesInner
     */
    'result_count'?: number;
    /**
     * The size of the artifact. This is only available for successful analyses.
     * @type {number}
     * @memberof CodeScanningVariantAnalysisScannedRepositoriesInner
     */
    'artifact_size_in_bytes'?: number;
    /**
     * The reason of the failure of this repo task. This is only available if the repository task has failed.
     * @type {string}
     * @memberof CodeScanningVariantAnalysisScannedRepositoriesInner
     */
    'failure_message'?: string;
}


/**
 * 
 * @export
 * @interface CodeScanningVariantAnalysisSkippedRepoGroup
 */
export interface CodeScanningVariantAnalysisSkippedRepoGroup {
    /**
     * The total number of repositories that were skipped for this reason.
     * @type {number}
     * @memberof CodeScanningVariantAnalysisSkippedRepoGroup
     */
    'repository_count': number;
    /**
     * A list of repositories that were skipped. This list may not include all repositories that were skipped. This is only available when the repository was found and the user has access to it.
     * @type {Array<CodeScanningVariantAnalysisRepository>}
     * @memberof CodeScanningVariantAnalysisSkippedRepoGroup
     */
    'repositories': Array<CodeScanningVariantAnalysisRepository>;
}
/**
 * Information about repositories that were skipped from processing. This information is only available to the user that initiated the variant analysis.
 * @export
 * @interface CodeScanningVariantAnalysisSkippedRepositories
 */
export interface CodeScanningVariantAnalysisSkippedRepositories {
    /**
     * 
     * @type {CodeScanningVariantAnalysisSkippedRepoGroup}
     * @memberof CodeScanningVariantAnalysisSkippedRepositories
     */
    'access_mismatch_repos': CodeScanningVariantAnalysisSkippedRepoGroup;
    /**
     * 
     * @type {CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos}
     * @memberof CodeScanningVariantAnalysisSkippedRepositories
     */
    'not_found_repos': CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos;
    /**
     * 
     * @type {CodeScanningVariantAnalysisSkippedRepoGroup}
     * @memberof CodeScanningVariantAnalysisSkippedRepositories
     */
    'no_codeql_db_repos': CodeScanningVariantAnalysisSkippedRepoGroup;
    /**
     * 
     * @type {CodeScanningVariantAnalysisSkippedRepoGroup}
     * @memberof CodeScanningVariantAnalysisSkippedRepositories
     */
    'over_limit_repos': CodeScanningVariantAnalysisSkippedRepoGroup;
}
/**
 * 
 * @export
 * @interface CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos
 */
export interface CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos {
    /**
     * The total number of repositories that were skipped for this reason.
     * @type {number}
     * @memberof CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos
     */
    'repository_count': number;
    /**
     * A list of full repository names that were skipped. This list may not include all repositories that were skipped.
     * @type {Array<string>}
     * @memberof CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos
     */
    'repository_full_names': Array<string>;
}
/**
 * The new status of the CodeQL variant analysis repository task.
 * @export
 * @enum {string}
 */

export const CodeScanningVariantAnalysisStatus = {
    Pending: 'pending',
    InProgress: 'in_progress',
    Succeeded: 'succeeded',
    Failed: 'failed',
    Canceled: 'canceled',
    TimedOut: 'timed_out'
} as const;

export type CodeScanningVariantAnalysisStatus = typeof CodeScanningVariantAnalysisStatus[keyof typeof CodeScanningVariantAnalysisStatus];


/**
 * Code Search Result Item
 * @export
 * @interface CodeSearchResultItem
 */
export interface CodeSearchResultItem {
    /**
     * 
     * @type {string}
     * @memberof CodeSearchResultItem
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof CodeSearchResultItem
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof CodeSearchResultItem
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof CodeSearchResultItem
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof CodeSearchResultItem
     */
    'git_url': string;
    /**
     * 
     * @type {string}
     * @memberof CodeSearchResultItem
     */
    'html_url': string;
    /**
     * 
     * @type {MinimalRepository}
     * @memberof CodeSearchResultItem
     */
    'repository': MinimalRepository;
    /**
     * 
     * @type {number}
     * @memberof CodeSearchResultItem
     */
    'score': number;
    /**
     * 
     * @type {number}
     * @memberof CodeSearchResultItem
     */
    'file_size'?: number;
    /**
     * 
     * @type {string}
     * @memberof CodeSearchResultItem
     */
    'language'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CodeSearchResultItem
     */
    'last_modified_at'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CodeSearchResultItem
     */
    'line_numbers'?: Array<string>;
    /**
     * 
     * @type {Array<SearchResultTextMatchesInner>}
     * @memberof CodeSearchResultItem
     */
    'text_matches'?: Array<SearchResultTextMatchesInner>;
}
/**
 * A code security configuration
 * @export
 * @interface CodeSecurityConfiguration
 */
export interface CodeSecurityConfiguration {
    /**
     * The ID of the code security configuration
     * @type {number}
     * @memberof CodeSecurityConfiguration
     */
    'id'?: number;
    /**
     * The name of the code security configuration. Must be unique within the organization.
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'name'?: string;
    /**
     * The type of the code security configuration.
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'target_type'?: CodeSecurityConfigurationTargetTypeEnum;
    /**
     * A description of the code security configuration
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'description'?: string;
    /**
     * The enablement status of GitHub Advanced Security
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'advanced_security'?: CodeSecurityConfigurationAdvancedSecurityEnum;
    /**
     * The enablement status of Dependency Graph
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'dependency_graph'?: CodeSecurityConfigurationDependencyGraphEnum;
    /**
     * The enablement status of Automatic dependency submission
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'dependency_graph_autosubmit_action'?: CodeSecurityConfigurationDependencyGraphAutosubmitActionEnum;
    /**
     * 
     * @type {CodeSecurityConfigurationDependencyGraphAutosubmitActionOptions}
     * @memberof CodeSecurityConfiguration
     */
    'dependency_graph_autosubmit_action_options'?: CodeSecurityConfigurationDependencyGraphAutosubmitActionOptions;
    /**
     * The enablement status of Dependabot alerts
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'dependabot_alerts'?: CodeSecurityConfigurationDependabotAlertsEnum;
    /**
     * The enablement status of Dependabot security updates
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'dependabot_security_updates'?: CodeSecurityConfigurationDependabotSecurityUpdatesEnum;
    /**
     * The enablement status of code scanning default setup
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'code_scanning_default_setup'?: CodeSecurityConfigurationCodeScanningDefaultSetupEnum;
    /**
     * 
     * @type {CodeSecurityConfigurationCodeScanningDefaultSetupOptions}
     * @memberof CodeSecurityConfiguration
     */
    'code_scanning_default_setup_options'?: CodeSecurityConfigurationCodeScanningDefaultSetupOptions | null;
    /**
     * The enablement status of code scanning delegated alert dismissal
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'code_scanning_delegated_alert_dismissal'?: CodeSecurityConfigurationCodeScanningDelegatedAlertDismissalEnum;
    /**
     * The enablement status of secret scanning
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'secret_scanning'?: CodeSecurityConfigurationSecretScanningEnum;
    /**
     * The enablement status of secret scanning push protection
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'secret_scanning_push_protection'?: CodeSecurityConfigurationSecretScanningPushProtectionEnum;
    /**
     * The enablement status of secret scanning delegated bypass
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'secret_scanning_delegated_bypass'?: CodeSecurityConfigurationSecretScanningDelegatedBypassEnum;
    /**
     * 
     * @type {CodeSecurityConfigurationSecretScanningDelegatedBypassOptions}
     * @memberof CodeSecurityConfiguration
     */
    'secret_scanning_delegated_bypass_options'?: CodeSecurityConfigurationSecretScanningDelegatedBypassOptions;
    /**
     * The enablement status of secret scanning validity checks
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'secret_scanning_validity_checks'?: CodeSecurityConfigurationSecretScanningValidityChecksEnum;
    /**
     * The enablement status of secret scanning non-provider patterns
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'secret_scanning_non_provider_patterns'?: CodeSecurityConfigurationSecretScanningNonProviderPatternsEnum;
    /**
     * The enablement status of Copilot secret scanning
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'secret_scanning_generic_secrets'?: CodeSecurityConfigurationSecretScanningGenericSecretsEnum;
    /**
     * The enablement status of secret scanning delegated alert dismissal
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'secret_scanning_delegated_alert_dismissal'?: CodeSecurityConfigurationSecretScanningDelegatedAlertDismissalEnum;
    /**
     * The enablement status of private vulnerability reporting
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'private_vulnerability_reporting'?: CodeSecurityConfigurationPrivateVulnerabilityReportingEnum;
    /**
     * The enforcement status for a security configuration
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'enforcement'?: CodeSecurityConfigurationEnforcementEnum;
    /**
     * The URL of the configuration
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'url'?: string;
    /**
     * The URL of the configuration
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'html_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof CodeSecurityConfiguration
     */
    'updated_at'?: string;
}

export const CodeSecurityConfigurationTargetTypeEnum = {
    Global: 'global',
    Organization: 'organization',
    Enterprise: 'enterprise'
} as const;

export type CodeSecurityConfigurationTargetTypeEnum = typeof CodeSecurityConfigurationTargetTypeEnum[keyof typeof CodeSecurityConfigurationTargetTypeEnum];
export const CodeSecurityConfigurationAdvancedSecurityEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    CodeSecurity: 'code_security',
    SecretProtection: 'secret_protection'
} as const;

export type CodeSecurityConfigurationAdvancedSecurityEnum = typeof CodeSecurityConfigurationAdvancedSecurityEnum[keyof typeof CodeSecurityConfigurationAdvancedSecurityEnum];
export const CodeSecurityConfigurationDependencyGraphEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationDependencyGraphEnum = typeof CodeSecurityConfigurationDependencyGraphEnum[keyof typeof CodeSecurityConfigurationDependencyGraphEnum];
export const CodeSecurityConfigurationDependencyGraphAutosubmitActionEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationDependencyGraphAutosubmitActionEnum = typeof CodeSecurityConfigurationDependencyGraphAutosubmitActionEnum[keyof typeof CodeSecurityConfigurationDependencyGraphAutosubmitActionEnum];
export const CodeSecurityConfigurationDependabotAlertsEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationDependabotAlertsEnum = typeof CodeSecurityConfigurationDependabotAlertsEnum[keyof typeof CodeSecurityConfigurationDependabotAlertsEnum];
export const CodeSecurityConfigurationDependabotSecurityUpdatesEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationDependabotSecurityUpdatesEnum = typeof CodeSecurityConfigurationDependabotSecurityUpdatesEnum[keyof typeof CodeSecurityConfigurationDependabotSecurityUpdatesEnum];
export const CodeSecurityConfigurationCodeScanningDefaultSetupEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationCodeScanningDefaultSetupEnum = typeof CodeSecurityConfigurationCodeScanningDefaultSetupEnum[keyof typeof CodeSecurityConfigurationCodeScanningDefaultSetupEnum];
export const CodeSecurityConfigurationCodeScanningDelegatedAlertDismissalEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationCodeScanningDelegatedAlertDismissalEnum = typeof CodeSecurityConfigurationCodeScanningDelegatedAlertDismissalEnum[keyof typeof CodeSecurityConfigurationCodeScanningDelegatedAlertDismissalEnum];
export const CodeSecurityConfigurationSecretScanningEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationSecretScanningEnum = typeof CodeSecurityConfigurationSecretScanningEnum[keyof typeof CodeSecurityConfigurationSecretScanningEnum];
export const CodeSecurityConfigurationSecretScanningPushProtectionEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationSecretScanningPushProtectionEnum = typeof CodeSecurityConfigurationSecretScanningPushProtectionEnum[keyof typeof CodeSecurityConfigurationSecretScanningPushProtectionEnum];
export const CodeSecurityConfigurationSecretScanningDelegatedBypassEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationSecretScanningDelegatedBypassEnum = typeof CodeSecurityConfigurationSecretScanningDelegatedBypassEnum[keyof typeof CodeSecurityConfigurationSecretScanningDelegatedBypassEnum];
export const CodeSecurityConfigurationSecretScanningValidityChecksEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationSecretScanningValidityChecksEnum = typeof CodeSecurityConfigurationSecretScanningValidityChecksEnum[keyof typeof CodeSecurityConfigurationSecretScanningValidityChecksEnum];
export const CodeSecurityConfigurationSecretScanningNonProviderPatternsEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationSecretScanningNonProviderPatternsEnum = typeof CodeSecurityConfigurationSecretScanningNonProviderPatternsEnum[keyof typeof CodeSecurityConfigurationSecretScanningNonProviderPatternsEnum];
export const CodeSecurityConfigurationSecretScanningGenericSecretsEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationSecretScanningGenericSecretsEnum = typeof CodeSecurityConfigurationSecretScanningGenericSecretsEnum[keyof typeof CodeSecurityConfigurationSecretScanningGenericSecretsEnum];
export const CodeSecurityConfigurationSecretScanningDelegatedAlertDismissalEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationSecretScanningDelegatedAlertDismissalEnum = typeof CodeSecurityConfigurationSecretScanningDelegatedAlertDismissalEnum[keyof typeof CodeSecurityConfigurationSecretScanningDelegatedAlertDismissalEnum];
export const CodeSecurityConfigurationPrivateVulnerabilityReportingEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationPrivateVulnerabilityReportingEnum = typeof CodeSecurityConfigurationPrivateVulnerabilityReportingEnum[keyof typeof CodeSecurityConfigurationPrivateVulnerabilityReportingEnum];
export const CodeSecurityConfigurationEnforcementEnum = {
    Enforced: 'enforced',
    Unenforced: 'unenforced'
} as const;

export type CodeSecurityConfigurationEnforcementEnum = typeof CodeSecurityConfigurationEnforcementEnum[keyof typeof CodeSecurityConfigurationEnforcementEnum];

/**
 * Feature options for code scanning default setup
 * @export
 * @interface CodeSecurityConfigurationCodeScanningDefaultSetupOptions
 */
export interface CodeSecurityConfigurationCodeScanningDefaultSetupOptions {
    /**
     * Whether to use labeled runners or standard GitHub runners.
     * @type {string}
     * @memberof CodeSecurityConfigurationCodeScanningDefaultSetupOptions
     */
    'runner_type'?: CodeSecurityConfigurationCodeScanningDefaultSetupOptionsRunnerTypeEnum | null;
    /**
     * The label of the runner to use for code scanning when runner_type is \'labeled\'.
     * @type {string}
     * @memberof CodeSecurityConfigurationCodeScanningDefaultSetupOptions
     */
    'runner_label'?: string | null;
}

export const CodeSecurityConfigurationCodeScanningDefaultSetupOptionsRunnerTypeEnum = {
    Standard: 'standard',
    Labeled: 'labeled',
    NotSet: 'not_set'
} as const;

export type CodeSecurityConfigurationCodeScanningDefaultSetupOptionsRunnerTypeEnum = typeof CodeSecurityConfigurationCodeScanningDefaultSetupOptionsRunnerTypeEnum[keyof typeof CodeSecurityConfigurationCodeScanningDefaultSetupOptionsRunnerTypeEnum];

/**
 * Feature options for Automatic dependency submission
 * @export
 * @interface CodeSecurityConfigurationDependencyGraphAutosubmitActionOptions
 */
export interface CodeSecurityConfigurationDependencyGraphAutosubmitActionOptions {
    /**
     * Whether to use runners labeled with \'dependency-submission\' or standard GitHub runners.
     * @type {boolean}
     * @memberof CodeSecurityConfigurationDependencyGraphAutosubmitActionOptions
     */
    'labeled_runners'?: boolean;
}
/**
 * Code security configuration associated with a repository and attachment status
 * @export
 * @interface CodeSecurityConfigurationForRepository
 */
export interface CodeSecurityConfigurationForRepository {
    /**
     * The attachment status of the code security configuration on the repository.
     * @type {string}
     * @memberof CodeSecurityConfigurationForRepository
     */
    'status'?: CodeSecurityConfigurationForRepositoryStatusEnum;
    /**
     * 
     * @type {CodeSecurityConfiguration}
     * @memberof CodeSecurityConfigurationForRepository
     */
    'configuration'?: CodeSecurityConfiguration;
}

export const CodeSecurityConfigurationForRepositoryStatusEnum = {
    Attached: 'attached',
    Attaching: 'attaching',
    Detached: 'detached',
    Removed: 'removed',
    Enforced: 'enforced',
    Failed: 'failed',
    Updating: 'updating',
    RemovedByEnterprise: 'removed_by_enterprise'
} as const;

export type CodeSecurityConfigurationForRepositoryStatusEnum = typeof CodeSecurityConfigurationForRepositoryStatusEnum[keyof typeof CodeSecurityConfigurationForRepositoryStatusEnum];

/**
 * Repositories associated with a code security configuration and attachment status
 * @export
 * @interface CodeSecurityConfigurationRepositories
 */
export interface CodeSecurityConfigurationRepositories {
    /**
     * The attachment status of the code security configuration on the repository.
     * @type {string}
     * @memberof CodeSecurityConfigurationRepositories
     */
    'status'?: CodeSecurityConfigurationRepositoriesStatusEnum;
    /**
     * 
     * @type {SimpleRepository}
     * @memberof CodeSecurityConfigurationRepositories
     */
    'repository'?: SimpleRepository;
}

export const CodeSecurityConfigurationRepositoriesStatusEnum = {
    Attached: 'attached',
    Attaching: 'attaching',
    Detached: 'detached',
    Removed: 'removed',
    Enforced: 'enforced',
    Failed: 'failed',
    Updating: 'updating',
    RemovedByEnterprise: 'removed_by_enterprise'
} as const;

export type CodeSecurityConfigurationRepositoriesStatusEnum = typeof CodeSecurityConfigurationRepositoriesStatusEnum[keyof typeof CodeSecurityConfigurationRepositoriesStatusEnum];

/**
 * Feature options for secret scanning delegated bypass
 * @export
 * @interface CodeSecurityConfigurationSecretScanningDelegatedBypassOptions
 */
export interface CodeSecurityConfigurationSecretScanningDelegatedBypassOptions {
    /**
     * The bypass reviewers for secret scanning delegated bypass
     * @type {Array<CodeSecurityConfigurationSecretScanningDelegatedBypassOptionsReviewersInner>}
     * @memberof CodeSecurityConfigurationSecretScanningDelegatedBypassOptions
     */
    'reviewers'?: Array<CodeSecurityConfigurationSecretScanningDelegatedBypassOptionsReviewersInner>;
}
/**
 * 
 * @export
 * @interface CodeSecurityConfigurationSecretScanningDelegatedBypassOptionsReviewersInner
 */
export interface CodeSecurityConfigurationSecretScanningDelegatedBypassOptionsReviewersInner {
    /**
     * The ID of the team or role selected as a bypass reviewer
     * @type {number}
     * @memberof CodeSecurityConfigurationSecretScanningDelegatedBypassOptionsReviewersInner
     */
    'reviewer_id': number;
    /**
     * The type of the bypass reviewer
     * @type {string}
     * @memberof CodeSecurityConfigurationSecretScanningDelegatedBypassOptionsReviewersInner
     */
    'reviewer_type': CodeSecurityConfigurationSecretScanningDelegatedBypassOptionsReviewersInnerReviewerTypeEnum;
}

export const CodeSecurityConfigurationSecretScanningDelegatedBypassOptionsReviewersInnerReviewerTypeEnum = {
    Team: 'TEAM',
    Role: 'ROLE'
} as const;

export type CodeSecurityConfigurationSecretScanningDelegatedBypassOptionsReviewersInnerReviewerTypeEnum = typeof CodeSecurityConfigurationSecretScanningDelegatedBypassOptionsReviewersInnerReviewerTypeEnum[keyof typeof CodeSecurityConfigurationSecretScanningDelegatedBypassOptionsReviewersInnerReviewerTypeEnum];

/**
 * 
 * @export
 * @interface CodeSecurityDefaultConfigurationsInner
 */
export interface CodeSecurityDefaultConfigurationsInner {
    /**
     * The visibility of newly created repositories for which the code security configuration will be applied to by default
     * @type {string}
     * @memberof CodeSecurityDefaultConfigurationsInner
     */
    'default_for_new_repos'?: CodeSecurityDefaultConfigurationsInnerDefaultForNewReposEnum;
    /**
     * 
     * @type {CodeSecurityConfiguration}
     * @memberof CodeSecurityDefaultConfigurationsInner
     */
    'configuration'?: CodeSecurityConfiguration;
}

export const CodeSecurityDefaultConfigurationsInnerDefaultForNewReposEnum = {
    Public: 'public',
    PrivateAndInternal: 'private_and_internal',
    All: 'all'
} as const;

export type CodeSecurityDefaultConfigurationsInnerDefaultForNewReposEnum = typeof CodeSecurityDefaultConfigurationsInnerDefaultForNewReposEnum[keyof typeof CodeSecurityDefaultConfigurationsInnerDefaultForNewReposEnum];

/**
 * A list of errors found in a repo\'s CODEOWNERS file
 * @export
 * @interface CodeownersErrors
 */
export interface CodeownersErrors {
    /**
     * 
     * @type {Array<CodeownersErrorsErrorsInner>}
     * @memberof CodeownersErrors
     */
    'errors': Array<CodeownersErrorsErrorsInner>;
}
/**
 * 
 * @export
 * @interface CodeownersErrorsErrorsInner
 */
export interface CodeownersErrorsErrorsInner {
    /**
     * The line number where this errors occurs.
     * @type {number}
     * @memberof CodeownersErrorsErrorsInner
     */
    'line': number;
    /**
     * The column number where this errors occurs.
     * @type {number}
     * @memberof CodeownersErrorsErrorsInner
     */
    'column': number;
    /**
     * The contents of the line where the error occurs.
     * @type {string}
     * @memberof CodeownersErrorsErrorsInner
     */
    'source'?: string;
    /**
     * The type of error.
     * @type {string}
     * @memberof CodeownersErrorsErrorsInner
     */
    'kind': string;
    /**
     * Suggested action to fix the error. This will usually be `null`, but is provided for some common errors.
     * @type {string}
     * @memberof CodeownersErrorsErrorsInner
     */
    'suggestion'?: string | null;
    /**
     * A human-readable description of the error, combining information from multiple fields, laid out for display in a monospaced typeface (for example, a command-line setting).
     * @type {string}
     * @memberof CodeownersErrorsErrorsInner
     */
    'message': string;
    /**
     * The path of the file where the error occured.
     * @type {string}
     * @memberof CodeownersErrorsErrorsInner
     */
    'path': string;
}
/**
 * A codespace.
 * @export
 * @interface Codespace
 */
export interface Codespace {
    /**
     * 
     * @type {number}
     * @memberof Codespace
     */
    'id': number;
    /**
     * Automatically generated name of this codespace.
     * @type {string}
     * @memberof Codespace
     */
    'name': string;
    /**
     * Display name for this codespace.
     * @type {string}
     * @memberof Codespace
     */
    'display_name'?: string | null;
    /**
     * UUID identifying this codespace\'s environment.
     * @type {string}
     * @memberof Codespace
     */
    'environment_id': string | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof Codespace
     */
    'owner': SimpleUser;
    /**
     * 
     * @type {SimpleUser}
     * @memberof Codespace
     */
    'billable_owner': SimpleUser;
    /**
     * 
     * @type {MinimalRepository}
     * @memberof Codespace
     */
    'repository': MinimalRepository;
    /**
     * 
     * @type {NullableCodespaceMachine}
     * @memberof Codespace
     */
    'machine': NullableCodespaceMachine | null;
    /**
     * Path to devcontainer.json from repo root used to create Codespace.
     * @type {string}
     * @memberof Codespace
     */
    'devcontainer_path'?: string | null;
    /**
     * Whether the codespace was created from a prebuild.
     * @type {boolean}
     * @memberof Codespace
     */
    'prebuild': boolean | null;
    /**
     * 
     * @type {string}
     * @memberof Codespace
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof Codespace
     */
    'updated_at': string;
    /**
     * Last known time this codespace was started.
     * @type {string}
     * @memberof Codespace
     */
    'last_used_at': string;
    /**
     * State of this codespace.
     * @type {string}
     * @memberof Codespace
     */
    'state': CodespaceStateEnum;
    /**
     * API URL for this codespace.
     * @type {string}
     * @memberof Codespace
     */
    'url': string;
    /**
     * 
     * @type {CodespaceGitStatus}
     * @memberof Codespace
     */
    'git_status': CodespaceGitStatus;
    /**
     * The initally assigned location of a new codespace.
     * @type {string}
     * @memberof Codespace
     */
    'location': CodespaceLocationEnum;
    /**
     * The number of minutes of inactivity after which this codespace will be automatically stopped.
     * @type {number}
     * @memberof Codespace
     */
    'idle_timeout_minutes': number | null;
    /**
     * URL to access this codespace on the web.
     * @type {string}
     * @memberof Codespace
     */
    'web_url': string;
    /**
     * API URL to access available alternate machine types for this codespace.
     * @type {string}
     * @memberof Codespace
     */
    'machines_url': string;
    /**
     * API URL to start this codespace.
     * @type {string}
     * @memberof Codespace
     */
    'start_url': string;
    /**
     * API URL to stop this codespace.
     * @type {string}
     * @memberof Codespace
     */
    'stop_url': string;
    /**
     * API URL to publish this codespace to a new repository.
     * @type {string}
     * @memberof Codespace
     */
    'publish_url'?: string | null;
    /**
     * API URL for the Pull Request associated with this codespace, if any.
     * @type {string}
     * @memberof Codespace
     */
    'pulls_url': string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof Codespace
     */
    'recent_folders': Array<string>;
    /**
     * 
     * @type {CodespaceRuntimeConstraints}
     * @memberof Codespace
     */
    'runtime_constraints'?: CodespaceRuntimeConstraints;
    /**
     * Whether or not a codespace has a pending async operation. This would mean that the codespace is temporarily unavailable. The only thing that you can do with a codespace in this state is delete it.
     * @type {boolean}
     * @memberof Codespace
     */
    'pending_operation'?: boolean | null;
    /**
     * Text to show user when codespace is disabled by a pending operation
     * @type {string}
     * @memberof Codespace
     */
    'pending_operation_disabled_reason'?: string | null;
    /**
     * Text to show user when codespace idle timeout minutes has been overriden by an organization policy
     * @type {string}
     * @memberof Codespace
     */
    'idle_timeout_notice'?: string | null;
    /**
     * Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 43200 (30 days).
     * @type {number}
     * @memberof Codespace
     */
    'retention_period_minutes'?: number | null;
    /**
     * When a codespace will be auto-deleted based on the \"retention_period_minutes\" and \"last_used_at\"
     * @type {string}
     * @memberof Codespace
     */
    'retention_expires_at'?: string | null;
    /**
     * The text to display to a user when a codespace has been stopped for a potentially actionable reason.
     * @type {string}
     * @memberof Codespace
     */
    'last_known_stop_notice'?: string | null;
}

export const CodespaceStateEnum = {
    Unknown: 'Unknown',
    Created: 'Created',
    Queued: 'Queued',
    Provisioning: 'Provisioning',
    Available: 'Available',
    Awaiting: 'Awaiting',
    Unavailable: 'Unavailable',
    Deleted: 'Deleted',
    Moved: 'Moved',
    Shutdown: 'Shutdown',
    Archived: 'Archived',
    Starting: 'Starting',
    ShuttingDown: 'ShuttingDown',
    Failed: 'Failed',
    Exporting: 'Exporting',
    Updating: 'Updating',
    Rebuilding: 'Rebuilding'
} as const;

export type CodespaceStateEnum = typeof CodespaceStateEnum[keyof typeof CodespaceStateEnum];
export const CodespaceLocationEnum = {
    EastUs: 'EastUs',
    SouthEastAsia: 'SouthEastAsia',
    WestEurope: 'WestEurope',
    WestUs2: 'WestUs2'
} as const;

export type CodespaceLocationEnum = typeof CodespaceLocationEnum[keyof typeof CodespaceLocationEnum];

/**
 * An export of a codespace. Also, latest export details for a codespace can be fetched with id = latest
 * @export
 * @interface CodespaceExportDetails
 */
export interface CodespaceExportDetails {
    /**
     * State of the latest export
     * @type {string}
     * @memberof CodespaceExportDetails
     */
    'state'?: string | null;
    /**
     * Completion time of the last export operation
     * @type {string}
     * @memberof CodespaceExportDetails
     */
    'completed_at'?: string | null;
    /**
     * Name of the exported branch
     * @type {string}
     * @memberof CodespaceExportDetails
     */
    'branch'?: string | null;
    /**
     * Git commit SHA of the exported branch
     * @type {string}
     * @memberof CodespaceExportDetails
     */
    'sha'?: string | null;
    /**
     * Id for the export details
     * @type {string}
     * @memberof CodespaceExportDetails
     */
    'id'?: string;
    /**
     * Url for fetching export details
     * @type {string}
     * @memberof CodespaceExportDetails
     */
    'export_url'?: string;
    /**
     * Web url for the exported branch
     * @type {string}
     * @memberof CodespaceExportDetails
     */
    'html_url'?: string | null;
}
/**
 * Details about the codespace\'s git repository.
 * @export
 * @interface CodespaceGitStatus
 */
export interface CodespaceGitStatus {
    /**
     * The number of commits the local repository is ahead of the remote.
     * @type {number}
     * @memberof CodespaceGitStatus
     */
    'ahead'?: number;
    /**
     * The number of commits the local repository is behind the remote.
     * @type {number}
     * @memberof CodespaceGitStatus
     */
    'behind'?: number;
    /**
     * Whether the local repository has unpushed changes.
     * @type {boolean}
     * @memberof CodespaceGitStatus
     */
    'has_unpushed_changes'?: boolean;
    /**
     * Whether the local repository has uncommitted changes.
     * @type {boolean}
     * @memberof CodespaceGitStatus
     */
    'has_uncommitted_changes'?: boolean;
    /**
     * The current branch (or SHA if in detached HEAD state) of the local repository.
     * @type {string}
     * @memberof CodespaceGitStatus
     */
    'ref'?: string;
}
/**
 * A description of the machine powering a codespace.
 * @export
 * @interface CodespaceMachine
 */
export interface CodespaceMachine {
    /**
     * The name of the machine.
     * @type {string}
     * @memberof CodespaceMachine
     */
    'name': string;
    /**
     * The display name of the machine includes cores, memory, and storage.
     * @type {string}
     * @memberof CodespaceMachine
     */
    'display_name': string;
    /**
     * The operating system of the machine.
     * @type {string}
     * @memberof CodespaceMachine
     */
    'operating_system': string;
    /**
     * How much storage is available to the codespace.
     * @type {number}
     * @memberof CodespaceMachine
     */
    'storage_in_bytes': number;
    /**
     * How much memory is available to the codespace.
     * @type {number}
     * @memberof CodespaceMachine
     */
    'memory_in_bytes': number;
    /**
     * How many cores are available to the codespace.
     * @type {number}
     * @memberof CodespaceMachine
     */
    'cpus': number;
    /**
     * Whether a prebuild is currently available when creating a codespace for this machine and repository. If a branch was not specified as a ref, the default branch will be assumed. Value will be \"null\" if prebuilds are not supported or prebuild availability could not be determined. Value will be \"none\" if no prebuild is available. Latest values \"ready\" and \"in_progress\" indicate the prebuild availability status.
     * @type {string}
     * @memberof CodespaceMachine
     */
    'prebuild_availability': CodespaceMachinePrebuildAvailabilityEnum | null;
}

export const CodespaceMachinePrebuildAvailabilityEnum = {
    None: 'none',
    Ready: 'ready',
    InProgress: 'in_progress'
} as const;

export type CodespaceMachinePrebuildAvailabilityEnum = typeof CodespaceMachinePrebuildAvailabilityEnum[keyof typeof CodespaceMachinePrebuildAvailabilityEnum];

/**
 * 
 * @export
 * @interface CodespaceRuntimeConstraints
 */
export interface CodespaceRuntimeConstraints {
    /**
     * The privacy settings a user can select from when forwarding a port.
     * @type {Array<string>}
     * @memberof CodespaceRuntimeConstraints
     */
    'allowed_port_privacy_settings'?: Array<string> | null;
}
/**
 * A codespace.
 * @export
 * @interface CodespaceWithFullRepository
 */
export interface CodespaceWithFullRepository {
    /**
     * 
     * @type {number}
     * @memberof CodespaceWithFullRepository
     */
    'id': number;
    /**
     * Automatically generated name of this codespace.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'name': string;
    /**
     * Display name for this codespace.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'display_name'?: string | null;
    /**
     * UUID identifying this codespace\'s environment.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'environment_id': string | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof CodespaceWithFullRepository
     */
    'owner': SimpleUser;
    /**
     * 
     * @type {SimpleUser}
     * @memberof CodespaceWithFullRepository
     */
    'billable_owner': SimpleUser;
    /**
     * 
     * @type {FullRepository}
     * @memberof CodespaceWithFullRepository
     */
    'repository': FullRepository;
    /**
     * 
     * @type {NullableCodespaceMachine}
     * @memberof CodespaceWithFullRepository
     */
    'machine': NullableCodespaceMachine | null;
    /**
     * Path to devcontainer.json from repo root used to create Codespace.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'devcontainer_path'?: string | null;
    /**
     * Whether the codespace was created from a prebuild.
     * @type {boolean}
     * @memberof CodespaceWithFullRepository
     */
    'prebuild': boolean | null;
    /**
     * 
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'updated_at': string;
    /**
     * Last known time this codespace was started.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'last_used_at': string;
    /**
     * State of this codespace.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'state': CodespaceWithFullRepositoryStateEnum;
    /**
     * API URL for this codespace.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'url': string;
    /**
     * 
     * @type {CodespaceGitStatus}
     * @memberof CodespaceWithFullRepository
     */
    'git_status': CodespaceGitStatus;
    /**
     * The initally assigned location of a new codespace.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'location': CodespaceWithFullRepositoryLocationEnum;
    /**
     * The number of minutes of inactivity after which this codespace will be automatically stopped.
     * @type {number}
     * @memberof CodespaceWithFullRepository
     */
    'idle_timeout_minutes': number | null;
    /**
     * URL to access this codespace on the web.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'web_url': string;
    /**
     * API URL to access available alternate machine types for this codespace.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'machines_url': string;
    /**
     * API URL to start this codespace.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'start_url': string;
    /**
     * API URL to stop this codespace.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'stop_url': string;
    /**
     * API URL to publish this codespace to a new repository.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'publish_url'?: string | null;
    /**
     * API URL for the Pull Request associated with this codespace, if any.
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'pulls_url': string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof CodespaceWithFullRepository
     */
    'recent_folders': Array<string>;
    /**
     * 
     * @type {CodespaceRuntimeConstraints}
     * @memberof CodespaceWithFullRepository
     */
    'runtime_constraints'?: CodespaceRuntimeConstraints;
    /**
     * Whether or not a codespace has a pending async operation. This would mean that the codespace is temporarily unavailable. The only thing that you can do with a codespace in this state is delete it.
     * @type {boolean}
     * @memberof CodespaceWithFullRepository
     */
    'pending_operation'?: boolean | null;
    /**
     * Text to show user when codespace is disabled by a pending operation
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'pending_operation_disabled_reason'?: string | null;
    /**
     * Text to show user when codespace idle timeout minutes has been overriden by an organization policy
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'idle_timeout_notice'?: string | null;
    /**
     * Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 43200 (30 days).
     * @type {number}
     * @memberof CodespaceWithFullRepository
     */
    'retention_period_minutes'?: number | null;
    /**
     * When a codespace will be auto-deleted based on the \"retention_period_minutes\" and \"last_used_at\"
     * @type {string}
     * @memberof CodespaceWithFullRepository
     */
    'retention_expires_at'?: string | null;
}

export const CodespaceWithFullRepositoryStateEnum = {
    Unknown: 'Unknown',
    Created: 'Created',
    Queued: 'Queued',
    Provisioning: 'Provisioning',
    Available: 'Available',
    Awaiting: 'Awaiting',
    Unavailable: 'Unavailable',
    Deleted: 'Deleted',
    Moved: 'Moved',
    Shutdown: 'Shutdown',
    Archived: 'Archived',
    Starting: 'Starting',
    ShuttingDown: 'ShuttingDown',
    Failed: 'Failed',
    Exporting: 'Exporting',
    Updating: 'Updating',
    Rebuilding: 'Rebuilding'
} as const;

export type CodespaceWithFullRepositoryStateEnum = typeof CodespaceWithFullRepositoryStateEnum[keyof typeof CodespaceWithFullRepositoryStateEnum];
export const CodespaceWithFullRepositoryLocationEnum = {
    EastUs: 'EastUs',
    SouthEastAsia: 'SouthEastAsia',
    WestEurope: 'WestEurope',
    WestUs2: 'WestUs2'
} as const;

export type CodespaceWithFullRepositoryLocationEnum = typeof CodespaceWithFullRepositoryLocationEnum[keyof typeof CodespaceWithFullRepositoryLocationEnum];

/**
 * Secrets for a GitHub Codespace.
 * @export
 * @interface CodespacesOrgSecret
 */
export interface CodespacesOrgSecret {
    /**
     * The name of the secret
     * @type {string}
     * @memberof CodespacesOrgSecret
     */
    'name': string;
    /**
     * The date and time at which the secret was created, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof CodespacesOrgSecret
     */
    'created_at': string;
    /**
     * The date and time at which the secret was created, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof CodespacesOrgSecret
     */
    'updated_at': string;
    /**
     * The type of repositories in the organization that the secret is visible to
     * @type {string}
     * @memberof CodespacesOrgSecret
     */
    'visibility': CodespacesOrgSecretVisibilityEnum;
    /**
     * The API URL at which the list of repositories this secret is visible to can be retrieved
     * @type {string}
     * @memberof CodespacesOrgSecret
     */
    'selected_repositories_url'?: string;
}

export const CodespacesOrgSecretVisibilityEnum = {
    All: 'all',
    Private: 'private',
    Selected: 'selected'
} as const;

export type CodespacesOrgSecretVisibilityEnum = typeof CodespacesOrgSecretVisibilityEnum[keyof typeof CodespacesOrgSecretVisibilityEnum];

/**
 * Permission check result for a given devcontainer config.
 * @export
 * @interface CodespacesPermissionsCheckForDevcontainer
 */
export interface CodespacesPermissionsCheckForDevcontainer {
    /**
     * Whether the user has accepted the permissions defined by the devcontainer config
     * @type {boolean}
     * @memberof CodespacesPermissionsCheckForDevcontainer
     */
    'accepted': boolean;
}
/**
 * The public key used for setting Codespaces secrets.
 * @export
 * @interface CodespacesPublicKey
 */
export interface CodespacesPublicKey {
    /**
     * The identifier for the key.
     * @type {string}
     * @memberof CodespacesPublicKey
     */
    'key_id': string;
    /**
     * The Base64 encoded public key.
     * @type {string}
     * @memberof CodespacesPublicKey
     */
    'key': string;
    /**
     * 
     * @type {number}
     * @memberof CodespacesPublicKey
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof CodespacesPublicKey
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof CodespacesPublicKey
     */
    'title'?: string;
    /**
     * 
     * @type {string}
     * @memberof CodespacesPublicKey
     */
    'created_at'?: string;
}
/**
 * Secrets for a GitHub Codespace.
 * @export
 * @interface CodespacesSecret
 */
export interface CodespacesSecret {
    /**
     * The name of the secret
     * @type {string}
     * @memberof CodespacesSecret
     */
    'name': string;
    /**
     * The date and time at which the secret was created, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof CodespacesSecret
     */
    'created_at': string;
    /**
     * The date and time at which the secret was last updated, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof CodespacesSecret
     */
    'updated_at': string;
    /**
     * The type of repositories in the organization that the secret is visible to
     * @type {string}
     * @memberof CodespacesSecret
     */
    'visibility': CodespacesSecretVisibilityEnum;
    /**
     * The API URL at which the list of repositories this secret is visible to can be retrieved
     * @type {string}
     * @memberof CodespacesSecret
     */
    'selected_repositories_url': string;
}

export const CodespacesSecretVisibilityEnum = {
    All: 'all',
    Private: 'private',
    Selected: 'selected'
} as const;

export type CodespacesSecretVisibilityEnum = typeof CodespacesSecretVisibilityEnum[keyof typeof CodespacesSecretVisibilityEnum];

/**
 * The public key used for setting user Codespaces\' Secrets.
 * @export
 * @interface CodespacesUserPublicKey
 */
export interface CodespacesUserPublicKey {
    /**
     * The identifier for the key.
     * @type {string}
     * @memberof CodespacesUserPublicKey
     */
    'key_id': string;
    /**
     * The Base64 encoded public key.
     * @type {string}
     * @memberof CodespacesUserPublicKey
     */
    'key': string;
}
/**
 * Collaborator
 * @export
 * @interface Collaborator
 */
export interface Collaborator {
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof Collaborator
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'name'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'gravatar_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'followers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'following_url': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'starred_url': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'subscriptions_url': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'organizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'received_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'type': string;
    /**
     * 
     * @type {boolean}
     * @memberof Collaborator
     */
    'site_admin': boolean;
    /**
     * 
     * @type {CollaboratorPermissions}
     * @memberof Collaborator
     */
    'permissions'?: CollaboratorPermissions;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'role_name': string;
    /**
     * 
     * @type {string}
     * @memberof Collaborator
     */
    'user_view_type'?: string;
}
/**
 * 
 * @export
 * @interface CollaboratorPermissions
 */
export interface CollaboratorPermissions {
    /**
     * 
     * @type {boolean}
     * @memberof CollaboratorPermissions
     */
    'pull': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CollaboratorPermissions
     */
    'triage'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CollaboratorPermissions
     */
    'push': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CollaboratorPermissions
     */
    'maintain'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CollaboratorPermissions
     */
    'admin': boolean;
}
/**
 * 
 * @export
 * @interface CombinedBillingUsage
 */
export interface CombinedBillingUsage {
    /**
     * Numbers of days left in billing cycle.
     * @type {number}
     * @memberof CombinedBillingUsage
     */
    'days_left_in_billing_cycle': number;
    /**
     * Estimated storage space (GB) used in billing cycle.
     * @type {number}
     * @memberof CombinedBillingUsage
     */
    'estimated_paid_storage_for_month': number;
    /**
     * Estimated sum of free and paid storage space (GB) used in billing cycle.
     * @type {number}
     * @memberof CombinedBillingUsage
     */
    'estimated_storage_for_month': number;
}
/**
 * Combined Commit Status
 * @export
 * @interface CombinedCommitStatus
 */
export interface CombinedCommitStatus {
    /**
     * 
     * @type {string}
     * @memberof CombinedCommitStatus
     */
    'state': string;
    /**
     * 
     * @type {Array<SimpleCommitStatus>}
     * @memberof CombinedCommitStatus
     */
    'statuses': Array<SimpleCommitStatus>;
    /**
     * 
     * @type {string}
     * @memberof CombinedCommitStatus
     */
    'sha': string;
    /**
     * 
     * @type {number}
     * @memberof CombinedCommitStatus
     */
    'total_count': number;
    /**
     * 
     * @type {MinimalRepository}
     * @memberof CombinedCommitStatus
     */
    'repository': MinimalRepository;
    /**
     * 
     * @type {string}
     * @memberof CombinedCommitStatus
     */
    'commit_url': string;
    /**
     * 
     * @type {string}
     * @memberof CombinedCommitStatus
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface Commit
 */
export interface Commit {
    /**
     * An array of files added in the commit. A maximum of 3000 changed files will be reported per commit.
     * @type {Array<string>}
     * @memberof Commit
     */
    'added'?: Array<string>;
    /**
     * 
     * @type {Committer}
     * @memberof Commit
     */
    'author': Committer;
    /**
     * 
     * @type {Committer}
     * @memberof Commit
     */
    'committer': Committer;
    /**
     * Whether this commit is distinct from any that have been pushed before.
     * @type {boolean}
     * @memberof Commit
     */
    'distinct': boolean;
    /**
     * 
     * @type {string}
     * @memberof Commit
     */
    'id': string;
    /**
     * The commit message.
     * @type {string}
     * @memberof Commit
     */
    'message': string;
    /**
     * An array of files modified by the commit. A maximum of 3000 changed files will be reported per commit.
     * @type {Array<string>}
     * @memberof Commit
     */
    'modified'?: Array<string>;
    /**
     * An array of files removed in the commit. A maximum of 3000 changed files will be reported per commit.
     * @type {Array<string>}
     * @memberof Commit
     */
    'removed'?: Array<string>;
    /**
     * The ISO 8601 timestamp of the commit.
     * @type {string}
     * @memberof Commit
     */
    'timestamp': string;
    /**
     * 
     * @type {string}
     * @memberof Commit
     */
    'tree_id': string;
    /**
     * URL that points to the commit API resource.
     * @type {string}
     * @memberof Commit
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface Commit1
 */
export interface Commit1 {
    /**
     * An array of files added in the commit.
     * @type {Array<string>}
     * @memberof Commit1
     */
    'added'?: Array<string>;
    /**
     * 
     * @type {Committer}
     * @memberof Commit1
     */
    'author': Committer;
    /**
     * 
     * @type {Committer}
     * @memberof Commit1
     */
    'committer': Committer;
    /**
     * Whether this commit is distinct from any that have been pushed before.
     * @type {boolean}
     * @memberof Commit1
     */
    'distinct': boolean;
    /**
     * 
     * @type {string}
     * @memberof Commit1
     */
    'id': string;
    /**
     * The commit message.
     * @type {string}
     * @memberof Commit1
     */
    'message': string;
    /**
     * An array of files modified by the commit.
     * @type {Array<string>}
     * @memberof Commit1
     */
    'modified'?: Array<string>;
    /**
     * An array of files removed in the commit.
     * @type {Array<string>}
     * @memberof Commit1
     */
    'removed'?: Array<string>;
    /**
     * The ISO 8601 timestamp of the commit.
     * @type {string}
     * @memberof Commit1
     */
    'timestamp': string;
    /**
     * 
     * @type {string}
     * @memberof Commit1
     */
    'tree_id': string;
    /**
     * URL that points to the commit API resource.
     * @type {string}
     * @memberof Commit1
     */
    'url': string;
}
/**
 * Commit Activity
 * @export
 * @interface CommitActivity
 */
export interface CommitActivity {
    /**
     * 
     * @type {Array<number>}
     * @memberof CommitActivity
     */
    'days': Array<number>;
    /**
     * 
     * @type {number}
     * @memberof CommitActivity
     */
    'total': number;
    /**
     * 
     * @type {number}
     * @memberof CommitActivity
     */
    'week': number;
}
/**
 * @type CommitAuthor
 * @export
 */
export type CommitAuthor = SimpleUser | object;

/**
 * Commit Comment
 * @export
 * @interface CommitComment
 */
export interface CommitComment {
    /**
     * 
     * @type {string}
     * @memberof CommitComment
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof CommitComment
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof CommitComment
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof CommitComment
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof CommitComment
     */
    'body': string;
    /**
     * 
     * @type {string}
     * @memberof CommitComment
     */
    'path': string | null;
    /**
     * 
     * @type {number}
     * @memberof CommitComment
     */
    'position': number | null;
    /**
     * 
     * @type {number}
     * @memberof CommitComment
     */
    'line': number | null;
    /**
     * 
     * @type {string}
     * @memberof CommitComment
     */
    'commit_id': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof CommitComment
     */
    'user': NullableSimpleUser | null;
    /**
     * 
     * @type {string}
     * @memberof CommitComment
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof CommitComment
     */
    'updated_at': string;
    /**
     * 
     * @type {AuthorAssociation}
     * @memberof CommitComment
     */
    'author_association': AuthorAssociation;
    /**
     * 
     * @type {ReactionRollup}
     * @memberof CommitComment
     */
    'reactions'?: ReactionRollup;
}


/**
 * 
 * @export
 * @interface CommitCommit
 */
export interface CommitCommit {
    /**
     * 
     * @type {string}
     * @memberof CommitCommit
     */
    'url': string;
    /**
     * 
     * @type {NullableGitUser}
     * @memberof CommitCommit
     */
    'author': NullableGitUser | null;
    /**
     * 
     * @type {NullableGitUser}
     * @memberof CommitCommit
     */
    'committer': NullableGitUser | null;
    /**
     * 
     * @type {string}
     * @memberof CommitCommit
     */
    'message': string;
    /**
     * 
     * @type {number}
     * @memberof CommitCommit
     */
    'comment_count': number;
    /**
     * 
     * @type {CommitCommitTree}
     * @memberof CommitCommit
     */
    'tree': CommitCommitTree;
    /**
     * 
     * @type {Verification}
     * @memberof CommitCommit
     */
    'verification'?: Verification;
}
/**
 * 
 * @export
 * @interface CommitCommitTree
 */
export interface CommitCommitTree {
    /**
     * 
     * @type {string}
     * @memberof CommitCommitTree
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof CommitCommitTree
     */
    'url': string;
}
/**
 * Commit Comparison
 * @export
 * @interface CommitComparison
 */
export interface CommitComparison {
    /**
     * 
     * @type {string}
     * @memberof CommitComparison
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof CommitComparison
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof CommitComparison
     */
    'permalink_url': string;
    /**
     * 
     * @type {string}
     * @memberof CommitComparison
     */
    'diff_url': string;
    /**
     * 
     * @type {string}
     * @memberof CommitComparison
     */
    'patch_url': string;
    /**
     * 
     * @type {Commit}
     * @memberof CommitComparison
     */
    'base_commit': Commit;
    /**
     * 
     * @type {Commit}
     * @memberof CommitComparison
     */
    'merge_base_commit': Commit;
    /**
     * 
     * @type {string}
     * @memberof CommitComparison
     */
    'status': CommitComparisonStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof CommitComparison
     */
    'ahead_by': number;
    /**
     * 
     * @type {number}
     * @memberof CommitComparison
     */
    'behind_by': number;
    /**
     * 
     * @type {number}
     * @memberof CommitComparison
     */
    'total_commits': number;
    /**
     * 
     * @type {Array<Commit>}
     * @memberof CommitComparison
     */
    'commits': Array<Commit>;
    /**
     * 
     * @type {Array<DiffEntry>}
     * @memberof CommitComparison
     */
    'files'?: Array<DiffEntry>;
}

export const CommitComparisonStatusEnum = {
    Diverged: 'diverged',
    Ahead: 'ahead',
    Behind: 'behind',
    Identical: 'identical'
} as const;

export type CommitComparisonStatusEnum = typeof CommitComparisonStatusEnum[keyof typeof CommitComparisonStatusEnum];

/**
 * 
 * @export
 * @interface CommitParentsInner
 */
export interface CommitParentsInner {
    /**
     * 
     * @type {string}
     * @memberof CommitParentsInner
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof CommitParentsInner
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof CommitParentsInner
     */
    'html_url'?: string;
}
/**
 * Commit Search Result Item
 * @export
 * @interface CommitSearchResultItem
 */
export interface CommitSearchResultItem {
    /**
     * 
     * @type {string}
     * @memberof CommitSearchResultItem
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof CommitSearchResultItem
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof CommitSearchResultItem
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof CommitSearchResultItem
     */
    'comments_url': string;
    /**
     * 
     * @type {CommitSearchResultItemCommit}
     * @memberof CommitSearchResultItem
     */
    'commit': CommitSearchResultItemCommit;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof CommitSearchResultItem
     */
    'author': NullableSimpleUser | null;
    /**
     * 
     * @type {NullableGitUser}
     * @memberof CommitSearchResultItem
     */
    'committer': NullableGitUser | null;
    /**
     * 
     * @type {Array<FileCommitCommitParentsInner>}
     * @memberof CommitSearchResultItem
     */
    'parents': Array<FileCommitCommitParentsInner>;
    /**
     * 
     * @type {MinimalRepository}
     * @memberof CommitSearchResultItem
     */
    'repository': MinimalRepository;
    /**
     * 
     * @type {number}
     * @memberof CommitSearchResultItem
     */
    'score': number;
    /**
     * 
     * @type {string}
     * @memberof CommitSearchResultItem
     */
    'node_id': string;
    /**
     * 
     * @type {Array<SearchResultTextMatchesInner>}
     * @memberof CommitSearchResultItem
     */
    'text_matches'?: Array<SearchResultTextMatchesInner>;
}
/**
 * 
 * @export
 * @interface CommitSearchResultItemCommit
 */
export interface CommitSearchResultItemCommit {
    /**
     * 
     * @type {CommitSearchResultItemCommitAuthor}
     * @memberof CommitSearchResultItemCommit
     */
    'author': CommitSearchResultItemCommitAuthor;
    /**
     * 
     * @type {NullableGitUser}
     * @memberof CommitSearchResultItemCommit
     */
    'committer': NullableGitUser | null;
    /**
     * 
     * @type {number}
     * @memberof CommitSearchResultItemCommit
     */
    'comment_count': number;
    /**
     * 
     * @type {string}
     * @memberof CommitSearchResultItemCommit
     */
    'message': string;
    /**
     * 
     * @type {ShortBranchCommit}
     * @memberof CommitSearchResultItemCommit
     */
    'tree': ShortBranchCommit;
    /**
     * 
     * @type {string}
     * @memberof CommitSearchResultItemCommit
     */
    'url': string;
    /**
     * 
     * @type {Verification}
     * @memberof CommitSearchResultItemCommit
     */
    'verification'?: Verification;
}
/**
 * 
 * @export
 * @interface CommitSearchResultItemCommitAuthor
 */
export interface CommitSearchResultItemCommitAuthor {
    /**
     * 
     * @type {string}
     * @memberof CommitSearchResultItemCommitAuthor
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof CommitSearchResultItemCommitAuthor
     */
    'email': string;
    /**
     * 
     * @type {string}
     * @memberof CommitSearchResultItemCommitAuthor
     */
    'date': string;
}
/**
 * 
 * @export
 * @interface CommitStats
 */
export interface CommitStats {
    /**
     * 
     * @type {number}
     * @memberof CommitStats
     */
    'additions'?: number;
    /**
     * 
     * @type {number}
     * @memberof CommitStats
     */
    'deletions'?: number;
    /**
     * 
     * @type {number}
     * @memberof CommitStats
     */
    'total'?: number;
}
/**
 * Metaproperties for Git author/committer information.
 * @export
 * @interface Committer
 */
export interface Committer {
    /**
     * 
     * @type {string}
     * @memberof Committer
     */
    'date'?: string;
    /**
     * 
     * @type {string}
     * @memberof Committer
     */
    'email': string | null;
    /**
     * The git author\'s name.
     * @type {string}
     * @memberof Committer
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Committer
     */
    'username'?: string;
}
/**
 * Metaproperties for Git author/committer information.
 * @export
 * @interface Committer1
 */
export interface Committer1 {
    /**
     * 
     * @type {string}
     * @memberof Committer1
     */
    'date'?: string;
    /**
     * 
     * @type {string}
     * @memberof Committer1
     */
    'email'?: string | null;
    /**
     * The git author\'s name.
     * @type {string}
     * @memberof Committer1
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Committer1
     */
    'username'?: string;
}
/**
 * Community Profile
 * @export
 * @interface CommunityProfile
 */
export interface CommunityProfile {
    /**
     * 
     * @type {number}
     * @memberof CommunityProfile
     */
    'health_percentage': number;
    /**
     * 
     * @type {string}
     * @memberof CommunityProfile
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof CommunityProfile
     */
    'documentation': string | null;
    /**
     * 
     * @type {CommunityProfileFiles}
     * @memberof CommunityProfile
     */
    'files': CommunityProfileFiles;
    /**
     * 
     * @type {string}
     * @memberof CommunityProfile
     */
    'updated_at': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof CommunityProfile
     */
    'content_reports_enabled'?: boolean;
}
/**
 * 
 * @export
 * @interface CommunityProfileFiles
 */
export interface CommunityProfileFiles {
    /**
     * 
     * @type {NullableCodeOfConductSimple}
     * @memberof CommunityProfileFiles
     */
    'code_of_conduct': NullableCodeOfConductSimple | null;
    /**
     * 
     * @type {NullableCommunityHealthFile}
     * @memberof CommunityProfileFiles
     */
    'code_of_conduct_file': NullableCommunityHealthFile | null;
    /**
     * 
     * @type {NullableLicenseSimple}
     * @memberof CommunityProfileFiles
     */
    'license': NullableLicenseSimple | null;
    /**
     * 
     * @type {NullableCommunityHealthFile}
     * @memberof CommunityProfileFiles
     */
    'contributing': NullableCommunityHealthFile | null;
    /**
     * 
     * @type {NullableCommunityHealthFile}
     * @memberof CommunityProfileFiles
     */
    'readme': NullableCommunityHealthFile | null;
    /**
     * 
     * @type {NullableCommunityHealthFile}
     * @memberof CommunityProfileFiles
     */
    'issue_template': NullableCommunityHealthFile | null;
    /**
     * 
     * @type {NullableCommunityHealthFile}
     * @memberof CommunityProfileFiles
     */
    'pull_request_template': NullableCommunityHealthFile | null;
}
/**
 * 
 * @export
 * @interface ContainerMetadata
 */
export interface ContainerMetadata {
    /**
     * 
     * @type {Array<string>}
     * @memberof ContainerMetadata
     */
    'tags': Array<string>;
}
/**
 * 
 * @export
 * @interface ContentDirectoryInner
 */
export interface ContentDirectoryInner {
    /**
     * 
     * @type {string}
     * @memberof ContentDirectoryInner
     */
    'type': ContentDirectoryInnerTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof ContentDirectoryInner
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof ContentDirectoryInner
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof ContentDirectoryInner
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof ContentDirectoryInner
     */
    'content'?: string;
    /**
     * 
     * @type {string}
     * @memberof ContentDirectoryInner
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof ContentDirectoryInner
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof ContentDirectoryInner
     */
    'git_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentDirectoryInner
     */
    'html_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentDirectoryInner
     */
    'download_url': string | null;
    /**
     * 
     * @type {ContentTreeEntriesInnerLinks}
     * @memberof ContentDirectoryInner
     */
    '_links': ContentTreeEntriesInnerLinks;
}

export const ContentDirectoryInnerTypeEnum = {
    Dir: 'dir',
    File: 'file',
    Submodule: 'submodule',
    Symlink: 'symlink'
} as const;

export type ContentDirectoryInnerTypeEnum = typeof ContentDirectoryInnerTypeEnum[keyof typeof ContentDirectoryInnerTypeEnum];

/**
 * Content File
 * @export
 * @interface ContentFile
 */
export interface ContentFile {
    /**
     * 
     * @type {string}
     * @memberof ContentFile
     */
    'type': ContentFileTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ContentFile
     */
    'encoding': string;
    /**
     * 
     * @type {number}
     * @memberof ContentFile
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof ContentFile
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof ContentFile
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof ContentFile
     */
    'content': string;
    /**
     * 
     * @type {string}
     * @memberof ContentFile
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof ContentFile
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof ContentFile
     */
    'git_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentFile
     */
    'html_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentFile
     */
    'download_url': string | null;
    /**
     * 
     * @type {ContentTreeEntriesInnerLinks}
     * @memberof ContentFile
     */
    '_links': ContentTreeEntriesInnerLinks;
    /**
     * 
     * @type {string}
     * @memberof ContentFile
     */
    'target'?: string;
    /**
     * 
     * @type {string}
     * @memberof ContentFile
     */
    'submodule_git_url'?: string;
}

export const ContentFileTypeEnum = {
    File: 'file'
} as const;

export type ContentFileTypeEnum = typeof ContentFileTypeEnum[keyof typeof ContentFileTypeEnum];

/**
 * An object describing a submodule
 * @export
 * @interface ContentSubmodule
 */
export interface ContentSubmodule {
    /**
     * 
     * @type {string}
     * @memberof ContentSubmodule
     */
    'type': ContentSubmoduleTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ContentSubmodule
     */
    'submodule_git_url': string;
    /**
     * 
     * @type {number}
     * @memberof ContentSubmodule
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof ContentSubmodule
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof ContentSubmodule
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof ContentSubmodule
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof ContentSubmodule
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof ContentSubmodule
     */
    'git_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentSubmodule
     */
    'html_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentSubmodule
     */
    'download_url': string | null;
    /**
     * 
     * @type {ContentTreeEntriesInnerLinks}
     * @memberof ContentSubmodule
     */
    '_links': ContentTreeEntriesInnerLinks;
}

export const ContentSubmoduleTypeEnum = {
    Submodule: 'submodule'
} as const;

export type ContentSubmoduleTypeEnum = typeof ContentSubmoduleTypeEnum[keyof typeof ContentSubmoduleTypeEnum];

/**
 * An object describing a symlink
 * @export
 * @interface ContentSymlink
 */
export interface ContentSymlink {
    /**
     * 
     * @type {string}
     * @memberof ContentSymlink
     */
    'type': ContentSymlinkTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ContentSymlink
     */
    'target': string;
    /**
     * 
     * @type {number}
     * @memberof ContentSymlink
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof ContentSymlink
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof ContentSymlink
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof ContentSymlink
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof ContentSymlink
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof ContentSymlink
     */
    'git_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentSymlink
     */
    'html_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentSymlink
     */
    'download_url': string | null;
    /**
     * 
     * @type {ContentTreeEntriesInnerLinks}
     * @memberof ContentSymlink
     */
    '_links': ContentTreeEntriesInnerLinks;
}

export const ContentSymlinkTypeEnum = {
    Symlink: 'symlink'
} as const;

export type ContentSymlinkTypeEnum = typeof ContentSymlinkTypeEnum[keyof typeof ContentSymlinkTypeEnum];

/**
 * Content Traffic
 * @export
 * @interface ContentTraffic
 */
export interface ContentTraffic {
    /**
     * 
     * @type {string}
     * @memberof ContentTraffic
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof ContentTraffic
     */
    'title': string;
    /**
     * 
     * @type {number}
     * @memberof ContentTraffic
     */
    'count': number;
    /**
     * 
     * @type {number}
     * @memberof ContentTraffic
     */
    'uniques': number;
}
/**
 * Content Tree
 * @export
 * @interface ContentTree
 */
export interface ContentTree {
    /**
     * 
     * @type {string}
     * @memberof ContentTree
     */
    'type': string;
    /**
     * 
     * @type {number}
     * @memberof ContentTree
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof ContentTree
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof ContentTree
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof ContentTree
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof ContentTree
     */
    'content'?: string;
    /**
     * 
     * @type {string}
     * @memberof ContentTree
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof ContentTree
     */
    'git_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentTree
     */
    'html_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentTree
     */
    'download_url': string | null;
    /**
     * 
     * @type {Array<ContentTreeEntriesInner>}
     * @memberof ContentTree
     */
    'entries'?: Array<ContentTreeEntriesInner>;
    /**
     * 
     * @type {string}
     * @memberof ContentTree
     */
    'encoding'?: string;
    /**
     * 
     * @type {ContentTreeEntriesInnerLinks}
     * @memberof ContentTree
     */
    '_links': ContentTreeEntriesInnerLinks;
}
/**
 * 
 * @export
 * @interface ContentTreeEntriesInner
 */
export interface ContentTreeEntriesInner {
    /**
     * 
     * @type {string}
     * @memberof ContentTreeEntriesInner
     */
    'type': string;
    /**
     * 
     * @type {number}
     * @memberof ContentTreeEntriesInner
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof ContentTreeEntriesInner
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof ContentTreeEntriesInner
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof ContentTreeEntriesInner
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof ContentTreeEntriesInner
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof ContentTreeEntriesInner
     */
    'git_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentTreeEntriesInner
     */
    'html_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentTreeEntriesInner
     */
    'download_url': string | null;
    /**
     * 
     * @type {ContentTreeEntriesInnerLinks}
     * @memberof ContentTreeEntriesInner
     */
    '_links': ContentTreeEntriesInnerLinks;
}
/**
 * 
 * @export
 * @interface ContentTreeEntriesInnerLinks
 */
export interface ContentTreeEntriesInnerLinks {
    /**
     * 
     * @type {string}
     * @memberof ContentTreeEntriesInnerLinks
     */
    'git': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentTreeEntriesInnerLinks
     */
    'html': string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentTreeEntriesInnerLinks
     */
    'self': string;
}
/**
 * Contributor
 * @export
 * @interface Contributor
 */
export interface Contributor {
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'login'?: string;
    /**
     * 
     * @type {number}
     * @memberof Contributor
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'gravatar_id'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'html_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'repos_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'type': string;
    /**
     * 
     * @type {boolean}
     * @memberof Contributor
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Contributor
     */
    'contributions': number;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'email'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    'user_view_type'?: string;
}
/**
 * Contributor Activity
 * @export
 * @interface ContributorActivity
 */
export interface ContributorActivity {
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof ContributorActivity
     */
    'author': NullableSimpleUser | null;
    /**
     * 
     * @type {number}
     * @memberof ContributorActivity
     */
    'total': number;
    /**
     * 
     * @type {Array<ContributorActivityWeeksInner>}
     * @memberof ContributorActivity
     */
    'weeks': Array<ContributorActivityWeeksInner>;
}
/**
 * 
 * @export
 * @interface ContributorActivityWeeksInner
 */
export interface ContributorActivityWeeksInner {
    /**
     * 
     * @type {number}
     * @memberof ContributorActivityWeeksInner
     */
    'w'?: number;
    /**
     * 
     * @type {number}
     * @memberof ContributorActivityWeeksInner
     */
    'a'?: number;
    /**
     * 
     * @type {number}
     * @memberof ContributorActivityWeeksInner
     */
    'd'?: number;
    /**
     * 
     * @type {number}
     * @memberof ContributorActivityWeeksInner
     */
    'c'?: number;
}
/**
 * Converted Note to Issue Issue Event
 * @export
 * @interface ConvertedNoteToIssueIssueEvent
 */
export interface ConvertedNoteToIssueIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof ConvertedNoteToIssueIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof ConvertedNoteToIssueIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof ConvertedNoteToIssueIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof ConvertedNoteToIssueIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof ConvertedNoteToIssueIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof ConvertedNoteToIssueIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof ConvertedNoteToIssueIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ConvertedNoteToIssueIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {Integration}
     * @memberof ConvertedNoteToIssueIssueEvent
     */
    'performed_via_github_app': Integration | null;
    /**
     * 
     * @type {AddedToProjectIssueEventProjectCard}
     * @memberof ConvertedNoteToIssueIssueEvent
     */
    'project_card'?: AddedToProjectIssueEventProjectCard;
}
/**
 * Usage metrics for Copilot Chat in GitHub.com
 * @export
 * @interface CopilotDotcomChat
 */
export interface CopilotDotcomChat {
    [key: string]: any;

    /**
     * Total number of users who prompted Copilot Chat on github.com at least once.
     * @type {number}
     * @memberof CopilotDotcomChat
     */
    'total_engaged_users'?: number;
    /**
     * List of model metrics for a custom models and the default model.
     * @type {Array<CopilotDotcomChatModelsInner>}
     * @memberof CopilotDotcomChat
     */
    'models'?: Array<CopilotDotcomChatModelsInner>;
}
/**
 * 
 * @export
 * @interface CopilotDotcomChatModelsInner
 */
export interface CopilotDotcomChatModelsInner {
    /**
     * Name of the model used for Copilot Chat. If the default model is used will appear as \'default\'.
     * @type {string}
     * @memberof CopilotDotcomChatModelsInner
     */
    'name'?: string;
    /**
     * Indicates whether a model is custom or default.
     * @type {boolean}
     * @memberof CopilotDotcomChatModelsInner
     */
    'is_custom_model'?: boolean;
    /**
     * The training date for the custom model (if applicable).
     * @type {string}
     * @memberof CopilotDotcomChatModelsInner
     */
    'custom_model_training_date'?: string | null;
    /**
     * Total number of users who prompted Copilot Chat on github.com at least once for each model.
     * @type {number}
     * @memberof CopilotDotcomChatModelsInner
     */
    'total_engaged_users'?: number;
    /**
     * Total number of chats initiated by users on github.com.
     * @type {number}
     * @memberof CopilotDotcomChatModelsInner
     */
    'total_chats'?: number;
}
/**
 * Usage metrics for Copilot for pull requests.
 * @export
 * @interface CopilotDotcomPullRequests
 */
export interface CopilotDotcomPullRequests {
    [key: string]: any;

    /**
     * The number of users who used Copilot for Pull Requests on github.com to generate a pull request summary at least once.
     * @type {number}
     * @memberof CopilotDotcomPullRequests
     */
    'total_engaged_users'?: number;
    /**
     * Repositories in which users used Copilot for Pull Requests to generate pull request summaries
     * @type {Array<CopilotDotcomPullRequestsRepositoriesInner>}
     * @memberof CopilotDotcomPullRequests
     */
    'repositories'?: Array<CopilotDotcomPullRequestsRepositoriesInner>;
}
/**
 * 
 * @export
 * @interface CopilotDotcomPullRequestsRepositoriesInner
 */
export interface CopilotDotcomPullRequestsRepositoriesInner {
    /**
     * Repository name
     * @type {string}
     * @memberof CopilotDotcomPullRequestsRepositoriesInner
     */
    'name'?: string;
    /**
     * The number of users who generated pull request summaries using Copilot for Pull Requests in the given repository.
     * @type {number}
     * @memberof CopilotDotcomPullRequestsRepositoriesInner
     */
    'total_engaged_users'?: number;
    /**
     * List of model metrics for custom models and the default model.
     * @type {Array<CopilotDotcomPullRequestsRepositoriesInnerModelsInner>}
     * @memberof CopilotDotcomPullRequestsRepositoriesInner
     */
    'models'?: Array<CopilotDotcomPullRequestsRepositoriesInnerModelsInner>;
}
/**
 * 
 * @export
 * @interface CopilotDotcomPullRequestsRepositoriesInnerModelsInner
 */
export interface CopilotDotcomPullRequestsRepositoriesInnerModelsInner {
    /**
     * Name of the model used for Copilot pull request summaries. If the default model is used will appear as \'default\'.
     * @type {string}
     * @memberof CopilotDotcomPullRequestsRepositoriesInnerModelsInner
     */
    'name'?: string;
    /**
     * Indicates whether a model is custom or default.
     * @type {boolean}
     * @memberof CopilotDotcomPullRequestsRepositoriesInnerModelsInner
     */
    'is_custom_model'?: boolean;
    /**
     * The training date for the custom model.
     * @type {string}
     * @memberof CopilotDotcomPullRequestsRepositoriesInnerModelsInner
     */
    'custom_model_training_date'?: string | null;
    /**
     * The number of pull request summaries generated using Copilot for Pull Requests in the given repository.
     * @type {number}
     * @memberof CopilotDotcomPullRequestsRepositoriesInnerModelsInner
     */
    'total_pr_summaries_created'?: number;
    /**
     * The number of users who generated pull request summaries using Copilot for Pull Requests in the given repository and model.
     * @type {number}
     * @memberof CopilotDotcomPullRequestsRepositoriesInnerModelsInner
     */
    'total_engaged_users'?: number;
}
/**
 * Usage metrics for Copilot Chat in the IDE.
 * @export
 * @interface CopilotIdeChat
 */
export interface CopilotIdeChat {
    [key: string]: any;

    /**
     * Total number of users who prompted Copilot Chat in the IDE.
     * @type {number}
     * @memberof CopilotIdeChat
     */
    'total_engaged_users'?: number;
    /**
     * 
     * @type {Array<CopilotIdeChatEditorsInner>}
     * @memberof CopilotIdeChat
     */
    'editors'?: Array<CopilotIdeChatEditorsInner>;
}
/**
 * Copilot Chat metrics, for active editors.
 * @export
 * @interface CopilotIdeChatEditorsInner
 */
export interface CopilotIdeChatEditorsInner {
    /**
     * Name of the given editor.
     * @type {string}
     * @memberof CopilotIdeChatEditorsInner
     */
    'name'?: string;
    /**
     * The number of users who prompted Copilot Chat in the specified editor.
     * @type {number}
     * @memberof CopilotIdeChatEditorsInner
     */
    'total_engaged_users'?: number;
    /**
     * List of model metrics for custom models and the default model.
     * @type {Array<CopilotIdeChatEditorsInnerModelsInner>}
     * @memberof CopilotIdeChatEditorsInner
     */
    'models'?: Array<CopilotIdeChatEditorsInnerModelsInner>;
}
/**
 * 
 * @export
 * @interface CopilotIdeChatEditorsInnerModelsInner
 */
export interface CopilotIdeChatEditorsInnerModelsInner {
    /**
     * Name of the model used for Copilot Chat. If the default model is used will appear as \'default\'.
     * @type {string}
     * @memberof CopilotIdeChatEditorsInnerModelsInner
     */
    'name'?: string;
    /**
     * Indicates whether a model is custom or default.
     * @type {boolean}
     * @memberof CopilotIdeChatEditorsInnerModelsInner
     */
    'is_custom_model'?: boolean;
    /**
     * The training date for the custom model.
     * @type {string}
     * @memberof CopilotIdeChatEditorsInnerModelsInner
     */
    'custom_model_training_date'?: string | null;
    /**
     * The number of users who prompted Copilot Chat in the given editor and model.
     * @type {number}
     * @memberof CopilotIdeChatEditorsInnerModelsInner
     */
    'total_engaged_users'?: number;
    /**
     * The total number of chats initiated by users in the given editor and model.
     * @type {number}
     * @memberof CopilotIdeChatEditorsInnerModelsInner
     */
    'total_chats'?: number;
    /**
     * The number of times users accepted a code suggestion from Copilot Chat using the \'Insert Code\' UI element, for the given editor.
     * @type {number}
     * @memberof CopilotIdeChatEditorsInnerModelsInner
     */
    'total_chat_insertion_events'?: number;
    /**
     * The number of times users copied a code suggestion from Copilot Chat using the keyboard, or the \'Copy\' UI element, for the given editor.
     * @type {number}
     * @memberof CopilotIdeChatEditorsInnerModelsInner
     */
    'total_chat_copy_events'?: number;
}
/**
 * Usage metrics for Copilot editor code completions in the IDE.
 * @export
 * @interface CopilotIdeCodeCompletions
 */
export interface CopilotIdeCodeCompletions {
    [key: string]: any;

    /**
     * Number of users who accepted at least one Copilot code suggestion, across all active editors. Includes both full and partial acceptances.
     * @type {number}
     * @memberof CopilotIdeCodeCompletions
     */
    'total_engaged_users'?: number;
    /**
     * Code completion metrics for active languages.
     * @type {Array<CopilotIdeCodeCompletionsLanguagesInner>}
     * @memberof CopilotIdeCodeCompletions
     */
    'languages'?: Array<CopilotIdeCodeCompletionsLanguagesInner>;
    /**
     * 
     * @type {Array<CopilotIdeCodeCompletionsEditorsInner>}
     * @memberof CopilotIdeCodeCompletions
     */
    'editors'?: Array<CopilotIdeCodeCompletionsEditorsInner>;
}
/**
 * Copilot code completion metrics for active editors.
 * @export
 * @interface CopilotIdeCodeCompletionsEditorsInner
 */
export interface CopilotIdeCodeCompletionsEditorsInner {
    [key: string]: any;

    /**
     * Name of the given editor.
     * @type {string}
     * @memberof CopilotIdeCodeCompletionsEditorsInner
     */
    'name'?: string;
    /**
     * Number of users who accepted at least one Copilot code completion suggestion for the given editor. Includes both full and partial acceptances.
     * @type {number}
     * @memberof CopilotIdeCodeCompletionsEditorsInner
     */
    'total_engaged_users'?: number;
    /**
     * List of model metrics for custom models and the default model.
     * @type {Array<CopilotIdeCodeCompletionsEditorsInnerModelsInner>}
     * @memberof CopilotIdeCodeCompletionsEditorsInner
     */
    'models'?: Array<CopilotIdeCodeCompletionsEditorsInnerModelsInner>;
}
/**
 * 
 * @export
 * @interface CopilotIdeCodeCompletionsEditorsInnerModelsInner
 */
export interface CopilotIdeCodeCompletionsEditorsInnerModelsInner {
    /**
     * Name of the model used for Copilot code completion suggestions. If the default model is used will appear as \'default\'.
     * @type {string}
     * @memberof CopilotIdeCodeCompletionsEditorsInnerModelsInner
     */
    'name'?: string;
    /**
     * Indicates whether a model is custom or default.
     * @type {boolean}
     * @memberof CopilotIdeCodeCompletionsEditorsInnerModelsInner
     */
    'is_custom_model'?: boolean;
    /**
     * The training date for the custom model.
     * @type {string}
     * @memberof CopilotIdeCodeCompletionsEditorsInnerModelsInner
     */
    'custom_model_training_date'?: string | null;
    /**
     * Number of users who accepted at least one Copilot code completion suggestion for the given editor, for the given language and model. Includes both full and partial acceptances.
     * @type {number}
     * @memberof CopilotIdeCodeCompletionsEditorsInnerModelsInner
     */
    'total_engaged_users'?: number;
    /**
     * Code completion metrics for active languages, for the given editor.
     * @type {Array<CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner>}
     * @memberof CopilotIdeCodeCompletionsEditorsInnerModelsInner
     */
    'languages'?: Array<CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner>;
}
/**
 * Usage metrics for a given language for the given editor for Copilot code completions.
 * @export
 * @interface CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner
 */
export interface CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner {
    /**
     * Name of the language used for Copilot code completion suggestions, for the given editor.
     * @type {string}
     * @memberof CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner
     */
    'name'?: string;
    /**
     * Number of users who accepted at least one Copilot code completion suggestion for the given editor, for the given language. Includes both full and partial acceptances.
     * @type {number}
     * @memberof CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner
     */
    'total_engaged_users'?: number;
    /**
     * The number of Copilot code suggestions generated for the given editor, for the given language.
     * @type {number}
     * @memberof CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner
     */
    'total_code_suggestions'?: number;
    /**
     * The number of Copilot code suggestions accepted for the given editor, for the given language. Includes both full and partial acceptances.
     * @type {number}
     * @memberof CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner
     */
    'total_code_acceptances'?: number;
    /**
     * The number of lines of code suggested by Copilot code completions for the given editor, for the given language.
     * @type {number}
     * @memberof CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner
     */
    'total_code_lines_suggested'?: number;
    /**
     * The number of lines of code accepted from Copilot code suggestions for the given editor, for the given language.
     * @type {number}
     * @memberof CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner
     */
    'total_code_lines_accepted'?: number;
}
/**
 * Usage metrics for a given language for the given editor for Copilot code completions.
 * @export
 * @interface CopilotIdeCodeCompletionsLanguagesInner
 */
export interface CopilotIdeCodeCompletionsLanguagesInner {
    /**
     * Name of the language used for Copilot code completion suggestions.
     * @type {string}
     * @memberof CopilotIdeCodeCompletionsLanguagesInner
     */
    'name'?: string;
    /**
     * Number of users who accepted at least one Copilot code completion suggestion for the given language. Includes both full and partial acceptances.
     * @type {number}
     * @memberof CopilotIdeCodeCompletionsLanguagesInner
     */
    'total_engaged_users'?: number;
}
/**
 * Information about the seat breakdown and policies set for an organization with a Copilot Business or Copilot Enterprise subscription.
 * @export
 * @interface CopilotOrganizationDetails
 */
export interface CopilotOrganizationDetails {
    [key: string]: any;

    /**
     * 
     * @type {CopilotOrganizationSeatBreakdown}
     * @memberof CopilotOrganizationDetails
     */
    'seat_breakdown': CopilotOrganizationSeatBreakdown;
    /**
     * The organization policy for allowing or blocking suggestions matching public code (duplication detection filter).
     * @type {string}
     * @memberof CopilotOrganizationDetails
     */
    'public_code_suggestions': CopilotOrganizationDetailsPublicCodeSuggestionsEnum;
    /**
     * The organization policy for allowing or disallowing Copilot Chat in the IDE.
     * @type {string}
     * @memberof CopilotOrganizationDetails
     */
    'ide_chat'?: CopilotOrganizationDetailsIdeChatEnum;
    /**
     * The organization policy for allowing or disallowing Copilot features on GitHub.com.
     * @type {string}
     * @memberof CopilotOrganizationDetails
     */
    'platform_chat'?: CopilotOrganizationDetailsPlatformChatEnum;
    /**
     * The organization policy for allowing or disallowing Copilot in the CLI.
     * @type {string}
     * @memberof CopilotOrganizationDetails
     */
    'cli'?: CopilotOrganizationDetailsCliEnum;
    /**
     * The mode of assigning new seats.
     * @type {string}
     * @memberof CopilotOrganizationDetails
     */
    'seat_management_setting': CopilotOrganizationDetailsSeatManagementSettingEnum;
    /**
     * The Copilot plan of the organization, or the parent enterprise, when applicable.
     * @type {string}
     * @memberof CopilotOrganizationDetails
     */
    'plan_type'?: CopilotOrganizationDetailsPlanTypeEnum;
}

export const CopilotOrganizationDetailsPublicCodeSuggestionsEnum = {
    Allow: 'allow',
    Block: 'block',
    Unconfigured: 'unconfigured'
} as const;

export type CopilotOrganizationDetailsPublicCodeSuggestionsEnum = typeof CopilotOrganizationDetailsPublicCodeSuggestionsEnum[keyof typeof CopilotOrganizationDetailsPublicCodeSuggestionsEnum];
export const CopilotOrganizationDetailsIdeChatEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    Unconfigured: 'unconfigured'
} as const;

export type CopilotOrganizationDetailsIdeChatEnum = typeof CopilotOrganizationDetailsIdeChatEnum[keyof typeof CopilotOrganizationDetailsIdeChatEnum];
export const CopilotOrganizationDetailsPlatformChatEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    Unconfigured: 'unconfigured'
} as const;

export type CopilotOrganizationDetailsPlatformChatEnum = typeof CopilotOrganizationDetailsPlatformChatEnum[keyof typeof CopilotOrganizationDetailsPlatformChatEnum];
export const CopilotOrganizationDetailsCliEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled',
    Unconfigured: 'unconfigured'
} as const;

export type CopilotOrganizationDetailsCliEnum = typeof CopilotOrganizationDetailsCliEnum[keyof typeof CopilotOrganizationDetailsCliEnum];
export const CopilotOrganizationDetailsSeatManagementSettingEnum = {
    AssignAll: 'assign_all',
    AssignSelected: 'assign_selected',
    Disabled: 'disabled',
    Unconfigured: 'unconfigured'
} as const;

export type CopilotOrganizationDetailsSeatManagementSettingEnum = typeof CopilotOrganizationDetailsSeatManagementSettingEnum[keyof typeof CopilotOrganizationDetailsSeatManagementSettingEnum];
export const CopilotOrganizationDetailsPlanTypeEnum = {
    Business: 'business',
    Enterprise: 'enterprise'
} as const;

export type CopilotOrganizationDetailsPlanTypeEnum = typeof CopilotOrganizationDetailsPlanTypeEnum[keyof typeof CopilotOrganizationDetailsPlanTypeEnum];

/**
 * The breakdown of Copilot Business seats for the organization.
 * @export
 * @interface CopilotOrganizationSeatBreakdown
 */
export interface CopilotOrganizationSeatBreakdown {
    /**
     * The total number of seats being billed for the organization as of the current billing cycle.
     * @type {number}
     * @memberof CopilotOrganizationSeatBreakdown
     */
    'total'?: number;
    /**
     * Seats added during the current billing cycle.
     * @type {number}
     * @memberof CopilotOrganizationSeatBreakdown
     */
    'added_this_cycle'?: number;
    /**
     * The number of seats that are pending cancellation at the end of the current billing cycle.
     * @type {number}
     * @memberof CopilotOrganizationSeatBreakdown
     */
    'pending_cancellation'?: number;
    /**
     * The number of users who have been invited to receive a Copilot seat through this organization.
     * @type {number}
     * @memberof CopilotOrganizationSeatBreakdown
     */
    'pending_invitation'?: number;
    /**
     * The number of seats that have used Copilot during the current billing cycle.
     * @type {number}
     * @memberof CopilotOrganizationSeatBreakdown
     */
    'active_this_cycle'?: number;
    /**
     * The number of seats that have not used Copilot during the current billing cycle.
     * @type {number}
     * @memberof CopilotOrganizationSeatBreakdown
     */
    'inactive_this_cycle'?: number;
}
/**
 * Information about a Copilot Business seat assignment for a user, team, or organization.
 * @export
 * @interface CopilotSeatDetails
 */
export interface CopilotSeatDetails {
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof CopilotSeatDetails
     */
    'assignee'?: NullableSimpleUser | null;
    /**
     * 
     * @type {NullableOrganizationSimple}
     * @memberof CopilotSeatDetails
     */
    'organization'?: NullableOrganizationSimple | null;
    /**
     * 
     * @type {CopilotSeatDetailsAssigningTeam}
     * @memberof CopilotSeatDetails
     */
    'assigning_team'?: CopilotSeatDetailsAssigningTeam | null;
    /**
     * The pending cancellation date for the seat, in `YYYY-MM-DD` format. This will be null unless the assignee\'s Copilot access has been canceled during the current billing cycle. If the seat has been cancelled, this corresponds to the start of the organization\'s next billing cycle.
     * @type {string}
     * @memberof CopilotSeatDetails
     */
    'pending_cancellation_date'?: string | null;
    /**
     * Timestamp of user\'s last GitHub Copilot activity, in ISO 8601 format.
     * @type {string}
     * @memberof CopilotSeatDetails
     */
    'last_activity_at'?: string | null;
    /**
     * Last editor that was used by the user for a GitHub Copilot completion.
     * @type {string}
     * @memberof CopilotSeatDetails
     */
    'last_activity_editor'?: string | null;
    /**
     * Timestamp of when the assignee was last granted access to GitHub Copilot, in ISO 8601 format.
     * @type {string}
     * @memberof CopilotSeatDetails
     */
    'created_at': string;
    /**
     * **Closing down notice:** This field is no longer relevant and is closing down. Use the `created_at` field to determine when the assignee was last granted access to GitHub Copilot. Timestamp of when the assignee\'s GitHub Copilot access was last updated, in ISO 8601 format.
     * @type {string}
     * @memberof CopilotSeatDetails
     * @deprecated
     */
    'updated_at'?: string;
    /**
     * The Copilot plan of the organization, or the parent enterprise, when applicable.
     * @type {string}
     * @memberof CopilotSeatDetails
     */
    'plan_type'?: CopilotSeatDetailsPlanTypeEnum;
}

export const CopilotSeatDetailsPlanTypeEnum = {
    Business: 'business',
    Enterprise: 'enterprise',
    Unknown: 'unknown'
} as const;

export type CopilotSeatDetailsPlanTypeEnum = typeof CopilotSeatDetailsPlanTypeEnum[keyof typeof CopilotSeatDetailsPlanTypeEnum];

/**
 * @type CopilotSeatDetailsAssigningTeam
 * The team through which the assignee is granted access to GitHub Copilot, if applicable.
 * @export
 */
export type CopilotSeatDetailsAssigningTeam = EnterpriseTeam | Team;

/**
 * Copilot usage metrics for a given day.
 * @export
 * @interface CopilotUsageMetricsDay
 */
export interface CopilotUsageMetricsDay {
    [key: string]: any;

    /**
     * The date for which the usage metrics are aggregated, in `YYYY-MM-DD` format.
     * @type {string}
     * @memberof CopilotUsageMetricsDay
     */
    'date': string;
    /**
     * The total number of Copilot users with activity belonging to any Copilot feature, globally, for the given day. Includes passive activity such as receiving a code suggestion, as well as engagement activity such as accepting a code suggestion or prompting chat. Does not include authentication events. Is not limited to the individual features detailed on the endpoint.
     * @type {number}
     * @memberof CopilotUsageMetricsDay
     */
    'total_active_users'?: number;
    /**
     * The total number of Copilot users who engaged with any Copilot feature, for the given day. Examples include but are not limited to accepting a code suggestion, prompting Copilot chat, or triggering a PR Summary. Does not include authentication events. Is not limited to the individual features detailed on the endpoint.
     * @type {number}
     * @memberof CopilotUsageMetricsDay
     */
    'total_engaged_users'?: number;
    /**
     * 
     * @type {CopilotIdeCodeCompletions}
     * @memberof CopilotUsageMetricsDay
     */
    'copilot_ide_code_completions'?: CopilotIdeCodeCompletions | null;
    /**
     * 
     * @type {CopilotIdeChat}
     * @memberof CopilotUsageMetricsDay
     */
    'copilot_ide_chat'?: CopilotIdeChat | null;
    /**
     * 
     * @type {CopilotDotcomChat}
     * @memberof CopilotUsageMetricsDay
     */
    'copilot_dotcom_chat'?: CopilotDotcomChat | null;
    /**
     * 
     * @type {CopilotDotcomPullRequests}
     * @memberof CopilotUsageMetricsDay
     */
    'copilot_dotcom_pull_requests'?: CopilotDotcomPullRequests | null;
}
/**
 * A GitHub App that is providing a custom deployment protection rule.
 * @export
 * @interface CustomDeploymentRuleApp
 */
export interface CustomDeploymentRuleApp {
    /**
     * The unique identifier of the deployment protection rule integration.
     * @type {number}
     * @memberof CustomDeploymentRuleApp
     */
    'id': number;
    /**
     * The slugified name of the deployment protection rule integration.
     * @type {string}
     * @memberof CustomDeploymentRuleApp
     */
    'slug': string;
    /**
     * The URL for the endpoint to get details about the app.
     * @type {string}
     * @memberof CustomDeploymentRuleApp
     */
    'integration_url': string;
    /**
     * The node ID for the deployment protection rule integration.
     * @type {string}
     * @memberof CustomDeploymentRuleApp
     */
    'node_id': string;
}
/**
 * Custom property defined on an organization
 * @export
 * @interface CustomProperty
 */
export interface CustomProperty {
    /**
     * The name of the property
     * @type {string}
     * @memberof CustomProperty
     */
    'property_name': string;
    /**
     * The URL that can be used to fetch, update, or delete info about this property via the API.
     * @type {string}
     * @memberof CustomProperty
     */
    'url'?: string;
    /**
     * The source type of the property
     * @type {string}
     * @memberof CustomProperty
     */
    'source_type'?: CustomPropertySourceTypeEnum;
    /**
     * The type of the value for the property
     * @type {string}
     * @memberof CustomProperty
     */
    'value_type': CustomPropertyValueTypeEnum;
    /**
     * Whether the property is required.
     * @type {boolean}
     * @memberof CustomProperty
     */
    'required'?: boolean;
    /**
     * 
     * @type {CustomPropertyDefaultValue}
     * @memberof CustomProperty
     */
    'default_value'?: CustomPropertyDefaultValue | null;
    /**
     * Short description of the property
     * @type {string}
     * @memberof CustomProperty
     */
    'description'?: string | null;
    /**
     * An ordered list of the allowed values of the property. The property can have up to 200 allowed values.
     * @type {Array<string>}
     * @memberof CustomProperty
     */
    'allowed_values'?: Array<string> | null;
    /**
     * Who can edit the values of the property
     * @type {string}
     * @memberof CustomProperty
     */
    'values_editable_by'?: CustomPropertyValuesEditableByEnum | null;
}

export const CustomPropertySourceTypeEnum = {
    Organization: 'organization',
    Enterprise: 'enterprise'
} as const;

export type CustomPropertySourceTypeEnum = typeof CustomPropertySourceTypeEnum[keyof typeof CustomPropertySourceTypeEnum];
export const CustomPropertyValueTypeEnum = {
    String: 'string',
    SingleSelect: 'single_select',
    MultiSelect: 'multi_select',
    TrueFalse: 'true_false'
} as const;

export type CustomPropertyValueTypeEnum = typeof CustomPropertyValueTypeEnum[keyof typeof CustomPropertyValueTypeEnum];
export const CustomPropertyValuesEditableByEnum = {
    OrgActors: 'org_actors',
    OrgAndRepoActors: 'org_and_repo_actors'
} as const;

export type CustomPropertyValuesEditableByEnum = typeof CustomPropertyValuesEditableByEnum[keyof typeof CustomPropertyValuesEditableByEnum];

/**
 * @type CustomPropertyDefaultValue
 * Default value of the property
 * @export
 */
export type CustomPropertyDefaultValue = Array<string> | string;

/**
 * Custom property set payload
 * @export
 * @interface CustomPropertySetPayload
 */
export interface CustomPropertySetPayload {
    /**
     * The type of the value for the property
     * @type {string}
     * @memberof CustomPropertySetPayload
     */
    'value_type': CustomPropertySetPayloadValueTypeEnum;
    /**
     * Whether the property is required.
     * @type {boolean}
     * @memberof CustomPropertySetPayload
     */
    'required'?: boolean;
    /**
     * 
     * @type {CustomPropertyDefaultValue}
     * @memberof CustomPropertySetPayload
     */
    'default_value'?: CustomPropertyDefaultValue | null;
    /**
     * Short description of the property
     * @type {string}
     * @memberof CustomPropertySetPayload
     */
    'description'?: string | null;
    /**
     * An ordered list of the allowed values of the property. The property can have up to 200 allowed values.
     * @type {Array<string>}
     * @memberof CustomPropertySetPayload
     */
    'allowed_values'?: Array<string> | null;
    /**
     * Who can edit the values of the property
     * @type {string}
     * @memberof CustomPropertySetPayload
     */
    'values_editable_by'?: CustomPropertySetPayloadValuesEditableByEnum | null;
}

export const CustomPropertySetPayloadValueTypeEnum = {
    String: 'string',
    SingleSelect: 'single_select',
    MultiSelect: 'multi_select',
    TrueFalse: 'true_false'
} as const;

export type CustomPropertySetPayloadValueTypeEnum = typeof CustomPropertySetPayloadValueTypeEnum[keyof typeof CustomPropertySetPayloadValueTypeEnum];
export const CustomPropertySetPayloadValuesEditableByEnum = {
    OrgActors: 'org_actors',
    OrgAndRepoActors: 'org_and_repo_actors'
} as const;

export type CustomPropertySetPayloadValuesEditableByEnum = typeof CustomPropertySetPayloadValuesEditableByEnum[keyof typeof CustomPropertySetPayloadValuesEditableByEnum];

/**
 * Custom property name and associated value
 * @export
 * @interface CustomPropertyValue
 */
export interface CustomPropertyValue {
    /**
     * The name of the property
     * @type {string}
     * @memberof CustomPropertyValue
     */
    'property_name': string;
    /**
     * 
     * @type {CustomPropertyValueValue}
     * @memberof CustomPropertyValue
     */
    'value': CustomPropertyValueValue | null;
}
/**
 * @type CustomPropertyValueValue
 * The value assigned to the property
 * @export
 */
export type CustomPropertyValueValue = Array<string> | string;

/**
 * 
 * @export
 * @interface CvssSeverities
 */
export interface CvssSeverities {
    /**
     * 
     * @type {CvssSeveritiesCvssV3}
     * @memberof CvssSeverities
     */
    'cvss_v3'?: CvssSeveritiesCvssV3 | null;
    /**
     * 
     * @type {CvssSeveritiesCvssV4}
     * @memberof CvssSeverities
     */
    'cvss_v4'?: CvssSeveritiesCvssV4 | null;
}
/**
 * 
 * @export
 * @interface CvssSeveritiesCvssV3
 */
export interface CvssSeveritiesCvssV3 {
    /**
     * The CVSS 3 vector string.
     * @type {string}
     * @memberof CvssSeveritiesCvssV3
     */
    'vector_string': string | null;
    /**
     * The CVSS 3 score.
     * @type {number}
     * @memberof CvssSeveritiesCvssV3
     */
    'score': number | null;
}
/**
 * 
 * @export
 * @interface CvssSeveritiesCvssV4
 */
export interface CvssSeveritiesCvssV4 {
    /**
     * The CVSS 4 vector string.
     * @type {string}
     * @memberof CvssSeveritiesCvssV4
     */
    'vector_string': string | null;
    /**
     * The CVSS 4 score.
     * @type {number}
     * @memberof CvssSeveritiesCvssV4
     */
    'score': number | null;
}
/**
 * Demilestoned Issue Event
 * @export
 * @interface DemilestonedIssueEvent
 */
export interface DemilestonedIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof DemilestonedIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof DemilestonedIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof DemilestonedIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof DemilestonedIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof DemilestonedIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof DemilestonedIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof DemilestonedIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof DemilestonedIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof DemilestonedIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {MilestonedIssueEventMilestone}
     * @memberof DemilestonedIssueEvent
     */
    'milestone': MilestonedIssueEventMilestone;
}
/**
 * A Dependabot alert.
 * @export
 * @interface DependabotAlert
 */
export interface DependabotAlert {
    /**
     * The security alert number.
     * @type {number}
     * @memberof DependabotAlert
     */
    'number': number;
    /**
     * The state of the Dependabot alert.
     * @type {string}
     * @memberof DependabotAlert
     */
    'state': DependabotAlertStateEnum;
    /**
     * 
     * @type {DependabotAlertWithRepositoryDependency}
     * @memberof DependabotAlert
     */
    'dependency': DependabotAlertWithRepositoryDependency;
    /**
     * 
     * @type {DependabotAlertSecurityAdvisory}
     * @memberof DependabotAlert
     */
    'security_advisory': DependabotAlertSecurityAdvisory;
    /**
     * 
     * @type {DependabotAlertSecurityVulnerability}
     * @memberof DependabotAlert
     */
    'security_vulnerability': DependabotAlertSecurityVulnerability;
    /**
     * The REST API URL of the alert resource.
     * @type {string}
     * @memberof DependabotAlert
     */
    'url': string;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof DependabotAlert
     */
    'html_url': string;
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof DependabotAlert
     */
    'created_at': string;
    /**
     * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof DependabotAlert
     */
    'updated_at': string;
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof DependabotAlert
     */
    'dismissed_at': string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof DependabotAlert
     */
    'dismissed_by': NullableSimpleUser | null;
    /**
     * The reason that the alert was dismissed.
     * @type {string}
     * @memberof DependabotAlert
     */
    'dismissed_reason': DependabotAlertDismissedReasonEnum | null;
    /**
     * An optional comment associated with the alert\'s dismissal.
     * @type {string}
     * @memberof DependabotAlert
     */
    'dismissed_comment': string | null;
    /**
     * The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof DependabotAlert
     */
    'fixed_at': string | null;
    /**
     * The time that the alert was auto-dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof DependabotAlert
     */
    'auto_dismissed_at'?: string | null;
}

export const DependabotAlertStateEnum = {
    AutoDismissed: 'auto_dismissed',
    Dismissed: 'dismissed',
    Fixed: 'fixed',
    Open: 'open'
} as const;

export type DependabotAlertStateEnum = typeof DependabotAlertStateEnum[keyof typeof DependabotAlertStateEnum];
export const DependabotAlertDismissedReasonEnum = {
    FixStarted: 'fix_started',
    Inaccurate: 'inaccurate',
    NoBandwidth: 'no_bandwidth',
    NotUsed: 'not_used',
    TolerableRisk: 'tolerable_risk'
} as const;

export type DependabotAlertDismissedReasonEnum = typeof DependabotAlertDismissedReasonEnum[keyof typeof DependabotAlertDismissedReasonEnum];

/**
 * Details for the vulnerable package.
 * @export
 * @interface DependabotAlertPackage
 */
export interface DependabotAlertPackage {
    /**
     * The package\'s language or package management ecosystem.
     * @type {string}
     * @memberof DependabotAlertPackage
     */
    'ecosystem': string;
    /**
     * The unique package name within its ecosystem.
     * @type {string}
     * @memberof DependabotAlertPackage
     */
    'name': string;
}
/**
 * Details for the GitHub Security Advisory.
 * @export
 * @interface DependabotAlertSecurityAdvisory
 */
export interface DependabotAlertSecurityAdvisory {
    /**
     * The unique GitHub Security Advisory ID assigned to the advisory.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'ghsa_id': string;
    /**
     * The unique CVE ID assigned to the advisory.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'cve_id': string | null;
    /**
     * A short, plain text summary of the advisory.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'summary': string;
    /**
     * A long-form Markdown-supported description of the advisory.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'description': string;
    /**
     * Vulnerable version range information for the advisory.
     * @type {Array<DependabotAlertSecurityVulnerability>}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'vulnerabilities': Array<DependabotAlertSecurityVulnerability>;
    /**
     * The severity of the advisory.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'severity': DependabotAlertSecurityAdvisorySeverityEnum;
    /**
     * 
     * @type {DependabotAlertSecurityAdvisoryCvss}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'cvss': DependabotAlertSecurityAdvisoryCvss;
    /**
     * 
     * @type {CvssSeverities}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'cvss_severities'?: CvssSeverities | null;
    /**
     * 
     * @type {SecurityAdvisoryEpss}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'epss'?: SecurityAdvisoryEpss | null;
    /**
     * Details for the advisory pertaining to Common Weakness Enumeration.
     * @type {Array<DependabotAlertSecurityAdvisoryCwesInner>}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'cwes': Array<DependabotAlertSecurityAdvisoryCwesInner>;
    /**
     * Values that identify this advisory among security information sources.
     * @type {Array<DependabotAlertSecurityAdvisoryIdentifiersInner>}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'identifiers': Array<DependabotAlertSecurityAdvisoryIdentifiersInner>;
    /**
     * Links to additional advisory information.
     * @type {Array<DependabotAlertSecurityAdvisoryReferencesInner>}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'references': Array<DependabotAlertSecurityAdvisoryReferencesInner>;
    /**
     * The time that the advisory was published in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'published_at': string;
    /**
     * The time that the advisory was last modified in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'updated_at': string;
    /**
     * The time that the advisory was withdrawn in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisory
     */
    'withdrawn_at': string | null;
}

export const DependabotAlertSecurityAdvisorySeverityEnum = {
    Low: 'low',
    Medium: 'medium',
    High: 'high',
    Critical: 'critical'
} as const;

export type DependabotAlertSecurityAdvisorySeverityEnum = typeof DependabotAlertSecurityAdvisorySeverityEnum[keyof typeof DependabotAlertSecurityAdvisorySeverityEnum];

/**
 * Details for the advisory pertaining to the Common Vulnerability Scoring System.
 * @export
 * @interface DependabotAlertSecurityAdvisoryCvss
 */
export interface DependabotAlertSecurityAdvisoryCvss {
    /**
     * The overall CVSS score of the advisory.
     * @type {number}
     * @memberof DependabotAlertSecurityAdvisoryCvss
     */
    'score': number;
    /**
     * The full CVSS vector string for the advisory.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisoryCvss
     */
    'vector_string': string | null;
}
/**
 * A CWE weakness assigned to the advisory.
 * @export
 * @interface DependabotAlertSecurityAdvisoryCwesInner
 */
export interface DependabotAlertSecurityAdvisoryCwesInner {
    /**
     * The unique CWE ID.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisoryCwesInner
     */
    'cwe_id': string;
    /**
     * The short, plain text name of the CWE.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisoryCwesInner
     */
    'name': string;
}
/**
 * An advisory identifier.
 * @export
 * @interface DependabotAlertSecurityAdvisoryIdentifiersInner
 */
export interface DependabotAlertSecurityAdvisoryIdentifiersInner {
    /**
     * The type of advisory identifier.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisoryIdentifiersInner
     */
    'type': DependabotAlertSecurityAdvisoryIdentifiersInnerTypeEnum;
    /**
     * The value of the advisory identifer.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisoryIdentifiersInner
     */
    'value': string;
}

export const DependabotAlertSecurityAdvisoryIdentifiersInnerTypeEnum = {
    Cve: 'CVE',
    Ghsa: 'GHSA'
} as const;

export type DependabotAlertSecurityAdvisoryIdentifiersInnerTypeEnum = typeof DependabotAlertSecurityAdvisoryIdentifiersInnerTypeEnum[keyof typeof DependabotAlertSecurityAdvisoryIdentifiersInnerTypeEnum];

/**
 * A link to additional advisory information.
 * @export
 * @interface DependabotAlertSecurityAdvisoryReferencesInner
 */
export interface DependabotAlertSecurityAdvisoryReferencesInner {
    /**
     * The URL of the reference.
     * @type {string}
     * @memberof DependabotAlertSecurityAdvisoryReferencesInner
     */
    'url': string;
}
/**
 * Details pertaining to one vulnerable version range for the advisory.
 * @export
 * @interface DependabotAlertSecurityVulnerability
 */
export interface DependabotAlertSecurityVulnerability {
    /**
     * 
     * @type {DependabotAlertPackage}
     * @memberof DependabotAlertSecurityVulnerability
     */
    'package': DependabotAlertPackage;
    /**
     * The severity of the vulnerability.
     * @type {string}
     * @memberof DependabotAlertSecurityVulnerability
     */
    'severity': DependabotAlertSecurityVulnerabilitySeverityEnum;
    /**
     * Conditions that identify vulnerable versions of this vulnerability\'s package.
     * @type {string}
     * @memberof DependabotAlertSecurityVulnerability
     */
    'vulnerable_version_range': string;
    /**
     * 
     * @type {DependabotAlertSecurityVulnerabilityFirstPatchedVersion}
     * @memberof DependabotAlertSecurityVulnerability
     */
    'first_patched_version': DependabotAlertSecurityVulnerabilityFirstPatchedVersion | null;
}

export const DependabotAlertSecurityVulnerabilitySeverityEnum = {
    Low: 'low',
    Medium: 'medium',
    High: 'high',
    Critical: 'critical'
} as const;

export type DependabotAlertSecurityVulnerabilitySeverityEnum = typeof DependabotAlertSecurityVulnerabilitySeverityEnum[keyof typeof DependabotAlertSecurityVulnerabilitySeverityEnum];

/**
 * Details pertaining to the package version that patches this vulnerability.
 * @export
 * @interface DependabotAlertSecurityVulnerabilityFirstPatchedVersion
 */
export interface DependabotAlertSecurityVulnerabilityFirstPatchedVersion {
    /**
     * The package version that patches this vulnerability.
     * @type {string}
     * @memberof DependabotAlertSecurityVulnerabilityFirstPatchedVersion
     */
    'identifier': string;
}
/**
 * A Dependabot alert.
 * @export
 * @interface DependabotAlertWithRepository
 */
export interface DependabotAlertWithRepository {
    /**
     * The security alert number.
     * @type {number}
     * @memberof DependabotAlertWithRepository
     */
    'number': number;
    /**
     * The state of the Dependabot alert.
     * @type {string}
     * @memberof DependabotAlertWithRepository
     */
    'state': DependabotAlertWithRepositoryStateEnum;
    /**
     * 
     * @type {DependabotAlertWithRepositoryDependency}
     * @memberof DependabotAlertWithRepository
     */
    'dependency': DependabotAlertWithRepositoryDependency;
    /**
     * 
     * @type {DependabotAlertSecurityAdvisory}
     * @memberof DependabotAlertWithRepository
     */
    'security_advisory': DependabotAlertSecurityAdvisory;
    /**
     * 
     * @type {DependabotAlertSecurityVulnerability}
     * @memberof DependabotAlertWithRepository
     */
    'security_vulnerability': DependabotAlertSecurityVulnerability;
    /**
     * The REST API URL of the alert resource.
     * @type {string}
     * @memberof DependabotAlertWithRepository
     */
    'url': string;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof DependabotAlertWithRepository
     */
    'html_url': string;
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof DependabotAlertWithRepository
     */
    'created_at': string;
    /**
     * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof DependabotAlertWithRepository
     */
    'updated_at': string;
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof DependabotAlertWithRepository
     */
    'dismissed_at': string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof DependabotAlertWithRepository
     */
    'dismissed_by': NullableSimpleUser | null;
    /**
     * The reason that the alert was dismissed.
     * @type {string}
     * @memberof DependabotAlertWithRepository
     */
    'dismissed_reason': DependabotAlertWithRepositoryDismissedReasonEnum | null;
    /**
     * An optional comment associated with the alert\'s dismissal.
     * @type {string}
     * @memberof DependabotAlertWithRepository
     */
    'dismissed_comment': string | null;
    /**
     * The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof DependabotAlertWithRepository
     */
    'fixed_at': string | null;
    /**
     * The time that the alert was auto-dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof DependabotAlertWithRepository
     */
    'auto_dismissed_at'?: string | null;
    /**
     * 
     * @type {SimpleRepository}
     * @memberof DependabotAlertWithRepository
     */
    'repository': SimpleRepository;
}

export const DependabotAlertWithRepositoryStateEnum = {
    AutoDismissed: 'auto_dismissed',
    Dismissed: 'dismissed',
    Fixed: 'fixed',
    Open: 'open'
} as const;

export type DependabotAlertWithRepositoryStateEnum = typeof DependabotAlertWithRepositoryStateEnum[keyof typeof DependabotAlertWithRepositoryStateEnum];
export const DependabotAlertWithRepositoryDismissedReasonEnum = {
    FixStarted: 'fix_started',
    Inaccurate: 'inaccurate',
    NoBandwidth: 'no_bandwidth',
    NotUsed: 'not_used',
    TolerableRisk: 'tolerable_risk'
} as const;

export type DependabotAlertWithRepositoryDismissedReasonEnum = typeof DependabotAlertWithRepositoryDismissedReasonEnum[keyof typeof DependabotAlertWithRepositoryDismissedReasonEnum];

/**
 * Details for the vulnerable dependency.
 * @export
 * @interface DependabotAlertWithRepositoryDependency
 */
export interface DependabotAlertWithRepositoryDependency {
    /**
     * 
     * @type {DependabotAlertPackage}
     * @memberof DependabotAlertWithRepositoryDependency
     */
    'package'?: DependabotAlertPackage;
    /**
     * The full path to the dependency manifest file, relative to the root of the repository.
     * @type {string}
     * @memberof DependabotAlertWithRepositoryDependency
     */
    'manifest_path'?: string;
    /**
     * The execution scope of the vulnerable dependency.
     * @type {string}
     * @memberof DependabotAlertWithRepositoryDependency
     */
    'scope'?: DependabotAlertWithRepositoryDependencyScopeEnum | null;
    /**
     * The vulnerable dependency\'s relationship to your project.  > [!NOTE] > We are rolling out support for dependency relationship across ecosystems. This value will be \"unknown\" for all dependencies in unsupported ecosystems. 
     * @type {string}
     * @memberof DependabotAlertWithRepositoryDependency
     */
    'relationship'?: DependabotAlertWithRepositoryDependencyRelationshipEnum | null;
}

export const DependabotAlertWithRepositoryDependencyScopeEnum = {
    Development: 'development',
    Runtime: 'runtime'
} as const;

export type DependabotAlertWithRepositoryDependencyScopeEnum = typeof DependabotAlertWithRepositoryDependencyScopeEnum[keyof typeof DependabotAlertWithRepositoryDependencyScopeEnum];
export const DependabotAlertWithRepositoryDependencyRelationshipEnum = {
    Unknown: 'unknown',
    Direct: 'direct',
    Transitive: 'transitive'
} as const;

export type DependabotAlertWithRepositoryDependencyRelationshipEnum = typeof DependabotAlertWithRepositoryDependencyRelationshipEnum[keyof typeof DependabotAlertWithRepositoryDependencyRelationshipEnum];

/**
 * The public key used for setting Dependabot Secrets.
 * @export
 * @interface DependabotPublicKey
 */
export interface DependabotPublicKey {
    /**
     * The identifier for the key.
     * @type {string}
     * @memberof DependabotPublicKey
     */
    'key_id': string;
    /**
     * The Base64 encoded public key.
     * @type {string}
     * @memberof DependabotPublicKey
     */
    'key': string;
}
/**
 * Information about repositories that Dependabot is able to access in an organization
 * @export
 * @interface DependabotRepositoryAccessDetails
 */
export interface DependabotRepositoryAccessDetails {
    /**
     * The default repository access level for Dependabot updates.
     * @type {string}
     * @memberof DependabotRepositoryAccessDetails
     */
    'default_level'?: DependabotRepositoryAccessDetailsDefaultLevelEnum | null;
    /**
     * 
     * @type {Array<SimpleRepository>}
     * @memberof DependabotRepositoryAccessDetails
     */
    'accessible_repositories'?: Array<SimpleRepository>;
}

export const DependabotRepositoryAccessDetailsDefaultLevelEnum = {
    Public: 'public',
    Internal: 'internal'
} as const;

export type DependabotRepositoryAccessDetailsDefaultLevelEnum = typeof DependabotRepositoryAccessDetailsDefaultLevelEnum[keyof typeof DependabotRepositoryAccessDetailsDefaultLevelEnum];

/**
 * Set secrets for Dependabot.
 * @export
 * @interface DependabotSecret
 */
export interface DependabotSecret {
    /**
     * The name of the secret.
     * @type {string}
     * @memberof DependabotSecret
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof DependabotSecret
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof DependabotSecret
     */
    'updated_at': string;
}
/**
 * 
 * @export
 * @interface Dependency
 */
export interface Dependency {
    /**
     * Package-url (PURL) of dependency. See https://github.com/package-url/purl-spec for more details.
     * @type {string}
     * @memberof Dependency
     */
    'package_url'?: string;
    /**
     * User-defined metadata to store domain-specific information limited to 8 keys with scalar values.
     * @type {{ [key: string]: MetadataValue; }}
     * @memberof Dependency
     */
    'metadata'?: { [key: string]: MetadataValue; };
    /**
     * A notation of whether a dependency is requested directly by this manifest or is a dependency of another dependency.
     * @type {string}
     * @memberof Dependency
     */
    'relationship'?: DependencyRelationshipEnum;
    /**
     * A notation of whether the dependency is required for the primary build artifact (runtime) or is only used for development. Future versions of this specification may allow for more granular scopes.
     * @type {string}
     * @memberof Dependency
     */
    'scope'?: DependencyScopeEnum;
    /**
     * Array of package-url (PURLs) of direct child dependencies.
     * @type {Array<string>}
     * @memberof Dependency
     */
    'dependencies'?: Array<string>;
}

export const DependencyRelationshipEnum = {
    Direct: 'direct',
    Indirect: 'indirect'
} as const;

export type DependencyRelationshipEnum = typeof DependencyRelationshipEnum[keyof typeof DependencyRelationshipEnum];
export const DependencyScopeEnum = {
    Runtime: 'runtime',
    Development: 'development'
} as const;

export type DependencyScopeEnum = typeof DependencyScopeEnum[keyof typeof DependencyScopeEnum];

/**
 * 
 * @export
 * @interface DependencyGraphDiffInner
 */
export interface DependencyGraphDiffInner {
    /**
     * 
     * @type {string}
     * @memberof DependencyGraphDiffInner
     */
    'change_type': DependencyGraphDiffInnerChangeTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof DependencyGraphDiffInner
     */
    'manifest': string;
    /**
     * 
     * @type {string}
     * @memberof DependencyGraphDiffInner
     */
    'ecosystem': string;
    /**
     * 
     * @type {string}
     * @memberof DependencyGraphDiffInner
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof DependencyGraphDiffInner
     */
    'version': string;
    /**
     * 
     * @type {string}
     * @memberof DependencyGraphDiffInner
     */
    'package_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof DependencyGraphDiffInner
     */
    'license': string | null;
    /**
     * 
     * @type {string}
     * @memberof DependencyGraphDiffInner
     */
    'source_repository_url': string | null;
    /**
     * 
     * @type {Array<DependencyGraphDiffInnerVulnerabilitiesInner>}
     * @memberof DependencyGraphDiffInner
     */
    'vulnerabilities': Array<DependencyGraphDiffInnerVulnerabilitiesInner>;
    /**
     * Where the dependency is utilized. `development` means that the dependency is only utilized in the development environment. `runtime` means that the dependency is utilized at runtime and in the development environment.
     * @type {string}
     * @memberof DependencyGraphDiffInner
     */
    'scope': DependencyGraphDiffInnerScopeEnum;
}

export const DependencyGraphDiffInnerChangeTypeEnum = {
    Added: 'added',
    Removed: 'removed'
} as const;

export type DependencyGraphDiffInnerChangeTypeEnum = typeof DependencyGraphDiffInnerChangeTypeEnum[keyof typeof DependencyGraphDiffInnerChangeTypeEnum];
export const DependencyGraphDiffInnerScopeEnum = {
    Unknown: 'unknown',
    Runtime: 'runtime',
    Development: 'development'
} as const;

export type DependencyGraphDiffInnerScopeEnum = typeof DependencyGraphDiffInnerScopeEnum[keyof typeof DependencyGraphDiffInnerScopeEnum];

/**
 * 
 * @export
 * @interface DependencyGraphDiffInnerVulnerabilitiesInner
 */
export interface DependencyGraphDiffInnerVulnerabilitiesInner {
    /**
     * 
     * @type {string}
     * @memberof DependencyGraphDiffInnerVulnerabilitiesInner
     */
    'severity': string;
    /**
     * 
     * @type {string}
     * @memberof DependencyGraphDiffInnerVulnerabilitiesInner
     */
    'advisory_ghsa_id': string;
    /**
     * 
     * @type {string}
     * @memberof DependencyGraphDiffInnerVulnerabilitiesInner
     */
    'advisory_summary': string;
    /**
     * 
     * @type {string}
     * @memberof DependencyGraphDiffInnerVulnerabilitiesInner
     */
    'advisory_url': string;
}
/**
 * A schema for the SPDX JSON format returned by the Dependency Graph.
 * @export
 * @interface DependencyGraphSpdxSbom
 */
export interface DependencyGraphSpdxSbom {
    /**
     * 
     * @type {DependencyGraphSpdxSbomSbom}
     * @memberof DependencyGraphSpdxSbom
     */
    'sbom': DependencyGraphSpdxSbomSbom;
}
/**
 * 
 * @export
 * @interface DependencyGraphSpdxSbomSbom
 */
export interface DependencyGraphSpdxSbomSbom {
    /**
     * The SPDX identifier for the SPDX document.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbom
     */
    'SPDXID': string;
    /**
     * The version of the SPDX specification that this document conforms to.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbom
     */
    'spdxVersion': string;
    /**
     * An optional comment about the SPDX document.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbom
     */
    'comment'?: string;
    /**
     * 
     * @type {DependencyGraphSpdxSbomSbomCreationInfo}
     * @memberof DependencyGraphSpdxSbomSbom
     */
    'creationInfo': DependencyGraphSpdxSbomSbomCreationInfo;
    /**
     * The name of the SPDX document.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbom
     */
    'name': string;
    /**
     * The license under which the SPDX document is licensed.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbom
     */
    'dataLicense': string;
    /**
     * The namespace for the SPDX document.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbom
     */
    'documentNamespace': string;
    /**
     * 
     * @type {Array<DependencyGraphSpdxSbomSbomPackagesInner>}
     * @memberof DependencyGraphSpdxSbomSbom
     */
    'packages': Array<DependencyGraphSpdxSbomSbomPackagesInner>;
    /**
     * 
     * @type {Array<DependencyGraphSpdxSbomSbomRelationshipsInner>}
     * @memberof DependencyGraphSpdxSbomSbom
     */
    'relationships'?: Array<DependencyGraphSpdxSbomSbomRelationshipsInner>;
}
/**
 * 
 * @export
 * @interface DependencyGraphSpdxSbomSbomCreationInfo
 */
export interface DependencyGraphSpdxSbomSbomCreationInfo {
    /**
     * The date and time the SPDX document was created.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomCreationInfo
     */
    'created': string;
    /**
     * The tools that were used to generate the SPDX document.
     * @type {Array<string>}
     * @memberof DependencyGraphSpdxSbomSbomCreationInfo
     */
    'creators': Array<string>;
}
/**
 * 
 * @export
 * @interface DependencyGraphSpdxSbomSbomPackagesInner
 */
export interface DependencyGraphSpdxSbomSbomPackagesInner {
    /**
     * A unique SPDX identifier for the package.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomPackagesInner
     */
    'SPDXID'?: string;
    /**
     * The name of the package.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomPackagesInner
     */
    'name'?: string;
    /**
     * The version of the package. If the package does not have an exact version specified, a version range is given.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomPackagesInner
     */
    'versionInfo'?: string;
    /**
     * The location where the package can be downloaded, or NOASSERTION if this has not been determined.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomPackagesInner
     */
    'downloadLocation'?: string;
    /**
     * Whether the package\'s file content has been subjected to analysis during the creation of the SPDX document.
     * @type {boolean}
     * @memberof DependencyGraphSpdxSbomSbomPackagesInner
     */
    'filesAnalyzed'?: boolean;
    /**
     * The license of the package as determined while creating the SPDX document.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomPackagesInner
     */
    'licenseConcluded'?: string;
    /**
     * The license of the package as declared by its author, or NOASSERTION if this information was not available when the SPDX document was created.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomPackagesInner
     */
    'licenseDeclared'?: string;
    /**
     * The distribution source of this package, or NOASSERTION if this was not determined.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomPackagesInner
     */
    'supplier'?: string;
    /**
     * The copyright holders of the package, and any dates present with those notices, if available.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomPackagesInner
     */
    'copyrightText'?: string;
    /**
     * 
     * @type {Array<DependencyGraphSpdxSbomSbomPackagesInnerExternalRefsInner>}
     * @memberof DependencyGraphSpdxSbomSbomPackagesInner
     */
    'externalRefs'?: Array<DependencyGraphSpdxSbomSbomPackagesInnerExternalRefsInner>;
}
/**
 * 
 * @export
 * @interface DependencyGraphSpdxSbomSbomPackagesInnerExternalRefsInner
 */
export interface DependencyGraphSpdxSbomSbomPackagesInnerExternalRefsInner {
    /**
     * The category of reference to an external resource this reference refers to.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomPackagesInnerExternalRefsInner
     */
    'referenceCategory': string;
    /**
     * A locator for the particular external resource this reference refers to.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomPackagesInnerExternalRefsInner
     */
    'referenceLocator': string;
    /**
     * The category of reference to an external resource this reference refers to.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomPackagesInnerExternalRefsInner
     */
    'referenceType': string;
}
/**
 * 
 * @export
 * @interface DependencyGraphSpdxSbomSbomRelationshipsInner
 */
export interface DependencyGraphSpdxSbomSbomRelationshipsInner {
    /**
     * The type of relationship between the two SPDX elements.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomRelationshipsInner
     */
    'relationshipType'?: string;
    /**
     * The SPDX identifier of the package that is the source of the relationship.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomRelationshipsInner
     */
    'spdxElementId'?: string;
    /**
     * The SPDX identifier of the package that is the target of the relationship.
     * @type {string}
     * @memberof DependencyGraphSpdxSbomSbomRelationshipsInner
     */
    'relatedSpdxElement'?: string;
}
/**
 * An SSH key granting access to a single repository.
 * @export
 * @interface DeployKey
 */
export interface DeployKey {
    /**
     * 
     * @type {number}
     * @memberof DeployKey
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof DeployKey
     */
    'key': string;
    /**
     * 
     * @type {string}
     * @memberof DeployKey
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof DeployKey
     */
    'title': string;
    /**
     * 
     * @type {boolean}
     * @memberof DeployKey
     */
    'verified': boolean;
    /**
     * 
     * @type {string}
     * @memberof DeployKey
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof DeployKey
     */
    'read_only': boolean;
    /**
     * 
     * @type {string}
     * @memberof DeployKey
     */
    'added_by'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DeployKey
     */
    'last_used'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof DeployKey
     */
    'enabled'?: boolean;
}
/**
 * The [deployment](https://docs.github.com/rest/deployments/deployments#list-deployments).
 * @export
 * @interface Deployment
 */
export interface Deployment {
    /**
     * 
     * @type {string}
     * @memberof Deployment
     */
    'created_at': string;
    /**
     * 
     * @type {User2}
     * @memberof Deployment
     */
    'creator': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof Deployment
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof Deployment
     */
    'environment': string;
    /**
     * 
     * @type {number}
     * @memberof Deployment
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Deployment
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Deployment
     */
    'original_environment': string;
    /**
     * 
     * @type {DeploymentPayload}
     * @memberof Deployment
     */
    'payload': DeploymentPayload;
    /**
     * 
     * @type {App5}
     * @memberof Deployment
     */
    'performed_via_github_app'?: App5 | null;
    /**
     * 
     * @type {boolean}
     * @memberof Deployment
     */
    'production_environment'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Deployment
     */
    'ref': string;
    /**
     * 
     * @type {string}
     * @memberof Deployment
     */
    'repository_url': string;
    /**
     * 
     * @type {string}
     * @memberof Deployment
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof Deployment
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Deployment
     */
    'task': string;
    /**
     * 
     * @type {boolean}
     * @memberof Deployment
     */
    'transient_environment'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Deployment
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Deployment
     */
    'url': string;
}
/**
 * The [deployment](https://docs.github.com/rest/deployments/deployments#list-deployments).
 * @export
 * @interface Deployment1
 */
export interface Deployment1 {
    /**
     * 
     * @type {string}
     * @memberof Deployment1
     */
    'created_at': string;
    /**
     * 
     * @type {User2}
     * @memberof Deployment1
     */
    'creator': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof Deployment1
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof Deployment1
     */
    'environment': string;
    /**
     * 
     * @type {number}
     * @memberof Deployment1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Deployment1
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Deployment1
     */
    'original_environment': string;
    /**
     * 
     * @type {Deployment1Payload}
     * @memberof Deployment1
     */
    'payload': Deployment1Payload | null;
    /**
     * 
     * @type {App6}
     * @memberof Deployment1
     */
    'performed_via_github_app'?: App6 | null;
    /**
     * 
     * @type {boolean}
     * @memberof Deployment1
     */
    'production_environment'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Deployment1
     */
    'ref': string;
    /**
     * 
     * @type {string}
     * @memberof Deployment1
     */
    'repository_url': string;
    /**
     * 
     * @type {string}
     * @memberof Deployment1
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof Deployment1
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Deployment1
     */
    'task': string;
    /**
     * 
     * @type {boolean}
     * @memberof Deployment1
     */
    'transient_environment'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Deployment1
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Deployment1
     */
    'url': string;
}
/**
 * @type Deployment1Payload
 * @export
 */
export type Deployment1Payload = object | string;

/**
 * Details of a deployment branch or tag policy.
 * @export
 * @interface DeploymentBranchPolicy
 */
export interface DeploymentBranchPolicy {
    /**
     * The unique identifier of the branch or tag policy.
     * @type {number}
     * @memberof DeploymentBranchPolicy
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentBranchPolicy
     */
    'node_id'?: string;
    /**
     * The name pattern that branches or tags must match in order to deploy to the environment.
     * @type {string}
     * @memberof DeploymentBranchPolicy
     */
    'name'?: string;
    /**
     * Whether this rule targets a branch or tag.
     * @type {string}
     * @memberof DeploymentBranchPolicy
     */
    'type'?: DeploymentBranchPolicyTypeEnum;
}

export const DeploymentBranchPolicyTypeEnum = {
    Branch: 'branch',
    Tag: 'tag'
} as const;

export type DeploymentBranchPolicyTypeEnum = typeof DeploymentBranchPolicyTypeEnum[keyof typeof DeploymentBranchPolicyTypeEnum];

/**
 * 
 * @export
 * @interface DeploymentBranchPolicyNamePattern
 */
export interface DeploymentBranchPolicyNamePattern {
    /**
     * The name pattern that branches must match in order to deploy to the environment.  Wildcard characters will not match `/`. For example, to match branches that begin with `release/` and contain an additional single slash, use `release/_*`. For more information about pattern matching syntax, see the [Ruby File.fnmatch documentation](https://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch).
     * @type {string}
     * @memberof DeploymentBranchPolicyNamePattern
     */
    'name': string;
}
/**
 * 
 * @export
 * @interface DeploymentBranchPolicyNamePatternWithType
 */
export interface DeploymentBranchPolicyNamePatternWithType {
    /**
     * The name pattern that branches or tags must match in order to deploy to the environment.  Wildcard characters will not match `/`. For example, to match branches that begin with `release/` and contain an additional single slash, use `release/_*`. For more information about pattern matching syntax, see the [Ruby File.fnmatch documentation](https://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch).
     * @type {string}
     * @memberof DeploymentBranchPolicyNamePatternWithType
     */
    'name': string;
    /**
     * Whether this rule targets a branch or tag
     * @type {string}
     * @memberof DeploymentBranchPolicyNamePatternWithType
     */
    'type'?: DeploymentBranchPolicyNamePatternWithTypeTypeEnum;
}

export const DeploymentBranchPolicyNamePatternWithTypeTypeEnum = {
    Branch: 'branch',
    Tag: 'tag'
} as const;

export type DeploymentBranchPolicyNamePatternWithTypeTypeEnum = typeof DeploymentBranchPolicyNamePatternWithTypeTypeEnum[keyof typeof DeploymentBranchPolicyNamePatternWithTypeTypeEnum];

/**
 * The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`.
 * @export
 * @interface DeploymentBranchPolicySettings
 */
export interface DeploymentBranchPolicySettings {
    /**
     * Whether only branches with branch protection rules can deploy to this environment. If `protected_branches` is `true`, `custom_branch_policies` must be `false`; if `protected_branches` is `false`, `custom_branch_policies` must be `true`.
     * @type {boolean}
     * @memberof DeploymentBranchPolicySettings
     */
    'protected_branches': boolean;
    /**
     * Whether only branches that match the specified name patterns can deploy to this environment.  If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if `custom_branch_policies` is `false`, `protected_branches` must be `true`.
     * @type {boolean}
     * @memberof DeploymentBranchPolicySettings
     */
    'custom_branch_policies': boolean;
}
/**
 * @type DeploymentPayload
 * @export
 */
export type DeploymentPayload = object | string;

/**
 * Deployment protection rule
 * @export
 * @interface DeploymentProtectionRule
 */
export interface DeploymentProtectionRule {
    /**
     * The unique identifier for the deployment protection rule.
     * @type {number}
     * @memberof DeploymentProtectionRule
     */
    'id': number;
    /**
     * The node ID for the deployment protection rule.
     * @type {string}
     * @memberof DeploymentProtectionRule
     */
    'node_id': string;
    /**
     * Whether the deployment protection rule is enabled for the environment.
     * @type {boolean}
     * @memberof DeploymentProtectionRule
     */
    'enabled': boolean;
    /**
     * 
     * @type {CustomDeploymentRuleApp}
     * @memberof DeploymentProtectionRule
     */
    'app': CustomDeploymentRuleApp;
}
/**
 * The type of reviewer.
 * @export
 * @enum {string}
 */

export const DeploymentReviewerType = {
    User: 'User',
    Team: 'Team'
} as const;

export type DeploymentReviewerType = typeof DeploymentReviewerType[keyof typeof DeploymentReviewerType];


/**
 * A deployment created as the result of an Actions check run from a workflow that references an environment
 * @export
 * @interface DeploymentSimple
 */
export interface DeploymentSimple {
    /**
     * 
     * @type {string}
     * @memberof DeploymentSimple
     */
    'url': string;
    /**
     * Unique identifier of the deployment
     * @type {number}
     * @memberof DeploymentSimple
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentSimple
     */
    'node_id': string;
    /**
     * Parameter to specify a task to execute
     * @type {string}
     * @memberof DeploymentSimple
     */
    'task': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentSimple
     */
    'original_environment'?: string;
    /**
     * Name for the target deployment environment.
     * @type {string}
     * @memberof DeploymentSimple
     */
    'environment': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentSimple
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentSimple
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentSimple
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentSimple
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentSimple
     */
    'repository_url': string;
    /**
     * Specifies if the given environment is will no longer exist at some point in the future. Default: false.
     * @type {boolean}
     * @memberof DeploymentSimple
     */
    'transient_environment'?: boolean;
    /**
     * Specifies if the given environment is one that end-users directly interact with. Default: false.
     * @type {boolean}
     * @memberof DeploymentSimple
     */
    'production_environment'?: boolean;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof DeploymentSimple
     */
    'performed_via_github_app'?: NullableIntegration | null;
}
/**
 * The status of a deployment.
 * @export
 * @interface DeploymentStatus
 */
export interface DeploymentStatus {
    /**
     * 
     * @type {string}
     * @memberof DeploymentStatus
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentStatus
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentStatus
     */
    'node_id': string;
    /**
     * The state of the status.
     * @type {string}
     * @memberof DeploymentStatus
     */
    'state': DeploymentStatusStateEnum;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof DeploymentStatus
     */
    'creator': NullableSimpleUser | null;
    /**
     * A short description of the status.
     * @type {string}
     * @memberof DeploymentStatus
     */
    'description': string;
    /**
     * The environment of the deployment that the status is for.
     * @type {string}
     * @memberof DeploymentStatus
     */
    'environment'?: string;
    /**
     * Closing down notice: the URL to associate with this status.
     * @type {string}
     * @memberof DeploymentStatus
     */
    'target_url': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentStatus
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentStatus
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentStatus
     */
    'deployment_url': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentStatus
     */
    'repository_url': string;
    /**
     * The URL for accessing your environment.
     * @type {string}
     * @memberof DeploymentStatus
     */
    'environment_url'?: string;
    /**
     * The URL to associate with this status.
     * @type {string}
     * @memberof DeploymentStatus
     */
    'log_url'?: string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof DeploymentStatus
     */
    'performed_via_github_app'?: NullableIntegration | null;
}

export const DeploymentStatusStateEnum = {
    Error: 'error',
    Failure: 'failure',
    Inactive: 'inactive',
    Pending: 'pending',
    Success: 'success',
    Queued: 'queued',
    InProgress: 'in_progress'
} as const;

export type DeploymentStatusStateEnum = typeof DeploymentStatusStateEnum[keyof typeof DeploymentStatusStateEnum];

/**
 * 
 * @export
 * @interface DeploymentWorkflowRun
 */
export interface DeploymentWorkflowRun {
    /**
     * 
     * @type {User2}
     * @memberof DeploymentWorkflowRun
     */
    'actor': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'artifacts_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'cancel_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun
     */
    'check_suite_id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'check_suite_node_id': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'check_suite_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'conclusion': DeploymentWorkflowRunConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'display_title': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'head_branch': string;
    /**
     * 
     * @type {any}
     * @memberof DeploymentWorkflowRun
     */
    'head_commit'?: any | null;
    /**
     * 
     * @type {DeploymentWorkflowRunHeadRepository}
     * @memberof DeploymentWorkflowRun
     */
    'head_repository'?: DeploymentWorkflowRunHeadRepository;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'jobs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'logs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'path': string;
    /**
     * 
     * @type {any}
     * @memberof DeploymentWorkflowRun
     */
    'previous_attempt_url'?: any | null;
    /**
     * 
     * @type {Array<CheckRunPullRequest>}
     * @memberof DeploymentWorkflowRun
     */
    'pull_requests': Array<CheckRunPullRequest>;
    /**
     * 
     * @type {Array<DeploymentWorkflowRunReferencedWorkflowsInner>}
     * @memberof DeploymentWorkflowRun
     */
    'referenced_workflows'?: Array<DeploymentWorkflowRunReferencedWorkflowsInner> | null;
    /**
     * 
     * @type {DeploymentWorkflowRunHeadRepository}
     * @memberof DeploymentWorkflowRun
     */
    'repository'?: DeploymentWorkflowRunHeadRepository;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'rerun_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun
     */
    'run_attempt': number;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun
     */
    'run_number': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'run_started_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'status': DeploymentWorkflowRunStatusEnum;
    /**
     * 
     * @type {User2}
     * @memberof DeploymentWorkflowRun
     */
    'triggering_actor'?: User2 | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun
     */
    'workflow_id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun
     */
    'workflow_url'?: string;
}

export const DeploymentWorkflowRunConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required',
    Stale: 'stale'
} as const;

export type DeploymentWorkflowRunConclusionEnum = typeof DeploymentWorkflowRunConclusionEnum[keyof typeof DeploymentWorkflowRunConclusionEnum];
export const DeploymentWorkflowRunStatusEnum = {
    Requested: 'requested',
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued',
    Waiting: 'waiting',
    Pending: 'pending'
} as const;

export type DeploymentWorkflowRunStatusEnum = typeof DeploymentWorkflowRunStatusEnum[keyof typeof DeploymentWorkflowRunStatusEnum];

/**
 * 
 * @export
 * @interface DeploymentWorkflowRun1
 */
export interface DeploymentWorkflowRun1 {
    /**
     * 
     * @type {User2}
     * @memberof DeploymentWorkflowRun1
     */
    'actor': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'artifacts_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'cancel_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun1
     */
    'check_suite_id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'check_suite_node_id': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'check_suite_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'conclusion': DeploymentWorkflowRun1ConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'display_title': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'head_branch': string;
    /**
     * 
     * @type {object}
     * @memberof DeploymentWorkflowRun1
     */
    'head_commit'?: object | null;
    /**
     * 
     * @type {DeploymentWorkflowRun1HeadRepository}
     * @memberof DeploymentWorkflowRun1
     */
    'head_repository'?: DeploymentWorkflowRun1HeadRepository;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'jobs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'logs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'previous_attempt_url'?: string | null;
    /**
     * 
     * @type {Array<CheckRunPullRequest>}
     * @memberof DeploymentWorkflowRun1
     */
    'pull_requests': Array<CheckRunPullRequest>;
    /**
     * 
     * @type {Array<DeploymentWorkflowRunReferencedWorkflowsInner>}
     * @memberof DeploymentWorkflowRun1
     */
    'referenced_workflows'?: Array<DeploymentWorkflowRunReferencedWorkflowsInner> | null;
    /**
     * 
     * @type {DeploymentWorkflowRun1HeadRepository}
     * @memberof DeploymentWorkflowRun1
     */
    'repository'?: DeploymentWorkflowRun1HeadRepository;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'rerun_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun1
     */
    'run_attempt': number;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun1
     */
    'run_number': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'run_started_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'status': DeploymentWorkflowRun1StatusEnum;
    /**
     * 
     * @type {User2}
     * @memberof DeploymentWorkflowRun1
     */
    'triggering_actor': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun1
     */
    'workflow_id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1
     */
    'workflow_url'?: string;
}

export const DeploymentWorkflowRun1ConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required',
    Stale: 'stale'
} as const;

export type DeploymentWorkflowRun1ConclusionEnum = typeof DeploymentWorkflowRun1ConclusionEnum[keyof typeof DeploymentWorkflowRun1ConclusionEnum];
export const DeploymentWorkflowRun1StatusEnum = {
    Requested: 'requested',
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued',
    Waiting: 'waiting',
    Pending: 'pending'
} as const;

export type DeploymentWorkflowRun1StatusEnum = typeof DeploymentWorkflowRun1StatusEnum[keyof typeof DeploymentWorkflowRun1StatusEnum];

/**
 * 
 * @export
 * @interface DeploymentWorkflowRun1HeadRepository
 */
export interface DeploymentWorkflowRun1HeadRepository {
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'archive_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'assignees_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'blobs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'branches_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'collaborators_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'comments_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'commits_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'compare_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'contents_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'contributors_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'deployments_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'description'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'downloads_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'events_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'fork'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'forks_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'full_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'git_commits_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'git_refs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'git_tags_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'hooks_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'issue_comment_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'issue_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'issues_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'keys_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'labels_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'languages_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'merges_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'milestones_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'notifications_url'?: string;
    /**
     * 
     * @type {WebhooksSponsorshipMaintainer}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'owner'?: WebhooksSponsorshipMaintainer;
    /**
     * 
     * @type {boolean}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'private'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'pulls_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'releases_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'stargazers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'statuses_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'subscribers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'subscription_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'tags_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'teams_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'trees_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun1HeadRepository
     */
    'url'?: string;
}
/**
 * 
 * @export
 * @interface DeploymentWorkflowRun2
 */
export interface DeploymentWorkflowRun2 {
    /**
     * 
     * @type {User2}
     * @memberof DeploymentWorkflowRun2
     */
    'actor': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'artifacts_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'cancel_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun2
     */
    'check_suite_id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'check_suite_node_id': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'check_suite_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'conclusion': DeploymentWorkflowRun2ConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'head_branch': string;
    /**
     * 
     * @type {object}
     * @memberof DeploymentWorkflowRun2
     */
    'head_commit'?: object | null;
    /**
     * 
     * @type {DeploymentWorkflowRun1HeadRepository}
     * @memberof DeploymentWorkflowRun2
     */
    'head_repository'?: DeploymentWorkflowRun1HeadRepository;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun2
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'jobs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'logs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'previous_attempt_url'?: string | null;
    /**
     * 
     * @type {Array<CheckRunPullRequest>}
     * @memberof DeploymentWorkflowRun2
     */
    'pull_requests': Array<CheckRunPullRequest>;
    /**
     * 
     * @type {Array<DeploymentWorkflowRunReferencedWorkflowsInner>}
     * @memberof DeploymentWorkflowRun2
     */
    'referenced_workflows'?: Array<DeploymentWorkflowRunReferencedWorkflowsInner> | null;
    /**
     * 
     * @type {DeploymentWorkflowRun1HeadRepository}
     * @memberof DeploymentWorkflowRun2
     */
    'repository'?: DeploymentWorkflowRun1HeadRepository;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'rerun_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun2
     */
    'run_attempt': number;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun2
     */
    'run_number': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'run_started_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'status': DeploymentWorkflowRun2StatusEnum;
    /**
     * 
     * @type {User2}
     * @memberof DeploymentWorkflowRun2
     */
    'triggering_actor': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun2
     */
    'workflow_id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'workflow_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun2
     */
    'display_title': string;
}

export const DeploymentWorkflowRun2ConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required',
    Stale: 'stale'
} as const;

export type DeploymentWorkflowRun2ConclusionEnum = typeof DeploymentWorkflowRun2ConclusionEnum[keyof typeof DeploymentWorkflowRun2ConclusionEnum];
export const DeploymentWorkflowRun2StatusEnum = {
    Requested: 'requested',
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued',
    Waiting: 'waiting'
} as const;

export type DeploymentWorkflowRun2StatusEnum = typeof DeploymentWorkflowRun2StatusEnum[keyof typeof DeploymentWorkflowRun2StatusEnum];

/**
 * 
 * @export
 * @interface DeploymentWorkflowRun3
 */
export interface DeploymentWorkflowRun3 {
    /**
     * 
     * @type {User2}
     * @memberof DeploymentWorkflowRun3
     */
    'actor': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'artifacts_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'cancel_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun3
     */
    'check_suite_id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'check_suite_node_id': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'check_suite_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'conclusion': DeploymentWorkflowRun3ConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'head_branch': string;
    /**
     * 
     * @type {object}
     * @memberof DeploymentWorkflowRun3
     */
    'head_commit'?: object | null;
    /**
     * 
     * @type {DeploymentWorkflowRun1HeadRepository}
     * @memberof DeploymentWorkflowRun3
     */
    'head_repository'?: DeploymentWorkflowRun1HeadRepository;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun3
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'jobs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'logs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'previous_attempt_url'?: string | null;
    /**
     * 
     * @type {Array<CheckRunPullRequest>}
     * @memberof DeploymentWorkflowRun3
     */
    'pull_requests': Array<CheckRunPullRequest>;
    /**
     * 
     * @type {Array<DeploymentWorkflowRunReferencedWorkflowsInner>}
     * @memberof DeploymentWorkflowRun3
     */
    'referenced_workflows'?: Array<DeploymentWorkflowRunReferencedWorkflowsInner> | null;
    /**
     * 
     * @type {DeploymentWorkflowRun1HeadRepository}
     * @memberof DeploymentWorkflowRun3
     */
    'repository'?: DeploymentWorkflowRun1HeadRepository;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'rerun_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun3
     */
    'run_attempt': number;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun3
     */
    'run_number': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'run_started_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'status': DeploymentWorkflowRun3StatusEnum;
    /**
     * 
     * @type {User2}
     * @memberof DeploymentWorkflowRun3
     */
    'triggering_actor': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun3
     */
    'workflow_id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'workflow_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun3
     */
    'display_title': string;
}

export const DeploymentWorkflowRun3ConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required',
    Stale: 'stale'
} as const;

export type DeploymentWorkflowRun3ConclusionEnum = typeof DeploymentWorkflowRun3ConclusionEnum[keyof typeof DeploymentWorkflowRun3ConclusionEnum];
export const DeploymentWorkflowRun3StatusEnum = {
    Requested: 'requested',
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued',
    Waiting: 'waiting',
    Pending: 'pending'
} as const;

export type DeploymentWorkflowRun3StatusEnum = typeof DeploymentWorkflowRun3StatusEnum[keyof typeof DeploymentWorkflowRun3StatusEnum];

/**
 * 
 * @export
 * @interface DeploymentWorkflowRun4
 */
export interface DeploymentWorkflowRun4 {
    /**
     * 
     * @type {User2}
     * @memberof DeploymentWorkflowRun4
     */
    'actor': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'artifacts_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'cancel_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun4
     */
    'check_suite_id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'check_suite_node_id': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'check_suite_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'conclusion': DeploymentWorkflowRun4ConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'display_title': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'head_branch': string;
    /**
     * 
     * @type {any}
     * @memberof DeploymentWorkflowRun4
     */
    'head_commit'?: any | null;
    /**
     * 
     * @type {DeploymentWorkflowRunHeadRepository}
     * @memberof DeploymentWorkflowRun4
     */
    'head_repository'?: DeploymentWorkflowRunHeadRepository;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun4
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'jobs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'logs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'path': string;
    /**
     * 
     * @type {any}
     * @memberof DeploymentWorkflowRun4
     */
    'previous_attempt_url'?: any | null;
    /**
     * 
     * @type {Array<CheckRunPullRequest>}
     * @memberof DeploymentWorkflowRun4
     */
    'pull_requests': Array<CheckRunPullRequest>;
    /**
     * 
     * @type {Array<DeploymentWorkflowRunReferencedWorkflowsInner>}
     * @memberof DeploymentWorkflowRun4
     */
    'referenced_workflows'?: Array<DeploymentWorkflowRunReferencedWorkflowsInner> | null;
    /**
     * 
     * @type {DeploymentWorkflowRunHeadRepository}
     * @memberof DeploymentWorkflowRun4
     */
    'repository'?: DeploymentWorkflowRunHeadRepository;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'rerun_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun4
     */
    'run_attempt': number;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun4
     */
    'run_number': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'run_started_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'status': DeploymentWorkflowRun4StatusEnum;
    /**
     * 
     * @type {User2}
     * @memberof DeploymentWorkflowRun4
     */
    'triggering_actor': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRun4
     */
    'workflow_id': number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRun4
     */
    'workflow_url'?: string;
}

export const DeploymentWorkflowRun4ConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required',
    Stale: 'stale',
    StartupFailure: 'startup_failure'
} as const;

export type DeploymentWorkflowRun4ConclusionEnum = typeof DeploymentWorkflowRun4ConclusionEnum[keyof typeof DeploymentWorkflowRun4ConclusionEnum];
export const DeploymentWorkflowRun4StatusEnum = {
    Requested: 'requested',
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued',
    Waiting: 'waiting',
    Pending: 'pending'
} as const;

export type DeploymentWorkflowRun4StatusEnum = typeof DeploymentWorkflowRun4StatusEnum[keyof typeof DeploymentWorkflowRun4StatusEnum];

/**
 * 
 * @export
 * @interface DeploymentWorkflowRunHeadRepository
 */
export interface DeploymentWorkflowRunHeadRepository {
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'archive_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'assignees_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'blobs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'branches_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'collaborators_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'comments_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'commits_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'compare_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'contents_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'contributors_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'deployments_url'?: string;
    /**
     * 
     * @type {any}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'description'?: any | null;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'downloads_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'events_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'fork'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'forks_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'full_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'git_commits_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'git_refs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'git_tags_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'hooks_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'issue_comment_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'issue_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'issues_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'keys_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'labels_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'languages_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'merges_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'milestones_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'notifications_url'?: string;
    /**
     * 
     * @type {DeploymentWorkflowRunHeadRepositoryOwner}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'owner'?: DeploymentWorkflowRunHeadRepositoryOwner;
    /**
     * 
     * @type {boolean}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'private'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'pulls_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'releases_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'stargazers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'statuses_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'subscribers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'subscription_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'tags_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'teams_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'trees_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepository
     */
    'url'?: string;
}
/**
 * 
 * @export
 * @interface DeploymentWorkflowRunHeadRepositoryOwner
 */
export interface DeploymentWorkflowRunHeadRepositoryOwner {
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'login'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'type'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunHeadRepositoryOwner
     */
    'url'?: string;
}
/**
 * 
 * @export
 * @interface DeploymentWorkflowRunReferencedWorkflowsInner
 */
export interface DeploymentWorkflowRunReferencedWorkflowsInner {
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunReferencedWorkflowsInner
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunReferencedWorkflowsInner
     */
    'ref'?: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentWorkflowRunReferencedWorkflowsInner
     */
    'sha': string;
}
/**
 * Diff Entry
 * @export
 * @interface DiffEntry
 */
export interface DiffEntry {
    /**
     * 
     * @type {string}
     * @memberof DiffEntry
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof DiffEntry
     */
    'filename': string;
    /**
     * 
     * @type {string}
     * @memberof DiffEntry
     */
    'status': DiffEntryStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof DiffEntry
     */
    'additions': number;
    /**
     * 
     * @type {number}
     * @memberof DiffEntry
     */
    'deletions': number;
    /**
     * 
     * @type {number}
     * @memberof DiffEntry
     */
    'changes': number;
    /**
     * 
     * @type {string}
     * @memberof DiffEntry
     */
    'blob_url': string;
    /**
     * 
     * @type {string}
     * @memberof DiffEntry
     */
    'raw_url': string;
    /**
     * 
     * @type {string}
     * @memberof DiffEntry
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof DiffEntry
     */
    'patch'?: string;
    /**
     * 
     * @type {string}
     * @memberof DiffEntry
     */
    'previous_filename'?: string;
}

export const DiffEntryStatusEnum = {
    Added: 'added',
    Removed: 'removed',
    Modified: 'modified',
    Renamed: 'renamed',
    Copied: 'copied',
    Changed: 'changed',
    Unchanged: 'unchanged'
} as const;

export type DiffEntryStatusEnum = typeof DiffEntryStatusEnum[keyof typeof DiffEntryStatusEnum];

/**
 * A Discussion in a repository.
 * @export
 * @interface Discussion
 */
export interface Discussion {
    /**
     * 
     * @type {string}
     * @memberof Discussion
     */
    'active_lock_reason': string | null;
    /**
     * 
     * @type {string}
     * @memberof Discussion
     */
    'answer_chosen_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof Discussion
     */
    'answer_chosen_by': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof Discussion
     */
    'answer_html_url': string | null;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof Discussion
     */
    'author_association': DiscussionAuthorAssociationEnum;
    /**
     * 
     * @type {string}
     * @memberof Discussion
     */
    'body': string;
    /**
     * 
     * @type {DiscussionCategory}
     * @memberof Discussion
     */
    'category': DiscussionCategory;
    /**
     * 
     * @type {number}
     * @memberof Discussion
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof Discussion
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof Discussion
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Discussion
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Discussion
     */
    'locked': boolean;
    /**
     * 
     * @type {string}
     * @memberof Discussion
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof Discussion
     */
    'number': number;
    /**
     * 
     * @type {Reactions}
     * @memberof Discussion
     */
    'reactions'?: Reactions;
    /**
     * 
     * @type {string}
     * @memberof Discussion
     */
    'repository_url': string;
    /**
     * The current state of the discussion. `converting` means that the discussion is being converted from an issue. `transferring` means that the discussion is being transferred from another repository.
     * @type {string}
     * @memberof Discussion
     */
    'state': DiscussionStateEnum;
    /**
     * The reason for the current state
     * @type {string}
     * @memberof Discussion
     */
    'state_reason': DiscussionStateReasonEnum | null;
    /**
     * 
     * @type {string}
     * @memberof Discussion
     */
    'timeline_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Discussion
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof Discussion
     */
    'updated_at': string;
    /**
     * 
     * @type {User1}
     * @memberof Discussion
     */
    'user': User1 | null;
    /**
     * 
     * @type {Array<Label>}
     * @memberof Discussion
     */
    'labels'?: Array<Label>;
}

export const DiscussionAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type DiscussionAuthorAssociationEnum = typeof DiscussionAuthorAssociationEnum[keyof typeof DiscussionAuthorAssociationEnum];
export const DiscussionStateEnum = {
    Open: 'open',
    Closed: 'closed',
    Locked: 'locked',
    Converting: 'converting',
    Transferring: 'transferring'
} as const;

export type DiscussionStateEnum = typeof DiscussionStateEnum[keyof typeof DiscussionStateEnum];
export const DiscussionStateReasonEnum = {
    Resolved: 'resolved',
    Outdated: 'outdated',
    Duplicate: 'duplicate',
    Reopened: 'reopened'
} as const;

export type DiscussionStateReasonEnum = typeof DiscussionStateReasonEnum[keyof typeof DiscussionStateReasonEnum];

/**
 * 
 * @export
 * @interface DiscussionCategory
 */
export interface DiscussionCategory {
    /**
     * 
     * @type {string}
     * @memberof DiscussionCategory
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof DiscussionCategory
     */
    'description': string;
    /**
     * 
     * @type {string}
     * @memberof DiscussionCategory
     */
    'emoji': string;
    /**
     * 
     * @type {number}
     * @memberof DiscussionCategory
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof DiscussionCategory
     */
    'is_answerable': boolean;
    /**
     * 
     * @type {string}
     * @memberof DiscussionCategory
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof DiscussionCategory
     */
    'node_id'?: string;
    /**
     * 
     * @type {number}
     * @memberof DiscussionCategory
     */
    'repository_id': number;
    /**
     * 
     * @type {string}
     * @memberof DiscussionCategory
     */
    'slug': string;
    /**
     * 
     * @type {string}
     * @memberof DiscussionCategory
     */
    'updated_at': string;
}
/**
 * 
 * @export
 * @interface DockerMetadata
 */
export interface DockerMetadata {
    /**
     * 
     * @type {Array<string>}
     * @memberof DockerMetadata
     */
    'tag'?: Array<string>;
}
/**
 * Email
 * @export
 * @interface Email
 */
export interface Email {
    /**
     * 
     * @type {string}
     * @memberof Email
     */
    'email': string;
    /**
     * 
     * @type {boolean}
     * @memberof Email
     */
    'primary': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Email
     */
    'verified': boolean;
    /**
     * 
     * @type {string}
     * @memberof Email
     */
    'visibility': string | null;
}
/**
 * The policy that controls the repositories in the organization that are allowed to run GitHub Actions.
 * @export
 * @enum {string}
 */

export const EnabledRepositories = {
    All: 'all',
    None: 'none',
    Selected: 'selected'
} as const;

export type EnabledRepositories = typeof EnabledRepositories[keyof typeof EnabledRepositories];


/**
 * An enterprise on GitHub.
 * @export
 * @interface Enterprise
 */
export interface Enterprise {
    /**
     * A short description of the enterprise.
     * @type {string}
     * @memberof Enterprise
     */
    'description'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Enterprise
     */
    'html_url': string;
    /**
     * The enterprise\'s website URL.
     * @type {string}
     * @memberof Enterprise
     */
    'website_url'?: string | null;
    /**
     * Unique identifier of the enterprise
     * @type {number}
     * @memberof Enterprise
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Enterprise
     */
    'node_id': string;
    /**
     * The name of the enterprise.
     * @type {string}
     * @memberof Enterprise
     */
    'name': string;
    /**
     * The slug url identifier for the enterprise.
     * @type {string}
     * @memberof Enterprise
     */
    'slug': string;
    /**
     * 
     * @type {string}
     * @memberof Enterprise
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof Enterprise
     */
    'updated_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof Enterprise
     */
    'avatar_url': string;
}
/**
 * Group of enterprise owners and/or members
 * @export
 * @interface EnterpriseTeam
 */
export interface EnterpriseTeam {
    /**
     * 
     * @type {number}
     * @memberof EnterpriseTeam
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseTeam
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseTeam
     */
    'slug': string;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseTeam
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseTeam
     */
    'sync_to_organizations': string;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseTeam
     */
    'group_id'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseTeam
     */
    'group_name'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseTeam
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseTeam
     */
    'members_url': string;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseTeam
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseTeam
     */
    'updated_at': string;
}
/**
 * An enterprise on GitHub. Webhook payloads contain the `enterprise` property when the webhook is configured on an enterprise account or an organization that\'s part of an enterprise account. For more information, see \"[About enterprise accounts](https://docs.github.com/admin/overview/about-enterprise-accounts).\"
 * @export
 * @interface EnterpriseWebhooks
 */
export interface EnterpriseWebhooks {
    /**
     * A short description of the enterprise.
     * @type {string}
     * @memberof EnterpriseWebhooks
     */
    'description'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseWebhooks
     */
    'html_url': string;
    /**
     * The enterprise\'s website URL.
     * @type {string}
     * @memberof EnterpriseWebhooks
     */
    'website_url'?: string | null;
    /**
     * Unique identifier of the enterprise
     * @type {number}
     * @memberof EnterpriseWebhooks
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseWebhooks
     */
    'node_id': string;
    /**
     * The name of the enterprise.
     * @type {string}
     * @memberof EnterpriseWebhooks
     */
    'name': string;
    /**
     * The slug url identifier for the enterprise.
     * @type {string}
     * @memberof EnterpriseWebhooks
     */
    'slug': string;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseWebhooks
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseWebhooks
     */
    'updated_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof EnterpriseWebhooks
     */
    'avatar_url': string;
}
/**
 * Details of a deployment environment
 * @export
 * @interface Environment
 */
export interface Environment {
    /**
     * The id of the environment.
     * @type {number}
     * @memberof Environment
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Environment
     */
    'node_id': string;
    /**
     * The name of the environment.
     * @type {string}
     * @memberof Environment
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Environment
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Environment
     */
    'html_url': string;
    /**
     * The time that the environment was created, in ISO 8601 format.
     * @type {string}
     * @memberof Environment
     */
    'created_at': string;
    /**
     * The time that the environment was last updated, in ISO 8601 format.
     * @type {string}
     * @memberof Environment
     */
    'updated_at': string;
    /**
     * Built-in deployment protection rules for the environment.
     * @type {Array<EnvironmentProtectionRulesInner>}
     * @memberof Environment
     */
    'protection_rules'?: Array<EnvironmentProtectionRulesInner>;
    /**
     * 
     * @type {DeploymentBranchPolicySettings}
     * @memberof Environment
     */
    'deployment_branch_policy'?: DeploymentBranchPolicySettings | null;
}
/**
 * An entry in the reviews log for environment deployments
 * @export
 * @interface EnvironmentApprovals
 */
export interface EnvironmentApprovals {
    /**
     * The list of environments that were approved or rejected
     * @type {Array<EnvironmentApprovalsEnvironmentsInner>}
     * @memberof EnvironmentApprovals
     */
    'environments': Array<EnvironmentApprovalsEnvironmentsInner>;
    /**
     * Whether deployment to the environment(s) was approved or rejected or pending (with comments)
     * @type {string}
     * @memberof EnvironmentApprovals
     */
    'state': EnvironmentApprovalsStateEnum;
    /**
     * 
     * @type {SimpleUser}
     * @memberof EnvironmentApprovals
     */
    'user': SimpleUser;
    /**
     * The comment submitted with the deployment review
     * @type {string}
     * @memberof EnvironmentApprovals
     */
    'comment': string;
}

export const EnvironmentApprovalsStateEnum = {
    Approved: 'approved',
    Rejected: 'rejected',
    Pending: 'pending'
} as const;

export type EnvironmentApprovalsStateEnum = typeof EnvironmentApprovalsStateEnum[keyof typeof EnvironmentApprovalsStateEnum];

/**
 * 
 * @export
 * @interface EnvironmentApprovalsEnvironmentsInner
 */
export interface EnvironmentApprovalsEnvironmentsInner {
    /**
     * The id of the environment.
     * @type {number}
     * @memberof EnvironmentApprovalsEnvironmentsInner
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof EnvironmentApprovalsEnvironmentsInner
     */
    'node_id'?: string;
    /**
     * The name of the environment.
     * @type {string}
     * @memberof EnvironmentApprovalsEnvironmentsInner
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof EnvironmentApprovalsEnvironmentsInner
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof EnvironmentApprovalsEnvironmentsInner
     */
    'html_url'?: string;
    /**
     * The time that the environment was created, in ISO 8601 format.
     * @type {string}
     * @memberof EnvironmentApprovalsEnvironmentsInner
     */
    'created_at'?: string;
    /**
     * The time that the environment was last updated, in ISO 8601 format.
     * @type {string}
     * @memberof EnvironmentApprovalsEnvironmentsInner
     */
    'updated_at'?: string;
}
/**
 * 
 * @export
 * @interface EnvironmentProtectionRulesInner
 */
export interface EnvironmentProtectionRulesInner {
    /**
     * 
     * @type {number}
     * @memberof EnvironmentProtectionRulesInner
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof EnvironmentProtectionRulesInner
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof EnvironmentProtectionRulesInner
     */
    'type': string;
    /**
     * The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between 0 and 43,200 (30 days).
     * @type {number}
     * @memberof EnvironmentProtectionRulesInner
     */
    'wait_timer'?: number;
    /**
     * Whether deployments to this environment can be approved by the user who created the deployment.
     * @type {boolean}
     * @memberof EnvironmentProtectionRulesInner
     */
    'prevent_self_review'?: boolean;
    /**
     * The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
     * @type {Array<PendingDeploymentReviewersInner>}
     * @memberof EnvironmentProtectionRulesInner
     */
    'reviewers'?: Array<PendingDeploymentReviewersInner>;
}
/**
 * 
 * @export
 * @interface EnvironmentProtectionRulesInnerAnyOf
 */
export interface EnvironmentProtectionRulesInnerAnyOf {
    /**
     * 
     * @type {number}
     * @memberof EnvironmentProtectionRulesInnerAnyOf
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof EnvironmentProtectionRulesInnerAnyOf
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof EnvironmentProtectionRulesInnerAnyOf
     */
    'type': string;
    /**
     * The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between 0 and 43,200 (30 days).
     * @type {number}
     * @memberof EnvironmentProtectionRulesInnerAnyOf
     */
    'wait_timer'?: number;
}
/**
 * 
 * @export
 * @interface EnvironmentProtectionRulesInnerAnyOf1
 */
export interface EnvironmentProtectionRulesInnerAnyOf1 {
    /**
     * 
     * @type {number}
     * @memberof EnvironmentProtectionRulesInnerAnyOf1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof EnvironmentProtectionRulesInnerAnyOf1
     */
    'node_id': string;
    /**
     * Whether deployments to this environment can be approved by the user who created the deployment.
     * @type {boolean}
     * @memberof EnvironmentProtectionRulesInnerAnyOf1
     */
    'prevent_self_review'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof EnvironmentProtectionRulesInnerAnyOf1
     */
    'type': string;
    /**
     * The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
     * @type {Array<PendingDeploymentReviewersInner>}
     * @memberof EnvironmentProtectionRulesInnerAnyOf1
     */
    'reviewers'?: Array<PendingDeploymentReviewersInner>;
}
/**
 * 
 * @export
 * @interface EnvironmentProtectionRulesInnerAnyOf2
 */
export interface EnvironmentProtectionRulesInnerAnyOf2 {
    /**
     * 
     * @type {number}
     * @memberof EnvironmentProtectionRulesInnerAnyOf2
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof EnvironmentProtectionRulesInnerAnyOf2
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof EnvironmentProtectionRulesInnerAnyOf2
     */
    'type': string;
}
/**
 * Event
 * @export
 * @interface Event
 */
export interface Event {
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    'type': string | null;
    /**
     * 
     * @type {Actor}
     * @memberof Event
     */
    'actor': Actor;
    /**
     * 
     * @type {EventRepo}
     * @memberof Event
     */
    'repo': EventRepo;
    /**
     * 
     * @type {Actor}
     * @memberof Event
     */
    'org'?: Actor;
    /**
     * 
     * @type {EventPayload}
     * @memberof Event
     */
    'payload': EventPayload;
    /**
     * 
     * @type {boolean}
     * @memberof Event
     */
    'public': boolean;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    'created_at': string | null;
}
/**
 * 
 * @export
 * @interface EventPayload
 */
export interface EventPayload {
    /**
     * 
     * @type {string}
     * @memberof EventPayload
     */
    'action'?: string;
    /**
     * 
     * @type {Issue}
     * @memberof EventPayload
     */
    'issue'?: Issue;
    /**
     * 
     * @type {IssueComment}
     * @memberof EventPayload
     */
    'comment'?: IssueComment;
    /**
     * 
     * @type {Array<EventPayloadPagesInner>}
     * @memberof EventPayload
     */
    'pages'?: Array<EventPayloadPagesInner>;
}
/**
 * 
 * @export
 * @interface EventPayloadPagesInner
 */
export interface EventPayloadPagesInner {
    /**
     * 
     * @type {string}
     * @memberof EventPayloadPagesInner
     */
    'page_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof EventPayloadPagesInner
     */
    'title'?: string;
    /**
     * 
     * @type {string}
     * @memberof EventPayloadPagesInner
     */
    'summary'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EventPayloadPagesInner
     */
    'action'?: string;
    /**
     * 
     * @type {string}
     * @memberof EventPayloadPagesInner
     */
    'sha'?: string;
    /**
     * 
     * @type {string}
     * @memberof EventPayloadPagesInner
     */
    'html_url'?: string;
}
/**
 * 
 * @export
 * @interface EventRepo
 */
export interface EventRepo {
    /**
     * 
     * @type {number}
     * @memberof EventRepo
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof EventRepo
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof EventRepo
     */
    'url': string;
}
/**
 * Feed
 * @export
 * @interface Feed
 */
export interface Feed {
    /**
     * 
     * @type {string}
     * @memberof Feed
     */
    'timeline_url': string;
    /**
     * 
     * @type {string}
     * @memberof Feed
     */
    'user_url': string;
    /**
     * 
     * @type {string}
     * @memberof Feed
     */
    'current_user_public_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Feed
     */
    'current_user_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Feed
     */
    'current_user_actor_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Feed
     */
    'current_user_organization_url'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Feed
     */
    'current_user_organization_urls'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Feed
     */
    'security_advisories_url'?: string;
    /**
     * A feed of discussions for a given repository.
     * @type {string}
     * @memberof Feed
     */
    'repository_discussions_url'?: string;
    /**
     * A feed of discussions for a given repository and category.
     * @type {string}
     * @memberof Feed
     */
    'repository_discussions_category_url'?: string;
    /**
     * 
     * @type {FeedLinks}
     * @memberof Feed
     */
    '_links': FeedLinks;
}
/**
 * 
 * @export
 * @interface FeedLinks
 */
export interface FeedLinks {
    /**
     * 
     * @type {LinkWithType}
     * @memberof FeedLinks
     */
    'timeline': LinkWithType;
    /**
     * 
     * @type {LinkWithType}
     * @memberof FeedLinks
     */
    'user': LinkWithType;
    /**
     * 
     * @type {LinkWithType}
     * @memberof FeedLinks
     */
    'security_advisories'?: LinkWithType;
    /**
     * 
     * @type {LinkWithType}
     * @memberof FeedLinks
     */
    'current_user'?: LinkWithType;
    /**
     * 
     * @type {LinkWithType}
     * @memberof FeedLinks
     */
    'current_user_public'?: LinkWithType;
    /**
     * 
     * @type {LinkWithType}
     * @memberof FeedLinks
     */
    'current_user_actor'?: LinkWithType;
    /**
     * 
     * @type {LinkWithType}
     * @memberof FeedLinks
     */
    'current_user_organization'?: LinkWithType;
    /**
     * 
     * @type {Array<LinkWithType>}
     * @memberof FeedLinks
     */
    'current_user_organizations'?: Array<LinkWithType>;
    /**
     * 
     * @type {LinkWithType}
     * @memberof FeedLinks
     */
    'repository_discussions'?: LinkWithType;
    /**
     * 
     * @type {LinkWithType}
     * @memberof FeedLinks
     */
    'repository_discussions_category'?: LinkWithType;
}
/**
 * File Commit
 * @export
 * @interface FileCommit
 */
export interface FileCommit {
    /**
     * 
     * @type {FileCommitContent}
     * @memberof FileCommit
     */
    'content': FileCommitContent | null;
    /**
     * 
     * @type {FileCommitCommit}
     * @memberof FileCommit
     */
    'commit': FileCommitCommit;
}
/**
 * 
 * @export
 * @interface FileCommitCommit
 */
export interface FileCommitCommit {
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommit
     */
    'sha'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommit
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommit
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommit
     */
    'html_url'?: string;
    /**
     * 
     * @type {FileCommitCommitAuthor}
     * @memberof FileCommitCommit
     */
    'author'?: FileCommitCommitAuthor;
    /**
     * 
     * @type {FileCommitCommitAuthor}
     * @memberof FileCommitCommit
     */
    'committer'?: FileCommitCommitAuthor;
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommit
     */
    'message'?: string;
    /**
     * 
     * @type {FileCommitCommitTree}
     * @memberof FileCommitCommit
     */
    'tree'?: FileCommitCommitTree;
    /**
     * 
     * @type {Array<FileCommitCommitParentsInner>}
     * @memberof FileCommitCommit
     */
    'parents'?: Array<FileCommitCommitParentsInner>;
    /**
     * 
     * @type {FileCommitCommitVerification}
     * @memberof FileCommitCommit
     */
    'verification'?: FileCommitCommitVerification;
}
/**
 * 
 * @export
 * @interface FileCommitCommitAuthor
 */
export interface FileCommitCommitAuthor {
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommitAuthor
     */
    'date'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommitAuthor
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommitAuthor
     */
    'email'?: string;
}
/**
 * 
 * @export
 * @interface FileCommitCommitParentsInner
 */
export interface FileCommitCommitParentsInner {
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommitParentsInner
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommitParentsInner
     */
    'html_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommitParentsInner
     */
    'sha'?: string;
}
/**
 * 
 * @export
 * @interface FileCommitCommitTree
 */
export interface FileCommitCommitTree {
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommitTree
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommitTree
     */
    'sha'?: string;
}
/**
 * 
 * @export
 * @interface FileCommitCommitVerification
 */
export interface FileCommitCommitVerification {
    /**
     * 
     * @type {boolean}
     * @memberof FileCommitCommitVerification
     */
    'verified'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommitVerification
     */
    'reason'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommitVerification
     */
    'signature'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommitVerification
     */
    'payload'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FileCommitCommitVerification
     */
    'verified_at'?: string | null;
}
/**
 * 
 * @export
 * @interface FileCommitContent
 */
export interface FileCommitContent {
    /**
     * 
     * @type {string}
     * @memberof FileCommitContent
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitContent
     */
    'path'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitContent
     */
    'sha'?: string;
    /**
     * 
     * @type {number}
     * @memberof FileCommitContent
     */
    'size'?: number;
    /**
     * 
     * @type {string}
     * @memberof FileCommitContent
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitContent
     */
    'html_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitContent
     */
    'git_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitContent
     */
    'download_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitContent
     */
    'type'?: string;
    /**
     * 
     * @type {FileCommitContentLinks}
     * @memberof FileCommitContent
     */
    '_links'?: FileCommitContentLinks;
}
/**
 * 
 * @export
 * @interface FileCommitContentLinks
 */
export interface FileCommitContentLinks {
    /**
     * 
     * @type {string}
     * @memberof FileCommitContentLinks
     */
    'self'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitContentLinks
     */
    'git'?: string;
    /**
     * 
     * @type {string}
     * @memberof FileCommitContentLinks
     */
    'html'?: string;
}
/**
 * Full Repository
 * @export
 * @interface FullRepository
 */
export interface FullRepository {
    /**
     * 
     * @type {number}
     * @memberof FullRepository
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'full_name': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof FullRepository
     */
    'owner': SimpleUser;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'private': boolean;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'description': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'fork': boolean;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'archive_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'contributors_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'git_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'languages_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'notifications_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'pulls_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'ssh_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'mirror_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'language': string | null;
    /**
     * 
     * @type {number}
     * @memberof FullRepository
     */
    'forks_count': number;
    /**
     * 
     * @type {number}
     * @memberof FullRepository
     */
    'stargazers_count': number;
    /**
     * 
     * @type {number}
     * @memberof FullRepository
     */
    'watchers_count': number;
    /**
     * The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
     * @type {number}
     * @memberof FullRepository
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'default_branch': string;
    /**
     * 
     * @type {number}
     * @memberof FullRepository
     */
    'open_issues_count': number;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof FullRepository
     */
    'topics'?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'has_projects': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'has_wiki': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'has_pages': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'has_downloads'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'has_discussions': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'archived': boolean;
    /**
     * Returns whether or not this repository disabled.
     * @type {boolean}
     * @memberof FullRepository
     */
    'disabled': boolean;
    /**
     * The repository visibility: public, private, or internal.
     * @type {string}
     * @memberof FullRepository
     */
    'visibility'?: string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'pushed_at': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'updated_at': string;
    /**
     * 
     * @type {FullRepositoryPermissions}
     * @memberof FullRepository
     */
    'permissions'?: FullRepositoryPermissions;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'allow_rebase_merge'?: boolean;
    /**
     * 
     * @type {NullableRepository}
     * @memberof FullRepository
     */
    'template_repository'?: NullableRepository | null;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'temp_clone_token'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'allow_auto_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'allow_merge_commit'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof FullRepository
     */
    'squash_merge_commit_title'?: FullRepositorySquashMergeCommitTitleEnum;
    /**
     * The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof FullRepository
     */
    'squash_merge_commit_message'?: FullRepositorySquashMergeCommitMessageEnum;
    /**
     * The default value for a merge commit title.    - `PR_TITLE` - default to the pull request\'s title.   - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
     * @type {string}
     * @memberof FullRepository
     */
    'merge_commit_title'?: FullRepositoryMergeCommitTitleEnum;
    /**
     * The default value for a merge commit message.  - `PR_TITLE` - default to the pull request\'s title. - `PR_BODY` - default to the pull request\'s body. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof FullRepository
     */
    'merge_commit_message'?: FullRepositoryMergeCommitMessageEnum;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'allow_forking'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepository
     */
    'web_commit_signoff_required'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof FullRepository
     */
    'subscribers_count': number;
    /**
     * 
     * @type {number}
     * @memberof FullRepository
     */
    'network_count': number;
    /**
     * 
     * @type {NullableLicenseSimple}
     * @memberof FullRepository
     */
    'license': NullableLicenseSimple | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof FullRepository
     */
    'organization'?: NullableSimpleUser | null;
    /**
     * 
     * @type {Repository}
     * @memberof FullRepository
     */
    'parent'?: Repository;
    /**
     * 
     * @type {Repository}
     * @memberof FullRepository
     */
    'source'?: Repository;
    /**
     * 
     * @type {number}
     * @memberof FullRepository
     */
    'forks': number;
    /**
     * 
     * @type {string}
     * @memberof FullRepository
     */
    'master_branch'?: string;
    /**
     * 
     * @type {number}
     * @memberof FullRepository
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof FullRepository
     */
    'watchers': number;
    /**
     * Whether anonymous git access is allowed.
     * @type {boolean}
     * @memberof FullRepository
     */
    'anonymous_access_enabled'?: boolean;
    /**
     * 
     * @type {CodeOfConductSimple}
     * @memberof FullRepository
     */
    'code_of_conduct'?: CodeOfConductSimple;
    /**
     * 
     * @type {SecurityAndAnalysis}
     * @memberof FullRepository
     */
    'security_and_analysis'?: SecurityAndAnalysis | null;
    /**
     * The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.
     * @type {{ [key: string]: any; }}
     * @memberof FullRepository
     */
    'custom_properties'?: { [key: string]: any; };
}

export const FullRepositorySquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type FullRepositorySquashMergeCommitTitleEnum = typeof FullRepositorySquashMergeCommitTitleEnum[keyof typeof FullRepositorySquashMergeCommitTitleEnum];
export const FullRepositorySquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type FullRepositorySquashMergeCommitMessageEnum = typeof FullRepositorySquashMergeCommitMessageEnum[keyof typeof FullRepositorySquashMergeCommitMessageEnum];
export const FullRepositoryMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type FullRepositoryMergeCommitTitleEnum = typeof FullRepositoryMergeCommitTitleEnum[keyof typeof FullRepositoryMergeCommitTitleEnum];
export const FullRepositoryMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type FullRepositoryMergeCommitMessageEnum = typeof FullRepositoryMergeCommitMessageEnum[keyof typeof FullRepositoryMergeCommitMessageEnum];

/**
 * 
 * @export
 * @interface FullRepositoryPermissions
 */
export interface FullRepositoryPermissions {
    /**
     * 
     * @type {boolean}
     * @memberof FullRepositoryPermissions
     */
    'admin': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepositoryPermissions
     */
    'maintain'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepositoryPermissions
     */
    'push': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepositoryPermissions
     */
    'triage'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FullRepositoryPermissions
     */
    'pull': boolean;
}
/**
 * Gist
 * @export
 * @interface Gist
 */
export interface Gist {
    /**
     * 
     * @type {string}
     * @memberof Gist
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Gist
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Gist
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Gist
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof Gist
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Gist
     */
    'git_pull_url': string;
    /**
     * 
     * @type {string}
     * @memberof Gist
     */
    'git_push_url': string;
    /**
     * 
     * @type {string}
     * @memberof Gist
     */
    'html_url': string;
    /**
     * 
     * @type {{ [key: string]: GistFilesValue; }}
     * @memberof Gist
     */
    'files': { [key: string]: GistFilesValue; };
    /**
     * 
     * @type {boolean}
     * @memberof Gist
     */
    'public': boolean;
    /**
     * 
     * @type {string}
     * @memberof Gist
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof Gist
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Gist
     */
    'description': string | null;
    /**
     * 
     * @type {number}
     * @memberof Gist
     */
    'comments': number;
    /**
     * 
     * @type {boolean}
     * @memberof Gist
     */
    'comments_enabled'?: boolean;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof Gist
     */
    'user': NullableSimpleUser | null;
    /**
     * 
     * @type {string}
     * @memberof Gist
     */
    'comments_url': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof Gist
     */
    'owner'?: NullableSimpleUser | null;
    /**
     * 
     * @type {boolean}
     * @memberof Gist
     */
    'truncated'?: boolean;
    /**
     * 
     * @type {Array<any>}
     * @memberof Gist
     */
    'forks'?: Array<any>;
    /**
     * 
     * @type {Array<any>}
     * @memberof Gist
     */
    'history'?: Array<any>;
}
/**
 * A comment made to a gist.
 * @export
 * @interface GistComment
 */
export interface GistComment {
    /**
     * 
     * @type {number}
     * @memberof GistComment
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof GistComment
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof GistComment
     */
    'url': string;
    /**
     * The comment text.
     * @type {string}
     * @memberof GistComment
     */
    'body': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof GistComment
     */
    'user': NullableSimpleUser | null;
    /**
     * 
     * @type {string}
     * @memberof GistComment
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof GistComment
     */
    'updated_at': string;
    /**
     * 
     * @type {AuthorAssociation}
     * @memberof GistComment
     */
    'author_association': AuthorAssociation;
}


/**
 * Gist Commit
 * @export
 * @interface GistCommit
 */
export interface GistCommit {
    /**
     * 
     * @type {string}
     * @memberof GistCommit
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof GistCommit
     */
    'version': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof GistCommit
     */
    'user': NullableSimpleUser | null;
    /**
     * 
     * @type {GistHistoryChangeStatus}
     * @memberof GistCommit
     */
    'change_status': GistHistoryChangeStatus;
    /**
     * 
     * @type {string}
     * @memberof GistCommit
     */
    'committed_at': string;
}
/**
 * 
 * @export
 * @interface GistFilesValue
 */
export interface GistFilesValue {
    /**
     * 
     * @type {string}
     * @memberof GistFilesValue
     */
    'filename'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistFilesValue
     */
    'type'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistFilesValue
     */
    'language'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistFilesValue
     */
    'raw_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof GistFilesValue
     */
    'size'?: number;
}
/**
 * Gist History
 * @export
 * @interface GistHistory
 */
export interface GistHistory {
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof GistHistory
     */
    'user'?: NullableSimpleUser | null;
    /**
     * 
     * @type {string}
     * @memberof GistHistory
     */
    'version'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistHistory
     */
    'committed_at'?: string;
    /**
     * 
     * @type {GistHistoryChangeStatus}
     * @memberof GistHistory
     */
    'change_status'?: GistHistoryChangeStatus;
    /**
     * 
     * @type {string}
     * @memberof GistHistory
     */
    'url'?: string;
}
/**
 * 
 * @export
 * @interface GistHistoryChangeStatus
 */
export interface GistHistoryChangeStatus {
    /**
     * 
     * @type {number}
     * @memberof GistHistoryChangeStatus
     */
    'total'?: number;
    /**
     * 
     * @type {number}
     * @memberof GistHistoryChangeStatus
     */
    'additions'?: number;
    /**
     * 
     * @type {number}
     * @memberof GistHistoryChangeStatus
     */
    'deletions'?: number;
}
/**
 * Gist Simple
 * @export
 * @interface GistSimple
 */
export interface GistSimple {
    /**
     * 
     * @type {Array<GistSimpleForksInner>}
     * @memberof GistSimple
     * @deprecated
     */
    'forks'?: Array<GistSimpleForksInner> | null;
    /**
     * 
     * @type {Array<GistHistory>}
     * @memberof GistSimple
     * @deprecated
     */
    'history'?: Array<GistHistory> | null;
    /**
     * 
     * @type {Gist}
     * @memberof GistSimple
     */
    'fork_of'?: Gist | null;
    /**
     * 
     * @type {string}
     * @memberof GistSimple
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimple
     */
    'forks_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimple
     */
    'commits_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimple
     */
    'id'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimple
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimple
     */
    'git_pull_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimple
     */
    'git_push_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimple
     */
    'html_url'?: string;
    /**
     * 
     * @type {{ [key: string]: GistSimpleFilesValue; }}
     * @memberof GistSimple
     */
    'files'?: { [key: string]: GistSimpleFilesValue; };
    /**
     * 
     * @type {boolean}
     * @memberof GistSimple
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof GistSimple
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimple
     */
    'updated_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimple
     */
    'description'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof GistSimple
     */
    'comments'?: number;
    /**
     * 
     * @type {boolean}
     * @memberof GistSimple
     */
    'comments_enabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof GistSimple
     */
    'user'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GistSimple
     */
    'comments_url'?: string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof GistSimple
     */
    'owner'?: SimpleUser;
    /**
     * 
     * @type {boolean}
     * @memberof GistSimple
     */
    'truncated'?: boolean;
}
/**
 * 
 * @export
 * @interface GistSimpleFilesValue
 */
export interface GistSimpleFilesValue {
    /**
     * 
     * @type {string}
     * @memberof GistSimpleFilesValue
     */
    'filename'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimpleFilesValue
     */
    'type'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimpleFilesValue
     */
    'language'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimpleFilesValue
     */
    'raw_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof GistSimpleFilesValue
     */
    'size'?: number;
    /**
     * 
     * @type {boolean}
     * @memberof GistSimpleFilesValue
     */
    'truncated'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof GistSimpleFilesValue
     */
    'content'?: string;
    /**
     * The encoding used for `content`. Currently, `\"utf-8\"` and `\"base64\"` are supported.
     * @type {string}
     * @memberof GistSimpleFilesValue
     */
    'encoding'?: string;
}
/**
 * 
 * @export
 * @interface GistSimpleForksInner
 */
export interface GistSimpleForksInner {
    /**
     * 
     * @type {string}
     * @memberof GistSimpleForksInner
     */
    'id'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimpleForksInner
     */
    'url'?: string;
    /**
     * 
     * @type {PublicUser}
     * @memberof GistSimpleForksInner
     */
    'user'?: PublicUser;
    /**
     * 
     * @type {string}
     * @memberof GistSimpleForksInner
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof GistSimpleForksInner
     */
    'updated_at'?: string;
}
/**
 * Low-level Git commit operations within a repository
 * @export
 * @interface GitCommit
 */
export interface GitCommit {
    /**
     * SHA for the commit
     * @type {string}
     * @memberof GitCommit
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof GitCommit
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof GitCommit
     */
    'url': string;
    /**
     * 
     * @type {GitCommitAuthor}
     * @memberof GitCommit
     */
    'author': GitCommitAuthor;
    /**
     * 
     * @type {GitCommitAuthor}
     * @memberof GitCommit
     */
    'committer': GitCommitAuthor;
    /**
     * Message describing the purpose of the commit
     * @type {string}
     * @memberof GitCommit
     */
    'message': string;
    /**
     * 
     * @type {GitCommitTree}
     * @memberof GitCommit
     */
    'tree': GitCommitTree;
    /**
     * 
     * @type {Array<GitCommitParentsInner>}
     * @memberof GitCommit
     */
    'parents': Array<GitCommitParentsInner>;
    /**
     * 
     * @type {GitCommitVerification}
     * @memberof GitCommit
     */
    'verification': GitCommitVerification;
    /**
     * 
     * @type {string}
     * @memberof GitCommit
     */
    'html_url': string;
}
/**
 * Identifying information for the git-user
 * @export
 * @interface GitCommitAuthor
 */
export interface GitCommitAuthor {
    /**
     * Timestamp of the commit
     * @type {string}
     * @memberof GitCommitAuthor
     */
    'date': string;
    /**
     * Git email address of the user
     * @type {string}
     * @memberof GitCommitAuthor
     */
    'email': string;
    /**
     * Name of the git user
     * @type {string}
     * @memberof GitCommitAuthor
     */
    'name': string;
}
/**
 * 
 * @export
 * @interface GitCommitParentsInner
 */
export interface GitCommitParentsInner {
    /**
     * SHA for the commit
     * @type {string}
     * @memberof GitCommitParentsInner
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof GitCommitParentsInner
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof GitCommitParentsInner
     */
    'html_url': string;
}
/**
 * 
 * @export
 * @interface GitCommitTree
 */
export interface GitCommitTree {
    /**
     * SHA for the commit
     * @type {string}
     * @memberof GitCommitTree
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof GitCommitTree
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface GitCommitVerification
 */
export interface GitCommitVerification {
    /**
     * 
     * @type {boolean}
     * @memberof GitCommitVerification
     */
    'verified': boolean;
    /**
     * 
     * @type {string}
     * @memberof GitCommitVerification
     */
    'reason': string;
    /**
     * 
     * @type {string}
     * @memberof GitCommitVerification
     */
    'signature': string | null;
    /**
     * 
     * @type {string}
     * @memberof GitCommitVerification
     */
    'payload': string | null;
    /**
     * 
     * @type {string}
     * @memberof GitCommitVerification
     */
    'verified_at': string | null;
}
/**
 * Git references within a repository
 * @export
 * @interface GitRef
 */
export interface GitRef {
    /**
     * 
     * @type {string}
     * @memberof GitRef
     */
    'ref': string;
    /**
     * 
     * @type {string}
     * @memberof GitRef
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof GitRef
     */
    'url': string;
    /**
     * 
     * @type {GitRefObject}
     * @memberof GitRef
     */
    'object': GitRefObject;
}
/**
 * 
 * @export
 * @interface GitRefObject
 */
export interface GitRefObject {
    /**
     * 
     * @type {string}
     * @memberof GitRefObject
     */
    'type': string;
    /**
     * SHA for the reference
     * @type {string}
     * @memberof GitRefObject
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof GitRefObject
     */
    'url': string;
}
/**
 * Metadata for a Git tag
 * @export
 * @interface GitTag
 */
export interface GitTag {
    /**
     * 
     * @type {string}
     * @memberof GitTag
     */
    'node_id': string;
    /**
     * Name of the tag
     * @type {string}
     * @memberof GitTag
     */
    'tag': string;
    /**
     * 
     * @type {string}
     * @memberof GitTag
     */
    'sha': string;
    /**
     * URL for the tag
     * @type {string}
     * @memberof GitTag
     */
    'url': string;
    /**
     * Message describing the purpose of the tag
     * @type {string}
     * @memberof GitTag
     */
    'message': string;
    /**
     * 
     * @type {GitTagTagger}
     * @memberof GitTag
     */
    'tagger': GitTagTagger;
    /**
     * 
     * @type {GitTagObject}
     * @memberof GitTag
     */
    'object': GitTagObject;
    /**
     * 
     * @type {Verification}
     * @memberof GitTag
     */
    'verification'?: Verification;
}
/**
 * 
 * @export
 * @interface GitTagObject
 */
export interface GitTagObject {
    /**
     * 
     * @type {string}
     * @memberof GitTagObject
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof GitTagObject
     */
    'type': string;
    /**
     * 
     * @type {string}
     * @memberof GitTagObject
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface GitTagTagger
 */
export interface GitTagTagger {
    /**
     * 
     * @type {string}
     * @memberof GitTagTagger
     */
    'date': string;
    /**
     * 
     * @type {string}
     * @memberof GitTagTagger
     */
    'email': string;
    /**
     * 
     * @type {string}
     * @memberof GitTagTagger
     */
    'name': string;
}
/**
 * The hierarchy between files in a Git repository.
 * @export
 * @interface GitTree
 */
export interface GitTree {
    /**
     * 
     * @type {string}
     * @memberof GitTree
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof GitTree
     */
    'url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof GitTree
     */
    'truncated': boolean;
    /**
     * Objects specifying a tree structure
     * @type {Array<GitTreeTreeInner>}
     * @memberof GitTree
     */
    'tree': Array<GitTreeTreeInner>;
}
/**
 * 
 * @export
 * @interface GitTreeTreeInner
 */
export interface GitTreeTreeInner {
    /**
     * 
     * @type {string}
     * @memberof GitTreeTreeInner
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof GitTreeTreeInner
     */
    'mode': string;
    /**
     * 
     * @type {string}
     * @memberof GitTreeTreeInner
     */
    'type': string;
    /**
     * 
     * @type {string}
     * @memberof GitTreeTreeInner
     */
    'sha': string;
    /**
     * 
     * @type {number}
     * @memberof GitTreeTreeInner
     */
    'size'?: number;
    /**
     * 
     * @type {string}
     * @memberof GitTreeTreeInner
     */
    'url'?: string;
}
/**
 * Gitignore Template
 * @export
 * @interface GitignoreTemplate
 */
export interface GitignoreTemplate {
    /**
     * 
     * @type {string}
     * @memberof GitignoreTemplate
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof GitignoreTemplate
     */
    'source': string;
}
/**
 * A GitHub Security Advisory.
 * @export
 * @interface GlobalAdvisory
 */
export interface GlobalAdvisory {
    /**
     * The GitHub Security Advisory ID.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'ghsa_id': string;
    /**
     * The Common Vulnerabilities and Exposures (CVE) ID.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'cve_id': string | null;
    /**
     * The API URL for the advisory.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'url': string;
    /**
     * The URL for the advisory.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'html_url': string;
    /**
     * The API URL for the repository advisory.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'repository_advisory_url': string | null;
    /**
     * A short summary of the advisory.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'summary': string;
    /**
     * A detailed description of what the advisory entails.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'description': string | null;
    /**
     * The type of advisory.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'type': GlobalAdvisoryTypeEnum;
    /**
     * The severity of the advisory.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'severity': GlobalAdvisorySeverityEnum;
    /**
     * The URL of the advisory\'s source code.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'source_code_location': string | null;
    /**
     * 
     * @type {Array<GlobalAdvisoryIdentifiersInner>}
     * @memberof GlobalAdvisory
     */
    'identifiers': Array<GlobalAdvisoryIdentifiersInner> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof GlobalAdvisory
     */
    'references': Array<string> | null;
    /**
     * The date and time of when the advisory was published, in ISO 8601 format.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'published_at': string;
    /**
     * The date and time of when the advisory was last updated, in ISO 8601 format.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'updated_at': string;
    /**
     * The date and time of when the advisory was reviewed by GitHub, in ISO 8601 format.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'github_reviewed_at': string | null;
    /**
     * The date and time when the advisory was published in the National Vulnerability Database, in ISO 8601 format. This field is only populated when the advisory is imported from the National Vulnerability Database.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'nvd_published_at': string | null;
    /**
     * The date and time of when the advisory was withdrawn, in ISO 8601 format.
     * @type {string}
     * @memberof GlobalAdvisory
     */
    'withdrawn_at': string | null;
    /**
     * The products and respective version ranges affected by the advisory.
     * @type {Array<Vulnerability>}
     * @memberof GlobalAdvisory
     */
    'vulnerabilities': Array<Vulnerability> | null;
    /**
     * 
     * @type {GlobalAdvisoryCvss}
     * @memberof GlobalAdvisory
     */
    'cvss': GlobalAdvisoryCvss | null;
    /**
     * 
     * @type {CvssSeverities}
     * @memberof GlobalAdvisory
     */
    'cvss_severities'?: CvssSeverities | null;
    /**
     * 
     * @type {SecurityAdvisoryEpss}
     * @memberof GlobalAdvisory
     */
    'epss'?: SecurityAdvisoryEpss | null;
    /**
     * 
     * @type {Array<GlobalAdvisoryCwesInner>}
     * @memberof GlobalAdvisory
     */
    'cwes': Array<GlobalAdvisoryCwesInner> | null;
    /**
     * The users who contributed to the advisory.
     * @type {Array<GlobalAdvisoryCreditsInner>}
     * @memberof GlobalAdvisory
     */
    'credits': Array<GlobalAdvisoryCreditsInner> | null;
}

export const GlobalAdvisoryTypeEnum = {
    Reviewed: 'reviewed',
    Unreviewed: 'unreviewed',
    Malware: 'malware'
} as const;

export type GlobalAdvisoryTypeEnum = typeof GlobalAdvisoryTypeEnum[keyof typeof GlobalAdvisoryTypeEnum];
export const GlobalAdvisorySeverityEnum = {
    Critical: 'critical',
    High: 'high',
    Medium: 'medium',
    Low: 'low',
    Unknown: 'unknown'
} as const;

export type GlobalAdvisorySeverityEnum = typeof GlobalAdvisorySeverityEnum[keyof typeof GlobalAdvisorySeverityEnum];

/**
 * 
 * @export
 * @interface GlobalAdvisoryCreditsInner
 */
export interface GlobalAdvisoryCreditsInner {
    /**
     * 
     * @type {SimpleUser}
     * @memberof GlobalAdvisoryCreditsInner
     */
    'user': SimpleUser;
    /**
     * 
     * @type {SecurityAdvisoryCreditTypes}
     * @memberof GlobalAdvisoryCreditsInner
     */
    'type': SecurityAdvisoryCreditTypes;
}


/**
 * 
 * @export
 * @interface GlobalAdvisoryCvss
 */
export interface GlobalAdvisoryCvss {
    /**
     * The CVSS vector.
     * @type {string}
     * @memberof GlobalAdvisoryCvss
     */
    'vector_string': string | null;
    /**
     * The CVSS score.
     * @type {number}
     * @memberof GlobalAdvisoryCvss
     */
    'score': number | null;
}
/**
 * 
 * @export
 * @interface GlobalAdvisoryCwesInner
 */
export interface GlobalAdvisoryCwesInner {
    /**
     * The Common Weakness Enumeration (CWE) identifier.
     * @type {string}
     * @memberof GlobalAdvisoryCwesInner
     */
    'cwe_id': string;
    /**
     * The name of the CWE.
     * @type {string}
     * @memberof GlobalAdvisoryCwesInner
     */
    'name': string;
}
/**
 * 
 * @export
 * @interface GlobalAdvisoryIdentifiersInner
 */
export interface GlobalAdvisoryIdentifiersInner {
    /**
     * The type of identifier.
     * @type {string}
     * @memberof GlobalAdvisoryIdentifiersInner
     */
    'type': GlobalAdvisoryIdentifiersInnerTypeEnum;
    /**
     * The identifier value.
     * @type {string}
     * @memberof GlobalAdvisoryIdentifiersInner
     */
    'value': string;
}

export const GlobalAdvisoryIdentifiersInnerTypeEnum = {
    Cve: 'CVE',
    Ghsa: 'GHSA'
} as const;

export type GlobalAdvisoryIdentifiersInnerTypeEnum = typeof GlobalAdvisoryIdentifiersInnerTypeEnum[keyof typeof GlobalAdvisoryIdentifiersInnerTypeEnum];

/**
 * A unique encryption key
 * @export
 * @interface GpgKey
 */
export interface GpgKey {
    /**
     * 
     * @type {number}
     * @memberof GpgKey
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof GpgKey
     */
    'name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof GpgKey
     */
    'primary_key_id': number | null;
    /**
     * 
     * @type {string}
     * @memberof GpgKey
     */
    'key_id': string;
    /**
     * 
     * @type {string}
     * @memberof GpgKey
     */
    'public_key': string;
    /**
     * 
     * @type {Array<GpgKeyEmailsInner>}
     * @memberof GpgKey
     */
    'emails': Array<GpgKeyEmailsInner>;
    /**
     * 
     * @type {Array<GpgKeySubkeysInner>}
     * @memberof GpgKey
     */
    'subkeys': Array<GpgKeySubkeysInner>;
    /**
     * 
     * @type {boolean}
     * @memberof GpgKey
     */
    'can_sign': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GpgKey
     */
    'can_encrypt_comms': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GpgKey
     */
    'can_encrypt_storage': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GpgKey
     */
    'can_certify': boolean;
    /**
     * 
     * @type {string}
     * @memberof GpgKey
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof GpgKey
     */
    'expires_at': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof GpgKey
     */
    'revoked': boolean;
    /**
     * 
     * @type {string}
     * @memberof GpgKey
     */
    'raw_key': string | null;
}
/**
 * 
 * @export
 * @interface GpgKeyEmailsInner
 */
export interface GpgKeyEmailsInner {
    /**
     * 
     * @type {string}
     * @memberof GpgKeyEmailsInner
     */
    'email'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof GpgKeyEmailsInner
     */
    'verified'?: boolean;
}
/**
 * 
 * @export
 * @interface GpgKeySubkeysInner
 */
export interface GpgKeySubkeysInner {
    /**
     * 
     * @type {number}
     * @memberof GpgKeySubkeysInner
     */
    'id'?: number;
    /**
     * 
     * @type {number}
     * @memberof GpgKeySubkeysInner
     */
    'primary_key_id'?: number;
    /**
     * 
     * @type {string}
     * @memberof GpgKeySubkeysInner
     */
    'key_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof GpgKeySubkeysInner
     */
    'public_key'?: string;
    /**
     * 
     * @type {Array<GpgKeyEmailsInner>}
     * @memberof GpgKeySubkeysInner
     */
    'emails'?: Array<GpgKeyEmailsInner>;
    /**
     * 
     * @type {Array<any>}
     * @memberof GpgKeySubkeysInner
     */
    'subkeys'?: Array<any>;
    /**
     * 
     * @type {boolean}
     * @memberof GpgKeySubkeysInner
     */
    'can_sign'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GpgKeySubkeysInner
     */
    'can_encrypt_comms'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GpgKeySubkeysInner
     */
    'can_encrypt_storage'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GpgKeySubkeysInner
     */
    'can_certify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof GpgKeySubkeysInner
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof GpgKeySubkeysInner
     */
    'expires_at'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GpgKeySubkeysInner
     */
    'raw_key'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof GpgKeySubkeysInner
     */
    'revoked'?: boolean;
}
/**
 * Webhooks for repositories.
 * @export
 * @interface Hook
 */
export interface Hook {
    /**
     * 
     * @type {string}
     * @memberof Hook
     */
    'type': string;
    /**
     * Unique identifier of the webhook.
     * @type {number}
     * @memberof Hook
     */
    'id': number;
    /**
     * The name of a valid service, use \'web\' for a webhook.
     * @type {string}
     * @memberof Hook
     */
    'name': string;
    /**
     * Determines whether the hook is actually triggered on pushes.
     * @type {boolean}
     * @memberof Hook
     */
    'active': boolean;
    /**
     * Determines what events the hook is triggered for. Default: [\'push\'].
     * @type {Array<string>}
     * @memberof Hook
     */
    'events': Array<string>;
    /**
     * 
     * @type {WebhookConfig}
     * @memberof Hook
     */
    'config': WebhookConfig;
    /**
     * 
     * @type {string}
     * @memberof Hook
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Hook
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof Hook
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Hook
     */
    'test_url': string;
    /**
     * 
     * @type {string}
     * @memberof Hook
     */
    'ping_url': string;
    /**
     * 
     * @type {string}
     * @memberof Hook
     */
    'deliveries_url'?: string;
    /**
     * 
     * @type {HookResponse}
     * @memberof Hook
     */
    'last_response': HookResponse;
}
/**
 * Delivery made by a webhook.
 * @export
 * @interface HookDelivery
 */
export interface HookDelivery {
    /**
     * Unique identifier of the delivery.
     * @type {number}
     * @memberof HookDelivery
     */
    'id': number;
    /**
     * Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).
     * @type {string}
     * @memberof HookDelivery
     */
    'guid': string;
    /**
     * Time when the delivery was delivered.
     * @type {string}
     * @memberof HookDelivery
     */
    'delivered_at': string;
    /**
     * Whether the delivery is a redelivery.
     * @type {boolean}
     * @memberof HookDelivery
     */
    'redelivery': boolean;
    /**
     * Time spent delivering.
     * @type {number}
     * @memberof HookDelivery
     */
    'duration': number;
    /**
     * Description of the status of the attempted delivery
     * @type {string}
     * @memberof HookDelivery
     */
    'status': string;
    /**
     * Status code received when delivery was made.
     * @type {number}
     * @memberof HookDelivery
     */
    'status_code': number;
    /**
     * The event that triggered the delivery.
     * @type {string}
     * @memberof HookDelivery
     */
    'event': string;
    /**
     * The type of activity for the event that triggered the delivery.
     * @type {string}
     * @memberof HookDelivery
     */
    'action': string | null;
    /**
     * The id of the GitHub App installation associated with this event.
     * @type {number}
     * @memberof HookDelivery
     */
    'installation_id': number | null;
    /**
     * The id of the repository associated with this event.
     * @type {number}
     * @memberof HookDelivery
     */
    'repository_id': number | null;
    /**
     * Time when the webhook delivery was throttled.
     * @type {string}
     * @memberof HookDelivery
     */
    'throttled_at'?: string | null;
    /**
     * The URL target of the delivery.
     * @type {string}
     * @memberof HookDelivery
     */
    'url'?: string;
    /**
     * 
     * @type {HookDeliveryRequest}
     * @memberof HookDelivery
     */
    'request': HookDeliveryRequest;
    /**
     * 
     * @type {HookDeliveryResponse}
     * @memberof HookDelivery
     */
    'response': HookDeliveryResponse;
}
/**
 * Delivery made by a webhook, without request and response information.
 * @export
 * @interface HookDeliveryItem
 */
export interface HookDeliveryItem {
    /**
     * Unique identifier of the webhook delivery.
     * @type {number}
     * @memberof HookDeliveryItem
     */
    'id': number;
    /**
     * Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).
     * @type {string}
     * @memberof HookDeliveryItem
     */
    'guid': string;
    /**
     * Time when the webhook delivery occurred.
     * @type {string}
     * @memberof HookDeliveryItem
     */
    'delivered_at': string;
    /**
     * Whether the webhook delivery is a redelivery.
     * @type {boolean}
     * @memberof HookDeliveryItem
     */
    'redelivery': boolean;
    /**
     * Time spent delivering.
     * @type {number}
     * @memberof HookDeliveryItem
     */
    'duration': number;
    /**
     * Describes the response returned after attempting the delivery.
     * @type {string}
     * @memberof HookDeliveryItem
     */
    'status': string;
    /**
     * Status code received when delivery was made.
     * @type {number}
     * @memberof HookDeliveryItem
     */
    'status_code': number;
    /**
     * The event that triggered the delivery.
     * @type {string}
     * @memberof HookDeliveryItem
     */
    'event': string;
    /**
     * The type of activity for the event that triggered the delivery.
     * @type {string}
     * @memberof HookDeliveryItem
     */
    'action': string | null;
    /**
     * The id of the GitHub App installation associated with this event.
     * @type {number}
     * @memberof HookDeliveryItem
     */
    'installation_id': number | null;
    /**
     * The id of the repository associated with this event.
     * @type {number}
     * @memberof HookDeliveryItem
     */
    'repository_id': number | null;
    /**
     * Time when the webhook delivery was throttled.
     * @type {string}
     * @memberof HookDeliveryItem
     */
    'throttled_at'?: string | null;
}
/**
 * 
 * @export
 * @interface HookDeliveryRequest
 */
export interface HookDeliveryRequest {
    /**
     * The request headers sent with the webhook delivery.
     * @type {{ [key: string]: any; }}
     * @memberof HookDeliveryRequest
     */
    'headers': { [key: string]: any; } | null;
    /**
     * The webhook payload.
     * @type {{ [key: string]: any; }}
     * @memberof HookDeliveryRequest
     */
    'payload': { [key: string]: any; } | null;
}
/**
 * 
 * @export
 * @interface HookDeliveryResponse
 */
export interface HookDeliveryResponse {
    /**
     * The response headers received when the delivery was made.
     * @type {{ [key: string]: any; }}
     * @memberof HookDeliveryResponse
     */
    'headers': { [key: string]: any; } | null;
    /**
     * The response payload received.
     * @type {{ [key: string]: any; }}
     * @memberof HookDeliveryResponse
     */
    'payload': { [key: string]: any; } | null;
}
/**
 * 
 * @export
 * @interface HookResponse
 */
export interface HookResponse {
    /**
     * 
     * @type {number}
     * @memberof HookResponse
     */
    'code': number | null;
    /**
     * 
     * @type {string}
     * @memberof HookResponse
     */
    'status': string | null;
    /**
     * 
     * @type {string}
     * @memberof HookResponse
     */
    'message': string | null;
}
/**
 * Hovercard
 * @export
 * @interface Hovercard
 */
export interface Hovercard {
    /**
     * 
     * @type {Array<HovercardContextsInner>}
     * @memberof Hovercard
     */
    'contexts': Array<HovercardContextsInner>;
}
/**
 * 
 * @export
 * @interface HovercardContextsInner
 */
export interface HovercardContextsInner {
    /**
     * 
     * @type {string}
     * @memberof HovercardContextsInner
     */
    'message': string;
    /**
     * 
     * @type {string}
     * @memberof HovercardContextsInner
     */
    'octicon': string;
}
/**
 * A repository import from an external source.
 * @export
 * @interface Import
 */
export interface Import {
    /**
     * 
     * @type {string}
     * @memberof Import
     */
    'vcs': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Import
     */
    'use_lfs'?: boolean;
    /**
     * The URL of the originating repository.
     * @type {string}
     * @memberof Import
     */
    'vcs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Import
     */
    'svc_root'?: string;
    /**
     * 
     * @type {string}
     * @memberof Import
     */
    'tfvc_project'?: string;
    /**
     * 
     * @type {string}
     * @memberof Import
     */
    'status': ImportStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof Import
     */
    'status_text'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Import
     */
    'failed_step'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Import
     */
    'error_message'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Import
     */
    'import_percent'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Import
     */
    'commit_count'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Import
     */
    'push_percent'?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof Import
     */
    'has_large_files'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Import
     */
    'large_files_size'?: number;
    /**
     * 
     * @type {number}
     * @memberof Import
     */
    'large_files_count'?: number;
    /**
     * 
     * @type {Array<ImportProjectChoicesInner>}
     * @memberof Import
     */
    'project_choices'?: Array<ImportProjectChoicesInner>;
    /**
     * 
     * @type {string}
     * @memberof Import
     */
    'message'?: string;
    /**
     * 
     * @type {number}
     * @memberof Import
     */
    'authors_count'?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Import
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Import
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof Import
     */
    'authors_url': string;
    /**
     * 
     * @type {string}
     * @memberof Import
     */
    'repository_url': string;
    /**
     * 
     * @type {string}
     * @memberof Import
     */
    'svn_root'?: string;
}

export const ImportStatusEnum = {
    Auth: 'auth',
    Error: 'error',
    None: 'none',
    Detecting: 'detecting',
    Choose: 'choose',
    AuthFailed: 'auth_failed',
    Importing: 'importing',
    Mapping: 'mapping',
    WaitingToPush: 'waiting_to_push',
    Pushing: 'pushing',
    Complete: 'complete',
    Setup: 'setup',
    Unknown: 'unknown',
    DetectionFoundMultiple: 'detection_found_multiple',
    DetectionFoundNothing: 'detection_found_nothing',
    DetectionNeedsAuth: 'detection_needs_auth'
} as const;

export type ImportStatusEnum = typeof ImportStatusEnum[keyof typeof ImportStatusEnum];

/**
 * 
 * @export
 * @interface ImportProjectChoicesInner
 */
export interface ImportProjectChoicesInner {
    /**
     * 
     * @type {string}
     * @memberof ImportProjectChoicesInner
     */
    'vcs'?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportProjectChoicesInner
     */
    'tfvc_project'?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportProjectChoicesInner
     */
    'human_name'?: string;
}
/**
 * 
 * @export
 * @interface InlineObject
 */
export interface InlineObject {
    /**
     * 
     * @type {string}
     * @memberof InlineObject
     */
    'code'?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineObject
     */
    'message'?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineObject
     */
    'documentation_url'?: string;
}
/**
 * 
 * @export
 * @interface InlineObject1
 */
export interface InlineObject1 {
    /**
     * 
     * @type {InlineObject1Block}
     * @memberof InlineObject1
     */
    'block'?: InlineObject1Block;
    /**
     * 
     * @type {string}
     * @memberof InlineObject1
     */
    'message'?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineObject1
     */
    'documentation_url'?: string;
}
/**
 * 
 * @export
 * @interface InlineObject1Block
 */
export interface InlineObject1Block {
    /**
     * 
     * @type {string}
     * @memberof InlineObject1Block
     */
    'reason'?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineObject1Block
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineObject1Block
     */
    'html_url'?: string | null;
}
/**
 * 
 * @export
 * @interface InlineObject2
 */
export interface InlineObject2 {
    /**
     * 
     * @type {Runner}
     * @memberof InlineObject2
     */
    'runner': Runner;
    /**
     * The base64 encoded runner configuration.
     * @type {string}
     * @memberof InlineObject2
     */
    'encoded_jit_config': string;
}
/**
 * 
 * @export
 * @interface InlineObject3
 */
export interface InlineObject3 {
    /**
     * 
     * @type {number}
     * @memberof InlineObject3
     */
    'total_count': number;
    /**
     * 
     * @type {Array<RunnerLabel>}
     * @memberof InlineObject3
     */
    'labels': Array<RunnerLabel>;
}
/**
 * Installation
 * @export
 * @interface Installation
 */
export interface Installation {
    /**
     * The ID of the installation.
     * @type {number}
     * @memberof Installation
     */
    'id': number;
    /**
     * 
     * @type {InstallationAccount}
     * @memberof Installation
     */
    'account': InstallationAccount | null;
    /**
     * Describe whether all repositories have been selected or there\'s a selection involved
     * @type {string}
     * @memberof Installation
     */
    'repository_selection': InstallationRepositorySelectionEnum;
    /**
     * 
     * @type {string}
     * @memberof Installation
     */
    'access_tokens_url': string;
    /**
     * 
     * @type {string}
     * @memberof Installation
     */
    'repositories_url': string;
    /**
     * 
     * @type {string}
     * @memberof Installation
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Installation
     */
    'app_id': number;
    /**
     * The ID of the user or organization this token is being scoped to.
     * @type {number}
     * @memberof Installation
     */
    'target_id': number;
    /**
     * 
     * @type {string}
     * @memberof Installation
     */
    'target_type': string;
    /**
     * 
     * @type {AppPermissions}
     * @memberof Installation
     */
    'permissions': AppPermissions;
    /**
     * 
     * @type {Array<string>}
     * @memberof Installation
     */
    'events': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Installation
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof Installation
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Installation
     */
    'single_file_name': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Installation
     */
    'has_multiple_single_files'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof Installation
     */
    'single_file_paths'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Installation
     */
    'app_slug': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof Installation
     */
    'suspended_by': NullableSimpleUser | null;
    /**
     * 
     * @type {string}
     * @memberof Installation
     */
    'suspended_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof Installation
     */
    'contact_email'?: string | null;
}

export const InstallationRepositorySelectionEnum = {
    All: 'all',
    Selected: 'selected'
} as const;

export type InstallationRepositorySelectionEnum = typeof InstallationRepositorySelectionEnum[keyof typeof InstallationRepositorySelectionEnum];

/**
 * 
 * @export
 * @interface InstallationAccount
 */
export interface InstallationAccount {
    /**
     * The name of the enterprise.
     * @type {string}
     * @memberof InstallationAccount
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'login': string;
    /**
     * Unique identifier of the enterprise
     * @type {number}
     * @memberof InstallationAccount
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'gravatar_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'followers_url': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'following_url': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'starred_url': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'subscriptions_url': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'organizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'received_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'type': string;
    /**
     * 
     * @type {boolean}
     * @memberof InstallationAccount
     */
    'site_admin': boolean;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'starred_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'user_view_type'?: string;
    /**
     * A short description of the enterprise.
     * @type {string}
     * @memberof InstallationAccount
     */
    'description'?: string | null;
    /**
     * The enterprise\'s website URL.
     * @type {string}
     * @memberof InstallationAccount
     */
    'website_url'?: string | null;
    /**
     * The slug url identifier for the enterprise.
     * @type {string}
     * @memberof InstallationAccount
     */
    'slug': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof InstallationAccount
     */
    'updated_at': string | null;
}
/**
 * Authentication token for a GitHub App installed on a user or org.
 * @export
 * @interface InstallationToken
 */
export interface InstallationToken {
    /**
     * 
     * @type {string}
     * @memberof InstallationToken
     */
    'token': string;
    /**
     * 
     * @type {string}
     * @memberof InstallationToken
     */
    'expires_at': string;
    /**
     * 
     * @type {AppPermissions}
     * @memberof InstallationToken
     */
    'permissions'?: AppPermissions;
    /**
     * 
     * @type {string}
     * @memberof InstallationToken
     */
    'repository_selection'?: InstallationTokenRepositorySelectionEnum;
    /**
     * 
     * @type {Array<Repository>}
     * @memberof InstallationToken
     */
    'repositories'?: Array<Repository>;
    /**
     * 
     * @type {string}
     * @memberof InstallationToken
     */
    'single_file'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof InstallationToken
     */
    'has_multiple_single_files'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof InstallationToken
     */
    'single_file_paths'?: Array<string>;
}

export const InstallationTokenRepositorySelectionEnum = {
    All: 'all',
    Selected: 'selected'
} as const;

export type InstallationTokenRepositorySelectionEnum = typeof InstallationTokenRepositorySelectionEnum[keyof typeof InstallationTokenRepositorySelectionEnum];

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface Integration
 */
export interface Integration {
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof Integration
     */
    'id': number;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof Integration
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof Integration
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Integration
     */
    'client_id'?: string;
    /**
     * 
     * @type {IntegrationOwner}
     * @memberof Integration
     */
    'owner': IntegrationOwner;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof Integration
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Integration
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof Integration
     */
    'external_url': string;
    /**
     * 
     * @type {string}
     * @memberof Integration
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof Integration
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof Integration
     */
    'updated_at': string;
    /**
     * 
     * @type {IntegrationPermissions}
     * @memberof Integration
     */
    'permissions': IntegrationPermissions;
    /**
     * The list of events for the GitHub app. Note that the `installation_target`, `security_advisory`, and `meta` events are not included because they are global events and not specific to an installation.
     * @type {Array<string>}
     * @memberof Integration
     */
    'events': Array<string>;
    /**
     * The number of installations associated with the GitHub app. Only returned when the integration is requesting details about itself.
     * @type {number}
     * @memberof Integration
     */
    'installations_count'?: number;
}
/**
 * Request to install an integration on a target
 * @export
 * @interface IntegrationInstallationRequest
 */
export interface IntegrationInstallationRequest {
    /**
     * Unique identifier of the request installation.
     * @type {number}
     * @memberof IntegrationInstallationRequest
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequest
     */
    'node_id'?: string;
    /**
     * 
     * @type {IntegrationInstallationRequestAccount}
     * @memberof IntegrationInstallationRequest
     */
    'account': IntegrationInstallationRequestAccount;
    /**
     * 
     * @type {SimpleUser}
     * @memberof IntegrationInstallationRequest
     */
    'requester': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequest
     */
    'created_at': string;
}
/**
 * 
 * @export
 * @interface IntegrationInstallationRequestAccount
 */
export interface IntegrationInstallationRequestAccount {
    /**
     * The name of the enterprise.
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'login': string;
    /**
     * Unique identifier of the enterprise
     * @type {number}
     * @memberof IntegrationInstallationRequestAccount
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'gravatar_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'followers_url': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'following_url': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'starred_url': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'subscriptions_url': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'organizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'received_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'type': string;
    /**
     * 
     * @type {boolean}
     * @memberof IntegrationInstallationRequestAccount
     */
    'site_admin': boolean;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'starred_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'user_view_type'?: string;
    /**
     * A short description of the enterprise.
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'description'?: string | null;
    /**
     * The enterprise\'s website URL.
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'website_url'?: string | null;
    /**
     * The slug url identifier for the enterprise.
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'slug': string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof IntegrationInstallationRequestAccount
     */
    'updated_at': string | null;
}
/**
 * @type IntegrationOwner
 * @export
 */
export type IntegrationOwner = Enterprise | SimpleUser;

/**
 * The set of permissions for the GitHub app
 * @export
 * @interface IntegrationPermissions
 */
export interface IntegrationPermissions {
    [key: string]: string | any;

    /**
     * 
     * @type {string}
     * @memberof IntegrationPermissions
     */
    'issues'?: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationPermissions
     */
    'checks'?: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationPermissions
     */
    'metadata'?: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationPermissions
     */
    'contents'?: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationPermissions
     */
    'deployments'?: string;
}
/**
 * The duration of the interaction restriction. Default: `one_day`.
 * @export
 * @enum {string}
 */

export const InteractionExpiry = {
    OneDay: 'one_day',
    ThreeDays: 'three_days',
    OneWeek: 'one_week',
    OneMonth: 'one_month',
    SixMonths: 'six_months'
} as const;

export type InteractionExpiry = typeof InteractionExpiry[keyof typeof InteractionExpiry];


/**
 * The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect.
 * @export
 * @enum {string}
 */

export const InteractionGroup = {
    ExistingUsers: 'existing_users',
    ContributorsOnly: 'contributors_only',
    CollaboratorsOnly: 'collaborators_only'
} as const;

export type InteractionGroup = typeof InteractionGroup[keyof typeof InteractionGroup];


/**
 * Limit interactions to a specific type of user for a specified duration
 * @export
 * @interface InteractionLimit
 */
export interface InteractionLimit {
    /**
     * 
     * @type {InteractionGroup}
     * @memberof InteractionLimit
     */
    'limit': InteractionGroup;
    /**
     * 
     * @type {InteractionExpiry}
     * @memberof InteractionLimit
     */
    'expiry'?: InteractionExpiry;
}


/**
 * Interaction limit settings.
 * @export
 * @interface InteractionLimitResponse
 */
export interface InteractionLimitResponse {
    /**
     * 
     * @type {InteractionGroup}
     * @memberof InteractionLimitResponse
     */
    'limit': InteractionGroup;
    /**
     * 
     * @type {string}
     * @memberof InteractionLimitResponse
     */
    'origin': string;
    /**
     * 
     * @type {string}
     * @memberof InteractionLimitResponse
     */
    'expires_at': string;
}


/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface Issue
 */
export interface Issue {
    /**
     * 
     * @type {string}
     * @memberof Issue
     */
    'active_lock_reason': IssueActiveLockReasonEnum | null;
    /**
     * 
     * @type {User2}
     * @memberof Issue
     */
    'assignee'?: User2 | null;
    /**
     * 
     * @type {Array<User2>}
     * @memberof Issue
     */
    'assignees': Array<User2>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof Issue
     */
    'author_association': IssueAuthorAssociationEnum;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof Issue
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof Issue
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof Issue
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Issue
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Issue
     */
    'id': number;
    /**
     * 
     * @type {Array<Label>}
     * @memberof Issue
     */
    'labels'?: Array<Label>;
    /**
     * 
     * @type {string}
     * @memberof Issue
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue
     */
    'locked'?: boolean;
    /**
     * 
     * @type {Milestone1}
     * @memberof Issue
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof Issue
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof Issue
     */
    'number': number;
    /**
     * 
     * @type {App10}
     * @memberof Issue
     */
    'performed_via_github_app'?: App10 | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof Issue
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {Reactions}
     * @memberof Issue
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof Issue
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof Issue
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof Issue
     */
    'state'?: IssueStateEnum;
    /**
     * 
     * @type {string}
     * @memberof Issue
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue
     */
    'timeline_url'?: string;
    /**
     * Title of the issue
     * @type {string}
     * @memberof Issue
     */
    'title': string;
    /**
     * 
     * @type {IssueType}
     * @memberof Issue
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {string}
     * @memberof Issue
     */
    'updated_at': string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof Issue
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof Issue
     */
    'user': User1 | null;
}

export const IssueActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type IssueActiveLockReasonEnum = typeof IssueActiveLockReasonEnum[keyof typeof IssueActiveLockReasonEnum];
export const IssueAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type IssueAuthorAssociationEnum = typeof IssueAuthorAssociationEnum[keyof typeof IssueAuthorAssociationEnum];
export const IssueStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type IssueStateEnum = typeof IssueStateEnum[keyof typeof IssueStateEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface Issue1
 */
export interface Issue1 {
    /**
     * 
     * @type {string}
     * @memberof Issue1
     */
    'active_lock_reason': Issue1ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User5}
     * @memberof Issue1
     */
    'assignee'?: User5 | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof Issue1
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof Issue1
     */
    'author_association': Issue1AuthorAssociationEnum;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof Issue1
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue1
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof Issue1
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof Issue1
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue1
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue1
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Issue1
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue1
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Issue1
     */
    'id': number;
    /**
     * 
     * @type {Array<Label1>}
     * @memberof Issue1
     */
    'labels'?: Array<Label1>;
    /**
     * 
     * @type {string}
     * @memberof Issue1
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue1
     */
    'locked'?: boolean;
    /**
     * 
     * @type {Milestone}
     * @memberof Issue1
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof Issue1
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof Issue1
     */
    'number': number;
    /**
     * 
     * @type {App11}
     * @memberof Issue1
     */
    'performed_via_github_app'?: App11 | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof Issue1
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {Reactions}
     * @memberof Issue1
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof Issue1
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof Issue1
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof Issue1
     */
    'state'?: Issue1StateEnum;
    /**
     * 
     * @type {string}
     * @memberof Issue1
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue1
     */
    'timeline_url'?: string;
    /**
     * Title of the issue
     * @type {string}
     * @memberof Issue1
     */
    'title': string;
    /**
     * 
     * @type {IssueType}
     * @memberof Issue1
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {string}
     * @memberof Issue1
     */
    'updated_at': string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof Issue1
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof Issue1
     */
    'user': User3 | null;
}

export const Issue1ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type Issue1ActiveLockReasonEnum = typeof Issue1ActiveLockReasonEnum[keyof typeof Issue1ActiveLockReasonEnum];
export const Issue1AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type Issue1AuthorAssociationEnum = typeof Issue1AuthorAssociationEnum[keyof typeof Issue1AuthorAssociationEnum];
export const Issue1StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type Issue1StateEnum = typeof Issue1StateEnum[keyof typeof Issue1StateEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface Issue10
 */
export interface Issue10 {
    /**
     * 
     * @type {string}
     * @memberof Issue10
     */
    'active_lock_reason': Issue10ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User2}
     * @memberof Issue10
     */
    'assignee'?: User2 | null;
    /**
     * 
     * @type {Array<User2>}
     * @memberof Issue10
     */
    'assignees': Array<User2>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof Issue10
     */
    'author_association': Issue10AuthorAssociationEnum;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof Issue10
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue10
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof Issue10
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof Issue10
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue10
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue10
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Issue10
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue10
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Issue10
     */
    'id': number;
    /**
     * 
     * @type {Array<Label1>}
     * @memberof Issue10
     */
    'labels'?: Array<Label1>;
    /**
     * 
     * @type {string}
     * @memberof Issue10
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue10
     */
    'locked': boolean;
    /**
     * 
     * @type {Milestone1}
     * @memberof Issue10
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof Issue10
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof Issue10
     */
    'number': number;
    /**
     * 
     * @type {App1}
     * @memberof Issue10
     */
    'performed_via_github_app'?: App1 | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof Issue10
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {Reactions}
     * @memberof Issue10
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof Issue10
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof Issue10
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof Issue10
     */
    'state'?: Issue10StateEnum;
    /**
     * 
     * @type {string}
     * @memberof Issue10
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue10
     */
    'timeline_url'?: string;
    /**
     * Title of the issue
     * @type {string}
     * @memberof Issue10
     */
    'title': string;
    /**
     * 
     * @type {IssueType}
     * @memberof Issue10
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {string}
     * @memberof Issue10
     */
    'updated_at': string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof Issue10
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof Issue10
     */
    'user': User1 | null;
}

export const Issue10ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type Issue10ActiveLockReasonEnum = typeof Issue10ActiveLockReasonEnum[keyof typeof Issue10ActiveLockReasonEnum];
export const Issue10AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type Issue10AuthorAssociationEnum = typeof Issue10AuthorAssociationEnum[keyof typeof Issue10AuthorAssociationEnum];
export const Issue10StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type Issue10StateEnum = typeof Issue10StateEnum[keyof typeof Issue10StateEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface Issue2
 */
export interface Issue2 {
    /**
     * 
     * @type {string}
     * @memberof Issue2
     */
    'active_lock_reason': Issue2ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User4}
     * @memberof Issue2
     */
    'assignee'?: User4 | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof Issue2
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof Issue2
     */
    'author_association': Issue2AuthorAssociationEnum;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof Issue2
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue2
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof Issue2
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof Issue2
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue2
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue2
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Issue2
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue2
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Issue2
     */
    'id': number;
    /**
     * 
     * @type {Array<Label>}
     * @memberof Issue2
     */
    'labels'?: Array<Label>;
    /**
     * 
     * @type {string}
     * @memberof Issue2
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue2
     */
    'locked'?: boolean;
    /**
     * 
     * @type {Milestone}
     * @memberof Issue2
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof Issue2
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof Issue2
     */
    'number': number;
    /**
     * 
     * @type {App12}
     * @memberof Issue2
     */
    'performed_via_github_app'?: App12 | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof Issue2
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {Reactions}
     * @memberof Issue2
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof Issue2
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof Issue2
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof Issue2
     */
    'state'?: Issue2StateEnum;
    /**
     * 
     * @type {string}
     * @memberof Issue2
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue2
     */
    'timeline_url'?: string;
    /**
     * 
     * @type {IssueType}
     * @memberof Issue2
     */
    'type'?: IssueType | null;
    /**
     * Title of the issue
     * @type {string}
     * @memberof Issue2
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof Issue2
     */
    'updated_at': string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof Issue2
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof Issue2
     */
    'user': User3 | null;
}

export const Issue2ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type Issue2ActiveLockReasonEnum = typeof Issue2ActiveLockReasonEnum[keyof typeof Issue2ActiveLockReasonEnum];
export const Issue2AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type Issue2AuthorAssociationEnum = typeof Issue2AuthorAssociationEnum[keyof typeof Issue2AuthorAssociationEnum];
export const Issue2StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type Issue2StateEnum = typeof Issue2StateEnum[keyof typeof Issue2StateEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface Issue3
 */
export interface Issue3 {
    /**
     * 
     * @type {string}
     * @memberof Issue3
     */
    'active_lock_reason': Issue3ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User4}
     * @memberof Issue3
     */
    'assignee'?: User4 | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof Issue3
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof Issue3
     */
    'author_association': Issue3AuthorAssociationEnum;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof Issue3
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue3
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof Issue3
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof Issue3
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue3
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue3
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Issue3
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue3
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Issue3
     */
    'id': number;
    /**
     * 
     * @type {Array<Label>}
     * @memberof Issue3
     */
    'labels'?: Array<Label>;
    /**
     * 
     * @type {string}
     * @memberof Issue3
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue3
     */
    'locked'?: boolean;
    /**
     * 
     * @type {Milestone}
     * @memberof Issue3
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof Issue3
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof Issue3
     */
    'number': number;
    /**
     * 
     * @type {App13}
     * @memberof Issue3
     */
    'performed_via_github_app'?: App13 | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof Issue3
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {Reactions}
     * @memberof Issue3
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof Issue3
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof Issue3
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof Issue3
     */
    'state'?: Issue3StateEnum;
    /**
     * 
     * @type {string}
     * @memberof Issue3
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue3
     */
    'timeline_url'?: string;
    /**
     * 
     * @type {IssueType}
     * @memberof Issue3
     */
    'type'?: IssueType | null;
    /**
     * Title of the issue
     * @type {string}
     * @memberof Issue3
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof Issue3
     */
    'updated_at': string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof Issue3
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof Issue3
     */
    'user': User3 | null;
}

export const Issue3ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type Issue3ActiveLockReasonEnum = typeof Issue3ActiveLockReasonEnum[keyof typeof Issue3ActiveLockReasonEnum];
export const Issue3AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type Issue3AuthorAssociationEnum = typeof Issue3AuthorAssociationEnum[keyof typeof Issue3AuthorAssociationEnum];
export const Issue3StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type Issue3StateEnum = typeof Issue3StateEnum[keyof typeof Issue3StateEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface Issue4
 */
export interface Issue4 {
    /**
     * 
     * @type {string}
     * @memberof Issue4
     */
    'active_lock_reason': Issue4ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User2}
     * @memberof Issue4
     */
    'assignee'?: User2 | null;
    /**
     * 
     * @type {Array<User2>}
     * @memberof Issue4
     */
    'assignees': Array<User2>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof Issue4
     */
    'author_association': Issue4AuthorAssociationEnum;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof Issue4
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue4
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof Issue4
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof Issue4
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue4
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue4
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Issue4
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue4
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Issue4
     */
    'id': number;
    /**
     * 
     * @type {Array<Label1>}
     * @memberof Issue4
     */
    'labels'?: Array<Label1>;
    /**
     * 
     * @type {string}
     * @memberof Issue4
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue4
     */
    'locked': boolean;
    /**
     * 
     * @type {Milestone1}
     * @memberof Issue4
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof Issue4
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof Issue4
     */
    'number': number;
    /**
     * 
     * @type {App14}
     * @memberof Issue4
     */
    'performed_via_github_app'?: App14 | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof Issue4
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {Reactions}
     * @memberof Issue4
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof Issue4
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof Issue4
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof Issue4
     */
    'state'?: Issue4StateEnum;
    /**
     * 
     * @type {string}
     * @memberof Issue4
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue4
     */
    'timeline_url'?: string;
    /**
     * 
     * @type {IssueType}
     * @memberof Issue4
     */
    'type'?: IssueType | null;
    /**
     * Title of the issue
     * @type {string}
     * @memberof Issue4
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof Issue4
     */
    'updated_at': string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof Issue4
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof Issue4
     */
    'user': User1 | null;
}

export const Issue4ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type Issue4ActiveLockReasonEnum = typeof Issue4ActiveLockReasonEnum[keyof typeof Issue4ActiveLockReasonEnum];
export const Issue4AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type Issue4AuthorAssociationEnum = typeof Issue4AuthorAssociationEnum[keyof typeof Issue4AuthorAssociationEnum];
export const Issue4StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type Issue4StateEnum = typeof Issue4StateEnum[keyof typeof Issue4StateEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface Issue5
 */
export interface Issue5 {
    /**
     * 
     * @type {string}
     * @memberof Issue5
     */
    'active_lock_reason': Issue5ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User}
     * @memberof Issue5
     */
    'assignee'?: User | null;
    /**
     * 
     * @type {Array<User>}
     * @memberof Issue5
     */
    'assignees': Array<User>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof Issue5
     */
    'author_association': Issue5AuthorAssociationEnum;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof Issue5
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue5
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof Issue5
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof Issue5
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue5
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue5
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Issue5
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue5
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Issue5
     */
    'id': number;
    /**
     * 
     * @type {Array<Label1>}
     * @memberof Issue5
     */
    'labels'?: Array<Label1>;
    /**
     * 
     * @type {string}
     * @memberof Issue5
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue5
     */
    'locked'?: boolean;
    /**
     * 
     * @type {Milestone}
     * @memberof Issue5
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof Issue5
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof Issue5
     */
    'number': number;
    /**
     * 
     * @type {App15}
     * @memberof Issue5
     */
    'performed_via_github_app'?: App15 | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof Issue5
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {Reactions}
     * @memberof Issue5
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof Issue5
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof Issue5
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof Issue5
     */
    'state'?: Issue5StateEnum;
    /**
     * 
     * @type {string}
     * @memberof Issue5
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue5
     */
    'timeline_url'?: string;
    /**
     * Title of the issue
     * @type {string}
     * @memberof Issue5
     */
    'title': string;
    /**
     * 
     * @type {IssueType}
     * @memberof Issue5
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {string}
     * @memberof Issue5
     */
    'updated_at': string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof Issue5
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof Issue5
     */
    'user': User1 | null;
}

export const Issue5ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type Issue5ActiveLockReasonEnum = typeof Issue5ActiveLockReasonEnum[keyof typeof Issue5ActiveLockReasonEnum];
export const Issue5AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type Issue5AuthorAssociationEnum = typeof Issue5AuthorAssociationEnum[keyof typeof Issue5AuthorAssociationEnum];
export const Issue5StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type Issue5StateEnum = typeof Issue5StateEnum[keyof typeof Issue5StateEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface Issue6
 */
export interface Issue6 {
    /**
     * 
     * @type {string}
     * @memberof Issue6
     */
    'active_lock_reason'?: Issue6ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User2}
     * @memberof Issue6
     */
    'assignee'?: User2 | null;
    /**
     * 
     * @type {Array<User2>}
     * @memberof Issue6
     */
    'assignees'?: Array<User2>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof Issue6
     */
    'author_association'?: Issue6AuthorAssociationEnum;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof Issue6
     */
    'body'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue6
     */
    'closed_at'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Issue6
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof Issue6
     */
    'comments_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Issue6
     */
    'created_at'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue6
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Issue6
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Issue6
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof Issue6
     */
    'id': number;
    /**
     * 
     * @type {Array<Label>}
     * @memberof Issue6
     */
    'labels'?: Array<Label>;
    /**
     * 
     * @type {string}
     * @memberof Issue6
     */
    'labels_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue6
     */
    'locked'?: boolean;
    /**
     * 
     * @type {Milestone1}
     * @memberof Issue6
     */
    'milestone'?: Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof Issue6
     */
    'node_id'?: string;
    /**
     * 
     * @type {number}
     * @memberof Issue6
     */
    'number': number;
    /**
     * 
     * @type {App1}
     * @memberof Issue6
     */
    'performed_via_github_app'?: App1 | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof Issue6
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {Reactions}
     * @memberof Issue6
     */
    'reactions'?: Reactions;
    /**
     * 
     * @type {string}
     * @memberof Issue6
     */
    'repository_url'?: string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof Issue6
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof Issue6
     */
    'state'?: Issue6StateEnum;
    /**
     * 
     * @type {string}
     * @memberof Issue6
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue6
     */
    'timeline_url'?: string;
    /**
     * Title of the issue
     * @type {string}
     * @memberof Issue6
     */
    'title'?: string;
    /**
     * 
     * @type {string}
     * @memberof Issue6
     */
    'updated_at'?: string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof Issue6
     */
    'url'?: string;
    /**
     * 
     * @type {User1}
     * @memberof Issue6
     */
    'user'?: User1 | null;
    /**
     * 
     * @type {IssueType}
     * @memberof Issue6
     */
    'type'?: IssueType | null;
}

export const Issue6ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type Issue6ActiveLockReasonEnum = typeof Issue6ActiveLockReasonEnum[keyof typeof Issue6ActiveLockReasonEnum];
export const Issue6AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type Issue6AuthorAssociationEnum = typeof Issue6AuthorAssociationEnum[keyof typeof Issue6AuthorAssociationEnum];
export const Issue6StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type Issue6StateEnum = typeof Issue6StateEnum[keyof typeof Issue6StateEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface Issue7
 */
export interface Issue7 {
    /**
     * 
     * @type {string}
     * @memberof Issue7
     */
    'active_lock_reason': Issue7ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User2}
     * @memberof Issue7
     */
    'assignee'?: User2 | null;
    /**
     * 
     * @type {Array<User2>}
     * @memberof Issue7
     */
    'assignees': Array<User2>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof Issue7
     */
    'author_association': Issue7AuthorAssociationEnum;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof Issue7
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue7
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof Issue7
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof Issue7
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue7
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue7
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Issue7
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue7
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Issue7
     */
    'id': number;
    /**
     * 
     * @type {Array<Label>}
     * @memberof Issue7
     */
    'labels'?: Array<Label>;
    /**
     * 
     * @type {string}
     * @memberof Issue7
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue7
     */
    'locked'?: boolean;
    /**
     * 
     * @type {Milestone}
     * @memberof Issue7
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof Issue7
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof Issue7
     */
    'number': number;
    /**
     * 
     * @type {App12}
     * @memberof Issue7
     */
    'performed_via_github_app'?: App12 | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof Issue7
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {Reactions}
     * @memberof Issue7
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof Issue7
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof Issue7
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof Issue7
     */
    'state'?: Issue7StateEnum;
    /**
     * 
     * @type {string}
     * @memberof Issue7
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue7
     */
    'timeline_url'?: string;
    /**
     * Title of the issue
     * @type {string}
     * @memberof Issue7
     */
    'title': string;
    /**
     * 
     * @type {IssueType}
     * @memberof Issue7
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {string}
     * @memberof Issue7
     */
    'updated_at': string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof Issue7
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof Issue7
     */
    'user': User1 | null;
}

export const Issue7ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type Issue7ActiveLockReasonEnum = typeof Issue7ActiveLockReasonEnum[keyof typeof Issue7ActiveLockReasonEnum];
export const Issue7AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type Issue7AuthorAssociationEnum = typeof Issue7AuthorAssociationEnum[keyof typeof Issue7AuthorAssociationEnum];
export const Issue7StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type Issue7StateEnum = typeof Issue7StateEnum[keyof typeof Issue7StateEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface Issue8
 */
export interface Issue8 {
    /**
     * 
     * @type {string}
     * @memberof Issue8
     */
    'active_lock_reason': Issue8ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User}
     * @memberof Issue8
     */
    'assignee'?: User | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof Issue8
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof Issue8
     */
    'author_association': Issue8AuthorAssociationEnum;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof Issue8
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue8
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof Issue8
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof Issue8
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue8
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue8
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Issue8
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue8
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Issue8
     */
    'id': number;
    /**
     * 
     * @type {Array<Label1>}
     * @memberof Issue8
     */
    'labels'?: Array<Label1>;
    /**
     * 
     * @type {string}
     * @memberof Issue8
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue8
     */
    'locked'?: boolean;
    /**
     * 
     * @type {Milestone}
     * @memberof Issue8
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof Issue8
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof Issue8
     */
    'number': number;
    /**
     * 
     * @type {App16}
     * @memberof Issue8
     */
    'performed_via_github_app'?: App16 | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof Issue8
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {Reactions}
     * @memberof Issue8
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof Issue8
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof Issue8
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof Issue8
     */
    'state': Issue8StateEnum;
    /**
     * 
     * @type {string}
     * @memberof Issue8
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue8
     */
    'timeline_url'?: string;
    /**
     * Title of the issue
     * @type {string}
     * @memberof Issue8
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof Issue8
     */
    'updated_at': string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof Issue8
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof Issue8
     */
    'user': User3 | null;
    /**
     * 
     * @type {IssueType}
     * @memberof Issue8
     */
    'type'?: IssueType | null;
}

export const Issue8ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type Issue8ActiveLockReasonEnum = typeof Issue8ActiveLockReasonEnum[keyof typeof Issue8ActiveLockReasonEnum];
export const Issue8AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type Issue8AuthorAssociationEnum = typeof Issue8AuthorAssociationEnum[keyof typeof Issue8AuthorAssociationEnum];
export const Issue8StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type Issue8StateEnum = typeof Issue8StateEnum[keyof typeof Issue8StateEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface Issue9
 */
export interface Issue9 {
    /**
     * 
     * @type {string}
     * @memberof Issue9
     */
    'active_lock_reason': Issue9ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User2}
     * @memberof Issue9
     */
    'assignee'?: User2 | null;
    /**
     * 
     * @type {Array<User2>}
     * @memberof Issue9
     */
    'assignees': Array<User2>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof Issue9
     */
    'author_association': Issue9AuthorAssociationEnum;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof Issue9
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue9
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof Issue9
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof Issue9
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue9
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue9
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Issue9
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Issue9
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Issue9
     */
    'id': number;
    /**
     * 
     * @type {Array<Label>}
     * @memberof Issue9
     */
    'labels'?: Array<Label>;
    /**
     * 
     * @type {string}
     * @memberof Issue9
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Issue9
     */
    'locked'?: boolean;
    /**
     * 
     * @type {Milestone1}
     * @memberof Issue9
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof Issue9
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof Issue9
     */
    'number': number;
    /**
     * 
     * @type {App1}
     * @memberof Issue9
     */
    'performed_via_github_app'?: App1 | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof Issue9
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {Reactions}
     * @memberof Issue9
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof Issue9
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof Issue9
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof Issue9
     */
    'state'?: Issue9StateEnum;
    /**
     * 
     * @type {string}
     * @memberof Issue9
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Issue9
     */
    'timeline_url'?: string;
    /**
     * Title of the issue
     * @type {string}
     * @memberof Issue9
     */
    'title': string;
    /**
     * 
     * @type {IssueType}
     * @memberof Issue9
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {string}
     * @memberof Issue9
     */
    'updated_at': string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof Issue9
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof Issue9
     */
    'user': User1 | null;
}

export const Issue9ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type Issue9ActiveLockReasonEnum = typeof Issue9ActiveLockReasonEnum[keyof typeof Issue9ActiveLockReasonEnum];
export const Issue9AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type Issue9AuthorAssociationEnum = typeof Issue9AuthorAssociationEnum[keyof typeof Issue9AuthorAssociationEnum];
export const Issue9StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type Issue9StateEnum = typeof Issue9StateEnum[keyof typeof Issue9StateEnum];

/**
 * The [comment](https://docs.github.com/rest/issues/comments#get-an-issue-comment) itself.
 * @export
 * @interface IssueComment
 */
export interface IssueComment {
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof IssueComment
     */
    'author_association': IssueCommentAuthorAssociationEnum;
    /**
     * Contents of the issue comment
     * @type {string}
     * @memberof IssueComment
     */
    'body': string;
    /**
     * 
     * @type {string}
     * @memberof IssueComment
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof IssueComment
     */
    'html_url': string;
    /**
     * Unique identifier of the issue comment
     * @type {number}
     * @memberof IssueComment
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof IssueComment
     */
    'issue_url': string;
    /**
     * 
     * @type {string}
     * @memberof IssueComment
     */
    'node_id': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof IssueComment
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {Reactions}
     * @memberof IssueComment
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof IssueComment
     */
    'updated_at': string;
    /**
     * URL for the issue comment
     * @type {string}
     * @memberof IssueComment
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof IssueComment
     */
    'user': User1 | null;
}

export const IssueCommentAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type IssueCommentAuthorAssociationEnum = typeof IssueCommentAuthorAssociationEnum[keyof typeof IssueCommentAuthorAssociationEnum];

/**
 * Issue Event
 * @export
 * @interface IssueEvent
 */
export interface IssueEvent {
    /**
     * 
     * @type {number}
     * @memberof IssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof IssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof IssueEvent
     */
    'url': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof IssueEvent
     */
    'actor': NullableSimpleUser | null;
    /**
     * 
     * @type {string}
     * @memberof IssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof IssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof IssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof IssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIssue}
     * @memberof IssueEvent
     */
    'issue'?: NullableIssue | null;
    /**
     * 
     * @type {IssueEventLabel}
     * @memberof IssueEvent
     */
    'label'?: IssueEventLabel;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof IssueEvent
     */
    'assignee'?: NullableSimpleUser | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof IssueEvent
     */
    'assigner'?: NullableSimpleUser | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof IssueEvent
     */
    'review_requester'?: NullableSimpleUser | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof IssueEvent
     */
    'requested_reviewer'?: NullableSimpleUser | null;
    /**
     * 
     * @type {Team}
     * @memberof IssueEvent
     */
    'requested_team'?: Team;
    /**
     * 
     * @type {IssueEventDismissedReview}
     * @memberof IssueEvent
     */
    'dismissed_review'?: IssueEventDismissedReview;
    /**
     * 
     * @type {IssueEventMilestone}
     * @memberof IssueEvent
     */
    'milestone'?: IssueEventMilestone;
    /**
     * 
     * @type {IssueEventProjectCard}
     * @memberof IssueEvent
     */
    'project_card'?: IssueEventProjectCard;
    /**
     * 
     * @type {IssueEventRename}
     * @memberof IssueEvent
     */
    'rename'?: IssueEventRename;
    /**
     * 
     * @type {AuthorAssociation}
     * @memberof IssueEvent
     */
    'author_association'?: AuthorAssociation;
    /**
     * 
     * @type {string}
     * @memberof IssueEvent
     */
    'lock_reason'?: string | null;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof IssueEvent
     */
    'performed_via_github_app'?: NullableIntegration | null;
}


/**
 * 
 * @export
 * @interface IssueEventDismissedReview
 */
export interface IssueEventDismissedReview {
    /**
     * 
     * @type {string}
     * @memberof IssueEventDismissedReview
     */
    'state': string;
    /**
     * 
     * @type {number}
     * @memberof IssueEventDismissedReview
     */
    'review_id': number;
    /**
     * 
     * @type {string}
     * @memberof IssueEventDismissedReview
     */
    'dismissal_message': string | null;
    /**
     * 
     * @type {string}
     * @memberof IssueEventDismissedReview
     */
    'dismissal_commit_id'?: string | null;
}
/**
 * Issue Event for Issue
 * @export
 * @interface IssueEventForIssue
 */
export interface IssueEventForIssue {
    /**
     * 
     * @type {number}
     * @memberof IssueEventForIssue
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof IssueEventForIssue
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof IssueEventForIssue
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof IssueEventForIssue
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof IssueEventForIssue
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof IssueEventForIssue
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof IssueEventForIssue
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof IssueEventForIssue
     */
    'created_at': string;
    /**
     * 
     * @type {Integration}
     * @memberof IssueEventForIssue
     */
    'performed_via_github_app': Integration | null;
    /**
     * 
     * @type {LabeledIssueEventLabel}
     * @memberof IssueEventForIssue
     */
    'label': LabeledIssueEventLabel;
    /**
     * 
     * @type {SimpleUser}
     * @memberof IssueEventForIssue
     */
    'assignee': SimpleUser;
    /**
     * 
     * @type {SimpleUser}
     * @memberof IssueEventForIssue
     */
    'assigner': SimpleUser;
    /**
     * 
     * @type {MilestonedIssueEventMilestone}
     * @memberof IssueEventForIssue
     */
    'milestone': MilestonedIssueEventMilestone;
    /**
     * 
     * @type {RenamedIssueEventRename}
     * @memberof IssueEventForIssue
     */
    'rename': RenamedIssueEventRename;
    /**
     * 
     * @type {SimpleUser}
     * @memberof IssueEventForIssue
     */
    'review_requester': SimpleUser;
    /**
     * 
     * @type {Team}
     * @memberof IssueEventForIssue
     */
    'requested_team'?: Team;
    /**
     * 
     * @type {SimpleUser}
     * @memberof IssueEventForIssue
     */
    'requested_reviewer'?: SimpleUser;
    /**
     * 
     * @type {ReviewDismissedIssueEventDismissedReview}
     * @memberof IssueEventForIssue
     */
    'dismissed_review': ReviewDismissedIssueEventDismissedReview;
    /**
     * 
     * @type {string}
     * @memberof IssueEventForIssue
     */
    'lock_reason': string | null;
    /**
     * 
     * @type {AddedToProjectIssueEventProjectCard}
     * @memberof IssueEventForIssue
     */
    'project_card'?: AddedToProjectIssueEventProjectCard;
}
/**
 * Issue Event Label
 * @export
 * @interface IssueEventLabel
 */
export interface IssueEventLabel {
    /**
     * 
     * @type {string}
     * @memberof IssueEventLabel
     */
    'name': string | null;
    /**
     * 
     * @type {string}
     * @memberof IssueEventLabel
     */
    'color': string | null;
}
/**
 * Issue Event Milestone
 * @export
 * @interface IssueEventMilestone
 */
export interface IssueEventMilestone {
    /**
     * 
     * @type {string}
     * @memberof IssueEventMilestone
     */
    'title': string;
}
/**
 * Issue Event Project Card
 * @export
 * @interface IssueEventProjectCard
 */
export interface IssueEventProjectCard {
    /**
     * 
     * @type {string}
     * @memberof IssueEventProjectCard
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof IssueEventProjectCard
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof IssueEventProjectCard
     */
    'project_url': string;
    /**
     * 
     * @type {number}
     * @memberof IssueEventProjectCard
     */
    'project_id': number;
    /**
     * 
     * @type {string}
     * @memberof IssueEventProjectCard
     */
    'column_name': string;
    /**
     * 
     * @type {string}
     * @memberof IssueEventProjectCard
     */
    'previous_column_name'?: string;
}
/**
 * Issue Event Rename
 * @export
 * @interface IssueEventRename
 */
export interface IssueEventRename {
    /**
     * 
     * @type {string}
     * @memberof IssueEventRename
     */
    'from': string;
    /**
     * 
     * @type {string}
     * @memberof IssueEventRename
     */
    'to': string;
}
/**
 * @type IssueLabelsInner
 * @export
 */
export type IssueLabelsInner = IssueLabelsInnerOneOf | string;

/**
 * 
 * @export
 * @interface IssueLabelsInnerOneOf
 */
export interface IssueLabelsInnerOneOf {
    /**
     * 
     * @type {number}
     * @memberof IssueLabelsInnerOneOf
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof IssueLabelsInnerOneOf
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof IssueLabelsInnerOneOf
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof IssueLabelsInnerOneOf
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof IssueLabelsInnerOneOf
     */
    'description'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IssueLabelsInnerOneOf
     */
    'color'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof IssueLabelsInnerOneOf
     */
    'default'?: boolean;
}
/**
 * 
 * @export
 * @interface IssuePullRequest
 */
export interface IssuePullRequest {
    /**
     * 
     * @type {string}
     * @memberof IssuePullRequest
     */
    'merged_at'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IssuePullRequest
     */
    'diff_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof IssuePullRequest
     */
    'html_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof IssuePullRequest
     */
    'patch_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof IssuePullRequest
     */
    'url': string | null;
}
/**
 * Issue Search Result Item
 * @export
 * @interface IssueSearchResultItem
 */
export interface IssueSearchResultItem {
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'repository_url': string;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof IssueSearchResultItem
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof IssueSearchResultItem
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'title': string;
    /**
     * 
     * @type {boolean}
     * @memberof IssueSearchResultItem
     */
    'locked': boolean;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'active_lock_reason'?: string | null;
    /**
     * 
     * @type {Array<SimpleUser>}
     * @memberof IssueSearchResultItem
     */
    'assignees'?: Array<SimpleUser> | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof IssueSearchResultItem
     */
    'user': NullableSimpleUser | null;
    /**
     * 
     * @type {Array<IssueSearchResultItemLabelsInner>}
     * @memberof IssueSearchResultItem
     */
    'labels': Array<IssueSearchResultItemLabelsInner>;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof IssueSearchResultItem
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'state': string;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof IssueSearchResultItem
     */
    'assignee': NullableSimpleUser | null;
    /**
     * 
     * @type {NullableMilestone}
     * @memberof IssueSearchResultItem
     */
    'milestone': NullableMilestone | null;
    /**
     * 
     * @type {number}
     * @memberof IssueSearchResultItem
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'closed_at': string | null;
    /**
     * 
     * @type {Array<SearchResultTextMatchesInner>}
     * @memberof IssueSearchResultItem
     */
    'text_matches'?: Array<SearchResultTextMatchesInner>;
    /**
     * 
     * @type {IssuePullRequest}
     * @memberof IssueSearchResultItem
     */
    'pull_request'?: IssuePullRequest;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'body'?: string;
    /**
     * 
     * @type {number}
     * @memberof IssueSearchResultItem
     */
    'score': number;
    /**
     * 
     * @type {AuthorAssociation}
     * @memberof IssueSearchResultItem
     */
    'author_association': AuthorAssociation;
    /**
     * 
     * @type {boolean}
     * @memberof IssueSearchResultItem
     */
    'draft'?: boolean;
    /**
     * 
     * @type {Repository}
     * @memberof IssueSearchResultItem
     */
    'repository'?: Repository;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'body_html'?: string;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'body_text'?: string;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItem
     */
    'timeline_url'?: string;
    /**
     * 
     * @type {IssueType}
     * @memberof IssueSearchResultItem
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof IssueSearchResultItem
     */
    'performed_via_github_app'?: NullableIntegration | null;
    /**
     * 
     * @type {ReactionRollup}
     * @memberof IssueSearchResultItem
     */
    'reactions'?: ReactionRollup;
}


/**
 * 
 * @export
 * @interface IssueSearchResultItemLabelsInner
 */
export interface IssueSearchResultItemLabelsInner {
    /**
     * 
     * @type {number}
     * @memberof IssueSearchResultItemLabelsInner
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItemLabelsInner
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItemLabelsInner
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItemLabelsInner
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItemLabelsInner
     */
    'color'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof IssueSearchResultItemLabelsInner
     */
    'default'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof IssueSearchResultItemLabelsInner
     */
    'description'?: string | null;
}
/**
 * The type of issue.
 * @export
 * @interface IssueType
 */
export interface IssueType {
    /**
     * The unique identifier of the issue type.
     * @type {number}
     * @memberof IssueType
     */
    'id': number;
    /**
     * The node identifier of the issue type.
     * @type {string}
     * @memberof IssueType
     */
    'node_id': string;
    /**
     * The name of the issue type.
     * @type {string}
     * @memberof IssueType
     */
    'name': string;
    /**
     * The description of the issue type.
     * @type {string}
     * @memberof IssueType
     */
    'description': string | null;
    /**
     * The color of the issue type.
     * @type {string}
     * @memberof IssueType
     */
    'color'?: IssueTypeColorEnum | null;
    /**
     * The time the issue type created.
     * @type {string}
     * @memberof IssueType
     */
    'created_at'?: string;
    /**
     * The time the issue type last updated.
     * @type {string}
     * @memberof IssueType
     */
    'updated_at'?: string;
    /**
     * The enabled state of the issue type.
     * @type {boolean}
     * @memberof IssueType
     */
    'is_enabled'?: boolean;
}

export const IssueTypeColorEnum = {
    Gray: 'gray',
    Blue: 'blue',
    Green: 'green',
    Yellow: 'yellow',
    Orange: 'orange',
    Red: 'red',
    Pink: 'pink',
    Purple: 'purple'
} as const;

export type IssueTypeColorEnum = typeof IssueTypeColorEnum[keyof typeof IssueTypeColorEnum];

/**
 * Information of a job execution in a workflow run
 * @export
 * @interface Job
 */
export interface Job {
    /**
     * The id of the job.
     * @type {number}
     * @memberof Job
     */
    'id': number;
    /**
     * The id of the associated workflow run.
     * @type {number}
     * @memberof Job
     */
    'run_id': number;
    /**
     * 
     * @type {string}
     * @memberof Job
     */
    'run_url': string;
    /**
     * Attempt number of the associated workflow run, 1 for first attempt and higher if the workflow was re-run.
     * @type {number}
     * @memberof Job
     */
    'run_attempt'?: number;
    /**
     * 
     * @type {string}
     * @memberof Job
     */
    'node_id': string;
    /**
     * The SHA of the commit that is being run.
     * @type {string}
     * @memberof Job
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof Job
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Job
     */
    'html_url': string | null;
    /**
     * The phase of the lifecycle that the job is currently in.
     * @type {string}
     * @memberof Job
     */
    'status': JobStatusEnum;
    /**
     * The outcome of the job.
     * @type {string}
     * @memberof Job
     */
    'conclusion': JobConclusionEnum | null;
    /**
     * The time that the job created, in ISO 8601 format.
     * @type {string}
     * @memberof Job
     */
    'created_at': string;
    /**
     * The time that the job started, in ISO 8601 format.
     * @type {string}
     * @memberof Job
     */
    'started_at': string;
    /**
     * The time that the job finished, in ISO 8601 format.
     * @type {string}
     * @memberof Job
     */
    'completed_at': string | null;
    /**
     * The name of the job.
     * @type {string}
     * @memberof Job
     */
    'name': string;
    /**
     * Steps in this job.
     * @type {Array<JobStepsInner>}
     * @memberof Job
     */
    'steps'?: Array<JobStepsInner>;
    /**
     * 
     * @type {string}
     * @memberof Job
     */
    'check_run_url': string;
    /**
     * Labels for the workflow job. Specified by the \"runs_on\" attribute in the action\'s workflow file.
     * @type {Array<string>}
     * @memberof Job
     */
    'labels': Array<string>;
    /**
     * The ID of the runner to which this job has been assigned. (If a runner hasn\'t yet been assigned, this will be null.)
     * @type {number}
     * @memberof Job
     */
    'runner_id': number | null;
    /**
     * The name of the runner to which this job has been assigned. (If a runner hasn\'t yet been assigned, this will be null.)
     * @type {string}
     * @memberof Job
     */
    'runner_name': string | null;
    /**
     * The ID of the runner group to which this job has been assigned. (If a runner hasn\'t yet been assigned, this will be null.)
     * @type {number}
     * @memberof Job
     */
    'runner_group_id': number | null;
    /**
     * The name of the runner group to which this job has been assigned. (If a runner hasn\'t yet been assigned, this will be null.)
     * @type {string}
     * @memberof Job
     */
    'runner_group_name': string | null;
    /**
     * The name of the workflow.
     * @type {string}
     * @memberof Job
     */
    'workflow_name': string | null;
    /**
     * The name of the current branch.
     * @type {string}
     * @memberof Job
     */
    'head_branch': string | null;
}

export const JobStatusEnum = {
    Queued: 'queued',
    InProgress: 'in_progress',
    Completed: 'completed',
    Waiting: 'waiting',
    Requested: 'requested',
    Pending: 'pending'
} as const;

export type JobStatusEnum = typeof JobStatusEnum[keyof typeof JobStatusEnum];
export const JobConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    Skipped: 'skipped',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required'
} as const;

export type JobConclusionEnum = typeof JobConclusionEnum[keyof typeof JobConclusionEnum];

/**
 * 
 * @export
 * @interface JobStepsInner
 */
export interface JobStepsInner {
    /**
     * The phase of the lifecycle that the job is currently in.
     * @type {string}
     * @memberof JobStepsInner
     */
    'status': JobStepsInnerStatusEnum;
    /**
     * The outcome of the job.
     * @type {string}
     * @memberof JobStepsInner
     */
    'conclusion': string | null;
    /**
     * The name of the job.
     * @type {string}
     * @memberof JobStepsInner
     */
    'name': string;
    /**
     * 
     * @type {number}
     * @memberof JobStepsInner
     */
    'number': number;
    /**
     * The time that the step started, in ISO 8601 format.
     * @type {string}
     * @memberof JobStepsInner
     */
    'started_at'?: string | null;
    /**
     * The time that the job finished, in ISO 8601 format.
     * @type {string}
     * @memberof JobStepsInner
     */
    'completed_at'?: string | null;
}

export const JobStepsInnerStatusEnum = {
    Queued: 'queued',
    InProgress: 'in_progress',
    Completed: 'completed'
} as const;

export type JobStepsInnerStatusEnum = typeof JobStepsInnerStatusEnum[keyof typeof JobStepsInnerStatusEnum];

/**
 * Key
 * @export
 * @interface Key
 */
export interface Key {
    /**
     * 
     * @type {string}
     * @memberof Key
     */
    'key': string;
    /**
     * 
     * @type {number}
     * @memberof Key
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Key
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Key
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof Key
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof Key
     */
    'verified': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Key
     */
    'read_only': boolean;
}
/**
 * Key Simple
 * @export
 * @interface KeySimple
 */
export interface KeySimple {
    /**
     * 
     * @type {number}
     * @memberof KeySimple
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof KeySimple
     */
    'key': string;
}
/**
 * 
 * @export
 * @interface Label
 */
export interface Label {
    /**
     * 6-character hex code, without the leading #, identifying the color
     * @type {string}
     * @memberof Label
     */
    'color': string;
    /**
     * 
     * @type {boolean}
     * @memberof Label
     */
    'default': boolean;
    /**
     * 
     * @type {string}
     * @memberof Label
     */
    'description': string | null;
    /**
     * 
     * @type {number}
     * @memberof Label
     */
    'id': number;
    /**
     * The name of the label.
     * @type {string}
     * @memberof Label
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Label
     */
    'node_id': string;
    /**
     * URL for the label
     * @type {string}
     * @memberof Label
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface Label1
 */
export interface Label1 {
    /**
     * 6-character hex code, without the leading #, identifying the color
     * @type {string}
     * @memberof Label1
     */
    'color': string;
    /**
     * 
     * @type {boolean}
     * @memberof Label1
     */
    'default': boolean;
    /**
     * 
     * @type {string}
     * @memberof Label1
     */
    'description': string | null;
    /**
     * 
     * @type {number}
     * @memberof Label1
     */
    'id': number;
    /**
     * The name of the label.
     * @type {string}
     * @memberof Label1
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Label1
     */
    'node_id': string;
    /**
     * URL for the label
     * @type {string}
     * @memberof Label1
     */
    'url': string;
}
/**
 * Label Search Result Item
 * @export
 * @interface LabelSearchResultItem
 */
export interface LabelSearchResultItem {
    /**
     * 
     * @type {number}
     * @memberof LabelSearchResultItem
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof LabelSearchResultItem
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof LabelSearchResultItem
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof LabelSearchResultItem
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof LabelSearchResultItem
     */
    'color': string;
    /**
     * 
     * @type {boolean}
     * @memberof LabelSearchResultItem
     */
    'default': boolean;
    /**
     * 
     * @type {string}
     * @memberof LabelSearchResultItem
     */
    'description': string | null;
    /**
     * 
     * @type {number}
     * @memberof LabelSearchResultItem
     */
    'score': number;
    /**
     * 
     * @type {Array<SearchResultTextMatchesInner>}
     * @memberof LabelSearchResultItem
     */
    'text_matches'?: Array<SearchResultTextMatchesInner>;
}
/**
 * Labeled Issue Event
 * @export
 * @interface LabeledIssueEvent
 */
export interface LabeledIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof LabeledIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof LabeledIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof LabeledIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof LabeledIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof LabeledIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof LabeledIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof LabeledIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof LabeledIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof LabeledIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {LabeledIssueEventLabel}
     * @memberof LabeledIssueEvent
     */
    'label': LabeledIssueEventLabel;
}
/**
 * 
 * @export
 * @interface LabeledIssueEventLabel
 */
export interface LabeledIssueEventLabel {
    /**
     * 
     * @type {string}
     * @memberof LabeledIssueEventLabel
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof LabeledIssueEventLabel
     */
    'color': string;
}
/**
 * 
 * @export
 * @interface License
 */
export interface License {
    /**
     * 
     * @type {string}
     * @memberof License
     */
    'key': string;
    /**
     * 
     * @type {string}
     * @memberof License
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof License
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof License
     */
    'spdx_id': string;
    /**
     * 
     * @type {string}
     * @memberof License
     */
    'url': string | null;
}
/**
 * License Content
 * @export
 * @interface LicenseContent
 */
export interface LicenseContent {
    /**
     * 
     * @type {string}
     * @memberof LicenseContent
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof LicenseContent
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof LicenseContent
     */
    'sha': string;
    /**
     * 
     * @type {number}
     * @memberof LicenseContent
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof LicenseContent
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof LicenseContent
     */
    'html_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof LicenseContent
     */
    'git_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof LicenseContent
     */
    'download_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof LicenseContent
     */
    'type': string;
    /**
     * 
     * @type {string}
     * @memberof LicenseContent
     */
    'content': string;
    /**
     * 
     * @type {string}
     * @memberof LicenseContent
     */
    'encoding': string;
    /**
     * 
     * @type {ContentTreeEntriesInnerLinks}
     * @memberof LicenseContent
     */
    '_links': ContentTreeEntriesInnerLinks;
    /**
     * 
     * @type {NullableLicenseSimple}
     * @memberof LicenseContent
     */
    'license': NullableLicenseSimple | null;
}
/**
 * License Simple
 * @export
 * @interface LicenseSimple
 */
export interface LicenseSimple {
    /**
     * 
     * @type {string}
     * @memberof LicenseSimple
     */
    'key': string;
    /**
     * 
     * @type {string}
     * @memberof LicenseSimple
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof LicenseSimple
     */
    'url': string | null;
    /**
     * 
     * @type {string}
     * @memberof LicenseSimple
     */
    'spdx_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof LicenseSimple
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof LicenseSimple
     */
    'html_url'?: string;
}
/**
 * 
 * @export
 * @interface Link
 */
export interface Link {
    /**
     * 
     * @type {string}
     * @memberof Link
     */
    'href': string;
}
/**
 * Hypermedia Link with Type
 * @export
 * @interface LinkWithType
 */
export interface LinkWithType {
    /**
     * 
     * @type {string}
     * @memberof LinkWithType
     */
    'href': string;
    /**
     * 
     * @type {string}
     * @memberof LinkWithType
     */
    'type': string;
}
/**
 * Locked Issue Event
 * @export
 * @interface LockedIssueEvent
 */
export interface LockedIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof LockedIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof LockedIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof LockedIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof LockedIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof LockedIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof LockedIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof LockedIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof LockedIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof LockedIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {string}
     * @memberof LockedIssueEvent
     */
    'lock_reason': string | null;
}
/**
 * 
 * @export
 * @interface Manifest
 */
export interface Manifest {
    /**
     * The name of the manifest.
     * @type {string}
     * @memberof Manifest
     */
    'name': string;
    /**
     * 
     * @type {ManifestFile}
     * @memberof Manifest
     */
    'file'?: ManifestFile;
    /**
     * User-defined metadata to store domain-specific information limited to 8 keys with scalar values.
     * @type {{ [key: string]: MetadataValue; }}
     * @memberof Manifest
     */
    'metadata'?: { [key: string]: MetadataValue; };
    /**
     * A collection of resolved package dependencies.
     * @type {{ [key: string]: Dependency; }}
     * @memberof Manifest
     */
    'resolved'?: { [key: string]: Dependency; };
}
/**
 * 
 * @export
 * @interface ManifestFile
 */
export interface ManifestFile {
    /**
     * The path of the manifest file relative to the root of the Git repository.
     * @type {string}
     * @memberof ManifestFile
     */
    'source_location'?: string;
}
/**
 * 
 * @export
 * @interface MarketplaceAccount
 */
export interface MarketplaceAccount {
    /**
     * 
     * @type {string}
     * @memberof MarketplaceAccount
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof MarketplaceAccount
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof MarketplaceAccount
     */
    'type': string;
    /**
     * 
     * @type {string}
     * @memberof MarketplaceAccount
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketplaceAccount
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof MarketplaceAccount
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MarketplaceAccount
     */
    'organization_billing_email'?: string | null;
}
/**
 * Marketplace Listing Plan
 * @export
 * @interface MarketplaceListingPlan
 */
export interface MarketplaceListingPlan {
    /**
     * 
     * @type {string}
     * @memberof MarketplaceListingPlan
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof MarketplaceListingPlan
     */
    'accounts_url': string;
    /**
     * 
     * @type {number}
     * @memberof MarketplaceListingPlan
     */
    'id': number;
    /**
     * 
     * @type {number}
     * @memberof MarketplaceListingPlan
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof MarketplaceListingPlan
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof MarketplaceListingPlan
     */
    'description': string;
    /**
     * 
     * @type {number}
     * @memberof MarketplaceListingPlan
     */
    'monthly_price_in_cents': number;
    /**
     * 
     * @type {number}
     * @memberof MarketplaceListingPlan
     */
    'yearly_price_in_cents': number;
    /**
     * 
     * @type {string}
     * @memberof MarketplaceListingPlan
     */
    'price_model': MarketplaceListingPlanPriceModelEnum;
    /**
     * 
     * @type {boolean}
     * @memberof MarketplaceListingPlan
     */
    'has_free_trial': boolean;
    /**
     * 
     * @type {string}
     * @memberof MarketplaceListingPlan
     */
    'unit_name': string | null;
    /**
     * 
     * @type {string}
     * @memberof MarketplaceListingPlan
     */
    'state': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof MarketplaceListingPlan
     */
    'bullets': Array<string>;
}

export const MarketplaceListingPlanPriceModelEnum = {
    Free: 'FREE',
    FlatRate: 'FLAT_RATE',
    PerUnit: 'PER_UNIT'
} as const;

export type MarketplaceListingPlanPriceModelEnum = typeof MarketplaceListingPlanPriceModelEnum[keyof typeof MarketplaceListingPlanPriceModelEnum];

/**
 * 
 * @export
 * @interface MarketplacePurchase
 */
export interface MarketplacePurchase {
    /**
     * 
     * @type {WebhooksMarketplacePurchaseAccount}
     * @memberof MarketplacePurchase
     */
    'account': WebhooksMarketplacePurchaseAccount;
    /**
     * 
     * @type {string}
     * @memberof MarketplacePurchase
     */
    'billing_cycle': string;
    /**
     * 
     * @type {string}
     * @memberof MarketplacePurchase
     */
    'free_trial_ends_on': string | null;
    /**
     * 
     * @type {string}
     * @memberof MarketplacePurchase
     */
    'next_billing_date'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof MarketplacePurchase
     */
    'on_free_trial': boolean | null;
    /**
     * 
     * @type {WebhooksPreviousMarketplacePurchasePlan}
     * @memberof MarketplacePurchase
     */
    'plan': WebhooksPreviousMarketplacePurchasePlan;
    /**
     * 
     * @type {number}
     * @memberof MarketplacePurchase
     */
    'unit_count': number;
}
/**
 * 
 * @export
 * @interface MarketplacePurchase1
 */
export interface MarketplacePurchase1 {
    /**
     * 
     * @type {WebhooksMarketplacePurchaseAccount}
     * @memberof MarketplacePurchase1
     */
    'account': WebhooksMarketplacePurchaseAccount;
    /**
     * 
     * @type {string}
     * @memberof MarketplacePurchase1
     */
    'billing_cycle': string;
    /**
     * 
     * @type {string}
     * @memberof MarketplacePurchase1
     */
    'free_trial_ends_on': string | null;
    /**
     * 
     * @type {string}
     * @memberof MarketplacePurchase1
     */
    'next_billing_date'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof MarketplacePurchase1
     */
    'on_free_trial': boolean;
    /**
     * 
     * @type {WebhooksPreviousMarketplacePurchasePlan}
     * @memberof MarketplacePurchase1
     */
    'plan': WebhooksPreviousMarketplacePurchasePlan;
    /**
     * 
     * @type {number}
     * @memberof MarketplacePurchase1
     */
    'unit_count': number;
}
/**
 * 
 * @export
 * @interface MarketplacePurchase2
 */
export interface MarketplacePurchase2 {
    /**
     * 
     * @type {WebhooksMarketplacePurchaseAccount}
     * @memberof MarketplacePurchase2
     */
    'account': WebhooksMarketplacePurchaseAccount;
    /**
     * 
     * @type {string}
     * @memberof MarketplacePurchase2
     */
    'billing_cycle': string;
    /**
     * 
     * @type {any}
     * @memberof MarketplacePurchase2
     */
    'free_trial_ends_on': any | null;
    /**
     * 
     * @type {string}
     * @memberof MarketplacePurchase2
     */
    'next_billing_date': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof MarketplacePurchase2
     */
    'on_free_trial': boolean;
    /**
     * 
     * @type {WebhooksPreviousMarketplacePurchasePlan}
     * @memberof MarketplacePurchase2
     */
    'plan': WebhooksPreviousMarketplacePurchasePlan;
    /**
     * 
     * @type {number}
     * @memberof MarketplacePurchase2
     */
    'unit_count': number;
}
/**
 * 
 * @export
 * @interface MarketplacePurchaseMarketplacePendingChange
 */
export interface MarketplacePurchaseMarketplacePendingChange {
    /**
     * 
     * @type {boolean}
     * @memberof MarketplacePurchaseMarketplacePendingChange
     */
    'is_installed'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof MarketplacePurchaseMarketplacePendingChange
     */
    'effective_date'?: string;
    /**
     * 
     * @type {number}
     * @memberof MarketplacePurchaseMarketplacePendingChange
     */
    'unit_count'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof MarketplacePurchaseMarketplacePendingChange
     */
    'id'?: number;
    /**
     * 
     * @type {MarketplaceListingPlan}
     * @memberof MarketplacePurchaseMarketplacePendingChange
     */
    'plan'?: MarketplaceListingPlan;
}
/**
 * 
 * @export
 * @interface MarketplacePurchaseMarketplacePurchase
 */
export interface MarketplacePurchaseMarketplacePurchase {
    /**
     * 
     * @type {string}
     * @memberof MarketplacePurchaseMarketplacePurchase
     */
    'billing_cycle'?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketplacePurchaseMarketplacePurchase
     */
    'next_billing_date'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof MarketplacePurchaseMarketplacePurchase
     */
    'is_installed'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof MarketplacePurchaseMarketplacePurchase
     */
    'unit_count'?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof MarketplacePurchaseMarketplacePurchase
     */
    'on_free_trial'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof MarketplacePurchaseMarketplacePurchase
     */
    'free_trial_ends_on'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MarketplacePurchaseMarketplacePurchase
     */
    'updated_at'?: string;
    /**
     * 
     * @type {MarketplaceListingPlan}
     * @memberof MarketplacePurchaseMarketplacePurchase
     */
    'plan'?: MarketplaceListingPlan;
}
/**
 * A group of pull requests that the merge queue has grouped together to be merged.
 * @export
 * @interface MergeGroup
 */
export interface MergeGroup {
    /**
     * The SHA of the merge group.
     * @type {string}
     * @memberof MergeGroup
     */
    'head_sha': string;
    /**
     * The full ref of the merge group.
     * @type {string}
     * @memberof MergeGroup
     */
    'head_ref': string;
    /**
     * The SHA of the merge group\'s parent commit.
     * @type {string}
     * @memberof MergeGroup
     */
    'base_sha': string;
    /**
     * The full ref of the branch the merge group will be merged into.
     * @type {string}
     * @memberof MergeGroup
     */
    'base_ref': string;
    /**
     * 
     * @type {SimpleCommit}
     * @memberof MergeGroup
     */
    'head_commit': SimpleCommit;
}
/**
 * Results of a successful merge upstream request
 * @export
 * @interface MergedUpstream
 */
export interface MergedUpstream {
    /**
     * 
     * @type {string}
     * @memberof MergedUpstream
     */
    'message'?: string;
    /**
     * 
     * @type {string}
     * @memberof MergedUpstream
     */
    'merge_type'?: MergedUpstreamMergeTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof MergedUpstream
     */
    'base_branch'?: string;
}

export const MergedUpstreamMergeTypeEnum = {
    Merge: 'merge',
    FastForward: 'fast-forward',
    None: 'none'
} as const;

export type MergedUpstreamMergeTypeEnum = typeof MergedUpstreamMergeTypeEnum[keyof typeof MergedUpstreamMergeTypeEnum];

/**
 * 
 * @export
 * @interface MetadataValue
 */
export interface MetadataValue {
}
/**
 * A migration.
 * @export
 * @interface Migration
 */
export interface Migration {
    /**
     * 
     * @type {number}
     * @memberof Migration
     */
    'id': number;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof Migration
     */
    'owner': NullableSimpleUser | null;
    /**
     * 
     * @type {string}
     * @memberof Migration
     */
    'guid': string;
    /**
     * 
     * @type {string}
     * @memberof Migration
     */
    'state': string;
    /**
     * 
     * @type {boolean}
     * @memberof Migration
     */
    'lock_repositories': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Migration
     */
    'exclude_metadata': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Migration
     */
    'exclude_git_data': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Migration
     */
    'exclude_attachments': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Migration
     */
    'exclude_releases': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Migration
     */
    'exclude_owner_projects': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Migration
     */
    'org_metadata_only': boolean;
    /**
     * The repositories included in the migration. Only returned for export migrations.
     * @type {Array<Repository>}
     * @memberof Migration
     */
    'repositories': Array<Repository>;
    /**
     * 
     * @type {string}
     * @memberof Migration
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Migration
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof Migration
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Migration
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Migration
     */
    'archive_url'?: string;
    /**
     * Exclude related items from being returned in the response in order to improve performance of the request. The array can include any of: `\"repositories\"`.
     * @type {Array<string>}
     * @memberof Migration
     */
    'exclude'?: Array<string>;
}
/**
 * A collection of related issues and pull requests.
 * @export
 * @interface Milestone
 */
export interface Milestone {
    /**
     * 
     * @type {string}
     * @memberof Milestone
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof Milestone
     */
    'closed_issues': number;
    /**
     * 
     * @type {string}
     * @memberof Milestone
     */
    'created_at': string;
    /**
     * 
     * @type {User4}
     * @memberof Milestone
     */
    'creator': User4 | null;
    /**
     * 
     * @type {string}
     * @memberof Milestone
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof Milestone
     */
    'due_on': string | null;
    /**
     * 
     * @type {string}
     * @memberof Milestone
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Milestone
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Milestone
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Milestone
     */
    'node_id': string;
    /**
     * The number of the milestone.
     * @type {number}
     * @memberof Milestone
     */
    'number': number;
    /**
     * 
     * @type {number}
     * @memberof Milestone
     */
    'open_issues': number;
    /**
     * The state of the milestone.
     * @type {string}
     * @memberof Milestone
     */
    'state': MilestoneStateEnum;
    /**
     * The title of the milestone.
     * @type {string}
     * @memberof Milestone
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof Milestone
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Milestone
     */
    'url': string;
}

export const MilestoneStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type MilestoneStateEnum = typeof MilestoneStateEnum[keyof typeof MilestoneStateEnum];

/**
 * A collection of related issues and pull requests.
 * @export
 * @interface Milestone1
 */
export interface Milestone1 {
    /**
     * 
     * @type {string}
     * @memberof Milestone1
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof Milestone1
     */
    'closed_issues': number;
    /**
     * 
     * @type {string}
     * @memberof Milestone1
     */
    'created_at': string;
    /**
     * 
     * @type {User2}
     * @memberof Milestone1
     */
    'creator': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof Milestone1
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof Milestone1
     */
    'due_on': string | null;
    /**
     * 
     * @type {string}
     * @memberof Milestone1
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Milestone1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Milestone1
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Milestone1
     */
    'node_id': string;
    /**
     * The number of the milestone.
     * @type {number}
     * @memberof Milestone1
     */
    'number': number;
    /**
     * 
     * @type {number}
     * @memberof Milestone1
     */
    'open_issues': number;
    /**
     * The state of the milestone.
     * @type {string}
     * @memberof Milestone1
     */
    'state': Milestone1StateEnum;
    /**
     * The title of the milestone.
     * @type {string}
     * @memberof Milestone1
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof Milestone1
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Milestone1
     */
    'url': string;
}

export const Milestone1StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type Milestone1StateEnum = typeof Milestone1StateEnum[keyof typeof Milestone1StateEnum];

/**
 * Milestoned Issue Event
 * @export
 * @interface MilestonedIssueEvent
 */
export interface MilestonedIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof MilestonedIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof MilestonedIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof MilestonedIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof MilestonedIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof MilestonedIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof MilestonedIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof MilestonedIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof MilestonedIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof MilestonedIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {MilestonedIssueEventMilestone}
     * @memberof MilestonedIssueEvent
     */
    'milestone': MilestonedIssueEventMilestone;
}
/**
 * 
 * @export
 * @interface MilestonedIssueEventMilestone
 */
export interface MilestonedIssueEventMilestone {
    /**
     * 
     * @type {string}
     * @memberof MilestonedIssueEventMilestone
     */
    'title': string;
}
/**
 * Minimal Repository
 * @export
 * @interface MinimalRepository
 */
export interface MinimalRepository {
    /**
     * 
     * @type {number}
     * @memberof MinimalRepository
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'full_name': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof MinimalRepository
     */
    'owner': SimpleUser;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'private': boolean;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'description': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'fork': boolean;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'archive_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'contributors_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'git_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'languages_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'notifications_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'pulls_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'ssh_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'clone_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'mirror_url'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'svn_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'homepage'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'language'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof MinimalRepository
     */
    'forks_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof MinimalRepository
     */
    'stargazers_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof MinimalRepository
     */
    'watchers_count'?: number;
    /**
     * The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
     * @type {number}
     * @memberof MinimalRepository
     */
    'size'?: number;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'default_branch'?: string;
    /**
     * 
     * @type {number}
     * @memberof MinimalRepository
     */
    'open_issues_count'?: number;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof MinimalRepository
     */
    'topics'?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'has_issues'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'has_projects'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'has_wiki'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'has_pages'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'has_downloads'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'has_discussions'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'archived'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'visibility'?: string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'pushed_at'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'created_at'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'updated_at'?: string | null;
    /**
     * 
     * @type {MinimalRepositoryPermissions}
     * @memberof MinimalRepository
     */
    'permissions'?: MinimalRepositoryPermissions;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'role_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepository
     */
    'temp_clone_token'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof MinimalRepository
     */
    'subscribers_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof MinimalRepository
     */
    'network_count'?: number;
    /**
     * 
     * @type {CodeOfConduct}
     * @memberof MinimalRepository
     */
    'code_of_conduct'?: CodeOfConduct;
    /**
     * 
     * @type {MinimalRepositoryLicense}
     * @memberof MinimalRepository
     */
    'license'?: MinimalRepositoryLicense | null;
    /**
     * 
     * @type {number}
     * @memberof MinimalRepository
     */
    'forks'?: number;
    /**
     * 
     * @type {number}
     * @memberof MinimalRepository
     */
    'open_issues'?: number;
    /**
     * 
     * @type {number}
     * @memberof MinimalRepository
     */
    'watchers'?: number;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'allow_forking'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepository
     */
    'web_commit_signoff_required'?: boolean;
    /**
     * 
     * @type {SecurityAndAnalysis}
     * @memberof MinimalRepository
     */
    'security_and_analysis'?: SecurityAndAnalysis | null;
}
/**
 * 
 * @export
 * @interface MinimalRepositoryLicense
 */
export interface MinimalRepositoryLicense {
    /**
     * 
     * @type {string}
     * @memberof MinimalRepositoryLicense
     */
    'key'?: string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepositoryLicense
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepositoryLicense
     */
    'spdx_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepositoryLicense
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof MinimalRepositoryLicense
     */
    'node_id'?: string;
}
/**
 * 
 * @export
 * @interface MinimalRepositoryPermissions
 */
export interface MinimalRepositoryPermissions {
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepositoryPermissions
     */
    'admin'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepositoryPermissions
     */
    'maintain'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepositoryPermissions
     */
    'push'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepositoryPermissions
     */
    'triage'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MinimalRepositoryPermissions
     */
    'pull'?: boolean;
}
/**
 * Moved Column in Project Issue Event
 * @export
 * @interface MovedColumnInProjectIssueEvent
 */
export interface MovedColumnInProjectIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof MovedColumnInProjectIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof MovedColumnInProjectIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof MovedColumnInProjectIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof MovedColumnInProjectIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof MovedColumnInProjectIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof MovedColumnInProjectIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof MovedColumnInProjectIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof MovedColumnInProjectIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof MovedColumnInProjectIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {AddedToProjectIssueEventProjectCard}
     * @memberof MovedColumnInProjectIssueEvent
     */
    'project_card'?: AddedToProjectIssueEventProjectCard;
}
/**
 * A hosted compute network configuration.
 * @export
 * @interface NetworkConfiguration
 */
export interface NetworkConfiguration {
    /**
     * The unique identifier of the network configuration.
     * @type {string}
     * @memberof NetworkConfiguration
     */
    'id': string;
    /**
     * The name of the network configuration.
     * @type {string}
     * @memberof NetworkConfiguration
     */
    'name': string;
    /**
     * The hosted compute service the network configuration supports.
     * @type {string}
     * @memberof NetworkConfiguration
     */
    'compute_service'?: NetworkConfigurationComputeServiceEnum;
    /**
     * The unique identifier of each network settings in the configuration.
     * @type {Array<string>}
     * @memberof NetworkConfiguration
     */
    'network_settings_ids'?: Array<string>;
    /**
     * The time at which the network configuration was created, in ISO 8601 format.
     * @type {string}
     * @memberof NetworkConfiguration
     */
    'created_on': string | null;
}

export const NetworkConfigurationComputeServiceEnum = {
    None: 'none',
    Actions: 'actions',
    Codespaces: 'codespaces'
} as const;

export type NetworkConfigurationComputeServiceEnum = typeof NetworkConfigurationComputeServiceEnum[keyof typeof NetworkConfigurationComputeServiceEnum];

/**
 * A hosted compute network settings resource.
 * @export
 * @interface NetworkSettings
 */
export interface NetworkSettings {
    /**
     * The unique identifier of the network settings resource.
     * @type {string}
     * @memberof NetworkSettings
     */
    'id': string;
    /**
     * The identifier of the network configuration that is using this settings resource.
     * @type {string}
     * @memberof NetworkSettings
     */
    'network_configuration_id'?: string;
    /**
     * The name of the network settings resource.
     * @type {string}
     * @memberof NetworkSettings
     */
    'name': string;
    /**
     * The subnet this network settings resource is configured for.
     * @type {string}
     * @memberof NetworkSettings
     */
    'subnet_id': string;
    /**
     * The location of the subnet this network settings resource is configured for.
     * @type {string}
     * @memberof NetworkSettings
     */
    'region': string;
}
/**
 * Provides details of a hosted runner image
 * @export
 * @interface NullableActionsHostedRunnerPoolImage
 */
export interface NullableActionsHostedRunnerPoolImage {
    /**
     * The ID of the image. Use this ID for the `image` parameter when creating a new larger runner.
     * @type {string}
     * @memberof NullableActionsHostedRunnerPoolImage
     */
    'id': string;
    /**
     * Image size in GB.
     * @type {number}
     * @memberof NullableActionsHostedRunnerPoolImage
     */
    'size_gb': number;
    /**
     * Display name for this image.
     * @type {string}
     * @memberof NullableActionsHostedRunnerPoolImage
     */
    'display_name': string;
    /**
     * The image provider.
     * @type {string}
     * @memberof NullableActionsHostedRunnerPoolImage
     */
    'source': NullableActionsHostedRunnerPoolImageSourceEnum;
}

export const NullableActionsHostedRunnerPoolImageSourceEnum = {
    Github: 'github',
    Partner: 'partner',
    Custom: 'custom'
} as const;

export type NullableActionsHostedRunnerPoolImageSourceEnum = typeof NullableActionsHostedRunnerPoolImageSourceEnum[keyof typeof NullableActionsHostedRunnerPoolImageSourceEnum];

/**
 * Code of Conduct Simple
 * @export
 * @interface NullableCodeOfConductSimple
 */
export interface NullableCodeOfConductSimple {
    /**
     * 
     * @type {string}
     * @memberof NullableCodeOfConductSimple
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCodeOfConductSimple
     */
    'key': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCodeOfConductSimple
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCodeOfConductSimple
     */
    'html_url': string | null;
}
/**
 * A description of the machine powering a codespace.
 * @export
 * @interface NullableCodespaceMachine
 */
export interface NullableCodespaceMachine {
    /**
     * The name of the machine.
     * @type {string}
     * @memberof NullableCodespaceMachine
     */
    'name': string;
    /**
     * The display name of the machine includes cores, memory, and storage.
     * @type {string}
     * @memberof NullableCodespaceMachine
     */
    'display_name': string;
    /**
     * The operating system of the machine.
     * @type {string}
     * @memberof NullableCodespaceMachine
     */
    'operating_system': string;
    /**
     * How much storage is available to the codespace.
     * @type {number}
     * @memberof NullableCodespaceMachine
     */
    'storage_in_bytes': number;
    /**
     * How much memory is available to the codespace.
     * @type {number}
     * @memberof NullableCodespaceMachine
     */
    'memory_in_bytes': number;
    /**
     * How many cores are available to the codespace.
     * @type {number}
     * @memberof NullableCodespaceMachine
     */
    'cpus': number;
    /**
     * Whether a prebuild is currently available when creating a codespace for this machine and repository. If a branch was not specified as a ref, the default branch will be assumed. Value will be \"null\" if prebuilds are not supported or prebuild availability could not be determined. Value will be \"none\" if no prebuild is available. Latest values \"ready\" and \"in_progress\" indicate the prebuild availability status.
     * @type {string}
     * @memberof NullableCodespaceMachine
     */
    'prebuild_availability': NullableCodespaceMachinePrebuildAvailabilityEnum | null;
}

export const NullableCodespaceMachinePrebuildAvailabilityEnum = {
    None: 'none',
    Ready: 'ready',
    InProgress: 'in_progress'
} as const;

export type NullableCodespaceMachinePrebuildAvailabilityEnum = typeof NullableCodespaceMachinePrebuildAvailabilityEnum[keyof typeof NullableCodespaceMachinePrebuildAvailabilityEnum];

/**
 * Collaborator
 * @export
 * @interface NullableCollaborator
 */
export interface NullableCollaborator {
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof NullableCollaborator
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'name'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'gravatar_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'followers_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'following_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'starred_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'subscriptions_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'organizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'received_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'type': string;
    /**
     * 
     * @type {boolean}
     * @memberof NullableCollaborator
     */
    'site_admin': boolean;
    /**
     * 
     * @type {CollaboratorPermissions}
     * @memberof NullableCollaborator
     */
    'permissions'?: CollaboratorPermissions;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'role_name': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCollaborator
     */
    'user_view_type'?: string;
}
/**
 * 
 * @export
 * @interface NullableCommunityHealthFile
 */
export interface NullableCommunityHealthFile {
    /**
     * 
     * @type {string}
     * @memberof NullableCommunityHealthFile
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableCommunityHealthFile
     */
    'html_url': string;
}
/**
 * Metaproperties for Git author/committer information.
 * @export
 * @interface NullableGitUser
 */
export interface NullableGitUser {
    /**
     * 
     * @type {string}
     * @memberof NullableGitUser
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableGitUser
     */
    'email'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableGitUser
     */
    'date'?: string;
}
/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @export
 * @interface NullableIntegration
 */
export interface NullableIntegration {
    /**
     * Unique identifier of the GitHub app
     * @type {number}
     * @memberof NullableIntegration
     */
    'id': number;
    /**
     * The slug name of the GitHub app
     * @type {string}
     * @memberof NullableIntegration
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableIntegration
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof NullableIntegration
     */
    'client_id'?: string;
    /**
     * 
     * @type {IntegrationOwner}
     * @memberof NullableIntegration
     */
    'owner': IntegrationOwner;
    /**
     * The name of the GitHub app
     * @type {string}
     * @memberof NullableIntegration
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof NullableIntegration
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableIntegration
     */
    'external_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableIntegration
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableIntegration
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof NullableIntegration
     */
    'updated_at': string;
    /**
     * 
     * @type {IntegrationPermissions}
     * @memberof NullableIntegration
     */
    'permissions': IntegrationPermissions;
    /**
     * The list of events for the GitHub app. Note that the `installation_target`, `security_advisory`, and `meta` events are not included because they are global events and not specific to an installation.
     * @type {Array<string>}
     * @memberof NullableIntegration
     */
    'events': Array<string>;
    /**
     * The number of installations associated with the GitHub app. Only returned when the integration is requesting details about itself.
     * @type {number}
     * @memberof NullableIntegration
     */
    'installations_count'?: number;
}
/**
 * Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.
 * @export
 * @interface NullableIssue
 */
export interface NullableIssue {
    /**
     * 
     * @type {number}
     * @memberof NullableIssue
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof NullableIssue
     */
    'node_id': string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof NullableIssue
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableIssue
     */
    'repository_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableIssue
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableIssue
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableIssue
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableIssue
     */
    'html_url': string;
    /**
     * Number uniquely identifying the issue within its repository
     * @type {number}
     * @memberof NullableIssue
     */
    'number': number;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof NullableIssue
     */
    'state': string;
    /**
     * The reason for the current state
     * @type {string}
     * @memberof NullableIssue
     */
    'state_reason'?: NullableIssueStateReasonEnum | null;
    /**
     * Title of the issue
     * @type {string}
     * @memberof NullableIssue
     */
    'title': string;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof NullableIssue
     */
    'body'?: string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof NullableIssue
     */
    'user': NullableSimpleUser | null;
    /**
     * Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
     * @type {Array<IssueLabelsInner>}
     * @memberof NullableIssue
     */
    'labels': Array<IssueLabelsInner>;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof NullableIssue
     */
    'assignee': NullableSimpleUser | null;
    /**
     * 
     * @type {Array<SimpleUser>}
     * @memberof NullableIssue
     */
    'assignees'?: Array<SimpleUser> | null;
    /**
     * 
     * @type {NullableMilestone}
     * @memberof NullableIssue
     */
    'milestone': NullableMilestone | null;
    /**
     * 
     * @type {boolean}
     * @memberof NullableIssue
     */
    'locked': boolean;
    /**
     * 
     * @type {string}
     * @memberof NullableIssue
     */
    'active_lock_reason'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof NullableIssue
     */
    'comments': number;
    /**
     * 
     * @type {IssuePullRequest}
     * @memberof NullableIssue
     */
    'pull_request'?: IssuePullRequest;
    /**
     * 
     * @type {string}
     * @memberof NullableIssue
     */
    'closed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableIssue
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof NullableIssue
     */
    'updated_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof NullableIssue
     */
    'draft'?: boolean;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof NullableIssue
     */
    'closed_by'?: NullableSimpleUser | null;
    /**
     * 
     * @type {string}
     * @memberof NullableIssue
     */
    'body_html'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableIssue
     */
    'body_text'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableIssue
     */
    'timeline_url'?: string;
    /**
     * 
     * @type {IssueType}
     * @memberof NullableIssue
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {Repository}
     * @memberof NullableIssue
     */
    'repository'?: Repository;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof NullableIssue
     */
    'performed_via_github_app'?: NullableIntegration | null;
    /**
     * 
     * @type {AuthorAssociation}
     * @memberof NullableIssue
     */
    'author_association': AuthorAssociation;
    /**
     * 
     * @type {ReactionRollup}
     * @memberof NullableIssue
     */
    'reactions'?: ReactionRollup;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof NullableIssue
     */
    'sub_issues_summary'?: SubIssuesSummary;
}

export const NullableIssueStateReasonEnum = {
    Completed: 'completed',
    Reopened: 'reopened',
    NotPlanned: 'not_planned'
} as const;

export type NullableIssueStateReasonEnum = typeof NullableIssueStateReasonEnum[keyof typeof NullableIssueStateReasonEnum];

/**
 * License Simple
 * @export
 * @interface NullableLicenseSimple
 */
export interface NullableLicenseSimple {
    /**
     * 
     * @type {string}
     * @memberof NullableLicenseSimple
     */
    'key': string;
    /**
     * 
     * @type {string}
     * @memberof NullableLicenseSimple
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof NullableLicenseSimple
     */
    'url': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableLicenseSimple
     */
    'spdx_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableLicenseSimple
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof NullableLicenseSimple
     */
    'html_url'?: string;
}
/**
 * A collection of related issues and pull requests.
 * @export
 * @interface NullableMilestone
 */
export interface NullableMilestone {
    /**
     * 
     * @type {string}
     * @memberof NullableMilestone
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMilestone
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMilestone
     */
    'labels_url': string;
    /**
     * 
     * @type {number}
     * @memberof NullableMilestone
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof NullableMilestone
     */
    'node_id': string;
    /**
     * The number of the milestone.
     * @type {number}
     * @memberof NullableMilestone
     */
    'number': number;
    /**
     * The state of the milestone.
     * @type {string}
     * @memberof NullableMilestone
     */
    'state': NullableMilestoneStateEnum;
    /**
     * The title of the milestone.
     * @type {string}
     * @memberof NullableMilestone
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMilestone
     */
    'description': string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof NullableMilestone
     */
    'creator': NullableSimpleUser | null;
    /**
     * 
     * @type {number}
     * @memberof NullableMilestone
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof NullableMilestone
     */
    'closed_issues': number;
    /**
     * 
     * @type {string}
     * @memberof NullableMilestone
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMilestone
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMilestone
     */
    'closed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableMilestone
     */
    'due_on': string | null;
}

export const NullableMilestoneStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type NullableMilestoneStateEnum = typeof NullableMilestoneStateEnum[keyof typeof NullableMilestoneStateEnum];

/**
 * Minimal Repository
 * @export
 * @interface NullableMinimalRepository
 */
export interface NullableMinimalRepository {
    /**
     * 
     * @type {number}
     * @memberof NullableMinimalRepository
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'full_name': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof NullableMinimalRepository
     */
    'owner': SimpleUser;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'private': boolean;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'description': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'fork': boolean;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'archive_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'contributors_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'git_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'languages_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'notifications_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'pulls_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'ssh_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'clone_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'mirror_url'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'svn_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'homepage'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'language'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof NullableMinimalRepository
     */
    'forks_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof NullableMinimalRepository
     */
    'stargazers_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof NullableMinimalRepository
     */
    'watchers_count'?: number;
    /**
     * The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
     * @type {number}
     * @memberof NullableMinimalRepository
     */
    'size'?: number;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'default_branch'?: string;
    /**
     * 
     * @type {number}
     * @memberof NullableMinimalRepository
     */
    'open_issues_count'?: number;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof NullableMinimalRepository
     */
    'topics'?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'has_issues'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'has_projects'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'has_wiki'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'has_pages'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'has_downloads'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'has_discussions'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'archived'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'visibility'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'pushed_at'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'created_at'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'updated_at'?: string | null;
    /**
     * 
     * @type {MinimalRepositoryPermissions}
     * @memberof NullableMinimalRepository
     */
    'permissions'?: MinimalRepositoryPermissions;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'role_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableMinimalRepository
     */
    'temp_clone_token'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof NullableMinimalRepository
     */
    'subscribers_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof NullableMinimalRepository
     */
    'network_count'?: number;
    /**
     * 
     * @type {CodeOfConduct}
     * @memberof NullableMinimalRepository
     */
    'code_of_conduct'?: CodeOfConduct;
    /**
     * 
     * @type {MinimalRepositoryLicense}
     * @memberof NullableMinimalRepository
     */
    'license'?: MinimalRepositoryLicense | null;
    /**
     * 
     * @type {number}
     * @memberof NullableMinimalRepository
     */
    'forks'?: number;
    /**
     * 
     * @type {number}
     * @memberof NullableMinimalRepository
     */
    'open_issues'?: number;
    /**
     * 
     * @type {number}
     * @memberof NullableMinimalRepository
     */
    'watchers'?: number;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'allow_forking'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NullableMinimalRepository
     */
    'web_commit_signoff_required'?: boolean;
    /**
     * 
     * @type {SecurityAndAnalysis}
     * @memberof NullableMinimalRepository
     */
    'security_and_analysis'?: SecurityAndAnalysis | null;
}
/**
 * A GitHub organization.
 * @export
 * @interface NullableOrganizationSimple
 */
export interface NullableOrganizationSimple {
    /**
     * 
     * @type {string}
     * @memberof NullableOrganizationSimple
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof NullableOrganizationSimple
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof NullableOrganizationSimple
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof NullableOrganizationSimple
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableOrganizationSimple
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableOrganizationSimple
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableOrganizationSimple
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableOrganizationSimple
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableOrganizationSimple
     */
    'members_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableOrganizationSimple
     */
    'public_members_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableOrganizationSimple
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableOrganizationSimple
     */
    'description': string | null;
}
/**
 * A repository on GitHub.
 * @export
 * @interface NullableRepository
 */
export interface NullableRepository {
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof NullableRepository
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'node_id': string;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof NullableRepository
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'full_name': string;
    /**
     * 
     * @type {NullableLicenseSimple}
     * @memberof NullableRepository
     */
    'license': NullableLicenseSimple | null;
    /**
     * 
     * @type {number}
     * @memberof NullableRepository
     */
    'forks': number;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof NullableRepository
     */
    'permissions'?: RepositoryPermissions;
    /**
     * 
     * @type {SimpleUser}
     * @memberof NullableRepository
     */
    'owner': SimpleUser;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof NullableRepository
     */
    'private': boolean;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'description': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof NullableRepository
     */
    'fork': boolean;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'archive_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'contributors_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'git_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'languages_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'notifications_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'pulls_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'ssh_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'mirror_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'language': string | null;
    /**
     * 
     * @type {number}
     * @memberof NullableRepository
     */
    'forks_count': number;
    /**
     * 
     * @type {number}
     * @memberof NullableRepository
     */
    'stargazers_count': number;
    /**
     * 
     * @type {number}
     * @memberof NullableRepository
     */
    'watchers_count': number;
    /**
     * The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
     * @type {number}
     * @memberof NullableRepository
     */
    'size': number;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof NullableRepository
     */
    'default_branch': string;
    /**
     * 
     * @type {number}
     * @memberof NullableRepository
     */
    'open_issues_count': number;
    /**
     * Whether this repository acts as a template that can be used to generate new repositories.
     * @type {boolean}
     * @memberof NullableRepository
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof NullableRepository
     */
    'topics'?: Array<string>;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof NullableRepository
     */
    'has_issues': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof NullableRepository
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof NullableRepository
     */
    'has_wiki': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NullableRepository
     */
    'has_pages': boolean;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof NullableRepository
     * @deprecated
     */
    'has_downloads': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof NullableRepository
     */
    'has_discussions'?: boolean;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof NullableRepository
     */
    'archived': boolean;
    /**
     * Returns whether or not this repository disabled.
     * @type {boolean}
     * @memberof NullableRepository
     */
    'disabled': boolean;
    /**
     * The repository visibility: public, private, or internal.
     * @type {string}
     * @memberof NullableRepository
     */
    'visibility'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'pushed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'updated_at': string | null;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof NullableRepository
     */
    'allow_rebase_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'temp_clone_token'?: string;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof NullableRepository
     */
    'allow_squash_merge'?: boolean;
    /**
     * Whether to allow Auto-merge to be used on pull requests.
     * @type {boolean}
     * @memberof NullableRepository
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof NullableRepository
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
     * @type {boolean}
     * @memberof NullableRepository
     */
    'allow_update_branch'?: boolean;
    /**
     * Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
     * @type {boolean}
     * @memberof NullableRepository
     * @deprecated
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof NullableRepository
     */
    'squash_merge_commit_title'?: NullableRepositorySquashMergeCommitTitleEnum;
    /**
     * The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof NullableRepository
     */
    'squash_merge_commit_message'?: NullableRepositorySquashMergeCommitMessageEnum;
    /**
     * The default value for a merge commit title.  - `PR_TITLE` - default to the pull request\'s title. - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
     * @type {string}
     * @memberof NullableRepository
     */
    'merge_commit_title'?: NullableRepositoryMergeCommitTitleEnum;
    /**
     * The default value for a merge commit message.  - `PR_TITLE` - default to the pull request\'s title. - `PR_BODY` - default to the pull request\'s body. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof NullableRepository
     */
    'merge_commit_message'?: NullableRepositoryMergeCommitMessageEnum;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof NullableRepository
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow forking this repo
     * @type {boolean}
     * @memberof NullableRepository
     */
    'allow_forking'?: boolean;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof NullableRepository
     */
    'web_commit_signoff_required'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof NullableRepository
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof NullableRepository
     */
    'watchers': number;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'master_branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepository
     */
    'starred_at'?: string;
    /**
     * Whether anonymous git access is enabled for this repository
     * @type {boolean}
     * @memberof NullableRepository
     */
    'anonymous_access_enabled'?: boolean;
    /**
     * 
     * @type {RepositoryCodeSearchIndexStatus}
     * @memberof NullableRepository
     */
    'code_search_index_status'?: RepositoryCodeSearchIndexStatus;
}

export const NullableRepositorySquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type NullableRepositorySquashMergeCommitTitleEnum = typeof NullableRepositorySquashMergeCommitTitleEnum[keyof typeof NullableRepositorySquashMergeCommitTitleEnum];
export const NullableRepositorySquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type NullableRepositorySquashMergeCommitMessageEnum = typeof NullableRepositorySquashMergeCommitMessageEnum[keyof typeof NullableRepositorySquashMergeCommitMessageEnum];
export const NullableRepositoryMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type NullableRepositoryMergeCommitTitleEnum = typeof NullableRepositoryMergeCommitTitleEnum[keyof typeof NullableRepositoryMergeCommitTitleEnum];
export const NullableRepositoryMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type NullableRepositoryMergeCommitMessageEnum = typeof NullableRepositoryMergeCommitMessageEnum[keyof typeof NullableRepositoryMergeCommitMessageEnum];

/**
 * The repository on GitHub where the event occurred. Webhook payloads contain the `repository` property when the event occurs from activity in a repository.
 * @export
 * @interface NullableRepositoryWebhooks
 */
export interface NullableRepositoryWebhooks {
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof NullableRepositoryWebhooks
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'node_id': string;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'full_name': string;
    /**
     * 
     * @type {NullableLicenseSimple}
     * @memberof NullableRepositoryWebhooks
     */
    'license': NullableLicenseSimple | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof NullableRepositoryWebhooks
     */
    'organization'?: NullableSimpleUser | null;
    /**
     * 
     * @type {number}
     * @memberof NullableRepositoryWebhooks
     */
    'forks': number;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof NullableRepositoryWebhooks
     */
    'permissions'?: RepositoryPermissions;
    /**
     * 
     * @type {SimpleUser}
     * @memberof NullableRepositoryWebhooks
     */
    'owner': SimpleUser;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'private': boolean;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'description': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'fork': boolean;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'archive_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'contributors_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'git_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'languages_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'notifications_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'pulls_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'ssh_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'mirror_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'language': string | null;
    /**
     * 
     * @type {number}
     * @memberof NullableRepositoryWebhooks
     */
    'forks_count': number;
    /**
     * 
     * @type {number}
     * @memberof NullableRepositoryWebhooks
     */
    'stargazers_count': number;
    /**
     * 
     * @type {number}
     * @memberof NullableRepositoryWebhooks
     */
    'watchers_count': number;
    /**
     * The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
     * @type {number}
     * @memberof NullableRepositoryWebhooks
     */
    'size': number;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'default_branch': string;
    /**
     * 
     * @type {number}
     * @memberof NullableRepositoryWebhooks
     */
    'open_issues_count': number;
    /**
     * Whether this repository acts as a template that can be used to generate new repositories.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof NullableRepositoryWebhooks
     */
    'topics'?: Array<string>;
    /**
     * The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.
     * @type {{ [key: string]: any; }}
     * @memberof NullableRepositoryWebhooks
     */
    'custom_properties'?: { [key: string]: any; };
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'has_issues': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'has_wiki': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'has_pages': boolean;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'has_downloads': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'has_discussions'?: boolean;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'archived': boolean;
    /**
     * Returns whether or not this repository disabled.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'disabled': boolean;
    /**
     * The repository visibility: public, private, or internal.
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'visibility'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'pushed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'updated_at': string | null;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'allow_rebase_merge'?: boolean;
    /**
     * 
     * @type {RepositoryWebhooksTemplateRepository}
     * @memberof NullableRepositoryWebhooks
     */
    'template_repository'?: RepositoryWebhooksTemplateRepository | null;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'temp_clone_token'?: string;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'allow_squash_merge'?: boolean;
    /**
     * Whether to allow Auto-merge to be used on pull requests.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'allow_update_branch'?: boolean;
    /**
     * Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     * @deprecated
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'squash_merge_commit_title'?: NullableRepositoryWebhooksSquashMergeCommitTitleEnum;
    /**
     * The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'squash_merge_commit_message'?: NullableRepositoryWebhooksSquashMergeCommitMessageEnum;
    /**
     * The default value for a merge commit title.  - `PR_TITLE` - default to the pull request\'s title. - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'merge_commit_title'?: NullableRepositoryWebhooksMergeCommitTitleEnum;
    /**
     * The default value for a merge commit message.  - `PR_TITLE` - default to the pull request\'s title. - `PR_BODY` - default to the pull request\'s body. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'merge_commit_message'?: NullableRepositoryWebhooksMergeCommitMessageEnum;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow forking this repo
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'allow_forking'?: boolean;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'web_commit_signoff_required'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof NullableRepositoryWebhooks
     */
    'subscribers_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof NullableRepositoryWebhooks
     */
    'network_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof NullableRepositoryWebhooks
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof NullableRepositoryWebhooks
     */
    'watchers': number;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'master_branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableRepositoryWebhooks
     */
    'starred_at'?: string;
    /**
     * Whether anonymous git access is enabled for this repository
     * @type {boolean}
     * @memberof NullableRepositoryWebhooks
     */
    'anonymous_access_enabled'?: boolean;
}

export const NullableRepositoryWebhooksSquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type NullableRepositoryWebhooksSquashMergeCommitTitleEnum = typeof NullableRepositoryWebhooksSquashMergeCommitTitleEnum[keyof typeof NullableRepositoryWebhooksSquashMergeCommitTitleEnum];
export const NullableRepositoryWebhooksSquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type NullableRepositoryWebhooksSquashMergeCommitMessageEnum = typeof NullableRepositoryWebhooksSquashMergeCommitMessageEnum[keyof typeof NullableRepositoryWebhooksSquashMergeCommitMessageEnum];
export const NullableRepositoryWebhooksMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type NullableRepositoryWebhooksMergeCommitTitleEnum = typeof NullableRepositoryWebhooksMergeCommitTitleEnum[keyof typeof NullableRepositoryWebhooksMergeCommitTitleEnum];
export const NullableRepositoryWebhooksMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type NullableRepositoryWebhooksMergeCommitMessageEnum = typeof NullableRepositoryWebhooksMergeCommitMessageEnum[keyof typeof NullableRepositoryWebhooksMergeCommitMessageEnum];

/**
 * 
 * @export
 * @interface NullableScopedInstallation
 */
export interface NullableScopedInstallation {
    /**
     * 
     * @type {AppPermissions}
     * @memberof NullableScopedInstallation
     */
    'permissions': AppPermissions;
    /**
     * Describe whether all repositories have been selected or there\'s a selection involved
     * @type {string}
     * @memberof NullableScopedInstallation
     */
    'repository_selection': NullableScopedInstallationRepositorySelectionEnum;
    /**
     * 
     * @type {string}
     * @memberof NullableScopedInstallation
     */
    'single_file_name': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof NullableScopedInstallation
     */
    'has_multiple_single_files'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof NullableScopedInstallation
     */
    'single_file_paths'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof NullableScopedInstallation
     */
    'repositories_url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof NullableScopedInstallation
     */
    'account': SimpleUser;
}

export const NullableScopedInstallationRepositorySelectionEnum = {
    All: 'all',
    Selected: 'selected'
} as const;

export type NullableScopedInstallationRepositorySelectionEnum = typeof NullableScopedInstallationRepositorySelectionEnum[keyof typeof NullableScopedInstallationRepositorySelectionEnum];

/**
 * A commit.
 * @export
 * @interface NullableSimpleCommit
 */
export interface NullableSimpleCommit {
    /**
     * SHA for the commit
     * @type {string}
     * @memberof NullableSimpleCommit
     */
    'id': string;
    /**
     * SHA for the commit\'s tree
     * @type {string}
     * @memberof NullableSimpleCommit
     */
    'tree_id': string;
    /**
     * Message describing the purpose of the commit
     * @type {string}
     * @memberof NullableSimpleCommit
     */
    'message': string;
    /**
     * Timestamp of the commit
     * @type {string}
     * @memberof NullableSimpleCommit
     */
    'timestamp': string;
    /**
     * 
     * @type {NullableSimpleCommitAuthor}
     * @memberof NullableSimpleCommit
     */
    'author': NullableSimpleCommitAuthor | null;
    /**
     * 
     * @type {NullableSimpleCommitCommitter}
     * @memberof NullableSimpleCommit
     */
    'committer': NullableSimpleCommitCommitter | null;
}
/**
 * Information about the Git author
 * @export
 * @interface NullableSimpleCommitAuthor
 */
export interface NullableSimpleCommitAuthor {
    /**
     * Name of the commit\'s author
     * @type {string}
     * @memberof NullableSimpleCommitAuthor
     */
    'name': string;
    /**
     * Git email address of the commit\'s author
     * @type {string}
     * @memberof NullableSimpleCommitAuthor
     */
    'email': string;
}
/**
 * Information about the Git committer
 * @export
 * @interface NullableSimpleCommitCommitter
 */
export interface NullableSimpleCommitCommitter {
    /**
     * Name of the commit\'s committer
     * @type {string}
     * @memberof NullableSimpleCommitCommitter
     */
    'name': string;
    /**
     * Git email address of the commit\'s committer
     * @type {string}
     * @memberof NullableSimpleCommitCommitter
     */
    'email': string;
}
/**
 * A GitHub user.
 * @export
 * @interface NullableSimpleUser
 */
export interface NullableSimpleUser {
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'name'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof NullableSimpleUser
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'gravatar_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'followers_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'following_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'starred_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'subscriptions_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'organizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'received_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'type': string;
    /**
     * 
     * @type {boolean}
     * @memberof NullableSimpleUser
     */
    'site_admin': boolean;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'starred_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableSimpleUser
     */
    'user_view_type'?: string;
}
/**
 * Groups of organization members that gives permissions on specified repositories.
 * @export
 * @interface NullableTeamSimple
 */
export interface NullableTeamSimple {
    /**
     * Unique identifier of the team
     * @type {number}
     * @memberof NullableTeamSimple
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof NullableTeamSimple
     */
    'node_id': string;
    /**
     * URL for the team
     * @type {string}
     * @memberof NullableTeamSimple
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableTeamSimple
     */
    'members_url': string;
    /**
     * Name of the team
     * @type {string}
     * @memberof NullableTeamSimple
     */
    'name': string;
    /**
     * Description of the team
     * @type {string}
     * @memberof NullableTeamSimple
     */
    'description': string | null;
    /**
     * Permission that the team will have for its repositories
     * @type {string}
     * @memberof NullableTeamSimple
     */
    'permission': string;
    /**
     * The level of privacy this team should have
     * @type {string}
     * @memberof NullableTeamSimple
     */
    'privacy'?: string;
    /**
     * The notification setting the team has set
     * @type {string}
     * @memberof NullableTeamSimple
     */
    'notification_setting'?: string;
    /**
     * 
     * @type {string}
     * @memberof NullableTeamSimple
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableTeamSimple
     */
    'repositories_url': string;
    /**
     * 
     * @type {string}
     * @memberof NullableTeamSimple
     */
    'slug': string;
    /**
     * Distinguished Name (DN) that team maps to within LDAP environment
     * @type {string}
     * @memberof NullableTeamSimple
     */
    'ldap_dn'?: string;
}
/**
 * Actions OIDC Subject customization
 * @export
 * @interface OidcCustomSub
 */
export interface OidcCustomSub {
    /**
     * Array of unique strings. Each claim key can only contain alphanumeric characters and underscores.
     * @type {Array<string>}
     * @memberof OidcCustomSub
     */
    'include_claim_keys': Array<string>;
}
/**
 * Actions OIDC subject customization for a repository
 * @export
 * @interface OidcCustomSubRepo
 */
export interface OidcCustomSubRepo {
    /**
     * Whether to use the default template or not. If `true`, the `include_claim_keys` field is ignored.
     * @type {boolean}
     * @memberof OidcCustomSubRepo
     */
    'use_default': boolean;
    /**
     * Array of unique strings. Each claim key can only contain alphanumeric characters and underscores.
     * @type {Array<string>}
     * @memberof OidcCustomSubRepo
     */
    'include_claim_keys'?: Array<string>;
}
/**
 * Org Hook
 * @export
 * @interface OrgHook
 */
export interface OrgHook {
    /**
     * 
     * @type {number}
     * @memberof OrgHook
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof OrgHook
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof OrgHook
     */
    'ping_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrgHook
     */
    'deliveries_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof OrgHook
     */
    'name': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof OrgHook
     */
    'events': Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof OrgHook
     */
    'active': boolean;
    /**
     * 
     * @type {OrgHookConfig}
     * @memberof OrgHook
     */
    'config': OrgHookConfig;
    /**
     * 
     * @type {string}
     * @memberof OrgHook
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof OrgHook
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof OrgHook
     */
    'type': string;
}
/**
 * 
 * @export
 * @interface OrgHookConfig
 */
export interface OrgHookConfig {
    /**
     * 
     * @type {string}
     * @memberof OrgHookConfig
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof OrgHookConfig
     */
    'insecure_ssl'?: string;
    /**
     * 
     * @type {string}
     * @memberof OrgHookConfig
     */
    'content_type'?: string;
    /**
     * 
     * @type {string}
     * @memberof OrgHookConfig
     */
    'secret'?: string;
}
/**
 * Org Membership
 * @export
 * @interface OrgMembership
 */
export interface OrgMembership {
    /**
     * 
     * @type {string}
     * @memberof OrgMembership
     */
    'url': string;
    /**
     * The state of the member in the organization. The `pending` state indicates the user has not yet accepted an invitation.
     * @type {string}
     * @memberof OrgMembership
     */
    'state': OrgMembershipStateEnum;
    /**
     * The user\'s membership type in the organization.
     * @type {string}
     * @memberof OrgMembership
     */
    'role': OrgMembershipRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof OrgMembership
     */
    'organization_url': string;
    /**
     * 
     * @type {OrganizationSimple}
     * @memberof OrgMembership
     */
    'organization': OrganizationSimple;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof OrgMembership
     */
    'user': NullableSimpleUser | null;
    /**
     * 
     * @type {OrgMembershipPermissions}
     * @memberof OrgMembership
     */
    'permissions'?: OrgMembershipPermissions;
}

export const OrgMembershipStateEnum = {
    Active: 'active',
    Pending: 'pending'
} as const;

export type OrgMembershipStateEnum = typeof OrgMembershipStateEnum[keyof typeof OrgMembershipStateEnum];
export const OrgMembershipRoleEnum = {
    Admin: 'admin',
    Member: 'member',
    BillingManager: 'billing_manager'
} as const;

export type OrgMembershipRoleEnum = typeof OrgMembershipRoleEnum[keyof typeof OrgMembershipRoleEnum];

/**
 * 
 * @export
 * @interface OrgMembershipPermissions
 */
export interface OrgMembershipPermissions {
    /**
     * 
     * @type {boolean}
     * @memberof OrgMembershipPermissions
     */
    'can_create_repository': boolean;
}
/**
 * Private registry configuration for an organization
 * @export
 * @interface OrgPrivateRegistryConfiguration
 */
export interface OrgPrivateRegistryConfiguration {
    /**
     * The name of the private registry configuration.
     * @type {string}
     * @memberof OrgPrivateRegistryConfiguration
     */
    'name': string;
    /**
     * The registry type.
     * @type {string}
     * @memberof OrgPrivateRegistryConfiguration
     */
    'registry_type': OrgPrivateRegistryConfigurationRegistryTypeEnum;
    /**
     * The username to use when authenticating with the private registry.
     * @type {string}
     * @memberof OrgPrivateRegistryConfiguration
     */
    'username'?: string | null;
    /**
     * Which type of organization repositories have access to the private registry.
     * @type {string}
     * @memberof OrgPrivateRegistryConfiguration
     */
    'visibility': OrgPrivateRegistryConfigurationVisibilityEnum;
    /**
     * 
     * @type {string}
     * @memberof OrgPrivateRegistryConfiguration
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof OrgPrivateRegistryConfiguration
     */
    'updated_at': string;
}

export const OrgPrivateRegistryConfigurationRegistryTypeEnum = {
    MavenRepository: 'maven_repository',
    NugetFeed: 'nuget_feed',
    GoproxyServer: 'goproxy_server'
} as const;

export type OrgPrivateRegistryConfigurationRegistryTypeEnum = typeof OrgPrivateRegistryConfigurationRegistryTypeEnum[keyof typeof OrgPrivateRegistryConfigurationRegistryTypeEnum];
export const OrgPrivateRegistryConfigurationVisibilityEnum = {
    All: 'all',
    Private: 'private',
    Selected: 'selected'
} as const;

export type OrgPrivateRegistryConfigurationVisibilityEnum = typeof OrgPrivateRegistryConfigurationVisibilityEnum[keyof typeof OrgPrivateRegistryConfigurationVisibilityEnum];

/**
 * Private registry configuration for an organization
 * @export
 * @interface OrgPrivateRegistryConfigurationWithSelectedRepositories
 */
export interface OrgPrivateRegistryConfigurationWithSelectedRepositories {
    /**
     * The name of the private registry configuration.
     * @type {string}
     * @memberof OrgPrivateRegistryConfigurationWithSelectedRepositories
     */
    'name': string;
    /**
     * The registry type.
     * @type {string}
     * @memberof OrgPrivateRegistryConfigurationWithSelectedRepositories
     */
    'registry_type': OrgPrivateRegistryConfigurationWithSelectedRepositoriesRegistryTypeEnum;
    /**
     * The username to use when authenticating with the private registry.
     * @type {string}
     * @memberof OrgPrivateRegistryConfigurationWithSelectedRepositories
     */
    'username'?: string;
    /**
     * Which type of organization repositories have access to the private registry. `selected` means only the repositories specified by `selected_repository_ids` can access the private registry.
     * @type {string}
     * @memberof OrgPrivateRegistryConfigurationWithSelectedRepositories
     */
    'visibility': OrgPrivateRegistryConfigurationWithSelectedRepositoriesVisibilityEnum;
    /**
     * An array of repository IDs that can access the organization private registry when `visibility` is set to `selected`.
     * @type {Array<number>}
     * @memberof OrgPrivateRegistryConfigurationWithSelectedRepositories
     */
    'selected_repository_ids'?: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof OrgPrivateRegistryConfigurationWithSelectedRepositories
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof OrgPrivateRegistryConfigurationWithSelectedRepositories
     */
    'updated_at': string;
}

export const OrgPrivateRegistryConfigurationWithSelectedRepositoriesRegistryTypeEnum = {
    MavenRepository: 'maven_repository',
    NugetFeed: 'nuget_feed',
    GoproxyServer: 'goproxy_server'
} as const;

export type OrgPrivateRegistryConfigurationWithSelectedRepositoriesRegistryTypeEnum = typeof OrgPrivateRegistryConfigurationWithSelectedRepositoriesRegistryTypeEnum[keyof typeof OrgPrivateRegistryConfigurationWithSelectedRepositoriesRegistryTypeEnum];
export const OrgPrivateRegistryConfigurationWithSelectedRepositoriesVisibilityEnum = {
    All: 'all',
    Private: 'private',
    Selected: 'selected'
} as const;

export type OrgPrivateRegistryConfigurationWithSelectedRepositoriesVisibilityEnum = typeof OrgPrivateRegistryConfigurationWithSelectedRepositoriesVisibilityEnum[keyof typeof OrgPrivateRegistryConfigurationWithSelectedRepositoriesVisibilityEnum];

/**
 * List of custom property values for a repository
 * @export
 * @interface OrgRepoCustomPropertyValues
 */
export interface OrgRepoCustomPropertyValues {
    /**
     * 
     * @type {number}
     * @memberof OrgRepoCustomPropertyValues
     */
    'repository_id': number;
    /**
     * 
     * @type {string}
     * @memberof OrgRepoCustomPropertyValues
     */
    'repository_name': string;
    /**
     * 
     * @type {string}
     * @memberof OrgRepoCustomPropertyValues
     */
    'repository_full_name': string;
    /**
     * List of custom property names and associated values
     * @type {Array<CustomPropertyValue>}
     * @memberof OrgRepoCustomPropertyValues
     */
    'properties': Array<CustomPropertyValue>;
}
/**
 * @type OrgRulesetConditions
 * Conditions for an organization ruleset. The branch and tag rulesets conditions object should contain both `repository_name` and `ref_name` properties, or both `repository_id` and `ref_name` properties, or both `repository_property` and `ref_name` properties. The push rulesets conditions object does not require the `ref_name` property. For repository policy rulesets, the conditions object should only contain the `repository_name`, the `repository_id`, or the `repository_property`.
 * @export
 */
export type OrgRulesetConditions = RepositoryIdAndRefName | RepositoryNameAndRefName | RepositoryPropertyAndRefName;

/**
 * 
 * @export
 * @interface Organization
 */
export interface Organization {
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof Organization
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    'members_url': string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    'public_members_url': string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    'url': string;
}
/**
 * Secrets for GitHub Actions for an organization.
 * @export
 * @interface OrganizationActionsSecret
 */
export interface OrganizationActionsSecret {
    /**
     * The name of the secret.
     * @type {string}
     * @memberof OrganizationActionsSecret
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationActionsSecret
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationActionsSecret
     */
    'updated_at': string;
    /**
     * Visibility of a secret
     * @type {string}
     * @memberof OrganizationActionsSecret
     */
    'visibility': OrganizationActionsSecretVisibilityEnum;
    /**
     * 
     * @type {string}
     * @memberof OrganizationActionsSecret
     */
    'selected_repositories_url'?: string;
}

export const OrganizationActionsSecretVisibilityEnum = {
    All: 'all',
    Private: 'private',
    Selected: 'selected'
} as const;

export type OrganizationActionsSecretVisibilityEnum = typeof OrganizationActionsSecretVisibilityEnum[keyof typeof OrganizationActionsSecretVisibilityEnum];

/**
 * Organization variable for GitHub Actions.
 * @export
 * @interface OrganizationActionsVariable
 */
export interface OrganizationActionsVariable {
    /**
     * The name of the variable.
     * @type {string}
     * @memberof OrganizationActionsVariable
     */
    'name': string;
    /**
     * The value of the variable.
     * @type {string}
     * @memberof OrganizationActionsVariable
     */
    'value': string;
    /**
     * The date and time at which the variable was created, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof OrganizationActionsVariable
     */
    'created_at': string;
    /**
     * The date and time at which the variable was last updated, in ISO 8601 format\':\' YYYY-MM-DDTHH:MM:SSZ.
     * @type {string}
     * @memberof OrganizationActionsVariable
     */
    'updated_at': string;
    /**
     * Visibility of a variable
     * @type {string}
     * @memberof OrganizationActionsVariable
     */
    'visibility': OrganizationActionsVariableVisibilityEnum;
    /**
     * 
     * @type {string}
     * @memberof OrganizationActionsVariable
     */
    'selected_repositories_url'?: string;
}

export const OrganizationActionsVariableVisibilityEnum = {
    All: 'all',
    Private: 'private',
    Selected: 'selected'
} as const;

export type OrganizationActionsVariableVisibilityEnum = typeof OrganizationActionsVariableVisibilityEnum[keyof typeof OrganizationActionsVariableVisibilityEnum];

/**
 * 
 * @export
 * @interface OrganizationCreateIssueType
 */
export interface OrganizationCreateIssueType {
    /**
     * Name of the issue type.
     * @type {string}
     * @memberof OrganizationCreateIssueType
     */
    'name': string;
    /**
     * Whether or not the issue type is enabled at the organization level.
     * @type {boolean}
     * @memberof OrganizationCreateIssueType
     */
    'is_enabled': boolean;
    /**
     * Description of the issue type.
     * @type {string}
     * @memberof OrganizationCreateIssueType
     */
    'description'?: string | null;
    /**
     * Color for the issue type.
     * @type {string}
     * @memberof OrganizationCreateIssueType
     */
    'color'?: OrganizationCreateIssueTypeColorEnum | null;
}

export const OrganizationCreateIssueTypeColorEnum = {
    Gray: 'gray',
    Blue: 'blue',
    Green: 'green',
    Yellow: 'yellow',
    Orange: 'orange',
    Red: 'red',
    Pink: 'pink',
    Purple: 'purple'
} as const;

export type OrganizationCreateIssueTypeColorEnum = typeof OrganizationCreateIssueTypeColorEnum[keyof typeof OrganizationCreateIssueTypeColorEnum];

/**
 * Secrets for GitHub Dependabot for an organization.
 * @export
 * @interface OrganizationDependabotSecret
 */
export interface OrganizationDependabotSecret {
    /**
     * The name of the secret.
     * @type {string}
     * @memberof OrganizationDependabotSecret
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationDependabotSecret
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationDependabotSecret
     */
    'updated_at': string;
    /**
     * Visibility of a secret
     * @type {string}
     * @memberof OrganizationDependabotSecret
     */
    'visibility': OrganizationDependabotSecretVisibilityEnum;
    /**
     * 
     * @type {string}
     * @memberof OrganizationDependabotSecret
     */
    'selected_repositories_url'?: string;
}

export const OrganizationDependabotSecretVisibilityEnum = {
    All: 'all',
    Private: 'private',
    Selected: 'selected'
} as const;

export type OrganizationDependabotSecretVisibilityEnum = typeof OrganizationDependabotSecretVisibilityEnum[keyof typeof OrganizationDependabotSecretVisibilityEnum];

/**
 * Organization Full
 * @export
 * @interface OrganizationFull
 */
export interface OrganizationFull {
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof OrganizationFull
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'members_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'public_members_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'company'?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'blog'?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'location'?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'email'?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'twitter_username'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'is_verified'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'has_organization_projects': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'has_repository_projects': boolean;
    /**
     * 
     * @type {number}
     * @memberof OrganizationFull
     */
    'public_repos': number;
    /**
     * 
     * @type {number}
     * @memberof OrganizationFull
     */
    'public_gists': number;
    /**
     * 
     * @type {number}
     * @memberof OrganizationFull
     */
    'followers': number;
    /**
     * 
     * @type {number}
     * @memberof OrganizationFull
     */
    'following': number;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'type': string;
    /**
     * 
     * @type {number}
     * @memberof OrganizationFull
     */
    'total_private_repos'?: number;
    /**
     * 
     * @type {number}
     * @memberof OrganizationFull
     */
    'owned_private_repos'?: number;
    /**
     * 
     * @type {number}
     * @memberof OrganizationFull
     */
    'private_gists'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof OrganizationFull
     */
    'disk_usage'?: number | null;
    /**
     * The number of collaborators on private repositories.  This field may be null if the number of private repositories is over 50,000.
     * @type {number}
     * @memberof OrganizationFull
     */
    'collaborators'?: number | null;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'billing_email'?: string | null;
    /**
     * 
     * @type {OrganizationFullPlan}
     * @memberof OrganizationFull
     */
    'plan'?: OrganizationFullPlan;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'default_repository_permission'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'members_can_create_repositories'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'two_factor_requirement_enabled'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'members_allowed_repository_creation_type'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'members_can_create_public_repositories'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'members_can_create_private_repositories'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'members_can_create_internal_repositories'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'members_can_create_pages'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'members_can_create_public_pages'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'members_can_create_private_pages'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'members_can_fork_private_repositories'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'web_commit_signoff_required'?: boolean;
    /**
     * **Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.  Whether GitHub Advanced Security is enabled for new repositories and repositories transferred to this organization.  This field is only visible to organization owners or members of a team with the security manager role.
     * @type {boolean}
     * @memberof OrganizationFull
     * @deprecated
     */
    'advanced_security_enabled_for_new_repositories'?: boolean;
    /**
     * **Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.  Whether Dependabot alerts are automatically enabled for new repositories and repositories transferred to this organization.  This field is only visible to organization owners or members of a team with the security manager role.
     * @type {boolean}
     * @memberof OrganizationFull
     * @deprecated
     */
    'dependabot_alerts_enabled_for_new_repositories'?: boolean;
    /**
     * **Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.  Whether Dependabot security updates are automatically enabled for new repositories and repositories transferred to this organization.  This field is only visible to organization owners or members of a team with the security manager role.
     * @type {boolean}
     * @memberof OrganizationFull
     * @deprecated
     */
    'dependabot_security_updates_enabled_for_new_repositories'?: boolean;
    /**
     * **Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.  Whether dependency graph is automatically enabled for new repositories and repositories transferred to this organization.  This field is only visible to organization owners or members of a team with the security manager role.
     * @type {boolean}
     * @memberof OrganizationFull
     * @deprecated
     */
    'dependency_graph_enabled_for_new_repositories'?: boolean;
    /**
     * **Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.  Whether secret scanning is automatically enabled for new repositories and repositories transferred to this organization.  This field is only visible to organization owners or members of a team with the security manager role.
     * @type {boolean}
     * @memberof OrganizationFull
     * @deprecated
     */
    'secret_scanning_enabled_for_new_repositories'?: boolean;
    /**
     * **Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.  Whether secret scanning push protection is automatically enabled for new repositories and repositories transferred to this organization.  This field is only visible to organization owners or members of a team with the security manager role.
     * @type {boolean}
     * @memberof OrganizationFull
     * @deprecated
     */
    'secret_scanning_push_protection_enabled_for_new_repositories'?: boolean;
    /**
     * Whether a custom link is shown to contributors who are blocked from pushing a secret by push protection.
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'secret_scanning_push_protection_custom_link_enabled'?: boolean;
    /**
     * An optional URL string to display to contributors who are blocked from pushing a secret.
     * @type {string}
     * @memberof OrganizationFull
     */
    'secret_scanning_push_protection_custom_link'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationFull
     */
    'archived_at': string | null;
    /**
     * Controls whether or not deploy keys may be added and used for repositories in the organization.
     * @type {boolean}
     * @memberof OrganizationFull
     */
    'deploy_keys_enabled_for_repositories'?: boolean;
}
/**
 * 
 * @export
 * @interface OrganizationFullPlan
 */
export interface OrganizationFullPlan {
    /**
     * 
     * @type {string}
     * @memberof OrganizationFullPlan
     */
    'name': string;
    /**
     * 
     * @type {number}
     * @memberof OrganizationFullPlan
     */
    'space': number;
    /**
     * 
     * @type {number}
     * @memberof OrganizationFullPlan
     */
    'private_repos': number;
    /**
     * 
     * @type {number}
     * @memberof OrganizationFullPlan
     */
    'filled_seats'?: number;
    /**
     * 
     * @type {number}
     * @memberof OrganizationFullPlan
     */
    'seats'?: number;
}
/**
 * Organization Invitation
 * @export
 * @interface OrganizationInvitation
 */
export interface OrganizationInvitation {
    /**
     * 
     * @type {number}
     * @memberof OrganizationInvitation
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof OrganizationInvitation
     */
    'login': string | null;
    /**
     * 
     * @type {string}
     * @memberof OrganizationInvitation
     */
    'email': string | null;
    /**
     * 
     * @type {string}
     * @memberof OrganizationInvitation
     */
    'role': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationInvitation
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationInvitation
     */
    'failed_at'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrganizationInvitation
     */
    'failed_reason'?: string | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof OrganizationInvitation
     */
    'inviter': SimpleUser;
    /**
     * 
     * @type {number}
     * @memberof OrganizationInvitation
     */
    'team_count': number;
    /**
     * 
     * @type {string}
     * @memberof OrganizationInvitation
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationInvitation
     */
    'invitation_teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationInvitation
     */
    'invitation_source'?: string;
}
/**
 * Minimal representation of an organization programmatic access grant for enumerations
 * @export
 * @interface OrganizationProgrammaticAccessGrant
 */
export interface OrganizationProgrammaticAccessGrant {
    /**
     * Unique identifier of the fine-grained personal access token grant. The `pat_id` used to get details about an approved fine-grained personal access token.
     * @type {number}
     * @memberof OrganizationProgrammaticAccessGrant
     */
    'id': number;
    /**
     * 
     * @type {SimpleUser}
     * @memberof OrganizationProgrammaticAccessGrant
     */
    'owner': SimpleUser;
    /**
     * Type of repository selection requested.
     * @type {string}
     * @memberof OrganizationProgrammaticAccessGrant
     */
    'repository_selection': OrganizationProgrammaticAccessGrantRepositorySelectionEnum;
    /**
     * URL to the list of repositories the fine-grained personal access token can access. Only follow when `repository_selection` is `subset`.
     * @type {string}
     * @memberof OrganizationProgrammaticAccessGrant
     */
    'repositories_url': string;
    /**
     * 
     * @type {OrganizationProgrammaticAccessGrantRequestPermissions}
     * @memberof OrganizationProgrammaticAccessGrant
     */
    'permissions': OrganizationProgrammaticAccessGrantRequestPermissions;
    /**
     * Date and time when the fine-grained personal access token was approved to access the organization.
     * @type {string}
     * @memberof OrganizationProgrammaticAccessGrant
     */
    'access_granted_at': string;
    /**
     * Unique identifier of the user\'s token. This field can also be found in audit log events and the organization\'s settings for their PAT grants.
     * @type {number}
     * @memberof OrganizationProgrammaticAccessGrant
     */
    'token_id': number;
    /**
     * The name given to the user\'s token. This field can also be found in an organization\'s settings page for Active Tokens.
     * @type {string}
     * @memberof OrganizationProgrammaticAccessGrant
     */
    'token_name': string;
    /**
     * Whether the associated fine-grained personal access token has expired.
     * @type {boolean}
     * @memberof OrganizationProgrammaticAccessGrant
     */
    'token_expired': boolean;
    /**
     * Date and time when the associated fine-grained personal access token expires.
     * @type {string}
     * @memberof OrganizationProgrammaticAccessGrant
     */
    'token_expires_at': string | null;
    /**
     * Date and time when the associated fine-grained personal access token was last used for authentication.
     * @type {string}
     * @memberof OrganizationProgrammaticAccessGrant
     */
    'token_last_used_at': string | null;
}

export const OrganizationProgrammaticAccessGrantRepositorySelectionEnum = {
    None: 'none',
    All: 'all',
    Subset: 'subset'
} as const;

export type OrganizationProgrammaticAccessGrantRepositorySelectionEnum = typeof OrganizationProgrammaticAccessGrantRepositorySelectionEnum[keyof typeof OrganizationProgrammaticAccessGrantRepositorySelectionEnum];

/**
 * Minimal representation of an organization programmatic access grant request for enumerations
 * @export
 * @interface OrganizationProgrammaticAccessGrantRequest
 */
export interface OrganizationProgrammaticAccessGrantRequest {
    /**
     * Unique identifier of the request for access via fine-grained personal access token. The `pat_request_id` used to review PAT requests.
     * @type {number}
     * @memberof OrganizationProgrammaticAccessGrantRequest
     */
    'id': number;
    /**
     * Reason for requesting access.
     * @type {string}
     * @memberof OrganizationProgrammaticAccessGrantRequest
     */
    'reason': string | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof OrganizationProgrammaticAccessGrantRequest
     */
    'owner': SimpleUser;
    /**
     * Type of repository selection requested.
     * @type {string}
     * @memberof OrganizationProgrammaticAccessGrantRequest
     */
    'repository_selection': OrganizationProgrammaticAccessGrantRequestRepositorySelectionEnum;
    /**
     * URL to the list of repositories requested to be accessed via fine-grained personal access token. Should only be followed when `repository_selection` is `subset`.
     * @type {string}
     * @memberof OrganizationProgrammaticAccessGrantRequest
     */
    'repositories_url': string;
    /**
     * 
     * @type {OrganizationProgrammaticAccessGrantRequestPermissions}
     * @memberof OrganizationProgrammaticAccessGrantRequest
     */
    'permissions': OrganizationProgrammaticAccessGrantRequestPermissions;
    /**
     * Date and time when the request for access was created.
     * @type {string}
     * @memberof OrganizationProgrammaticAccessGrantRequest
     */
    'created_at': string;
    /**
     * Unique identifier of the user\'s token. This field can also be found in audit log events and the organization\'s settings for their PAT grants.
     * @type {number}
     * @memberof OrganizationProgrammaticAccessGrantRequest
     */
    'token_id': number;
    /**
     * The name given to the user\'s token. This field can also be found in an organization\'s settings page for Active Tokens.
     * @type {string}
     * @memberof OrganizationProgrammaticAccessGrantRequest
     */
    'token_name': string;
    /**
     * Whether the associated fine-grained personal access token has expired.
     * @type {boolean}
     * @memberof OrganizationProgrammaticAccessGrantRequest
     */
    'token_expired': boolean;
    /**
     * Date and time when the associated fine-grained personal access token expires.
     * @type {string}
     * @memberof OrganizationProgrammaticAccessGrantRequest
     */
    'token_expires_at': string | null;
    /**
     * Date and time when the associated fine-grained personal access token was last used for authentication.
     * @type {string}
     * @memberof OrganizationProgrammaticAccessGrantRequest
     */
    'token_last_used_at': string | null;
}

export const OrganizationProgrammaticAccessGrantRequestRepositorySelectionEnum = {
    None: 'none',
    All: 'all',
    Subset: 'subset'
} as const;

export type OrganizationProgrammaticAccessGrantRequestRepositorySelectionEnum = typeof OrganizationProgrammaticAccessGrantRequestRepositorySelectionEnum[keyof typeof OrganizationProgrammaticAccessGrantRequestRepositorySelectionEnum];

/**
 * Permissions requested, categorized by type of permission.
 * @export
 * @interface OrganizationProgrammaticAccessGrantRequestPermissions
 */
export interface OrganizationProgrammaticAccessGrantRequestPermissions {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof OrganizationProgrammaticAccessGrantRequestPermissions
     */
    'organization'?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof OrganizationProgrammaticAccessGrantRequestPermissions
     */
    'repository'?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof OrganizationProgrammaticAccessGrantRequestPermissions
     */
    'other'?: { [key: string]: string; };
}
/**
 * Organization roles
 * @export
 * @interface OrganizationRole
 */
export interface OrganizationRole {
    /**
     * The unique identifier of the role.
     * @type {number}
     * @memberof OrganizationRole
     */
    'id': number;
    /**
     * The name of the role.
     * @type {string}
     * @memberof OrganizationRole
     */
    'name': string;
    /**
     * A short description about who this role is for or what permissions it grants.
     * @type {string}
     * @memberof OrganizationRole
     */
    'description'?: string | null;
    /**
     * The system role from which this role inherits permissions.
     * @type {string}
     * @memberof OrganizationRole
     */
    'base_role'?: OrganizationRoleBaseRoleEnum | null;
    /**
     * Source answers the question, \"where did this role come from?\"
     * @type {string}
     * @memberof OrganizationRole
     */
    'source'?: OrganizationRoleSourceEnum | null;
    /**
     * A list of permissions included in this role.
     * @type {Array<string>}
     * @memberof OrganizationRole
     */
    'permissions': Array<string>;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof OrganizationRole
     */
    'organization': NullableSimpleUser | null;
    /**
     * The date and time the role was created.
     * @type {string}
     * @memberof OrganizationRole
     */
    'created_at': string;
    /**
     * The date and time the role was last updated.
     * @type {string}
     * @memberof OrganizationRole
     */
    'updated_at': string;
}

export const OrganizationRoleBaseRoleEnum = {
    Read: 'read',
    Triage: 'triage',
    Write: 'write',
    Maintain: 'maintain',
    Admin: 'admin'
} as const;

export type OrganizationRoleBaseRoleEnum = typeof OrganizationRoleBaseRoleEnum[keyof typeof OrganizationRoleBaseRoleEnum];
export const OrganizationRoleSourceEnum = {
    Organization: 'Organization',
    Enterprise: 'Enterprise',
    Predefined: 'Predefined'
} as const;

export type OrganizationRoleSourceEnum = typeof OrganizationRoleSourceEnum[keyof typeof OrganizationRoleSourceEnum];

/**
 * 
 * @export
 * @interface OrganizationSecretScanningAlert
 */
export interface OrganizationSecretScanningAlert {
    /**
     * The security alert number.
     * @type {number}
     * @memberof OrganizationSecretScanningAlert
     */
    'number'?: number;
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'created_at'?: string;
    /**
     * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'updated_at'?: string | null;
    /**
     * The REST API URL of the alert resource.
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'url'?: string;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'html_url'?: string;
    /**
     * The REST API URL of the code locations for this alert.
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'locations_url'?: string;
    /**
     * 
     * @type {SecretScanningAlertState}
     * @memberof OrganizationSecretScanningAlert
     */
    'state'?: SecretScanningAlertState;
    /**
     * 
     * @type {SecretScanningAlertResolution}
     * @memberof OrganizationSecretScanningAlert
     */
    'resolution'?: SecretScanningAlertResolution | null;
    /**
     * The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'resolved_at'?: string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof OrganizationSecretScanningAlert
     */
    'resolved_by'?: NullableSimpleUser | null;
    /**
     * The type of secret that secret scanning detected.
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'secret_type'?: string;
    /**
     * User-friendly name for the detected secret, matching the `secret_type`. For a list of built-in patterns, see \"[Supported secret scanning patterns](https://docs.github.com/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#supported-secrets).\"
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'secret_type_display_name'?: string;
    /**
     * The secret that was detected.
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'secret'?: string;
    /**
     * 
     * @type {SimpleRepository}
     * @memberof OrganizationSecretScanningAlert
     */
    'repository'?: SimpleRepository;
    /**
     * Whether push protection was bypassed for the detected secret.
     * @type {boolean}
     * @memberof OrganizationSecretScanningAlert
     */
    'push_protection_bypassed'?: boolean | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof OrganizationSecretScanningAlert
     */
    'push_protection_bypassed_by'?: NullableSimpleUser | null;
    /**
     * The time that push protection was bypassed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'push_protection_bypassed_at'?: string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof OrganizationSecretScanningAlert
     */
    'push_protection_bypass_request_reviewer'?: NullableSimpleUser | null;
    /**
     * An optional comment when reviewing a push protection bypass.
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'push_protection_bypass_request_reviewer_comment'?: string | null;
    /**
     * An optional comment when requesting a push protection bypass.
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'push_protection_bypass_request_comment'?: string | null;
    /**
     * The URL to a push protection bypass request.
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'push_protection_bypass_request_html_url'?: string | null;
    /**
     * The comment that was optionally added when this alert was closed
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'resolution_comment'?: string | null;
    /**
     * The token status as of the latest validity check.
     * @type {string}
     * @memberof OrganizationSecretScanningAlert
     */
    'validity'?: OrganizationSecretScanningAlertValidityEnum;
    /**
     * Whether the secret was publicly leaked.
     * @type {boolean}
     * @memberof OrganizationSecretScanningAlert
     */
    'publicly_leaked'?: boolean | null;
    /**
     * Whether the detected secret was found in multiple repositories in the same organization or enterprise.
     * @type {boolean}
     * @memberof OrganizationSecretScanningAlert
     */
    'multi_repo'?: boolean | null;
    /**
     * A boolean value representing whether or not alert is base64 encoded
     * @type {boolean}
     * @memberof OrganizationSecretScanningAlert
     */
    'is_base64_encoded'?: boolean | null;
}

export const OrganizationSecretScanningAlertValidityEnum = {
    Active: 'active',
    Inactive: 'inactive',
    Unknown: 'unknown'
} as const;

export type OrganizationSecretScanningAlertValidityEnum = typeof OrganizationSecretScanningAlertValidityEnum[keyof typeof OrganizationSecretScanningAlertValidityEnum];

/**
 * A GitHub organization.
 * @export
 * @interface OrganizationSimple
 */
export interface OrganizationSimple {
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimple
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof OrganizationSimple
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimple
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimple
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimple
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimple
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimple
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimple
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimple
     */
    'members_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimple
     */
    'public_members_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimple
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimple
     */
    'description': string | null;
}
/**
 * A GitHub organization. Webhook payloads contain the `organization` property when the webhook is configured for an organization, or when the event occurs from activity in a repository owned by an organization.
 * @export
 * @interface OrganizationSimpleWebhooks
 */
export interface OrganizationSimpleWebhooks {
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimpleWebhooks
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof OrganizationSimpleWebhooks
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimpleWebhooks
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimpleWebhooks
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimpleWebhooks
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimpleWebhooks
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimpleWebhooks
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimpleWebhooks
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimpleWebhooks
     */
    'members_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimpleWebhooks
     */
    'public_members_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimpleWebhooks
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationSimpleWebhooks
     */
    'description': string | null;
}
/**
 * 
 * @export
 * @interface OrganizationUpdateIssueType
 */
export interface OrganizationUpdateIssueType {
    /**
     * Name of the issue type.
     * @type {string}
     * @memberof OrganizationUpdateIssueType
     */
    'name': string;
    /**
     * Whether or not the issue type is enabled at the organization level.
     * @type {boolean}
     * @memberof OrganizationUpdateIssueType
     */
    'is_enabled': boolean;
    /**
     * Description of the issue type.
     * @type {string}
     * @memberof OrganizationUpdateIssueType
     */
    'description'?: string | null;
    /**
     * Color for the issue type.
     * @type {string}
     * @memberof OrganizationUpdateIssueType
     */
    'color'?: OrganizationUpdateIssueTypeColorEnum | null;
}

export const OrganizationUpdateIssueTypeColorEnum = {
    Gray: 'gray',
    Blue: 'blue',
    Green: 'green',
    Yellow: 'yellow',
    Orange: 'orange',
    Red: 'red',
    Pink: 'pink',
    Purple: 'purple'
} as const;

export type OrganizationUpdateIssueTypeColorEnum = typeof OrganizationUpdateIssueTypeColorEnum[keyof typeof OrganizationUpdateIssueTypeColorEnum];

/**
 * A software package
 * @export
 * @interface Package
 */
export interface Package {
    /**
     * Unique identifier of the package.
     * @type {number}
     * @memberof Package
     */
    'id': number;
    /**
     * The name of the package.
     * @type {string}
     * @memberof Package
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Package
     */
    'package_type': PackagePackageTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof Package
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Package
     */
    'html_url': string;
    /**
     * The number of versions of the package.
     * @type {number}
     * @memberof Package
     */
    'version_count': number;
    /**
     * 
     * @type {string}
     * @memberof Package
     */
    'visibility': PackageVisibilityEnum;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof Package
     */
    'owner'?: NullableSimpleUser | null;
    /**
     * 
     * @type {NullableMinimalRepository}
     * @memberof Package
     */
    'repository'?: NullableMinimalRepository | null;
    /**
     * 
     * @type {string}
     * @memberof Package
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof Package
     */
    'updated_at': string;
}

export const PackagePackageTypeEnum = {
    Npm: 'npm',
    Maven: 'maven',
    Rubygems: 'rubygems',
    Docker: 'docker',
    Nuget: 'nuget',
    Container: 'container'
} as const;

export type PackagePackageTypeEnum = typeof PackagePackageTypeEnum[keyof typeof PackagePackageTypeEnum];
export const PackageVisibilityEnum = {
    Private: 'private',
    Public: 'public'
} as const;

export type PackageVisibilityEnum = typeof PackageVisibilityEnum[keyof typeof PackageVisibilityEnum];

/**
 * A version of a software package
 * @export
 * @interface PackageVersion
 */
export interface PackageVersion {
    /**
     * Unique identifier of the package version.
     * @type {number}
     * @memberof PackageVersion
     */
    'id': number;
    /**
     * The name of the package version.
     * @type {string}
     * @memberof PackageVersion
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof PackageVersion
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof PackageVersion
     */
    'package_html_url': string;
    /**
     * 
     * @type {string}
     * @memberof PackageVersion
     */
    'html_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof PackageVersion
     */
    'license'?: string;
    /**
     * 
     * @type {string}
     * @memberof PackageVersion
     */
    'description'?: string;
    /**
     * 
     * @type {string}
     * @memberof PackageVersion
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof PackageVersion
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PackageVersion
     */
    'deleted_at'?: string;
    /**
     * 
     * @type {PackageVersionMetadata}
     * @memberof PackageVersion
     */
    'metadata'?: PackageVersionMetadata;
}
/**
 * 
 * @export
 * @interface PackageVersionMetadata
 */
export interface PackageVersionMetadata {
    /**
     * 
     * @type {string}
     * @memberof PackageVersionMetadata
     */
    'package_type': PackageVersionMetadataPackageTypeEnum;
    /**
     * 
     * @type {ContainerMetadata}
     * @memberof PackageVersionMetadata
     */
    'container'?: ContainerMetadata;
    /**
     * 
     * @type {DockerMetadata}
     * @memberof PackageVersionMetadata
     */
    'docker'?: DockerMetadata;
}

export const PackageVersionMetadataPackageTypeEnum = {
    Npm: 'npm',
    Maven: 'maven',
    Rubygems: 'rubygems',
    Docker: 'docker',
    Nuget: 'nuget',
    Container: 'container'
} as const;

export type PackageVersionMetadataPackageTypeEnum = typeof PackageVersionMetadataPackageTypeEnum[keyof typeof PackageVersionMetadataPackageTypeEnum];

/**
 * 
 * @export
 * @interface PackagesBillingUsage
 */
export interface PackagesBillingUsage {
    /**
     * Sum of the free and paid storage space (GB) for GitHuub Packages.
     * @type {number}
     * @memberof PackagesBillingUsage
     */
    'total_gigabytes_bandwidth_used': number;
    /**
     * Total paid storage space (GB) for GitHuub Packages.
     * @type {number}
     * @memberof PackagesBillingUsage
     */
    'total_paid_gigabytes_bandwidth_used': number;
    /**
     * Free storage space (GB) for GitHub Packages.
     * @type {number}
     * @memberof PackagesBillingUsage
     */
    'included_gigabytes_bandwidth': number;
}
/**
 * The configuration for GitHub Pages for a repository.
 * @export
 * @interface Page
 */
export interface Page {
    /**
     * The API address for accessing this Page resource.
     * @type {string}
     * @memberof Page
     */
    'url': string;
    /**
     * The status of the most recent build of the Page.
     * @type {string}
     * @memberof Page
     */
    'status': PageStatusEnum | null;
    /**
     * The Pages site\'s custom domain
     * @type {string}
     * @memberof Page
     */
    'cname': string | null;
    /**
     * The state if the domain is verified
     * @type {string}
     * @memberof Page
     */
    'protected_domain_state'?: PageProtectedDomainStateEnum | null;
    /**
     * The timestamp when a pending domain becomes unverified.
     * @type {string}
     * @memberof Page
     */
    'pending_domain_unverified_at'?: string | null;
    /**
     * Whether the Page has a custom 404 page.
     * @type {boolean}
     * @memberof Page
     */
    'custom_404': boolean;
    /**
     * The web address the Page can be accessed from.
     * @type {string}
     * @memberof Page
     */
    'html_url'?: string;
    /**
     * The process in which the Page will be built.
     * @type {string}
     * @memberof Page
     */
    'build_type'?: PageBuildTypeEnum | null;
    /**
     * 
     * @type {PagesSourceHash}
     * @memberof Page
     */
    'source'?: PagesSourceHash;
    /**
     * Whether the GitHub Pages site is publicly visible. If set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site.
     * @type {boolean}
     * @memberof Page
     */
    'public': boolean;
    /**
     * 
     * @type {PagesHttpsCertificate}
     * @memberof Page
     */
    'https_certificate'?: PagesHttpsCertificate;
    /**
     * Whether https is enabled on the domain
     * @type {boolean}
     * @memberof Page
     */
    'https_enforced'?: boolean;
}

export const PageStatusEnum = {
    Built: 'built',
    Building: 'building',
    Errored: 'errored'
} as const;

export type PageStatusEnum = typeof PageStatusEnum[keyof typeof PageStatusEnum];
export const PageProtectedDomainStateEnum = {
    Pending: 'pending',
    Verified: 'verified',
    Unverified: 'unverified'
} as const;

export type PageProtectedDomainStateEnum = typeof PageProtectedDomainStateEnum[keyof typeof PageProtectedDomainStateEnum];
export const PageBuildTypeEnum = {
    Legacy: 'legacy',
    Workflow: 'workflow'
} as const;

export type PageBuildTypeEnum = typeof PageBuildTypeEnum[keyof typeof PageBuildTypeEnum];

/**
 * Page Build
 * @export
 * @interface PageBuild
 */
export interface PageBuild {
    /**
     * 
     * @type {string}
     * @memberof PageBuild
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof PageBuild
     */
    'status': string;
    /**
     * 
     * @type {PageBuildError}
     * @memberof PageBuild
     */
    'error': PageBuildError;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof PageBuild
     */
    'pusher': NullableSimpleUser | null;
    /**
     * 
     * @type {string}
     * @memberof PageBuild
     */
    'commit': string;
    /**
     * 
     * @type {number}
     * @memberof PageBuild
     */
    'duration': number;
    /**
     * 
     * @type {string}
     * @memberof PageBuild
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof PageBuild
     */
    'updated_at': string;
}
/**
 * 
 * @export
 * @interface PageBuildError
 */
export interface PageBuildError {
    /**
     * 
     * @type {string}
     * @memberof PageBuildError
     */
    'message': string | null;
}
/**
 * Page Build Status
 * @export
 * @interface PageBuildStatus
 */
export interface PageBuildStatus {
    /**
     * 
     * @type {string}
     * @memberof PageBuildStatus
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof PageBuildStatus
     */
    'status': string;
}
/**
 * The GitHub Pages deployment status.
 * @export
 * @interface PageDeployment
 */
export interface PageDeployment {
    /**
     * 
     * @type {PageDeploymentId}
     * @memberof PageDeployment
     */
    'id': PageDeploymentId;
    /**
     * The URI to monitor GitHub Pages deployment status.
     * @type {string}
     * @memberof PageDeployment
     */
    'status_url': string;
    /**
     * The URI to the deployed GitHub Pages.
     * @type {string}
     * @memberof PageDeployment
     */
    'page_url': string;
    /**
     * The URI to the deployed GitHub Pages preview.
     * @type {string}
     * @memberof PageDeployment
     */
    'preview_url'?: string;
}
/**
 * @type PageDeploymentId
 * The ID of the GitHub Pages deployment. This is the Git SHA of the deployed commit.
 * @export
 */
export type PageDeploymentId = number | string;

/**
 * 
 * @export
 * @interface PagesDeploymentStatus
 */
export interface PagesDeploymentStatus {
    /**
     * The current status of the deployment.
     * @type {string}
     * @memberof PagesDeploymentStatus
     */
    'status'?: PagesDeploymentStatusStatusEnum;
}

export const PagesDeploymentStatusStatusEnum = {
    DeploymentInProgress: 'deployment_in_progress',
    SyncingFiles: 'syncing_files',
    FinishedFileSync: 'finished_file_sync',
    UpdatingPages: 'updating_pages',
    PurgingCdn: 'purging_cdn',
    DeploymentCancelled: 'deployment_cancelled',
    DeploymentFailed: 'deployment_failed',
    DeploymentContentFailed: 'deployment_content_failed',
    DeploymentAttemptError: 'deployment_attempt_error',
    DeploymentLost: 'deployment_lost',
    Succeed: 'succeed'
} as const;

export type PagesDeploymentStatusStatusEnum = typeof PagesDeploymentStatusStatusEnum[keyof typeof PagesDeploymentStatusStatusEnum];

/**
 * Pages Health Check Status
 * @export
 * @interface PagesHealthCheck
 */
export interface PagesHealthCheck {
    /**
     * 
     * @type {PagesHealthCheckDomain}
     * @memberof PagesHealthCheck
     */
    'domain'?: PagesHealthCheckDomain;
    /**
     * 
     * @type {PagesHealthCheckAltDomain}
     * @memberof PagesHealthCheck
     */
    'alt_domain'?: PagesHealthCheckAltDomain | null;
}
/**
 * 
 * @export
 * @interface PagesHealthCheckAltDomain
 */
export interface PagesHealthCheckAltDomain {
    /**
     * 
     * @type {string}
     * @memberof PagesHealthCheckAltDomain
     */
    'host'?: string;
    /**
     * 
     * @type {string}
     * @memberof PagesHealthCheckAltDomain
     */
    'uri'?: string;
    /**
     * 
     * @type {string}
     * @memberof PagesHealthCheckAltDomain
     */
    'nameservers'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'dns_resolves'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_proxied'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_cloudflare_ip'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_fastly_ip'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_old_ip_address'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_a_record'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'has_cname_record'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'has_mx_records_present'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_valid_domain'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_apex_domain'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'should_be_a_record'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_cname_to_github_user_domain'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_cname_to_pages_dot_github_dot_com'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_cname_to_fastly'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_pointed_to_github_pages_ip'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_non_github_pages_ip_present'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_pages_domain'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_served_by_pages'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_valid'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PagesHealthCheckAltDomain
     */
    'reason'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'responds_to_https'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'enforces_https'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PagesHealthCheckAltDomain
     */
    'https_error'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckAltDomain
     */
    'is_https_eligible'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PagesHealthCheckAltDomain
     */
    'caa_error'?: string | null;
}
/**
 * 
 * @export
 * @interface PagesHealthCheckDomain
 */
export interface PagesHealthCheckDomain {
    /**
     * 
     * @type {string}
     * @memberof PagesHealthCheckDomain
     */
    'host'?: string;
    /**
     * 
     * @type {string}
     * @memberof PagesHealthCheckDomain
     */
    'uri'?: string;
    /**
     * 
     * @type {string}
     * @memberof PagesHealthCheckDomain
     */
    'nameservers'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'dns_resolves'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_proxied'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_cloudflare_ip'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_fastly_ip'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_old_ip_address'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_a_record'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'has_cname_record'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'has_mx_records_present'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_valid_domain'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_apex_domain'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'should_be_a_record'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_cname_to_github_user_domain'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_cname_to_pages_dot_github_dot_com'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_cname_to_fastly'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_pointed_to_github_pages_ip'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_non_github_pages_ip_present'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_pages_domain'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_served_by_pages'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_valid'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PagesHealthCheckDomain
     */
    'reason'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'responds_to_https'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'enforces_https'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PagesHealthCheckDomain
     */
    'https_error'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PagesHealthCheckDomain
     */
    'is_https_eligible'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PagesHealthCheckDomain
     */
    'caa_error'?: string | null;
}
/**
 * 
 * @export
 * @interface PagesHttpsCertificate
 */
export interface PagesHttpsCertificate {
    /**
     * 
     * @type {string}
     * @memberof PagesHttpsCertificate
     */
    'state': PagesHttpsCertificateStateEnum;
    /**
     * 
     * @type {string}
     * @memberof PagesHttpsCertificate
     */
    'description': string;
    /**
     * Array of the domain set and its alternate name (if it is configured)
     * @type {Array<string>}
     * @memberof PagesHttpsCertificate
     */
    'domains': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof PagesHttpsCertificate
     */
    'expires_at'?: string;
}

export const PagesHttpsCertificateStateEnum = {
    New: 'new',
    AuthorizationCreated: 'authorization_created',
    AuthorizationPending: 'authorization_pending',
    Authorized: 'authorized',
    AuthorizationRevoked: 'authorization_revoked',
    Issued: 'issued',
    Uploaded: 'uploaded',
    Approved: 'approved',
    Errored: 'errored',
    BadAuthz: 'bad_authz',
    DestroyPending: 'destroy_pending',
    DnsChanged: 'dns_changed'
} as const;

export type PagesHttpsCertificateStateEnum = typeof PagesHttpsCertificateStateEnum[keyof typeof PagesHttpsCertificateStateEnum];

/**
 * 
 * @export
 * @interface PagesSourceHash
 */
export interface PagesSourceHash {
    /**
     * 
     * @type {string}
     * @memberof PagesSourceHash
     */
    'branch': string;
    /**
     * 
     * @type {string}
     * @memberof PagesSourceHash
     */
    'path': string;
}
/**
 * 
 * @export
 * @interface ParticipationStats
 */
export interface ParticipationStats {
    /**
     * 
     * @type {Array<number>}
     * @memberof ParticipationStats
     */
    'all': Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof ParticipationStats
     */
    'owner': Array<number>;
}
/**
 * Details of a deployment that is waiting for protection rules to pass
 * @export
 * @interface PendingDeployment
 */
export interface PendingDeployment {
    /**
     * 
     * @type {PendingDeploymentEnvironment}
     * @memberof PendingDeployment
     */
    'environment': PendingDeploymentEnvironment;
    /**
     * The set duration of the wait timer
     * @type {number}
     * @memberof PendingDeployment
     */
    'wait_timer': number;
    /**
     * The time that the wait timer began.
     * @type {string}
     * @memberof PendingDeployment
     */
    'wait_timer_started_at': string | null;
    /**
     * Whether the currently authenticated user can approve the deployment
     * @type {boolean}
     * @memberof PendingDeployment
     */
    'current_user_can_approve': boolean;
    /**
     * The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
     * @type {Array<PendingDeploymentReviewersInner>}
     * @memberof PendingDeployment
     */
    'reviewers': Array<PendingDeploymentReviewersInner>;
}
/**
 * 
 * @export
 * @interface PendingDeploymentEnvironment
 */
export interface PendingDeploymentEnvironment {
    /**
     * The id of the environment.
     * @type {number}
     * @memberof PendingDeploymentEnvironment
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentEnvironment
     */
    'node_id'?: string;
    /**
     * The name of the environment.
     * @type {string}
     * @memberof PendingDeploymentEnvironment
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentEnvironment
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentEnvironment
     */
    'html_url'?: string;
}
/**
 * 
 * @export
 * @interface PendingDeploymentReviewersInner
 */
export interface PendingDeploymentReviewersInner {
    /**
     * 
     * @type {DeploymentReviewerType}
     * @memberof PendingDeploymentReviewersInner
     */
    'type'?: DeploymentReviewerType;
    /**
     * 
     * @type {PendingDeploymentReviewersInnerReviewer}
     * @memberof PendingDeploymentReviewersInner
     */
    'reviewer'?: PendingDeploymentReviewersInnerReviewer;
}


/**
 * 
 * @export
 * @interface PendingDeploymentReviewersInnerReviewer
 */
export interface PendingDeploymentReviewersInnerReviewer {
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'gravatar_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'followers_url': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'following_url': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'starred_url': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'subscriptions_url': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'organizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'received_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'type': string;
    /**
     * 
     * @type {boolean}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'site_admin': boolean;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'starred_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'user_view_type'?: string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'slug': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'privacy'?: string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'notification_setting'?: string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'permission': string;
    /**
     * 
     * @type {TeamPermissions}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'permissions'?: TeamPermissions;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'members_url': string;
    /**
     * 
     * @type {string}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'repositories_url': string;
    /**
     * 
     * @type {NullableTeamSimple}
     * @memberof PendingDeploymentReviewersInnerReviewer
     */
    'parent': NullableTeamSimple | null;
}
/**
 * Details of a Personal Access Token Request.
 * @export
 * @interface PersonalAccessTokenRequest
 */
export interface PersonalAccessTokenRequest {
    /**
     * Unique identifier of the request for access via fine-grained personal access token. Used as the `pat_request_id` parameter in the list and review API calls.
     * @type {number}
     * @memberof PersonalAccessTokenRequest
     */
    'id': number;
    /**
     * 
     * @type {SimpleUser}
     * @memberof PersonalAccessTokenRequest
     */
    'owner': SimpleUser;
    /**
     * 
     * @type {PersonalAccessTokenRequestPermissionsAdded}
     * @memberof PersonalAccessTokenRequest
     */
    'permissions_added': PersonalAccessTokenRequestPermissionsAdded;
    /**
     * 
     * @type {PersonalAccessTokenRequestPermissionsUpgraded}
     * @memberof PersonalAccessTokenRequest
     */
    'permissions_upgraded': PersonalAccessTokenRequestPermissionsUpgraded;
    /**
     * 
     * @type {PersonalAccessTokenRequestPermissionsResult}
     * @memberof PersonalAccessTokenRequest
     */
    'permissions_result': PersonalAccessTokenRequestPermissionsResult;
    /**
     * Type of repository selection requested.
     * @type {string}
     * @memberof PersonalAccessTokenRequest
     */
    'repository_selection': PersonalAccessTokenRequestRepositorySelectionEnum;
    /**
     * The number of repositories the token is requesting access to. This field is only populated when `repository_selection` is `subset`.
     * @type {number}
     * @memberof PersonalAccessTokenRequest
     */
    'repository_count': number | null;
    /**
     * An array of repository objects the token is requesting access to. This field is only populated when `repository_selection` is `subset`.
     * @type {Array<WebhooksRepositoriesInner>}
     * @memberof PersonalAccessTokenRequest
     */
    'repositories': Array<WebhooksRepositoriesInner> | null;
    /**
     * Date and time when the request for access was created.
     * @type {string}
     * @memberof PersonalAccessTokenRequest
     */
    'created_at': string;
    /**
     * Unique identifier of the user\'s token. This field can also be found in audit log events and the organization\'s settings for their PAT grants.
     * @type {number}
     * @memberof PersonalAccessTokenRequest
     */
    'token_id': number;
    /**
     * The name given to the user\'s token. This field can also be found in an organization\'s settings page for Active Tokens.
     * @type {string}
     * @memberof PersonalAccessTokenRequest
     */
    'token_name': string;
    /**
     * Whether the associated fine-grained personal access token has expired.
     * @type {boolean}
     * @memberof PersonalAccessTokenRequest
     */
    'token_expired': boolean;
    /**
     * Date and time when the associated fine-grained personal access token expires.
     * @type {string}
     * @memberof PersonalAccessTokenRequest
     */
    'token_expires_at': string | null;
    /**
     * Date and time when the associated fine-grained personal access token was last used for authentication.
     * @type {string}
     * @memberof PersonalAccessTokenRequest
     */
    'token_last_used_at': string | null;
}

export const PersonalAccessTokenRequestRepositorySelectionEnum = {
    None: 'none',
    All: 'all',
    Subset: 'subset'
} as const;

export type PersonalAccessTokenRequestRepositorySelectionEnum = typeof PersonalAccessTokenRequestRepositorySelectionEnum[keyof typeof PersonalAccessTokenRequestRepositorySelectionEnum];

/**
 * New requested permissions, categorized by type of permission.
 * @export
 * @interface PersonalAccessTokenRequestPermissionsAdded
 */
export interface PersonalAccessTokenRequestPermissionsAdded {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PersonalAccessTokenRequestPermissionsAdded
     */
    'organization'?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PersonalAccessTokenRequestPermissionsAdded
     */
    'repository'?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PersonalAccessTokenRequestPermissionsAdded
     */
    'other'?: { [key: string]: string; };
}
/**
 * Permissions requested, categorized by type of permission. This field incorporates `permissions_added` and `permissions_upgraded`.
 * @export
 * @interface PersonalAccessTokenRequestPermissionsResult
 */
export interface PersonalAccessTokenRequestPermissionsResult {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PersonalAccessTokenRequestPermissionsResult
     */
    'organization'?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PersonalAccessTokenRequestPermissionsResult
     */
    'repository'?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PersonalAccessTokenRequestPermissionsResult
     */
    'other'?: { [key: string]: string; };
}
/**
 * Requested permissions that elevate access for a previously approved request for access, categorized by type of permission.
 * @export
 * @interface PersonalAccessTokenRequestPermissionsUpgraded
 */
export interface PersonalAccessTokenRequestPermissionsUpgraded {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PersonalAccessTokenRequestPermissionsUpgraded
     */
    'organization'?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PersonalAccessTokenRequestPermissionsUpgraded
     */
    'repository'?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PersonalAccessTokenRequestPermissionsUpgraded
     */
    'other'?: { [key: string]: string; };
}
/**
 * Porter Author
 * @export
 * @interface PorterAuthor
 */
export interface PorterAuthor {
    /**
     * 
     * @type {number}
     * @memberof PorterAuthor
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PorterAuthor
     */
    'remote_id': string;
    /**
     * 
     * @type {string}
     * @memberof PorterAuthor
     */
    'remote_name': string;
    /**
     * 
     * @type {string}
     * @memberof PorterAuthor
     */
    'email': string;
    /**
     * 
     * @type {string}
     * @memberof PorterAuthor
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof PorterAuthor
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof PorterAuthor
     */
    'import_url': string;
}
/**
 * Porter Large File
 * @export
 * @interface PorterLargeFile
 */
export interface PorterLargeFile {
    /**
     * 
     * @type {string}
     * @memberof PorterLargeFile
     */
    'ref_name': string;
    /**
     * 
     * @type {string}
     * @memberof PorterLargeFile
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof PorterLargeFile
     */
    'oid': string;
    /**
     * 
     * @type {number}
     * @memberof PorterLargeFile
     */
    'size': number;
}
/**
 * Private User
 * @export
 * @interface PrivateUser
 */
export interface PrivateUser {
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof PrivateUser
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'user_view_type'?: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'gravatar_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'followers_url': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'following_url': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'starred_url': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'subscriptions_url': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'organizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'received_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'type': string;
    /**
     * 
     * @type {boolean}
     * @memberof PrivateUser
     */
    'site_admin': boolean;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'name': string | null;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'company': string | null;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'blog': string | null;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'location': string | null;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'email': string | null;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'notification_email'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PrivateUser
     */
    'hireable': boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'bio': string | null;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'twitter_username'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PrivateUser
     */
    'public_repos': number;
    /**
     * 
     * @type {number}
     * @memberof PrivateUser
     */
    'public_gists': number;
    /**
     * 
     * @type {number}
     * @memberof PrivateUser
     */
    'followers': number;
    /**
     * 
     * @type {number}
     * @memberof PrivateUser
     */
    'following': number;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'updated_at': string;
    /**
     * 
     * @type {number}
     * @memberof PrivateUser
     */
    'private_gists': number;
    /**
     * 
     * @type {number}
     * @memberof PrivateUser
     */
    'total_private_repos': number;
    /**
     * 
     * @type {number}
     * @memberof PrivateUser
     */
    'owned_private_repos': number;
    /**
     * 
     * @type {number}
     * @memberof PrivateUser
     */
    'disk_usage': number;
    /**
     * 
     * @type {number}
     * @memberof PrivateUser
     */
    'collaborators': number;
    /**
     * 
     * @type {boolean}
     * @memberof PrivateUser
     */
    'two_factor_authentication': boolean;
    /**
     * 
     * @type {PublicUserPlan}
     * @memberof PrivateUser
     */
    'plan'?: PublicUserPlan;
    /**
     * 
     * @type {boolean}
     * @memberof PrivateUser
     */
    'business_plus'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PrivateUser
     */
    'ldap_dn'?: string;
}
/**
 * 
 * @export
 * @interface PrivateVulnerabilityReportCreate
 */
export interface PrivateVulnerabilityReportCreate {
    /**
     * A short summary of the advisory.
     * @type {string}
     * @memberof PrivateVulnerabilityReportCreate
     */
    'summary': string;
    /**
     * A detailed description of what the advisory impacts.
     * @type {string}
     * @memberof PrivateVulnerabilityReportCreate
     */
    'description': string;
    /**
     * An array of products affected by the vulnerability detailed in a repository security advisory.
     * @type {Array<RepositoryAdvisoryCreateVulnerabilitiesInner>}
     * @memberof PrivateVulnerabilityReportCreate
     */
    'vulnerabilities'?: Array<RepositoryAdvisoryCreateVulnerabilitiesInner> | null;
    /**
     * A list of Common Weakness Enumeration (CWE) IDs.
     * @type {Array<string>}
     * @memberof PrivateVulnerabilityReportCreate
     */
    'cwe_ids'?: Array<string> | null;
    /**
     * The severity of the advisory. You must choose between setting this field or `cvss_vector_string`.
     * @type {string}
     * @memberof PrivateVulnerabilityReportCreate
     */
    'severity'?: PrivateVulnerabilityReportCreateSeverityEnum | null;
    /**
     * The CVSS vector that calculates the severity of the advisory. You must choose between setting this field or `severity`.
     * @type {string}
     * @memberof PrivateVulnerabilityReportCreate
     */
    'cvss_vector_string'?: string | null;
    /**
     * Whether to create a temporary private fork of the repository to collaborate on a fix.
     * @type {boolean}
     * @memberof PrivateVulnerabilityReportCreate
     */
    'start_private_fork'?: boolean;
}

export const PrivateVulnerabilityReportCreateSeverityEnum = {
    Critical: 'critical',
    High: 'high',
    Medium: 'medium',
    Low: 'low'
} as const;

export type PrivateVulnerabilityReportCreateSeverityEnum = typeof PrivateVulnerabilityReportCreateSeverityEnum[keyof typeof PrivateVulnerabilityReportCreateSeverityEnum];

/**
 * Projects are a way to organize columns and cards of work.
 * @export
 * @interface Project
 */
export interface Project {
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    'owner_url': string;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    'columns_url': string;
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    'node_id': string;
    /**
     * Name of the project
     * @type {string}
     * @memberof Project
     */
    'name': string;
    /**
     * Body of the project
     * @type {string}
     * @memberof Project
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    'number': number;
    /**
     * State of the project; either \'open\' or \'closed\'
     * @type {string}
     * @memberof Project
     */
    'state': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof Project
     */
    'creator': NullableSimpleUser | null;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    'updated_at': string;
    /**
     * The baseline permission that all organization members have on this project. Only present if owner is an organization.
     * @type {string}
     * @memberof Project
     */
    'organization_permission'?: ProjectOrganizationPermissionEnum;
    /**
     * Whether or not this project can be seen by everyone. Only present if owner is an organization.
     * @type {boolean}
     * @memberof Project
     */
    'private'?: boolean;
}

export const ProjectOrganizationPermissionEnum = {
    Read: 'read',
    Write: 'write',
    Admin: 'admin',
    None: 'none'
} as const;

export type ProjectOrganizationPermissionEnum = typeof ProjectOrganizationPermissionEnum[keyof typeof ProjectOrganizationPermissionEnum];

/**
 * 
 * @export
 * @interface ProjectCard
 */
export interface ProjectCard {
    /**
     * 
     * @type {number}
     * @memberof ProjectCard
     */
    'after_id'?: number | null;
    /**
     * Whether or not the card is archived
     * @type {boolean}
     * @memberof ProjectCard
     */
    'archived': boolean;
    /**
     * 
     * @type {number}
     * @memberof ProjectCard
     */
    'column_id': number | null;
    /**
     * 
     * @type {string}
     * @memberof ProjectCard
     */
    'column_url': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectCard
     */
    'content_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectCard
     */
    'created_at': string;
    /**
     * 
     * @type {User4}
     * @memberof ProjectCard
     */
    'creator': User4 | null;
    /**
     * The project card\'s ID
     * @type {number}
     * @memberof ProjectCard
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof ProjectCard
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectCard
     */
    'note': string | null;
    /**
     * 
     * @type {string}
     * @memberof ProjectCard
     */
    'project_url': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectCard
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectCard
     */
    'url': string;
}
/**
 * Project Collaborator Permission
 * @export
 * @interface ProjectCollaboratorPermission
 */
export interface ProjectCollaboratorPermission {
    /**
     * 
     * @type {string}
     * @memberof ProjectCollaboratorPermission
     */
    'permission': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof ProjectCollaboratorPermission
     */
    'user': NullableSimpleUser | null;
}
/**
 * Project columns contain cards of work.
 * @export
 * @interface ProjectColumn
 */
export interface ProjectColumn {
    /**
     * 
     * @type {string}
     * @memberof ProjectColumn
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectColumn
     */
    'project_url': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectColumn
     */
    'cards_url': string;
    /**
     * The unique identifier of the project column
     * @type {number}
     * @memberof ProjectColumn
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof ProjectColumn
     */
    'node_id': string;
    /**
     * Name of the project column
     * @type {string}
     * @memberof ProjectColumn
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectColumn
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectColumn
     */
    'updated_at': string;
}
/**
 * A projects v2 project
 * @export
 * @interface ProjectsV2
 */
export interface ProjectsV2 {
    /**
     * 
     * @type {number}
     * @memberof ProjectsV2
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2
     */
    'node_id': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof ProjectsV2
     */
    'owner': SimpleUser;
    /**
     * 
     * @type {SimpleUser}
     * @memberof ProjectsV2
     */
    'creator': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2
     */
    'description': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProjectsV2
     */
    'public': boolean;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2
     */
    'closed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2
     */
    'updated_at': string;
    /**
     * 
     * @type {number}
     * @memberof ProjectsV2
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2
     */
    'short_description': string | null;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2
     */
    'deleted_at': string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof ProjectsV2
     */
    'deleted_by': NullableSimpleUser | null;
}
/**
 * An item belonging to a project
 * @export
 * @interface ProjectsV2Item
 */
export interface ProjectsV2Item {
    /**
     * 
     * @type {number}
     * @memberof ProjectsV2Item
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2Item
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2Item
     */
    'project_node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2Item
     */
    'content_node_id': string;
    /**
     * 
     * @type {ProjectsV2ItemContentType}
     * @memberof ProjectsV2Item
     */
    'content_type': ProjectsV2ItemContentType;
    /**
     * 
     * @type {SimpleUser}
     * @memberof ProjectsV2Item
     */
    'creator'?: SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2Item
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2Item
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2Item
     */
    'archived_at': string | null;
}


/**
 * The type of content tracked in a project item
 * @export
 * @enum {string}
 */

export const ProjectsV2ItemContentType = {
    Issue: 'Issue',
    PullRequest: 'PullRequest',
    DraftIssue: 'DraftIssue'
} as const;

export type ProjectsV2ItemContentType = typeof ProjectsV2ItemContentType[keyof typeof ProjectsV2ItemContentType];


/**
 * An iteration setting for an iteration field
 * @export
 * @interface ProjectsV2IterationSetting
 */
export interface ProjectsV2IterationSetting {
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2IterationSetting
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2IterationSetting
     */
    'title': string;
    /**
     * 
     * @type {number}
     * @memberof ProjectsV2IterationSetting
     */
    'duration'?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2IterationSetting
     */
    'start_date'?: string | null;
}
/**
 * An option for a single select field
 * @export
 * @interface ProjectsV2SingleSelectOption
 */
export interface ProjectsV2SingleSelectOption {
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2SingleSelectOption
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2SingleSelectOption
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2SingleSelectOption
     */
    'color'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2SingleSelectOption
     */
    'description'?: string | null;
}
/**
 * An status update belonging to a project
 * @export
 * @interface ProjectsV2StatusUpdate
 */
export interface ProjectsV2StatusUpdate {
    /**
     * 
     * @type {number}
     * @memberof ProjectsV2StatusUpdate
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2StatusUpdate
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2StatusUpdate
     */
    'project_node_id'?: string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof ProjectsV2StatusUpdate
     */
    'creator'?: SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2StatusUpdate
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2StatusUpdate
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2StatusUpdate
     */
    'status'?: ProjectsV2StatusUpdateStatusEnum | null;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2StatusUpdate
     */
    'start_date'?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectsV2StatusUpdate
     */
    'target_date'?: string;
    /**
     * Body of the status update
     * @type {string}
     * @memberof ProjectsV2StatusUpdate
     */
    'body'?: string | null;
}

export const ProjectsV2StatusUpdateStatusEnum = {
    Inactive: 'INACTIVE',
    OnTrack: 'ON_TRACK',
    AtRisk: 'AT_RISK',
    OffTrack: 'OFF_TRACK',
    Complete: 'COMPLETE'
} as const;

export type ProjectsV2StatusUpdateStatusEnum = typeof ProjectsV2StatusUpdateStatusEnum[keyof typeof ProjectsV2StatusUpdateStatusEnum];

/**
 * Branch protections protect branches
 * @export
 * @interface ProtectedBranch
 */
export interface ProtectedBranch {
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranch
     */
    'url': string;
    /**
     * 
     * @type {StatusCheckPolicy}
     * @memberof ProtectedBranch
     */
    'required_status_checks'?: StatusCheckPolicy;
    /**
     * 
     * @type {ProtectedBranchRequiredPullRequestReviews}
     * @memberof ProtectedBranch
     */
    'required_pull_request_reviews'?: ProtectedBranchRequiredPullRequestReviews;
    /**
     * 
     * @type {BranchProtectionRequiredSignatures}
     * @memberof ProtectedBranch
     */
    'required_signatures'?: BranchProtectionRequiredSignatures;
    /**
     * 
     * @type {ProtectedBranchEnforceAdmins}
     * @memberof ProtectedBranch
     */
    'enforce_admins'?: ProtectedBranchEnforceAdmins;
    /**
     * 
     * @type {ProtectedBranchRequiredLinearHistory}
     * @memberof ProtectedBranch
     */
    'required_linear_history'?: ProtectedBranchRequiredLinearHistory;
    /**
     * 
     * @type {ProtectedBranchRequiredLinearHistory}
     * @memberof ProtectedBranch
     */
    'allow_force_pushes'?: ProtectedBranchRequiredLinearHistory;
    /**
     * 
     * @type {ProtectedBranchRequiredLinearHistory}
     * @memberof ProtectedBranch
     */
    'allow_deletions'?: ProtectedBranchRequiredLinearHistory;
    /**
     * 
     * @type {BranchRestrictionPolicy}
     * @memberof ProtectedBranch
     */
    'restrictions'?: BranchRestrictionPolicy;
    /**
     * 
     * @type {ProtectedBranchRequiredConversationResolution}
     * @memberof ProtectedBranch
     */
    'required_conversation_resolution'?: ProtectedBranchRequiredConversationResolution;
    /**
     * 
     * @type {ProtectedBranchRequiredLinearHistory}
     * @memberof ProtectedBranch
     */
    'block_creations'?: ProtectedBranchRequiredLinearHistory;
    /**
     * 
     * @type {ProtectedBranchLockBranch}
     * @memberof ProtectedBranch
     */
    'lock_branch'?: ProtectedBranchLockBranch;
    /**
     * 
     * @type {ProtectedBranchAllowForkSyncing}
     * @memberof ProtectedBranch
     */
    'allow_fork_syncing'?: ProtectedBranchAllowForkSyncing;
}
/**
 * Protected Branch Admin Enforced
 * @export
 * @interface ProtectedBranchAdminEnforced
 */
export interface ProtectedBranchAdminEnforced {
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchAdminEnforced
     */
    'url': string;
    /**
     * 
     * @type {boolean}
     * @memberof ProtectedBranchAdminEnforced
     */
    'enabled': boolean;
}
/**
 * Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.
 * @export
 * @interface ProtectedBranchAllowForkSyncing
 */
export interface ProtectedBranchAllowForkSyncing {
    /**
     * 
     * @type {boolean}
     * @memberof ProtectedBranchAllowForkSyncing
     */
    'enabled'?: boolean;
}
/**
 * 
 * @export
 * @interface ProtectedBranchEnforceAdmins
 */
export interface ProtectedBranchEnforceAdmins {
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchEnforceAdmins
     */
    'url': string;
    /**
     * 
     * @type {boolean}
     * @memberof ProtectedBranchEnforceAdmins
     */
    'enabled': boolean;
}
/**
 * Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.
 * @export
 * @interface ProtectedBranchLockBranch
 */
export interface ProtectedBranchLockBranch {
    /**
     * 
     * @type {boolean}
     * @memberof ProtectedBranchLockBranch
     */
    'enabled'?: boolean;
}
/**
 * Protected Branch Pull Request Review
 * @export
 * @interface ProtectedBranchPullRequestReview
 */
export interface ProtectedBranchPullRequestReview {
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchPullRequestReview
     */
    'url'?: string;
    /**
     * 
     * @type {ProtectedBranchPullRequestReviewDismissalRestrictions}
     * @memberof ProtectedBranchPullRequestReview
     */
    'dismissal_restrictions'?: ProtectedBranchPullRequestReviewDismissalRestrictions;
    /**
     * 
     * @type {ProtectedBranchPullRequestReviewBypassPullRequestAllowances}
     * @memberof ProtectedBranchPullRequestReview
     */
    'bypass_pull_request_allowances'?: ProtectedBranchPullRequestReviewBypassPullRequestAllowances;
    /**
     * 
     * @type {boolean}
     * @memberof ProtectedBranchPullRequestReview
     */
    'dismiss_stale_reviews': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ProtectedBranchPullRequestReview
     */
    'require_code_owner_reviews': boolean;
    /**
     * 
     * @type {number}
     * @memberof ProtectedBranchPullRequestReview
     */
    'required_approving_review_count'?: number;
    /**
     * Whether the most recent push must be approved by someone other than the person who pushed it.
     * @type {boolean}
     * @memberof ProtectedBranchPullRequestReview
     */
    'require_last_push_approval'?: boolean;
}
/**
 * Allow specific users, teams, or apps to bypass pull request requirements.
 * @export
 * @interface ProtectedBranchPullRequestReviewBypassPullRequestAllowances
 */
export interface ProtectedBranchPullRequestReviewBypassPullRequestAllowances {
    /**
     * The list of users allowed to bypass pull request requirements.
     * @type {Array<SimpleUser>}
     * @memberof ProtectedBranchPullRequestReviewBypassPullRequestAllowances
     */
    'users'?: Array<SimpleUser>;
    /**
     * The list of teams allowed to bypass pull request requirements.
     * @type {Array<Team>}
     * @memberof ProtectedBranchPullRequestReviewBypassPullRequestAllowances
     */
    'teams'?: Array<Team>;
    /**
     * The list of apps allowed to bypass pull request requirements.
     * @type {Array<Integration>}
     * @memberof ProtectedBranchPullRequestReviewBypassPullRequestAllowances
     */
    'apps'?: Array<Integration>;
}
/**
 * 
 * @export
 * @interface ProtectedBranchPullRequestReviewDismissalRestrictions
 */
export interface ProtectedBranchPullRequestReviewDismissalRestrictions {
    /**
     * The list of users with review dismissal access.
     * @type {Array<SimpleUser>}
     * @memberof ProtectedBranchPullRequestReviewDismissalRestrictions
     */
    'users'?: Array<SimpleUser>;
    /**
     * The list of teams with review dismissal access.
     * @type {Array<Team>}
     * @memberof ProtectedBranchPullRequestReviewDismissalRestrictions
     */
    'teams'?: Array<Team>;
    /**
     * The list of apps with review dismissal access.
     * @type {Array<Integration>}
     * @memberof ProtectedBranchPullRequestReviewDismissalRestrictions
     */
    'apps'?: Array<Integration>;
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchPullRequestReviewDismissalRestrictions
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchPullRequestReviewDismissalRestrictions
     */
    'users_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchPullRequestReviewDismissalRestrictions
     */
    'teams_url'?: string;
}
/**
 * 
 * @export
 * @interface ProtectedBranchRequiredConversationResolution
 */
export interface ProtectedBranchRequiredConversationResolution {
    /**
     * 
     * @type {boolean}
     * @memberof ProtectedBranchRequiredConversationResolution
     */
    'enabled'?: boolean;
}
/**
 * 
 * @export
 * @interface ProtectedBranchRequiredLinearHistory
 */
export interface ProtectedBranchRequiredLinearHistory {
    /**
     * 
     * @type {boolean}
     * @memberof ProtectedBranchRequiredLinearHistory
     */
    'enabled': boolean;
}
/**
 * 
 * @export
 * @interface ProtectedBranchRequiredPullRequestReviews
 */
export interface ProtectedBranchRequiredPullRequestReviews {
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchRequiredPullRequestReviews
     */
    'url': string;
    /**
     * 
     * @type {boolean}
     * @memberof ProtectedBranchRequiredPullRequestReviews
     */
    'dismiss_stale_reviews'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ProtectedBranchRequiredPullRequestReviews
     */
    'require_code_owner_reviews'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ProtectedBranchRequiredPullRequestReviews
     */
    'required_approving_review_count'?: number;
    /**
     * Whether the most recent push must be approved by someone other than the person who pushed it.
     * @type {boolean}
     * @memberof ProtectedBranchRequiredPullRequestReviews
     */
    'require_last_push_approval'?: boolean;
    /**
     * 
     * @type {ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions}
     * @memberof ProtectedBranchRequiredPullRequestReviews
     */
    'dismissal_restrictions'?: ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions;
    /**
     * 
     * @type {ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances}
     * @memberof ProtectedBranchRequiredPullRequestReviews
     */
    'bypass_pull_request_allowances'?: ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances;
}
/**
 * 
 * @export
 * @interface ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances
 */
export interface ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances {
    /**
     * 
     * @type {Array<SimpleUser>}
     * @memberof ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances
     */
    'users': Array<SimpleUser>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances
     */
    'teams': Array<Team>;
    /**
     * 
     * @type {Array<Integration>}
     * @memberof ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances
     */
    'apps'?: Array<Integration>;
}
/**
 * 
 * @export
 * @interface ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions
 */
export interface ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions {
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions
     */
    'users_url': string;
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<SimpleUser>}
     * @memberof ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions
     */
    'users': Array<SimpleUser>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions
     */
    'teams': Array<Team>;
    /**
     * 
     * @type {Array<Integration>}
     * @memberof ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions
     */
    'apps'?: Array<Integration>;
}
/**
 * Protected Branch Required Status Check
 * @export
 * @interface ProtectedBranchRequiredStatusCheck
 */
export interface ProtectedBranchRequiredStatusCheck {
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchRequiredStatusCheck
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchRequiredStatusCheck
     */
    'enforcement_level'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProtectedBranchRequiredStatusCheck
     */
    'contexts': Array<string>;
    /**
     * 
     * @type {Array<ProtectedBranchRequiredStatusCheckChecksInner>}
     * @memberof ProtectedBranchRequiredStatusCheck
     */
    'checks': Array<ProtectedBranchRequiredStatusCheckChecksInner>;
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchRequiredStatusCheck
     */
    'contexts_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ProtectedBranchRequiredStatusCheck
     */
    'strict'?: boolean;
}
/**
 * 
 * @export
 * @interface ProtectedBranchRequiredStatusCheckChecksInner
 */
export interface ProtectedBranchRequiredStatusCheckChecksInner {
    /**
     * 
     * @type {string}
     * @memberof ProtectedBranchRequiredStatusCheckChecksInner
     */
    'context': string;
    /**
     * 
     * @type {number}
     * @memberof ProtectedBranchRequiredStatusCheckChecksInner
     */
    'app_id': number | null;
}
/**
 * Provides details of Public IP for a GitHub-hosted larger runners
 * @export
 * @interface PublicIp
 */
export interface PublicIp {
    /**
     * Whether public IP is enabled.
     * @type {boolean}
     * @memberof PublicIp
     */
    'enabled'?: boolean;
    /**
     * The prefix for the public IP.
     * @type {string}
     * @memberof PublicIp
     */
    'prefix'?: string;
    /**
     * The length of the IP prefix.
     * @type {number}
     * @memberof PublicIp
     */
    'length'?: number;
}
/**
 * Public User
 * @export
 * @interface PublicUser
 */
export interface PublicUser {
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof PublicUser
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'user_view_type'?: string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'gravatar_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'followers_url': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'following_url': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'starred_url': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'subscriptions_url': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'organizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'received_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'type': string;
    /**
     * 
     * @type {boolean}
     * @memberof PublicUser
     */
    'site_admin': boolean;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'name': string | null;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'company': string | null;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'blog': string | null;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'location': string | null;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'email': string | null;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'notification_email'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PublicUser
     */
    'hireable': boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'bio': string | null;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'twitter_username'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PublicUser
     */
    'public_repos': number;
    /**
     * 
     * @type {number}
     * @memberof PublicUser
     */
    'public_gists': number;
    /**
     * 
     * @type {number}
     * @memberof PublicUser
     */
    'followers': number;
    /**
     * 
     * @type {number}
     * @memberof PublicUser
     */
    'following': number;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof PublicUser
     */
    'updated_at': string;
    /**
     * 
     * @type {PublicUserPlan}
     * @memberof PublicUser
     */
    'plan'?: PublicUserPlan;
    /**
     * 
     * @type {number}
     * @memberof PublicUser
     */
    'private_gists'?: number;
    /**
     * 
     * @type {number}
     * @memberof PublicUser
     */
    'total_private_repos'?: number;
    /**
     * 
     * @type {number}
     * @memberof PublicUser
     */
    'owned_private_repos'?: number;
    /**
     * 
     * @type {number}
     * @memberof PublicUser
     */
    'disk_usage'?: number;
    /**
     * 
     * @type {number}
     * @memberof PublicUser
     */
    'collaborators'?: number;
}
/**
 * 
 * @export
 * @interface PublicUserPlan
 */
export interface PublicUserPlan {
    /**
     * 
     * @type {number}
     * @memberof PublicUserPlan
     */
    'collaborators': number;
    /**
     * 
     * @type {string}
     * @memberof PublicUserPlan
     */
    'name': string;
    /**
     * 
     * @type {number}
     * @memberof PublicUserPlan
     */
    'space': number;
    /**
     * 
     * @type {number}
     * @memberof PublicUserPlan
     */
    'private_repos': number;
}
/**
 * 
 * @export
 * @interface PullRequest
 */
export interface PullRequest {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'active_lock_reason': PullRequestActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest
     */
    'additions'?: number;
    /**
     * 
     * @type {User4}
     * @memberof PullRequest
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<User4>}
     * @memberof PullRequest
     */
    'assignees': Array<User4>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest
     */
    'author_association': PullRequestAuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof PullRequest
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequestHead}
     * @memberof PullRequest
     */
    'head': PullRequestHead;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest
     */
    'merged_by'?: User2 | null;
    /**
     * 
     * @type {Milestone}
     * @memberof PullRequest
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequestRequestedReviewersInner>}
     * @memberof PullRequest
     */
    'requested_reviewers': Array<PullRequestRequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequest
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest
     */
    'state': PullRequestStateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof PullRequest
     */
    'user': User3 | null;
}

export const PullRequestActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequestActiveLockReasonEnum = typeof PullRequestActiveLockReasonEnum[keyof typeof PullRequestActiveLockReasonEnum];
export const PullRequestAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequestAuthorAssociationEnum = typeof PullRequestAuthorAssociationEnum[keyof typeof PullRequestAuthorAssociationEnum];
export const PullRequestStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequestStateEnum = typeof PullRequestStateEnum[keyof typeof PullRequestStateEnum];

/**
 * 
 * @export
 * @interface PullRequest1
 */
export interface PullRequest1 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest1
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'active_lock_reason': PullRequest1ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest1
     */
    'additions'?: number;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest1
     */
    'assignee': User2 | null;
    /**
     * 
     * @type {Array<User>}
     * @memberof PullRequest1
     */
    'assignees': Array<User>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest1
     */
    'author_association': PullRequest1AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof PullRequest1
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequest1Base}
     * @memberof PullRequest1
     */
    'base': PullRequest1Base;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest1
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest1
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest1
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest1
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest1
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest1
     */
    'head': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest1
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest1
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest1
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest1
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest1
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest1
     */
    'merged_by'?: User2 | null;
    /**
     * 
     * @type {Milestone1}
     * @memberof PullRequest1
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest1
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest1
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequestRequestedReviewersInner>}
     * @memberof PullRequest1
     */
    'requested_reviewers': Array<PullRequestRequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequest1
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest1
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest1
     */
    'state': PullRequest1StateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest1
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof PullRequest1
     */
    'user': User3 | null;
}

export const PullRequest1ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequest1ActiveLockReasonEnum = typeof PullRequest1ActiveLockReasonEnum[keyof typeof PullRequest1ActiveLockReasonEnum];
export const PullRequest1AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequest1AuthorAssociationEnum = typeof PullRequest1AuthorAssociationEnum[keyof typeof PullRequest1AuthorAssociationEnum];
export const PullRequest1StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequest1StateEnum = typeof PullRequest1StateEnum[keyof typeof PullRequest1StateEnum];

/**
 * 
 * @export
 * @interface PullRequest10
 */
export interface PullRequest10 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest10
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'active_lock_reason': PullRequest10ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest10
     */
    'additions'?: number;
    /**
     * 
     * @type {User4}
     * @memberof PullRequest10
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof PullRequest10
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest10
     */
    'author_association': PullRequest10AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof PullRequest10
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest10
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest10
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest10
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest10
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest10
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest10
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequest10Head}
     * @memberof PullRequest10
     */
    'head': PullRequest10Head;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest10
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest10
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest10
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest10
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest10
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest10
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest10
     */
    'merged_by'?: User2 | null;
    /**
     * 
     * @type {Milestone}
     * @memberof PullRequest10
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest10
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest10
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequestRequestedReviewersInner>}
     * @memberof PullRequest10
     */
    'requested_reviewers': Array<PullRequestRequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequest10
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest10
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest10
     */
    'state': PullRequest10StateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest10
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof PullRequest10
     */
    'user': User3 | null;
}

export const PullRequest10ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequest10ActiveLockReasonEnum = typeof PullRequest10ActiveLockReasonEnum[keyof typeof PullRequest10ActiveLockReasonEnum];
export const PullRequest10AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequest10AuthorAssociationEnum = typeof PullRequest10AuthorAssociationEnum[keyof typeof PullRequest10AuthorAssociationEnum];
export const PullRequest10StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequest10StateEnum = typeof PullRequest10StateEnum[keyof typeof PullRequest10StateEnum];

/**
 * 
 * @export
 * @interface PullRequest10Head
 */
export interface PullRequest10Head {
    /**
     * 
     * @type {string}
     * @memberof PullRequest10Head
     */
    'label': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10Head
     */
    'ref': string;
    /**
     * 
     * @type {Repository13}
     * @memberof PullRequest10Head
     */
    'repo': Repository13;
    /**
     * 
     * @type {string}
     * @memberof PullRequest10Head
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof PullRequest10Head
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface PullRequest11
 */
export interface PullRequest11 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest11
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'active_lock_reason': PullRequest11ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest11
     */
    'additions'?: number;
    /**
     * 
     * @type {User4}
     * @memberof PullRequest11
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof PullRequest11
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest11
     */
    'author_association': PullRequest11AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof PullRequest11
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequest11Base}
     * @memberof PullRequest11
     */
    'base': PullRequest11Base;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest11
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest11
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest11
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest11
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest11
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequestHead}
     * @memberof PullRequest11
     */
    'head': PullRequestHead;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest11
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest11
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest11
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest11
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest11
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest11
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User4}
     * @memberof PullRequest11
     */
    'merged_by'?: User4 | null;
    /**
     * 
     * @type {Milestone}
     * @memberof PullRequest11
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest11
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest11
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequestRequestedReviewersInner>}
     * @memberof PullRequest11
     */
    'requested_reviewers': Array<PullRequestRequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequest11
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest11
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest11
     */
    'state': PullRequest11StateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest11
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof PullRequest11
     */
    'user': User3 | null;
}

export const PullRequest11ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequest11ActiveLockReasonEnum = typeof PullRequest11ActiveLockReasonEnum[keyof typeof PullRequest11ActiveLockReasonEnum];
export const PullRequest11AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequest11AuthorAssociationEnum = typeof PullRequest11AuthorAssociationEnum[keyof typeof PullRequest11AuthorAssociationEnum];
export const PullRequest11StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequest11StateEnum = typeof PullRequest11StateEnum[keyof typeof PullRequest11StateEnum];

/**
 * 
 * @export
 * @interface PullRequest11Base
 */
export interface PullRequest11Base {
    /**
     * 
     * @type {string}
     * @memberof PullRequest11Base
     */
    'label': string | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11Base
     */
    'ref': string;
    /**
     * 
     * @type {Repository3}
     * @memberof PullRequest11Base
     */
    'repo': Repository3;
    /**
     * 
     * @type {string}
     * @memberof PullRequest11Base
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof PullRequest11Base
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface PullRequest12
 */
export interface PullRequest12 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest12
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'active_lock_reason': PullRequest12ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest12
     */
    'additions'?: number;
    /**
     * 
     * @type {User4}
     * @memberof PullRequest12
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof PullRequest12
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest12
     */
    'author_association': PullRequest12AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof PullRequest12
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest12
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest12
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest12
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest12
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest12
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest12
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequest12Head}
     * @memberof PullRequest12
     */
    'head': PullRequest12Head;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest12
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest12
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest12
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest12
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest12
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest12
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest12
     */
    'merged_by'?: User2 | null;
    /**
     * 
     * @type {Milestone}
     * @memberof PullRequest12
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest12
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest12
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequestRequestedReviewersInner>}
     * @memberof PullRequest12
     */
    'requested_reviewers': Array<PullRequestRequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequest12
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest12
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest12
     */
    'state': PullRequest12StateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest12
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof PullRequest12
     */
    'user': User3 | null;
}

export const PullRequest12ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequest12ActiveLockReasonEnum = typeof PullRequest12ActiveLockReasonEnum[keyof typeof PullRequest12ActiveLockReasonEnum];
export const PullRequest12AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequest12AuthorAssociationEnum = typeof PullRequest12AuthorAssociationEnum[keyof typeof PullRequest12AuthorAssociationEnum];
export const PullRequest12StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequest12StateEnum = typeof PullRequest12StateEnum[keyof typeof PullRequest12StateEnum];

/**
 * 
 * @export
 * @interface PullRequest12Head
 */
export interface PullRequest12Head {
    /**
     * 
     * @type {string}
     * @memberof PullRequest12Head
     */
    'label': string | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12Head
     */
    'ref': string;
    /**
     * 
     * @type {Repository14}
     * @memberof PullRequest12Head
     */
    'repo': Repository14 | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest12Head
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof PullRequest12Head
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface PullRequest13
 */
export interface PullRequest13 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest13
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'active_lock_reason': PullRequest13ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest13
     */
    'additions'?: number;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest13
     */
    'assignee': User2 | null;
    /**
     * 
     * @type {Array<User>}
     * @memberof PullRequest13
     */
    'assignees': Array<User>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest13
     */
    'author_association': PullRequest13AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge1}
     * @memberof PullRequest13
     */
    'auto_merge': PullRequestAutoMerge1 | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest13
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest13
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest13
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest13
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest13
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest13
     */
    'draft': boolean;
    /**
     * 
     * @type {WebhookPullRequestReviewCommentDeletedPullRequestHead}
     * @memberof PullRequest13
     */
    'head': WebhookPullRequestReviewCommentDeletedPullRequestHead;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest13
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest13
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest13
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest13
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest13
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest13
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest13
     */
    'merged_by'?: User2 | null;
    /**
     * 
     * @type {Milestone1}
     * @memberof PullRequest13
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest13
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest13
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequest3RequestedReviewersInner>}
     * @memberof PullRequest13
     */
    'requested_reviewers': Array<PullRequest3RequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequest13
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest13
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest13
     */
    'state': PullRequest13StateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest13
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest13
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof PullRequest13
     */
    'user': User1 | null;
}

export const PullRequest13ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequest13ActiveLockReasonEnum = typeof PullRequest13ActiveLockReasonEnum[keyof typeof PullRequest13ActiveLockReasonEnum];
export const PullRequest13AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequest13AuthorAssociationEnum = typeof PullRequest13AuthorAssociationEnum[keyof typeof PullRequest13AuthorAssociationEnum];
export const PullRequest13StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequest13StateEnum = typeof PullRequest13StateEnum[keyof typeof PullRequest13StateEnum];

/**
 * 
 * @export
 * @interface PullRequest1Base
 */
export interface PullRequest1Base {
    /**
     * 
     * @type {string}
     * @memberof PullRequest1Base
     */
    'label': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1Base
     */
    'ref': string;
    /**
     * 
     * @type {Repository5}
     * @memberof PullRequest1Base
     */
    'repo': Repository5;
    /**
     * 
     * @type {string}
     * @memberof PullRequest1Base
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof PullRequest1Base
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface PullRequest2
 */
export interface PullRequest2 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest2
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'active_lock_reason': PullRequest2ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest2
     */
    'additions'?: number;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest2
     */
    'assignee': User2 | null;
    /**
     * 
     * @type {Array<User>}
     * @memberof PullRequest2
     */
    'assignees': Array<User>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest2
     */
    'author_association': PullRequest2AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof PullRequest2
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest2
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest2
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest2
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest2
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest2
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest2
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequest2Head}
     * @memberof PullRequest2
     */
    'head': PullRequest2Head;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest2
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest2
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest2
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest2
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest2
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest2
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest2
     */
    'merged_by'?: User2 | null;
    /**
     * 
     * @type {Milestone}
     * @memberof PullRequest2
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest2
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest2
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequestRequestedReviewersInner>}
     * @memberof PullRequest2
     */
    'requested_reviewers': Array<PullRequestRequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequest2
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest2
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest2
     */
    'state': PullRequest2StateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest2
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof PullRequest2
     */
    'user': User3 | null;
}

export const PullRequest2ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequest2ActiveLockReasonEnum = typeof PullRequest2ActiveLockReasonEnum[keyof typeof PullRequest2ActiveLockReasonEnum];
export const PullRequest2AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequest2AuthorAssociationEnum = typeof PullRequest2AuthorAssociationEnum[keyof typeof PullRequest2AuthorAssociationEnum];
export const PullRequest2StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequest2StateEnum = typeof PullRequest2StateEnum[keyof typeof PullRequest2StateEnum];

/**
 * 
 * @export
 * @interface PullRequest2Head
 */
export interface PullRequest2Head {
    /**
     * 
     * @type {string}
     * @memberof PullRequest2Head
     */
    'label': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2Head
     */
    'ref': string;
    /**
     * 
     * @type {Repository6}
     * @memberof PullRequest2Head
     */
    'repo': Repository6;
    /**
     * 
     * @type {string}
     * @memberof PullRequest2Head
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof PullRequest2Head
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface PullRequest3
 */
export interface PullRequest3 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest3
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'active_lock_reason': PullRequest3ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest3
     */
    'additions'?: number;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest3
     */
    'assignee': User2 | null;
    /**
     * 
     * @type {Array<User>}
     * @memberof PullRequest3
     */
    'assignees': Array<User>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest3
     */
    'author_association': PullRequest3AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof PullRequest3
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest3
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest3
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest3
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest3
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest3
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest3
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest3
     */
    'head': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest3
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest3
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest3
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest3
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest3
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest3
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest3
     */
    'merged_by'?: User2 | null;
    /**
     * 
     * @type {Milestone}
     * @memberof PullRequest3
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest3
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest3
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequest3RequestedReviewersInner>}
     * @memberof PullRequest3
     */
    'requested_reviewers': Array<PullRequest3RequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequest3
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest3
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest3
     */
    'state': PullRequest3StateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest3
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest3
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof PullRequest3
     */
    'user': User3 | null;
}

export const PullRequest3ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequest3ActiveLockReasonEnum = typeof PullRequest3ActiveLockReasonEnum[keyof typeof PullRequest3ActiveLockReasonEnum];
export const PullRequest3AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequest3AuthorAssociationEnum = typeof PullRequest3AuthorAssociationEnum[keyof typeof PullRequest3AuthorAssociationEnum];
export const PullRequest3StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequest3StateEnum = typeof PullRequest3StateEnum[keyof typeof PullRequest3StateEnum];

/**
 * @type PullRequest3RequestedReviewersInner
 * @export
 */
export type PullRequest3RequestedReviewersInner = Team | User2;

/**
 * 
 * @export
 * @interface PullRequest4
 */
export interface PullRequest4 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest4
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'active_lock_reason': PullRequest4ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest4
     */
    'additions'?: number;
    /**
     * 
     * @type {User4}
     * @memberof PullRequest4
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof PullRequest4
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest4
     */
    'author_association': PullRequest4AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof PullRequest4
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest4
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest4
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest4
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest4
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest4
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest4
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequestHead}
     * @memberof PullRequest4
     */
    'head': PullRequestHead;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest4
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest4
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest4
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest4
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest4
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest4
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User4}
     * @memberof PullRequest4
     */
    'merged_by'?: User4 | null;
    /**
     * 
     * @type {Milestone}
     * @memberof PullRequest4
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest4
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest4
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequestRequestedReviewersInner>}
     * @memberof PullRequest4
     */
    'requested_reviewers': Array<PullRequestRequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequest4
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest4
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest4
     */
    'state': PullRequest4StateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest4
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest4
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof PullRequest4
     */
    'user': User3 | null;
}

export const PullRequest4ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequest4ActiveLockReasonEnum = typeof PullRequest4ActiveLockReasonEnum[keyof typeof PullRequest4ActiveLockReasonEnum];
export const PullRequest4AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequest4AuthorAssociationEnum = typeof PullRequest4AuthorAssociationEnum[keyof typeof PullRequest4AuthorAssociationEnum];
export const PullRequest4StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequest4StateEnum = typeof PullRequest4StateEnum[keyof typeof PullRequest4StateEnum];

/**
 * 
 * @export
 * @interface PullRequest5
 */
export interface PullRequest5 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest5
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'active_lock_reason': PullRequest5ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest5
     */
    'additions'?: number;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest5
     */
    'assignee': User2 | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof PullRequest5
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest5
     */
    'author_association': PullRequest5AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof PullRequest5
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest5
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest5
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest5
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest5
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest5
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest5
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequestHead}
     * @memberof PullRequest5
     */
    'head': PullRequestHead;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest5
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest5
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest5
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest5
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest5
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest5
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User4}
     * @memberof PullRequest5
     */
    'merged_by'?: User4 | null;
    /**
     * 
     * @type {Milestone1}
     * @memberof PullRequest5
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest5
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest5
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequestRequestedReviewersInner>}
     * @memberof PullRequest5
     */
    'requested_reviewers': Array<PullRequestRequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequest5
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest5
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest5
     */
    'state': PullRequest5StateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest5
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest5
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof PullRequest5
     */
    'user': User3 | null;
}

export const PullRequest5ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequest5ActiveLockReasonEnum = typeof PullRequest5ActiveLockReasonEnum[keyof typeof PullRequest5ActiveLockReasonEnum];
export const PullRequest5AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequest5AuthorAssociationEnum = typeof PullRequest5AuthorAssociationEnum[keyof typeof PullRequest5AuthorAssociationEnum];
export const PullRequest5StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequest5StateEnum = typeof PullRequest5StateEnum[keyof typeof PullRequest5StateEnum];

/**
 * 
 * @export
 * @interface PullRequest6
 */
export interface PullRequest6 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest6
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'active_lock_reason': PullRequest6ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest6
     */
    'additions'?: number;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest6
     */
    'assignee': User2 | null;
    /**
     * 
     * @type {Array<User2>}
     * @memberof PullRequest6
     */
    'assignees': Array<User2>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest6
     */
    'author_association': PullRequest6AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof PullRequest6
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequest6Base}
     * @memberof PullRequest6
     */
    'base': PullRequest6Base;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest6
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest6
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest6
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest6
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest6
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest6
     */
    'head': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest6
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest6
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest6
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest6
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest6
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest6
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest6
     */
    'merged_by'?: User2 | null;
    /**
     * 
     * @type {Milestone1}
     * @memberof PullRequest6
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest6
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest6
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequest6RequestedReviewersInner>}
     * @memberof PullRequest6
     */
    'requested_reviewers': Array<PullRequest6RequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team1>}
     * @memberof PullRequest6
     */
    'requested_teams': Array<Team1>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest6
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest6
     */
    'state': PullRequest6StateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest6
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof PullRequest6
     */
    'user': User1 | null;
}

export const PullRequest6ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequest6ActiveLockReasonEnum = typeof PullRequest6ActiveLockReasonEnum[keyof typeof PullRequest6ActiveLockReasonEnum];
export const PullRequest6AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequest6AuthorAssociationEnum = typeof PullRequest6AuthorAssociationEnum[keyof typeof PullRequest6AuthorAssociationEnum];
export const PullRequest6StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequest6StateEnum = typeof PullRequest6StateEnum[keyof typeof PullRequest6StateEnum];

/**
 * 
 * @export
 * @interface PullRequest6Base
 */
export interface PullRequest6Base {
    /**
     * 
     * @type {string}
     * @memberof PullRequest6Base
     */
    'label': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6Base
     */
    'ref': string;
    /**
     * 
     * @type {Repository10}
     * @memberof PullRequest6Base
     */
    'repo': Repository10;
    /**
     * 
     * @type {string}
     * @memberof PullRequest6Base
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof PullRequest6Base
     */
    'user': User1 | null;
}
/**
 * @type PullRequest6RequestedReviewersInner
 * @export
 */
export type PullRequest6RequestedReviewersInner = Team1 | User2;

/**
 * 
 * @export
 * @interface PullRequest7
 */
export interface PullRequest7 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest7
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'active_lock_reason': PullRequest7ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest7
     */
    'additions'?: number;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest7
     */
    'assignee': User2 | null;
    /**
     * 
     * @type {Array<User2>}
     * @memberof PullRequest7
     */
    'assignees': Array<User2>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest7
     */
    'author_association': PullRequest7AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof PullRequest7
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest7
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest7
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest7
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest7
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest7
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest7
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest7
     */
    'head': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest7
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest7
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest7
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest7
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest7
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest7
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest7
     */
    'merged_by'?: User2 | null;
    /**
     * 
     * @type {Milestone1}
     * @memberof PullRequest7
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest7
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest7
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequest6RequestedReviewersInner>}
     * @memberof PullRequest7
     */
    'requested_reviewers': Array<PullRequest6RequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team1>}
     * @memberof PullRequest7
     */
    'requested_teams': Array<Team1>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest7
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest7
     */
    'state': PullRequest7StateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest7
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest7
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof PullRequest7
     */
    'user': User1 | null;
}

export const PullRequest7ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequest7ActiveLockReasonEnum = typeof PullRequest7ActiveLockReasonEnum[keyof typeof PullRequest7ActiveLockReasonEnum];
export const PullRequest7AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequest7AuthorAssociationEnum = typeof PullRequest7AuthorAssociationEnum[keyof typeof PullRequest7AuthorAssociationEnum];
export const PullRequest7StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequest7StateEnum = typeof PullRequest7StateEnum[keyof typeof PullRequest7StateEnum];

/**
 * 
 * @export
 * @interface PullRequest8
 */
export interface PullRequest8 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest8
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'active_lock_reason': PullRequest8ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest8
     */
    'additions'?: number;
    /**
     * 
     * @type {User4}
     * @memberof PullRequest8
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<User4>}
     * @memberof PullRequest8
     */
    'assignees': Array<User4>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest8
     */
    'author_association': PullRequest8AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof PullRequest8
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest8
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest8
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest8
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest8
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest8
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest8
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest8
     */
    'head': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest8
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest8
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest8
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest8
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest8
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest8
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest8
     */
    'merged_by'?: User2 | null;
    /**
     * 
     * @type {Milestone}
     * @memberof PullRequest8
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest8
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest8
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequest6RequestedReviewersInner>}
     * @memberof PullRequest8
     */
    'requested_reviewers': Array<PullRequest6RequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequest8
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest8
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest8
     */
    'state': PullRequest8StateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest8
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest8
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof PullRequest8
     */
    'user': User3 | null;
}

export const PullRequest8ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequest8ActiveLockReasonEnum = typeof PullRequest8ActiveLockReasonEnum[keyof typeof PullRequest8ActiveLockReasonEnum];
export const PullRequest8AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequest8AuthorAssociationEnum = typeof PullRequest8AuthorAssociationEnum[keyof typeof PullRequest8AuthorAssociationEnum];
export const PullRequest8StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequest8StateEnum = typeof PullRequest8StateEnum[keyof typeof PullRequest8StateEnum];

/**
 * 
 * @export
 * @interface PullRequest9
 */
export interface PullRequest9 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof PullRequest9
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'active_lock_reason': PullRequest9ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest9
     */
    'additions'?: number;
    /**
     * 
     * @type {User4}
     * @memberof PullRequest9
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<User4>}
     * @memberof PullRequest9
     */
    'assignees': Array<User4>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequest9
     */
    'author_association': PullRequest9AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof PullRequest9
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest9
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest9
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequest9
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest9
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest9
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequest9
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof PullRequest9
     */
    'head': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest9
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof PullRequest9
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest9
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequest9
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest9
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest9
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof PullRequest9
     */
    'merged_by'?: User2 | null;
    /**
     * 
     * @type {Milestone}
     * @memberof PullRequest9
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequest9
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequest9
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<PullRequest3RequestedReviewersInner>}
     * @memberof PullRequest9
     */
    'requested_reviewers': Array<PullRequest3RequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequest9
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequest9
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequest9
     */
    'state': PullRequest9StateEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequest9
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequest9
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof PullRequest9
     */
    'user': User3 | null;
}

export const PullRequest9ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type PullRequest9ActiveLockReasonEnum = typeof PullRequest9ActiveLockReasonEnum[keyof typeof PullRequest9ActiveLockReasonEnum];
export const PullRequest9AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequest9AuthorAssociationEnum = typeof PullRequest9AuthorAssociationEnum[keyof typeof PullRequest9AuthorAssociationEnum];
export const PullRequest9StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequest9StateEnum = typeof PullRequest9StateEnum[keyof typeof PullRequest9StateEnum];

/**
 * The status of auto merging a pull request.
 * @export
 * @interface PullRequestAutoMerge
 */
export interface PullRequestAutoMerge {
    /**
     * Commit message for the merge commit.
     * @type {string}
     * @memberof PullRequestAutoMerge
     */
    'commit_message': string | null;
    /**
     * Title for the merge commit message.
     * @type {string}
     * @memberof PullRequestAutoMerge
     */
    'commit_title': string | null;
    /**
     * 
     * @type {User2}
     * @memberof PullRequestAutoMerge
     */
    'enabled_by': User2 | null;
    /**
     * The merge method to use.
     * @type {string}
     * @memberof PullRequestAutoMerge
     */
    'merge_method': PullRequestAutoMergeMergeMethodEnum;
}

export const PullRequestAutoMergeMergeMethodEnum = {
    Merge: 'merge',
    Squash: 'squash',
    Rebase: 'rebase'
} as const;

export type PullRequestAutoMergeMergeMethodEnum = typeof PullRequestAutoMergeMergeMethodEnum[keyof typeof PullRequestAutoMergeMergeMethodEnum];

/**
 * The status of auto merging a pull request.
 * @export
 * @interface PullRequestAutoMerge1
 */
export interface PullRequestAutoMerge1 {
    /**
     * Commit message for the merge commit.
     * @type {string}
     * @memberof PullRequestAutoMerge1
     */
    'commit_message': string | null;
    /**
     * Title for the merge commit message.
     * @type {string}
     * @memberof PullRequestAutoMerge1
     */
    'commit_title': string;
    /**
     * 
     * @type {User2}
     * @memberof PullRequestAutoMerge1
     */
    'enabled_by': User2 | null;
    /**
     * The merge method to use.
     * @type {string}
     * @memberof PullRequestAutoMerge1
     */
    'merge_method': PullRequestAutoMerge1MergeMethodEnum;
}

export const PullRequestAutoMerge1MergeMethodEnum = {
    Merge: 'merge',
    Squash: 'squash',
    Rebase: 'rebase'
} as const;

export type PullRequestAutoMerge1MergeMethodEnum = typeof PullRequestAutoMerge1MergeMethodEnum[keyof typeof PullRequestAutoMerge1MergeMethodEnum];

/**
 * 
 * @export
 * @interface PullRequestBase
 */
export interface PullRequestBase {
    /**
     * 
     * @type {string}
     * @memberof PullRequestBase
     */
    'label': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestBase
     */
    'ref': string;
    /**
     * 
     * @type {Repository3}
     * @memberof PullRequestBase
     */
    'repo': Repository3;
    /**
     * 
     * @type {string}
     * @memberof PullRequestBase
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof PullRequestBase
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface PullRequestHead
 */
export interface PullRequestHead {
    /**
     * 
     * @type {string}
     * @memberof PullRequestHead
     */
    'label': string | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestHead
     */
    'ref': string;
    /**
     * 
     * @type {Repository4}
     * @memberof PullRequestHead
     */
    'repo': Repository4 | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestHead
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof PullRequestHead
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface PullRequestLabelsInner
 */
export interface PullRequestLabelsInner {
    /**
     * 
     * @type {number}
     * @memberof PullRequestLabelsInner
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequestLabelsInner
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestLabelsInner
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestLabelsInner
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestLabelsInner
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestLabelsInner
     */
    'color': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequestLabelsInner
     */
    'default': boolean;
}
/**
 * Pull Request Merge Result
 * @export
 * @interface PullRequestMergeResult
 */
export interface PullRequestMergeResult {
    /**
     * 
     * @type {string}
     * @memberof PullRequestMergeResult
     */
    'sha': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequestMergeResult
     */
    'merged': boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequestMergeResult
     */
    'message': string;
}
/**
 * 
 * @export
 * @interface PullRequestMinimal
 */
export interface PullRequestMinimal {
    /**
     * 
     * @type {number}
     * @memberof PullRequestMinimal
     */
    'id': number;
    /**
     * 
     * @type {number}
     * @memberof PullRequestMinimal
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequestMinimal
     */
    'url': string;
    /**
     * 
     * @type {PullRequestMinimalHead}
     * @memberof PullRequestMinimal
     */
    'head': PullRequestMinimalHead;
    /**
     * 
     * @type {PullRequestMinimalHead}
     * @memberof PullRequestMinimal
     */
    'base': PullRequestMinimalHead;
}
/**
 * 
 * @export
 * @interface PullRequestMinimalHead
 */
export interface PullRequestMinimalHead {
    /**
     * 
     * @type {string}
     * @memberof PullRequestMinimalHead
     */
    'ref': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestMinimalHead
     */
    'sha': string;
    /**
     * 
     * @type {PullRequestMinimalHeadRepo}
     * @memberof PullRequestMinimalHead
     */
    'repo': PullRequestMinimalHeadRepo;
}
/**
 * 
 * @export
 * @interface PullRequestMinimalHeadRepo
 */
export interface PullRequestMinimalHeadRepo {
    /**
     * 
     * @type {number}
     * @memberof PullRequestMinimalHeadRepo
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequestMinimalHeadRepo
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestMinimalHeadRepo
     */
    'name': string;
}
/**
 * @type PullRequestRequestedReviewersInner
 * @export
 */
export type PullRequestRequestedReviewersInner = Team1 | User4;

/**
 * Pull Request Reviews are reviews on pull requests.
 * @export
 * @interface PullRequestReview
 */
export interface PullRequestReview {
    /**
     * Unique identifier of the review
     * @type {number}
     * @memberof PullRequestReview
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequestReview
     */
    'node_id': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof PullRequestReview
     */
    'user': NullableSimpleUser | null;
    /**
     * The text of the review.
     * @type {string}
     * @memberof PullRequestReview
     */
    'body': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestReview
     */
    'state': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestReview
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestReview
     */
    'pull_request_url': string;
    /**
     * 
     * @type {TimelineReviewedEventLinks}
     * @memberof PullRequestReview
     */
    '_links': TimelineReviewedEventLinks;
    /**
     * 
     * @type {string}
     * @memberof PullRequestReview
     */
    'submitted_at'?: string;
    /**
     * A commit SHA for the review. If the commit object was garbage collected or forcibly deleted, then it no longer exists in Git and this value will be `null`.
     * @type {string}
     * @memberof PullRequestReview
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestReview
     */
    'body_html'?: string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestReview
     */
    'body_text'?: string;
    /**
     * 
     * @type {AuthorAssociation}
     * @memberof PullRequestReview
     */
    'author_association': AuthorAssociation;
}


/**
 * The [comment](https://docs.github.com/rest/pulls/comments#get-a-review-comment-for-a-pull-request) itself.
 * @export
 * @interface PullRequestReviewComment
 */
export interface PullRequestReviewComment {
    /**
     * 
     * @type {WebhooksReviewCommentLinks}
     * @memberof PullRequestReviewComment
     */
    '_links': WebhooksReviewCommentLinks;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'author_association': PullRequestReviewCommentAuthorAssociationEnum;
    /**
     * The text of the comment.
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'body': string;
    /**
     * The SHA of the commit to which the comment applies.
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'commit_id': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'created_at': string;
    /**
     * The diff of the line that the comment refers to.
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'diff_hunk': string;
    /**
     * HTML URL for the pull request review comment.
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'html_url': string;
    /**
     * The ID of the pull request review comment.
     * @type {number}
     * @memberof PullRequestReviewComment
     */
    'id': number;
    /**
     * The comment ID to reply to.
     * @type {number}
     * @memberof PullRequestReviewComment
     */
    'in_reply_to_id'?: number;
    /**
     * The line of the blob to which the comment applies. The last line of the range for a multi-line comment
     * @type {number}
     * @memberof PullRequestReviewComment
     */
    'line': number | null;
    /**
     * The node ID of the pull request review comment.
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'node_id': string;
    /**
     * The SHA of the original commit to which the comment applies.
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'original_commit_id': string;
    /**
     * The line of the blob to which the comment applies. The last line of the range for a multi-line comment
     * @type {number}
     * @memberof PullRequestReviewComment
     */
    'original_line': number | null;
    /**
     * The index of the original line in the diff to which the comment applies.
     * @type {number}
     * @memberof PullRequestReviewComment
     */
    'original_position': number;
    /**
     * The first line of the range for a multi-line comment.
     * @type {number}
     * @memberof PullRequestReviewComment
     */
    'original_start_line': number | null;
    /**
     * The relative path of the file to which the comment applies.
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'path': string;
    /**
     * The line index in the diff to which the comment applies.
     * @type {number}
     * @memberof PullRequestReviewComment
     */
    'position': number | null;
    /**
     * The ID of the pull request review to which the comment belongs.
     * @type {number}
     * @memberof PullRequestReviewComment
     */
    'pull_request_review_id': number | null;
    /**
     * URL for the pull request that the review comment belongs to.
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'pull_request_url': string;
    /**
     * 
     * @type {Reactions}
     * @memberof PullRequestReviewComment
     */
    'reactions': Reactions;
    /**
     * The side of the first line of the range for a multi-line comment.
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'side': PullRequestReviewCommentSideEnum;
    /**
     * The first line of the range for a multi-line comment.
     * @type {number}
     * @memberof PullRequestReviewComment
     */
    'start_line': number | null;
    /**
     * The side of the first line of the range for a multi-line comment.
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'start_side': PullRequestReviewCommentStartSideEnum | null;
    /**
     * The level at which the comment is targeted, can be a diff line or a file.
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'subject_type'?: PullRequestReviewCommentSubjectTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'updated_at': string;
    /**
     * URL for the pull request review comment
     * @type {string}
     * @memberof PullRequestReviewComment
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof PullRequestReviewComment
     */
    'user': User1 | null;
}

export const PullRequestReviewCommentAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequestReviewCommentAuthorAssociationEnum = typeof PullRequestReviewCommentAuthorAssociationEnum[keyof typeof PullRequestReviewCommentAuthorAssociationEnum];
export const PullRequestReviewCommentSideEnum = {
    Left: 'LEFT',
    Right: 'RIGHT'
} as const;

export type PullRequestReviewCommentSideEnum = typeof PullRequestReviewCommentSideEnum[keyof typeof PullRequestReviewCommentSideEnum];
export const PullRequestReviewCommentStartSideEnum = {
    Left: 'LEFT',
    Right: 'RIGHT'
} as const;

export type PullRequestReviewCommentStartSideEnum = typeof PullRequestReviewCommentStartSideEnum[keyof typeof PullRequestReviewCommentStartSideEnum];
export const PullRequestReviewCommentSubjectTypeEnum = {
    Line: 'line',
    File: 'file'
} as const;

export type PullRequestReviewCommentSubjectTypeEnum = typeof PullRequestReviewCommentSubjectTypeEnum[keyof typeof PullRequestReviewCommentSubjectTypeEnum];

/**
 * The [comment](https://docs.github.com/rest/pulls/comments#get-a-review-comment-for-a-pull-request) itself.
 * @export
 * @interface PullRequestReviewComment1
 */
export interface PullRequestReviewComment1 {
    /**
     * 
     * @type {WebhooksReviewCommentLinks}
     * @memberof PullRequestReviewComment1
     */
    '_links': WebhooksReviewCommentLinks;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'author_association': PullRequestReviewComment1AuthorAssociationEnum;
    /**
     * The text of the comment.
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'body': string;
    /**
     * The SHA of the commit to which the comment applies.
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'commit_id': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'created_at': string;
    /**
     * The diff of the line that the comment refers to.
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'diff_hunk': string;
    /**
     * HTML URL for the pull request review comment.
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'html_url': string;
    /**
     * The ID of the pull request review comment.
     * @type {number}
     * @memberof PullRequestReviewComment1
     */
    'id': number;
    /**
     * The comment ID to reply to.
     * @type {number}
     * @memberof PullRequestReviewComment1
     */
    'in_reply_to_id'?: number;
    /**
     * The line of the blob to which the comment applies. The last line of the range for a multi-line comment
     * @type {number}
     * @memberof PullRequestReviewComment1
     */
    'line': number | null;
    /**
     * The node ID of the pull request review comment.
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'node_id': string;
    /**
     * The SHA of the original commit to which the comment applies.
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'original_commit_id': string;
    /**
     * The line of the blob to which the comment applies. The last line of the range for a multi-line comment
     * @type {number}
     * @memberof PullRequestReviewComment1
     */
    'original_line': number | null;
    /**
     * The index of the original line in the diff to which the comment applies.
     * @type {number}
     * @memberof PullRequestReviewComment1
     */
    'original_position': number;
    /**
     * The first line of the range for a multi-line comment.
     * @type {number}
     * @memberof PullRequestReviewComment1
     */
    'original_start_line': number | null;
    /**
     * The relative path of the file to which the comment applies.
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'path': string;
    /**
     * The line index in the diff to which the comment applies.
     * @type {number}
     * @memberof PullRequestReviewComment1
     */
    'position': number | null;
    /**
     * The ID of the pull request review to which the comment belongs.
     * @type {number}
     * @memberof PullRequestReviewComment1
     */
    'pull_request_review_id': number | null;
    /**
     * URL for the pull request that the review comment belongs to.
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'pull_request_url': string;
    /**
     * 
     * @type {Reactions}
     * @memberof PullRequestReviewComment1
     */
    'reactions': Reactions;
    /**
     * The side of the first line of the range for a multi-line comment.
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'side': PullRequestReviewComment1SideEnum;
    /**
     * The first line of the range for a multi-line comment.
     * @type {number}
     * @memberof PullRequestReviewComment1
     */
    'start_line': number | null;
    /**
     * The side of the first line of the range for a multi-line comment.
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'start_side': PullRequestReviewComment1StartSideEnum | null;
    /**
     * The level at which the comment is targeted, can be a diff line or a file.
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'subject_type'?: PullRequestReviewComment1SubjectTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'updated_at': string;
    /**
     * URL for the pull request review comment
     * @type {string}
     * @memberof PullRequestReviewComment1
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof PullRequestReviewComment1
     */
    'user': User3 | null;
}

export const PullRequestReviewComment1AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequestReviewComment1AuthorAssociationEnum = typeof PullRequestReviewComment1AuthorAssociationEnum[keyof typeof PullRequestReviewComment1AuthorAssociationEnum];
export const PullRequestReviewComment1SideEnum = {
    Left: 'LEFT',
    Right: 'RIGHT'
} as const;

export type PullRequestReviewComment1SideEnum = typeof PullRequestReviewComment1SideEnum[keyof typeof PullRequestReviewComment1SideEnum];
export const PullRequestReviewComment1StartSideEnum = {
    Left: 'LEFT',
    Right: 'RIGHT'
} as const;

export type PullRequestReviewComment1StartSideEnum = typeof PullRequestReviewComment1StartSideEnum[keyof typeof PullRequestReviewComment1StartSideEnum];
export const PullRequestReviewComment1SubjectTypeEnum = {
    Line: 'line',
    File: 'file'
} as const;

export type PullRequestReviewComment1SubjectTypeEnum = typeof PullRequestReviewComment1SubjectTypeEnum[keyof typeof PullRequestReviewComment1SubjectTypeEnum];

/**
 * The [comment](https://docs.github.com/rest/pulls/comments#get-a-review-comment-for-a-pull-request) itself.
 * @export
 * @interface PullRequestReviewComment2
 */
export interface PullRequestReviewComment2 {
    /**
     * 
     * @type {WebhooksReviewCommentLinks}
     * @memberof PullRequestReviewComment2
     */
    '_links': WebhooksReviewCommentLinks;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'author_association': PullRequestReviewComment2AuthorAssociationEnum;
    /**
     * The text of the comment.
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'body': string;
    /**
     * The SHA of the commit to which the comment applies.
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'commit_id': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'created_at': string;
    /**
     * The diff of the line that the comment refers to.
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'diff_hunk': string;
    /**
     * HTML URL for the pull request review comment.
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'html_url': string;
    /**
     * The ID of the pull request review comment.
     * @type {number}
     * @memberof PullRequestReviewComment2
     */
    'id': number;
    /**
     * The comment ID to reply to.
     * @type {number}
     * @memberof PullRequestReviewComment2
     */
    'in_reply_to_id'?: number;
    /**
     * The line of the blob to which the comment applies. The last line of the range for a multi-line comment
     * @type {number}
     * @memberof PullRequestReviewComment2
     */
    'line': number | null;
    /**
     * The node ID of the pull request review comment.
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'node_id': string;
    /**
     * The SHA of the original commit to which the comment applies.
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'original_commit_id': string;
    /**
     * The line of the blob to which the comment applies. The last line of the range for a multi-line comment
     * @type {number}
     * @memberof PullRequestReviewComment2
     */
    'original_line': number;
    /**
     * The index of the original line in the diff to which the comment applies.
     * @type {number}
     * @memberof PullRequestReviewComment2
     */
    'original_position': number;
    /**
     * The first line of the range for a multi-line comment.
     * @type {number}
     * @memberof PullRequestReviewComment2
     */
    'original_start_line': number | null;
    /**
     * The relative path of the file to which the comment applies.
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'path': string;
    /**
     * The line index in the diff to which the comment applies.
     * @type {number}
     * @memberof PullRequestReviewComment2
     */
    'position': number | null;
    /**
     * The ID of the pull request review to which the comment belongs.
     * @type {number}
     * @memberof PullRequestReviewComment2
     */
    'pull_request_review_id': number | null;
    /**
     * URL for the pull request that the review comment belongs to.
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'pull_request_url': string;
    /**
     * 
     * @type {Reactions}
     * @memberof PullRequestReviewComment2
     */
    'reactions': Reactions;
    /**
     * The side of the first line of the range for a multi-line comment.
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'side': PullRequestReviewComment2SideEnum;
    /**
     * The first line of the range for a multi-line comment.
     * @type {number}
     * @memberof PullRequestReviewComment2
     */
    'start_line': number | null;
    /**
     * The side of the first line of the range for a multi-line comment.
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'start_side': PullRequestReviewComment2StartSideEnum | null;
    /**
     * The level at which the comment is targeted, can be a diff line or a file.
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'subject_type'?: PullRequestReviewComment2SubjectTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'updated_at': string;
    /**
     * URL for the pull request review comment
     * @type {string}
     * @memberof PullRequestReviewComment2
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof PullRequestReviewComment2
     */
    'user': User1 | null;
}

export const PullRequestReviewComment2AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type PullRequestReviewComment2AuthorAssociationEnum = typeof PullRequestReviewComment2AuthorAssociationEnum[keyof typeof PullRequestReviewComment2AuthorAssociationEnum];
export const PullRequestReviewComment2SideEnum = {
    Left: 'LEFT',
    Right: 'RIGHT'
} as const;

export type PullRequestReviewComment2SideEnum = typeof PullRequestReviewComment2SideEnum[keyof typeof PullRequestReviewComment2SideEnum];
export const PullRequestReviewComment2StartSideEnum = {
    Left: 'LEFT',
    Right: 'RIGHT'
} as const;

export type PullRequestReviewComment2StartSideEnum = typeof PullRequestReviewComment2StartSideEnum[keyof typeof PullRequestReviewComment2StartSideEnum];
export const PullRequestReviewComment2SubjectTypeEnum = {
    Line: 'line',
    File: 'file'
} as const;

export type PullRequestReviewComment2SubjectTypeEnum = typeof PullRequestReviewComment2SubjectTypeEnum[keyof typeof PullRequestReviewComment2SubjectTypeEnum];

/**
 * 
 * @export
 * @interface PullRequestReviewCommentLinks
 */
export interface PullRequestReviewCommentLinks {
    /**
     * 
     * @type {PullRequestReviewCommentLinksSelf}
     * @memberof PullRequestReviewCommentLinks
     */
    'self': PullRequestReviewCommentLinksSelf;
    /**
     * 
     * @type {PullRequestReviewCommentLinksHtml}
     * @memberof PullRequestReviewCommentLinks
     */
    'html': PullRequestReviewCommentLinksHtml;
    /**
     * 
     * @type {PullRequestReviewCommentLinksPullRequest}
     * @memberof PullRequestReviewCommentLinks
     */
    'pull_request': PullRequestReviewCommentLinksPullRequest;
}
/**
 * 
 * @export
 * @interface PullRequestReviewCommentLinksHtml
 */
export interface PullRequestReviewCommentLinksHtml {
    /**
     * 
     * @type {string}
     * @memberof PullRequestReviewCommentLinksHtml
     */
    'href': string;
}
/**
 * 
 * @export
 * @interface PullRequestReviewCommentLinksPullRequest
 */
export interface PullRequestReviewCommentLinksPullRequest {
    /**
     * 
     * @type {string}
     * @memberof PullRequestReviewCommentLinksPullRequest
     */
    'href': string;
}
/**
 * 
 * @export
 * @interface PullRequestReviewCommentLinksSelf
 */
export interface PullRequestReviewCommentLinksSelf {
    /**
     * 
     * @type {string}
     * @memberof PullRequestReviewCommentLinksSelf
     */
    'href': string;
}
/**
 * Pull Request Review Request
 * @export
 * @interface PullRequestReviewRequest
 */
export interface PullRequestReviewRequest {
    /**
     * 
     * @type {Array<SimpleUser>}
     * @memberof PullRequestReviewRequest
     */
    'users': Array<SimpleUser>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequestReviewRequest
     */
    'teams': Array<Team>;
}
/**
 * Pull Request Simple
 * @export
 * @interface PullRequestSimple
 */
export interface PullRequestSimple {
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequestSimple
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'diff_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'patch_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'issue_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'review_comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'review_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'statuses_url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequestSimple
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'state': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequestSimple
     */
    'locked': boolean;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'title': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof PullRequestSimple
     */
    'user': NullableSimpleUser | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'body': string | null;
    /**
     * 
     * @type {Array<PullRequestSimpleLabelsInner>}
     * @memberof PullRequestSimple
     */
    'labels': Array<PullRequestSimpleLabelsInner>;
    /**
     * 
     * @type {NullableMilestone}
     * @memberof PullRequestSimple
     */
    'milestone': NullableMilestone | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'active_lock_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'closed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'merged_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimple
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof PullRequestSimple
     */
    'assignee': NullableSimpleUser | null;
    /**
     * 
     * @type {Array<SimpleUser>}
     * @memberof PullRequestSimple
     */
    'assignees'?: Array<SimpleUser> | null;
    /**
     * 
     * @type {Array<SimpleUser>}
     * @memberof PullRequestSimple
     */
    'requested_reviewers'?: Array<SimpleUser> | null;
    /**
     * 
     * @type {Array<Team>}
     * @memberof PullRequestSimple
     */
    'requested_teams'?: Array<Team> | null;
    /**
     * 
     * @type {PullRequestSimpleHead}
     * @memberof PullRequestSimple
     */
    'head': PullRequestSimpleHead;
    /**
     * 
     * @type {PullRequestSimpleHead}
     * @memberof PullRequestSimple
     */
    'base': PullRequestSimpleHead;
    /**
     * 
     * @type {PullRequestSimpleLinks}
     * @memberof PullRequestSimple
     */
    '_links': PullRequestSimpleLinks;
    /**
     * 
     * @type {AuthorAssociation}
     * @memberof PullRequestSimple
     */
    'author_association': AuthorAssociation;
    /**
     * 
     * @type {AutoMerge}
     * @memberof PullRequestSimple
     */
    'auto_merge': AutoMerge | null;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequestSimple
     */
    'draft'?: boolean;
}


/**
 * 
 * @export
 * @interface PullRequestSimpleHead
 */
export interface PullRequestSimpleHead {
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimpleHead
     */
    'label': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimpleHead
     */
    'ref': string;
    /**
     * 
     * @type {Repository}
     * @memberof PullRequestSimpleHead
     */
    'repo': Repository;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimpleHead
     */
    'sha': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof PullRequestSimpleHead
     */
    'user': NullableSimpleUser | null;
}
/**
 * 
 * @export
 * @interface PullRequestSimpleLabelsInner
 */
export interface PullRequestSimpleLabelsInner {
    /**
     * 
     * @type {number}
     * @memberof PullRequestSimpleLabelsInner
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimpleLabelsInner
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimpleLabelsInner
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimpleLabelsInner
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimpleLabelsInner
     */
    'description': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestSimpleLabelsInner
     */
    'color': string;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequestSimpleLabelsInner
     */
    'default': boolean;
}
/**
 * 
 * @export
 * @interface PullRequestSimpleLinks
 */
export interface PullRequestSimpleLinks {
    /**
     * 
     * @type {Link}
     * @memberof PullRequestSimpleLinks
     */
    'comments': Link;
    /**
     * 
     * @type {Link}
     * @memberof PullRequestSimpleLinks
     */
    'commits': Link;
    /**
     * 
     * @type {Link}
     * @memberof PullRequestSimpleLinks
     */
    'statuses': Link;
    /**
     * 
     * @type {Link}
     * @memberof PullRequestSimpleLinks
     */
    'html': Link;
    /**
     * 
     * @type {Link}
     * @memberof PullRequestSimpleLinks
     */
    'issue': Link;
    /**
     * 
     * @type {Link}
     * @memberof PullRequestSimpleLinks
     */
    'review_comments': Link;
    /**
     * 
     * @type {Link}
     * @memberof PullRequestSimpleLinks
     */
    'review_comment': Link;
    /**
     * 
     * @type {Link}
     * @memberof PullRequestSimpleLinks
     */
    'self': Link;
}
/**
 * 
 * @export
 * @interface PullRequestWebhook
 */
export interface PullRequestWebhook {
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof PullRequestWebhook
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'diff_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'patch_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'issue_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'review_comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'review_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'statuses_url': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof PullRequestWebhook
     */
    'number': number;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'state': PullRequestWebhookStateEnum;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequestWebhook
     */
    'locked': boolean;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'title': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof PullRequestWebhook
     */
    'user': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'body': string | null;
    /**
     * 
     * @type {Array<PullRequestLabelsInner>}
     * @memberof PullRequestWebhook
     */
    'labels': Array<PullRequestLabelsInner>;
    /**
     * 
     * @type {NullableMilestone}
     * @memberof PullRequestWebhook
     */
    'milestone': NullableMilestone | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'active_lock_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'closed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'merged_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof PullRequestWebhook
     */
    'assignee': NullableSimpleUser | null;
    /**
     * 
     * @type {Array<SimpleUser>}
     * @memberof PullRequestWebhook
     */
    'assignees'?: Array<SimpleUser> | null;
    /**
     * 
     * @type {Array<SimpleUser>}
     * @memberof PullRequestWebhook
     */
    'requested_reviewers'?: Array<SimpleUser> | null;
    /**
     * 
     * @type {Array<TeamSimple>}
     * @memberof PullRequestWebhook
     */
    'requested_teams'?: Array<TeamSimple> | null;
    /**
     * 
     * @type {PullRequestHead}
     * @memberof PullRequestWebhook
     */
    'head': PullRequestHead;
    /**
     * 
     * @type {PullRequestHead}
     * @memberof PullRequestWebhook
     */
    'base': PullRequestHead;
    /**
     * 
     * @type {PullRequestSimpleLinks}
     * @memberof PullRequestWebhook
     */
    '_links': PullRequestSimpleLinks;
    /**
     * 
     * @type {AuthorAssociation}
     * @memberof PullRequestWebhook
     */
    'author_association': AuthorAssociation;
    /**
     * 
     * @type {AutoMerge}
     * @memberof PullRequestWebhook
     */
    'auto_merge': AutoMerge | null;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof PullRequestWebhook
     */
    'draft'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequestWebhook
     */
    'merged': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequestWebhook
     */
    'mergeable': boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequestWebhook
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'mergeable_state': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof PullRequestWebhook
     */
    'merged_by': NullableSimpleUser | null;
    /**
     * 
     * @type {number}
     * @memberof PullRequestWebhook
     */
    'comments': number;
    /**
     * 
     * @type {number}
     * @memberof PullRequestWebhook
     */
    'review_comments': number;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof PullRequestWebhook
     */
    'maintainer_can_modify': boolean;
    /**
     * 
     * @type {number}
     * @memberof PullRequestWebhook
     */
    'commits': number;
    /**
     * 
     * @type {number}
     * @memberof PullRequestWebhook
     */
    'additions': number;
    /**
     * 
     * @type {number}
     * @memberof PullRequestWebhook
     */
    'deletions': number;
    /**
     * 
     * @type {number}
     * @memberof PullRequestWebhook
     */
    'changed_files': number;
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof PullRequestWebhook
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow updating the pull request\'s branch.
     * @type {boolean}
     * @memberof PullRequestWebhook
     */
    'allow_update_branch'?: boolean;
    /**
     * Whether to delete head branches when pull requests are merged.
     * @type {boolean}
     * @memberof PullRequestWebhook
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * The default value for a merge commit message. - `PR_TITLE` - default to the pull request\'s title. - `PR_BODY` - default to the pull request\'s body. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'merge_commit_message'?: PullRequestWebhookMergeCommitMessageEnum;
    /**
     * The default value for a merge commit title. - `PR_TITLE` - default to the pull request\'s title. - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., \"Merge pull request #123 from branch-name\").
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'merge_commit_title'?: PullRequestWebhookMergeCommitTitleEnum;
    /**
     * The default value for a squash merge commit message: - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'squash_merge_commit_message'?: PullRequestWebhookSquashMergeCommitMessageEnum;
    /**
     * The default value for a squash merge commit title: - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof PullRequestWebhook
     */
    'squash_merge_commit_title'?: PullRequestWebhookSquashMergeCommitTitleEnum;
    /**
     * Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.**
     * @type {boolean}
     * @memberof PullRequestWebhook
     */
    'use_squash_pr_title_as_default'?: boolean;
}

export const PullRequestWebhookStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type PullRequestWebhookStateEnum = typeof PullRequestWebhookStateEnum[keyof typeof PullRequestWebhookStateEnum];
export const PullRequestWebhookMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type PullRequestWebhookMergeCommitMessageEnum = typeof PullRequestWebhookMergeCommitMessageEnum[keyof typeof PullRequestWebhookMergeCommitMessageEnum];
export const PullRequestWebhookMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type PullRequestWebhookMergeCommitTitleEnum = typeof PullRequestWebhookMergeCommitTitleEnum[keyof typeof PullRequestWebhookMergeCommitTitleEnum];
export const PullRequestWebhookSquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type PullRequestWebhookSquashMergeCommitMessageEnum = typeof PullRequestWebhookSquashMergeCommitMessageEnum[keyof typeof PullRequestWebhookSquashMergeCommitMessageEnum];
export const PullRequestWebhookSquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type PullRequestWebhookSquashMergeCommitTitleEnum = typeof PullRequestWebhookSquashMergeCommitTitleEnum[keyof typeof PullRequestWebhookSquashMergeCommitTitleEnum];

/**
 * 
 * @export
 * @interface RateLimit
 */
export interface RateLimit {
    /**
     * 
     * @type {number}
     * @memberof RateLimit
     */
    'limit': number;
    /**
     * 
     * @type {number}
     * @memberof RateLimit
     */
    'remaining': number;
    /**
     * 
     * @type {number}
     * @memberof RateLimit
     */
    'reset': number;
    /**
     * 
     * @type {number}
     * @memberof RateLimit
     */
    'used': number;
}
/**
 * Rate Limit Overview
 * @export
 * @interface RateLimitOverview
 */
export interface RateLimitOverview {
    /**
     * 
     * @type {RateLimitOverviewResources}
     * @memberof RateLimitOverview
     */
    'resources': RateLimitOverviewResources;
    /**
     * 
     * @type {RateLimit}
     * @memberof RateLimitOverview
     */
    'rate': RateLimit;
}
/**
 * 
 * @export
 * @interface RateLimitOverviewResources
 */
export interface RateLimitOverviewResources {
    /**
     * 
     * @type {RateLimit}
     * @memberof RateLimitOverviewResources
     */
    'core': RateLimit;
    /**
     * 
     * @type {RateLimit}
     * @memberof RateLimitOverviewResources
     */
    'graphql'?: RateLimit;
    /**
     * 
     * @type {RateLimit}
     * @memberof RateLimitOverviewResources
     */
    'search': RateLimit;
    /**
     * 
     * @type {RateLimit}
     * @memberof RateLimitOverviewResources
     */
    'code_search'?: RateLimit;
    /**
     * 
     * @type {RateLimit}
     * @memberof RateLimitOverviewResources
     */
    'source_import'?: RateLimit;
    /**
     * 
     * @type {RateLimit}
     * @memberof RateLimitOverviewResources
     */
    'integration_manifest'?: RateLimit;
    /**
     * 
     * @type {RateLimit}
     * @memberof RateLimitOverviewResources
     */
    'code_scanning_upload'?: RateLimit;
    /**
     * 
     * @type {RateLimit}
     * @memberof RateLimitOverviewResources
     */
    'actions_runner_registration'?: RateLimit;
    /**
     * 
     * @type {RateLimit}
     * @memberof RateLimitOverviewResources
     */
    'scim'?: RateLimit;
    /**
     * 
     * @type {RateLimit}
     * @memberof RateLimitOverviewResources
     */
    'dependency_snapshots'?: RateLimit;
    /**
     * 
     * @type {RateLimit}
     * @memberof RateLimitOverviewResources
     */
    'code_scanning_autofix'?: RateLimit;
}
/**
 * Reactions to conversations provide a way to help people express their feelings more simply and effectively.
 * @export
 * @interface Reaction
 */
export interface Reaction {
    /**
     * 
     * @type {number}
     * @memberof Reaction
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Reaction
     */
    'node_id': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof Reaction
     */
    'user': NullableSimpleUser | null;
    /**
     * The reaction to use
     * @type {string}
     * @memberof Reaction
     */
    'content': ReactionContentEnum;
    /**
     * 
     * @type {string}
     * @memberof Reaction
     */
    'created_at': string;
}

export const ReactionContentEnum = {
    _1: '+1',
    _12: '-1',
    Laugh: 'laugh',
    Confused: 'confused',
    Heart: 'heart',
    Hooray: 'hooray',
    Rocket: 'rocket',
    Eyes: 'eyes'
} as const;

export type ReactionContentEnum = typeof ReactionContentEnum[keyof typeof ReactionContentEnum];

/**
 * 
 * @export
 * @interface ReactionRollup
 */
export interface ReactionRollup {
    /**
     * 
     * @type {string}
     * @memberof ReactionRollup
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof ReactionRollup
     */
    'total_count': number;
    /**
     * 
     * @type {number}
     * @memberof ReactionRollup
     */
    '+1': number;
    /**
     * 
     * @type {number}
     * @memberof ReactionRollup
     */
    '-1': number;
    /**
     * 
     * @type {number}
     * @memberof ReactionRollup
     */
    'laugh': number;
    /**
     * 
     * @type {number}
     * @memberof ReactionRollup
     */
    'confused': number;
    /**
     * 
     * @type {number}
     * @memberof ReactionRollup
     */
    'heart': number;
    /**
     * 
     * @type {number}
     * @memberof ReactionRollup
     */
    'hooray': number;
    /**
     * 
     * @type {number}
     * @memberof ReactionRollup
     */
    'eyes': number;
    /**
     * 
     * @type {number}
     * @memberof ReactionRollup
     */
    'rocket': number;
}
/**
 * 
 * @export
 * @interface Reactions
 */
export interface Reactions {
    /**
     * 
     * @type {number}
     * @memberof Reactions
     */
    '+1': number;
    /**
     * 
     * @type {number}
     * @memberof Reactions
     */
    '-1': number;
    /**
     * 
     * @type {number}
     * @memberof Reactions
     */
    'confused': number;
    /**
     * 
     * @type {number}
     * @memberof Reactions
     */
    'eyes': number;
    /**
     * 
     * @type {number}
     * @memberof Reactions
     */
    'heart': number;
    /**
     * 
     * @type {number}
     * @memberof Reactions
     */
    'hooray': number;
    /**
     * 
     * @type {number}
     * @memberof Reactions
     */
    'laugh': number;
    /**
     * 
     * @type {number}
     * @memberof Reactions
     */
    'rocket': number;
    /**
     * 
     * @type {number}
     * @memberof Reactions
     */
    'total_count': number;
    /**
     * 
     * @type {string}
     * @memberof Reactions
     */
    'url': string;
}
/**
 * A workflow referenced/reused by the initial caller workflow
 * @export
 * @interface ReferencedWorkflow
 */
export interface ReferencedWorkflow {
    /**
     * 
     * @type {string}
     * @memberof ReferencedWorkflow
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof ReferencedWorkflow
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof ReferencedWorkflow
     */
    'ref'?: string;
}
/**
 * Referrer Traffic
 * @export
 * @interface ReferrerTraffic
 */
export interface ReferrerTraffic {
    /**
     * 
     * @type {string}
     * @memberof ReferrerTraffic
     */
    'referrer': string;
    /**
     * 
     * @type {number}
     * @memberof ReferrerTraffic
     */
    'count': number;
    /**
     * 
     * @type {number}
     * @memberof ReferrerTraffic
     */
    'uniques': number;
}
/**
 * The [release](https://docs.github.com/rest/releases/releases/#get-a-release) object.
 * @export
 * @interface Release
 */
export interface Release {
    /**
     * 
     * @type {Array<ReleaseAsset1>}
     * @memberof Release
     */
    'assets': Array<ReleaseAsset1>;
    /**
     * 
     * @type {string}
     * @memberof Release
     */
    'assets_url': string;
    /**
     * 
     * @type {User2}
     * @memberof Release
     */
    'author': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof Release
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof Release
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof Release
     */
    'discussion_url'?: string;
    /**
     * Whether the release is a draft or published
     * @type {boolean}
     * @memberof Release
     */
    'draft': boolean;
    /**
     * 
     * @type {string}
     * @memberof Release
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof Release
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Release
     */
    'name': string | null;
    /**
     * 
     * @type {string}
     * @memberof Release
     */
    'node_id': string;
    /**
     * Whether the release is identified as a prerelease or a full release.
     * @type {boolean}
     * @memberof Release
     */
    'prerelease': boolean;
    /**
     * 
     * @type {string}
     * @memberof Release
     */
    'published_at': string | null;
    /**
     * 
     * @type {Reactions}
     * @memberof Release
     */
    'reactions'?: Reactions;
    /**
     * The name of the tag.
     * @type {string}
     * @memberof Release
     */
    'tag_name': string;
    /**
     * 
     * @type {string}
     * @memberof Release
     */
    'tarball_url': string | null;
    /**
     * Specifies the commitish value that determines where the Git tag is created from.
     * @type {string}
     * @memberof Release
     */
    'target_commitish': string;
    /**
     * 
     * @type {string}
     * @memberof Release
     */
    'upload_url': string;
    /**
     * 
     * @type {string}
     * @memberof Release
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Release
     */
    'zipball_url': string | null;
}
/**
 * Data related to a release.
 * @export
 * @interface ReleaseAsset
 */
export interface ReleaseAsset {
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset
     */
    'browser_download_url': string;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset
     */
    'content_type': string;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof ReleaseAsset
     */
    'download_count': number;
    /**
     * 
     * @type {number}
     * @memberof ReleaseAsset
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset
     */
    'label': string | null;
    /**
     * The file name of the asset.
     * @type {string}
     * @memberof ReleaseAsset
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof ReleaseAsset
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset
     */
    'digest': string | null;
    /**
     * State of the release asset.
     * @type {string}
     * @memberof ReleaseAsset
     */
    'state': ReleaseAssetStateEnum;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset
     */
    'updated_at': string;
    /**
     * 
     * @type {User}
     * @memberof ReleaseAsset
     */
    'uploader'?: User | null;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset
     */
    'url': string;
}

export const ReleaseAssetStateEnum = {
    Uploaded: 'uploaded'
} as const;

export type ReleaseAssetStateEnum = typeof ReleaseAssetStateEnum[keyof typeof ReleaseAssetStateEnum];

/**
 * Data related to a release.
 * @export
 * @interface ReleaseAsset1
 */
export interface ReleaseAsset1 {
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset1
     */
    'browser_download_url': string;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset1
     */
    'content_type': string;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset1
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof ReleaseAsset1
     */
    'download_count': number;
    /**
     * 
     * @type {number}
     * @memberof ReleaseAsset1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset1
     */
    'label': string | null;
    /**
     * The file name of the asset.
     * @type {string}
     * @memberof ReleaseAsset1
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset1
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof ReleaseAsset1
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset1
     */
    'digest': string | null;
    /**
     * State of the release asset.
     * @type {string}
     * @memberof ReleaseAsset1
     */
    'state': ReleaseAsset1StateEnum;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset1
     */
    'updated_at': string;
    /**
     * 
     * @type {User}
     * @memberof ReleaseAsset1
     */
    'uploader'?: User | null;
    /**
     * 
     * @type {string}
     * @memberof ReleaseAsset1
     */
    'url': string;
}

export const ReleaseAsset1StateEnum = {
    Uploaded: 'uploaded'
} as const;

export type ReleaseAsset1StateEnum = typeof ReleaseAsset1StateEnum[keyof typeof ReleaseAsset1StateEnum];

/**
 * Generated name and body describing a release
 * @export
 * @interface ReleaseNotesContent
 */
export interface ReleaseNotesContent {
    /**
     * The generated name of the release
     * @type {string}
     * @memberof ReleaseNotesContent
     */
    'name': string;
    /**
     * The generated body describing the contents of the release supporting markdown formatting
     * @type {string}
     * @memberof ReleaseNotesContent
     */
    'body': string;
}
/**
 * Removed from Project Issue Event
 * @export
 * @interface RemovedFromProjectIssueEvent
 */
export interface RemovedFromProjectIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof RemovedFromProjectIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof RemovedFromProjectIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof RemovedFromProjectIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof RemovedFromProjectIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof RemovedFromProjectIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof RemovedFromProjectIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof RemovedFromProjectIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof RemovedFromProjectIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof RemovedFromProjectIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {AddedToProjectIssueEventProjectCard}
     * @memberof RemovedFromProjectIssueEvent
     */
    'project_card'?: AddedToProjectIssueEventProjectCard;
}
/**
 * Renamed Issue Event
 * @export
 * @interface RenamedIssueEvent
 */
export interface RenamedIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof RenamedIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof RenamedIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof RenamedIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof RenamedIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof RenamedIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof RenamedIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof RenamedIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof RenamedIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof RenamedIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {RenamedIssueEventRename}
     * @memberof RenamedIssueEvent
     */
    'rename': RenamedIssueEventRename;
}
/**
 * 
 * @export
 * @interface RenamedIssueEventRename
 */
export interface RenamedIssueEventRename {
    /**
     * 
     * @type {string}
     * @memberof RenamedIssueEventRename
     */
    'from': string;
    /**
     * 
     * @type {string}
     * @memberof RenamedIssueEventRename
     */
    'to': string;
}
/**
 * Set repository secrets for GitHub Codespaces.
 * @export
 * @interface RepoCodespacesSecret
 */
export interface RepoCodespacesSecret {
    /**
     * The name of the secret.
     * @type {string}
     * @memberof RepoCodespacesSecret
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof RepoCodespacesSecret
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof RepoCodespacesSecret
     */
    'updated_at': string;
}
/**
 * 
 * @export
 * @interface RepoRef
 */
export interface RepoRef {
    /**
     * 
     * @type {number}
     * @memberof RepoRef
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof RepoRef
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof RepoRef
     */
    'url': string;
}
/**
 * Repo Search Result Item
 * @export
 * @interface RepoSearchResultItem
 */
export interface RepoSearchResultItem {
    /**
     * 
     * @type {number}
     * @memberof RepoSearchResultItem
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'full_name': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof RepoSearchResultItem
     */
    'owner': NullableSimpleUser | null;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'private': boolean;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'description': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'fork': boolean;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'pushed_at': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'homepage': string | null;
    /**
     * 
     * @type {number}
     * @memberof RepoSearchResultItem
     */
    'size': number;
    /**
     * 
     * @type {number}
     * @memberof RepoSearchResultItem
     */
    'stargazers_count': number;
    /**
     * 
     * @type {number}
     * @memberof RepoSearchResultItem
     */
    'watchers_count': number;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'language': string | null;
    /**
     * 
     * @type {number}
     * @memberof RepoSearchResultItem
     */
    'forks_count': number;
    /**
     * 
     * @type {number}
     * @memberof RepoSearchResultItem
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'master_branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'default_branch': string;
    /**
     * 
     * @type {number}
     * @memberof RepoSearchResultItem
     */
    'score': number;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'languages_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'contributors_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'archive_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'pulls_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'notifications_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'git_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'ssh_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'svn_url': string;
    /**
     * 
     * @type {number}
     * @memberof RepoSearchResultItem
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof RepoSearchResultItem
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof RepoSearchResultItem
     */
    'watchers': number;
    /**
     * 
     * @type {Array<string>}
     * @memberof RepoSearchResultItem
     */
    'topics'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'mirror_url': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'has_projects': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'has_pages': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'has_wiki': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'has_downloads': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'has_discussions'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'archived': boolean;
    /**
     * Returns whether or not this repository disabled.
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'disabled': boolean;
    /**
     * The repository visibility: public, private, or internal.
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'visibility'?: string;
    /**
     * 
     * @type {NullableLicenseSimple}
     * @memberof RepoSearchResultItem
     */
    'license': NullableLicenseSimple | null;
    /**
     * 
     * @type {FullRepositoryPermissions}
     * @memberof RepoSearchResultItem
     */
    'permissions'?: FullRepositoryPermissions;
    /**
     * 
     * @type {Array<SearchResultTextMatchesInner>}
     * @memberof RepoSearchResultItem
     */
    'text_matches'?: Array<SearchResultTextMatchesInner>;
    /**
     * 
     * @type {string}
     * @memberof RepoSearchResultItem
     */
    'temp_clone_token'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'allow_merge_commit'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'allow_rebase_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'allow_auto_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'allow_forking'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepoSearchResultItem
     */
    'web_commit_signoff_required'?: boolean;
}
/**
 * A git repository
 * @export
 * @interface Repository
 */
export interface Repository {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository
     */
    'has_wiki': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof Repository
     */
    'has_discussions': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'master_branch'?: string;
    /**
     * The default value for a merge commit message.  - `PR_TITLE` - default to the pull request\'s title. - `PR_BODY` - default to the pull request\'s body. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository
     */
    'merge_commit_message'?: RepositoryMergeCommitMessageEnum;
    /**
     * The default value for a merge commit title.  - `PR_TITLE` - default to the pull request\'s title. - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
     * @type {string}
     * @memberof Repository
     */
    'merge_commit_title'?: RepositoryMergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository
     */
    'size': number;
    /**
     * The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository
     */
    'squash_merge_commit_message'?: RepositorySquashMergeCommitMessageEnum;
    /**
     * The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof Repository
     */
    'squash_merge_commit_title'?: RepositorySquashMergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'url': string;
    /**
     * Whether a squash merge commit can use the pull request title as default.
     * @type {boolean}
     * @memberof Repository
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository
     */
    'visibility': RepositoryVisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository
     */
    'watchers_count': number;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof Repository
     */
    'web_commit_signoff_required'?: boolean;
}

export const RepositoryMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type RepositoryMergeCommitMessageEnum = typeof RepositoryMergeCommitMessageEnum[keyof typeof RepositoryMergeCommitMessageEnum];
export const RepositoryMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type RepositoryMergeCommitTitleEnum = typeof RepositoryMergeCommitTitleEnum[keyof typeof RepositoryMergeCommitTitleEnum];
export const RepositorySquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type RepositorySquashMergeCommitMessageEnum = typeof RepositorySquashMergeCommitMessageEnum[keyof typeof RepositorySquashMergeCommitMessageEnum];
export const RepositorySquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type RepositorySquashMergeCommitTitleEnum = typeof RepositorySquashMergeCommitTitleEnum[keyof typeof RepositorySquashMergeCommitTitleEnum];
export const RepositoryVisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type RepositoryVisibilityEnum = typeof RepositoryVisibilityEnum[keyof typeof RepositoryVisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository1
 */
export interface Repository1 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository1
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository1
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository1
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository1
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository1
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository1
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository1
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository1
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.
     * @type {{ [key: string]: any; }}
     * @memberof Repository1
     */
    'custom_properties'?: { [key: string]: any; };
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository1
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository1
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository1
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository1
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository1
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository1
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'git_url': string;
    /**
     * Whether the repository has discussions enabled.
     * @type {boolean}
     * @memberof Repository1
     */
    'has_discussions'?: boolean;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository1
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository1
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository1
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository1
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository1
     */
    'has_wiki': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository1
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository1
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository1
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'master_branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository1
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository1
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository1
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository1
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository1
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository1
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository1
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository1
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository1
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository1
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository1
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository1
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository1
     */
    'visibility': Repository1VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository1
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository1
     */
    'watchers_count': number;
    /**
     * Whether to require commit signoff.
     * @type {boolean}
     * @memberof Repository1
     */
    'web_commit_signoff_required'?: boolean;
}

export const Repository1VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository1VisibilityEnum = typeof Repository1VisibilityEnum[keyof typeof Repository1VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository10
 */
export interface Repository10 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository10
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository10
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository10
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository10
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository10
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository10
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository10
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository10
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository10
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository10
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository10
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository10
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository10
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository10
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository10
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository10
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository10
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository10
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository10
     */
    'has_wiki': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof Repository10
     */
    'has_discussions': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository10
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository10
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository10
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'master_branch'?: string;
    /**
     * The default value for a merge commit message.  - `PR_TITLE` - default to the pull request\'s title. - `PR_BODY` - default to the pull request\'s body. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository10
     */
    'merge_commit_message'?: Repository10MergeCommitMessageEnum;
    /**
     * The default value for a merge commit title.  - `PR_TITLE` - default to the pull request\'s title. - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
     * @type {string}
     * @memberof Repository10
     */
    'merge_commit_title'?: Repository10MergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository10
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository10
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository10
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository10
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository10
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository10
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository10
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository10
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository10
     */
    'size': number;
    /**
     * The default value for a squash merge commit message.
     * @type {string}
     * @memberof Repository10
     */
    'squash_merge_commit_message'?: Repository10SquashMergeCommitMessageEnum;
    /**
     * The default value for a squash merge commit title.
     * @type {string}
     * @memberof Repository10
     */
    'squash_merge_commit_title'?: Repository10SquashMergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository10
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository10
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository10
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'url': string;
    /**
     * Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
     * @type {boolean}
     * @memberof Repository10
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository10
     */
    'visibility': Repository10VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository10
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository10
     */
    'watchers_count': number;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof Repository10
     */
    'web_commit_signoff_required'?: boolean;
}

export const Repository10MergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type Repository10MergeCommitMessageEnum = typeof Repository10MergeCommitMessageEnum[keyof typeof Repository10MergeCommitMessageEnum];
export const Repository10MergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type Repository10MergeCommitTitleEnum = typeof Repository10MergeCommitTitleEnum[keyof typeof Repository10MergeCommitTitleEnum];
export const Repository10SquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type Repository10SquashMergeCommitMessageEnum = typeof Repository10SquashMergeCommitMessageEnum[keyof typeof Repository10SquashMergeCommitMessageEnum];
export const Repository10SquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type Repository10SquashMergeCommitTitleEnum = typeof Repository10SquashMergeCommitTitleEnum[keyof typeof Repository10SquashMergeCommitTitleEnum];
export const Repository10VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository10VisibilityEnum = typeof Repository10VisibilityEnum[keyof typeof Repository10VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository11
 */
export interface Repository11 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository11
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository11
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository11
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository11
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository11
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository11
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository11
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository11
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository11
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository11
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository11
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository11
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository11
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository11
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository11
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository11
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository11
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository11
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository11
     */
    'has_wiki': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof Repository11
     */
    'has_discussions': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository11
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository11
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository11
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'master_branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository11
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository11
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository11
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository11
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository11
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository11
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository11
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository11
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository11
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository11
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository11
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository11
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository11
     */
    'visibility': Repository11VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository11
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository11
     */
    'watchers_count': number;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof Repository11
     */
    'web_commit_signoff_required'?: boolean;
}

export const Repository11VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository11VisibilityEnum = typeof Repository11VisibilityEnum[keyof typeof Repository11VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository12
 */
export interface Repository12 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository12
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository12
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository12
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository12
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository12
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository12
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository12
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository12
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository12
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository12
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository12
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository12
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository12
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository12
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository12
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository12
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository12
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository12
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository12
     */
    'has_wiki': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof Repository12
     */
    'has_discussions': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository12
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository12
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository12
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'master_branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository12
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository12
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository12
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository12
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository12
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository12
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository12
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository12
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository12
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository12
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository12
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository12
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository12
     */
    'visibility': Repository12VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository12
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository12
     */
    'watchers_count': number;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof Repository12
     */
    'web_commit_signoff_required'?: boolean;
}

export const Repository12VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository12VisibilityEnum = typeof Repository12VisibilityEnum[keyof typeof Repository12VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository13
 */
export interface Repository13 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository13
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository13
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository13
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository13
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository13
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository13
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository13
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository13
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository13
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository13
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository13
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository13
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository13
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository13
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository13
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository13
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository13
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository13
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository13
     */
    'has_wiki': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof Repository13
     */
    'has_discussions': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository13
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository13
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository13
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'master_branch'?: string;
    /**
     * The default value for a merge commit message.
     * @type {string}
     * @memberof Repository13
     */
    'merge_commit_message'?: Repository13MergeCommitMessageEnum;
    /**
     * The default value for a merge commit message title.
     * @type {string}
     * @memberof Repository13
     */
    'merge_commit_title'?: Repository13MergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository13
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository13
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository13
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository13
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository13
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository13
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository13
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository13
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository13
     */
    'size': number;
    /**
     * The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository13
     */
    'squash_merge_commit_message'?: Repository13SquashMergeCommitMessageEnum;
    /**
     * The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof Repository13
     */
    'squash_merge_commit_title'?: Repository13SquashMergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository13
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository13
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository13
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'url': string;
    /**
     * Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
     * @type {boolean}
     * @memberof Repository13
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository13
     */
    'visibility': Repository13VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository13
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository13
     */
    'watchers_count': number;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof Repository13
     */
    'web_commit_signoff_required'?: boolean;
}

export const Repository13MergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type Repository13MergeCommitMessageEnum = typeof Repository13MergeCommitMessageEnum[keyof typeof Repository13MergeCommitMessageEnum];
export const Repository13MergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type Repository13MergeCommitTitleEnum = typeof Repository13MergeCommitTitleEnum[keyof typeof Repository13MergeCommitTitleEnum];
export const Repository13SquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type Repository13SquashMergeCommitMessageEnum = typeof Repository13SquashMergeCommitMessageEnum[keyof typeof Repository13SquashMergeCommitMessageEnum];
export const Repository13SquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type Repository13SquashMergeCommitTitleEnum = typeof Repository13SquashMergeCommitTitleEnum[keyof typeof Repository13SquashMergeCommitTitleEnum];
export const Repository13VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository13VisibilityEnum = typeof Repository13VisibilityEnum[keyof typeof Repository13VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository14
 */
export interface Repository14 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository14
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository14
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository14
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository14
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository14
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository14
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository14
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository14
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository14
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository14
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository14
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository14
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository14
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository14
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository14
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository14
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository14
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository14
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository14
     */
    'has_wiki': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof Repository14
     */
    'has_discussions': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository14
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository14
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository14
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'master_branch'?: string;
    /**
     * The default value for a merge commit message.
     * @type {string}
     * @memberof Repository14
     */
    'merge_commit_message'?: Repository14MergeCommitMessageEnum;
    /**
     * The default value for a merge commit message title.
     * @type {string}
     * @memberof Repository14
     */
    'merge_commit_title'?: Repository14MergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository14
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository14
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository14
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository14
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository14
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository14
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository14
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository14
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository14
     */
    'size': number;
    /**
     * The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository14
     */
    'squash_merge_commit_message'?: Repository14SquashMergeCommitMessageEnum;
    /**
     * The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof Repository14
     */
    'squash_merge_commit_title'?: Repository14SquashMergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository14
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository14
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository14
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'url': string;
    /**
     * Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
     * @type {boolean}
     * @memberof Repository14
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository14
     */
    'visibility': Repository14VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository14
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository14
     */
    'watchers_count': number;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof Repository14
     */
    'web_commit_signoff_required'?: boolean;
}

export const Repository14MergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type Repository14MergeCommitMessageEnum = typeof Repository14MergeCommitMessageEnum[keyof typeof Repository14MergeCommitMessageEnum];
export const Repository14MergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type Repository14MergeCommitTitleEnum = typeof Repository14MergeCommitTitleEnum[keyof typeof Repository14MergeCommitTitleEnum];
export const Repository14SquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type Repository14SquashMergeCommitMessageEnum = typeof Repository14SquashMergeCommitMessageEnum[keyof typeof Repository14SquashMergeCommitMessageEnum];
export const Repository14SquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type Repository14SquashMergeCommitTitleEnum = typeof Repository14SquashMergeCommitTitleEnum[keyof typeof Repository14SquashMergeCommitTitleEnum];
export const Repository14VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository14VisibilityEnum = typeof Repository14VisibilityEnum[keyof typeof Repository14VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository15
 */
export interface Repository15 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository15
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository15
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository15
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository15
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository15
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository15
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository15
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository15
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.
     * @type {{ [key: string]: any; }}
     * @memberof Repository15
     */
    'custom_properties'?: { [key: string]: any; };
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository15
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository15
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository15
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository15
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository15
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository15
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository15
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository15
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository15
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository15
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository15
     */
    'has_wiki': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository15
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository15
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository15
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'master_branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository15
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository15
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository15
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository15
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository15
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository15
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository15
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository15
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository15
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository15
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository15
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository15
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository15
     */
    'visibility': Repository15VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository15
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository15
     */
    'watchers_count': number;
}

export const Repository15VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository15VisibilityEnum = typeof Repository15VisibilityEnum[keyof typeof Repository15VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository2
 */
export interface Repository2 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository2
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository2
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository2
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository2
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository2
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository2
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository2
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository2
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.
     * @type {{ [key: string]: any; }}
     * @memberof Repository2
     */
    'custom_properties'?: { [key: string]: any; };
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository2
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository2
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository2
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository2
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository2
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository2
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository2
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository2
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository2
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository2
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository2
     */
    'has_wiki': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof Repository2
     */
    'has_discussions': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository2
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository2
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository2
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'master_branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository2
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository2
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository2
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository2
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository2
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository2
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository2
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository2
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository2
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository2
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository2
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository2
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository2
     */
    'visibility': Repository2VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository2
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository2
     */
    'watchers_count': number;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof Repository2
     */
    'web_commit_signoff_required'?: boolean;
}

export const Repository2VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository2VisibilityEnum = typeof Repository2VisibilityEnum[keyof typeof Repository2VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository3
 */
export interface Repository3 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository3
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository3
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository3
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository3
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository3
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository3
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository3
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository3
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository3
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository3
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository3
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository3
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository3
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository3
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository3
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository3
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository3
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository3
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository3
     */
    'has_wiki': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof Repository3
     */
    'has_discussions': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository3
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository3
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository3
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'master_branch'?: string;
    /**
     * The default value for a merge commit message.  - `PR_TITLE` - default to the pull request\'s title. - `PR_BODY` - default to the pull request\'s body. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository3
     */
    'merge_commit_message'?: Repository3MergeCommitMessageEnum;
    /**
     * The default value for a merge commit title.  - `PR_TITLE` - default to the pull request\'s title. - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
     * @type {string}
     * @memberof Repository3
     */
    'merge_commit_title'?: Repository3MergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository3
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository3
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository3
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository3
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository3
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository3
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository3
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository3
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository3
     */
    'size': number;
    /**
     * The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository3
     */
    'squash_merge_commit_message'?: Repository3SquashMergeCommitMessageEnum;
    /**
     * The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof Repository3
     */
    'squash_merge_commit_title'?: Repository3SquashMergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository3
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository3
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository3
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'url': string;
    /**
     * Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
     * @type {boolean}
     * @memberof Repository3
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository3
     */
    'visibility': Repository3VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository3
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository3
     */
    'watchers_count': number;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof Repository3
     */
    'web_commit_signoff_required'?: boolean;
}

export const Repository3MergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type Repository3MergeCommitMessageEnum = typeof Repository3MergeCommitMessageEnum[keyof typeof Repository3MergeCommitMessageEnum];
export const Repository3MergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type Repository3MergeCommitTitleEnum = typeof Repository3MergeCommitTitleEnum[keyof typeof Repository3MergeCommitTitleEnum];
export const Repository3SquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type Repository3SquashMergeCommitMessageEnum = typeof Repository3SquashMergeCommitMessageEnum[keyof typeof Repository3SquashMergeCommitMessageEnum];
export const Repository3SquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type Repository3SquashMergeCommitTitleEnum = typeof Repository3SquashMergeCommitTitleEnum[keyof typeof Repository3SquashMergeCommitTitleEnum];
export const Repository3VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository3VisibilityEnum = typeof Repository3VisibilityEnum[keyof typeof Repository3VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository4
 */
export interface Repository4 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository4
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository4
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository4
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository4
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository4
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository4
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository4
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository4
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository4
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository4
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository4
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository4
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository4
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository4
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository4
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository4
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository4
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository4
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository4
     */
    'has_wiki': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof Repository4
     */
    'has_discussions': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository4
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository4
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository4
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'master_branch'?: string;
    /**
     * The default value for a merge commit message.  - `PR_TITLE` - default to the pull request\'s title. - `PR_BODY` - default to the pull request\'s body. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository4
     */
    'merge_commit_message'?: Repository4MergeCommitMessageEnum;
    /**
     * The default value for a merge commit title.  - `PR_TITLE` - default to the pull request\'s title. - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
     * @type {string}
     * @memberof Repository4
     */
    'merge_commit_title'?: Repository4MergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository4
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository4
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository4
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository4
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository4
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository4
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository4
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository4
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository4
     */
    'size': number;
    /**
     * The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository4
     */
    'squash_merge_commit_message'?: Repository4SquashMergeCommitMessageEnum;
    /**
     * The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof Repository4
     */
    'squash_merge_commit_title'?: Repository4SquashMergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository4
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository4
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository4
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'url': string;
    /**
     * Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
     * @type {boolean}
     * @memberof Repository4
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository4
     */
    'visibility': Repository4VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository4
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository4
     */
    'watchers_count': number;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof Repository4
     */
    'web_commit_signoff_required'?: boolean;
}

export const Repository4MergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type Repository4MergeCommitMessageEnum = typeof Repository4MergeCommitMessageEnum[keyof typeof Repository4MergeCommitMessageEnum];
export const Repository4MergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type Repository4MergeCommitTitleEnum = typeof Repository4MergeCommitTitleEnum[keyof typeof Repository4MergeCommitTitleEnum];
export const Repository4SquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type Repository4SquashMergeCommitMessageEnum = typeof Repository4SquashMergeCommitMessageEnum[keyof typeof Repository4SquashMergeCommitMessageEnum];
export const Repository4SquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type Repository4SquashMergeCommitTitleEnum = typeof Repository4SquashMergeCommitTitleEnum[keyof typeof Repository4SquashMergeCommitTitleEnum];
export const Repository4VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository4VisibilityEnum = typeof Repository4VisibilityEnum[keyof typeof Repository4VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository5
 */
export interface Repository5 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository5
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository5
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository5
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository5
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository5
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository5
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository5
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository5
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository5
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository5
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository5
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository5
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository5
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository5
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository5
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository5
     */
    'has_issues': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof Repository5
     */
    'has_discussions': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository5
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository5
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository5
     */
    'has_wiki': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository5
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository5
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository5
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'master_branch'?: string;
    /**
     * The default value for a merge commit message.  - `PR_TITLE` - default to the pull request\'s title. - `PR_BODY` - default to the pull request\'s body. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository5
     */
    'merge_commit_message'?: Repository5MergeCommitMessageEnum;
    /**
     * The default value for a merge commit title.  - `PR_TITLE` - default to the pull request\'s title. - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
     * @type {string}
     * @memberof Repository5
     */
    'merge_commit_title'?: Repository5MergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository5
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository5
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository5
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository5
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository5
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository5
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository5
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository5
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository5
     */
    'size': number;
    /**
     * The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository5
     */
    'squash_merge_commit_message'?: Repository5SquashMergeCommitMessageEnum;
    /**
     * The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof Repository5
     */
    'squash_merge_commit_title'?: Repository5SquashMergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository5
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository5
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository5
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'url': string;
    /**
     * Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
     * @type {boolean}
     * @memberof Repository5
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository5
     */
    'visibility': Repository5VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository5
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository5
     */
    'watchers_count': number;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof Repository5
     */
    'web_commit_signoff_required'?: boolean;
}

export const Repository5MergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type Repository5MergeCommitMessageEnum = typeof Repository5MergeCommitMessageEnum[keyof typeof Repository5MergeCommitMessageEnum];
export const Repository5MergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type Repository5MergeCommitTitleEnum = typeof Repository5MergeCommitTitleEnum[keyof typeof Repository5MergeCommitTitleEnum];
export const Repository5SquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type Repository5SquashMergeCommitMessageEnum = typeof Repository5SquashMergeCommitMessageEnum[keyof typeof Repository5SquashMergeCommitMessageEnum];
export const Repository5SquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type Repository5SquashMergeCommitTitleEnum = typeof Repository5SquashMergeCommitTitleEnum[keyof typeof Repository5SquashMergeCommitTitleEnum];
export const Repository5VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository5VisibilityEnum = typeof Repository5VisibilityEnum[keyof typeof Repository5VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository6
 */
export interface Repository6 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository6
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository6
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository6
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository6
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository6
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository6
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository6
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository6
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository6
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository6
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository6
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository6
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository6
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository6
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository6
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository6
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository6
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository6
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository6
     */
    'has_wiki': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof Repository6
     */
    'has_discussions': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository6
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository6
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository6
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'master_branch'?: string;
    /**
     * The default value for a merge commit message.  - `PR_TITLE` - default to the pull request\'s title. - `PR_BODY` - default to the pull request\'s body. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository6
     */
    'merge_commit_message'?: Repository6MergeCommitMessageEnum;
    /**
     * The default value for a merge commit title.  - `PR_TITLE` - default to the pull request\'s title. - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
     * @type {string}
     * @memberof Repository6
     */
    'merge_commit_title'?: Repository6MergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository6
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository6
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository6
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository6
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository6
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository6
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository6
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository6
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository6
     */
    'size': number;
    /**
     * The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository6
     */
    'squash_merge_commit_message'?: Repository6SquashMergeCommitMessageEnum;
    /**
     * The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof Repository6
     */
    'squash_merge_commit_title'?: Repository6SquashMergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository6
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository6
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository6
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'url': string;
    /**
     * Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
     * @type {boolean}
     * @memberof Repository6
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository6
     */
    'visibility': Repository6VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository6
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository6
     */
    'watchers_count': number;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof Repository6
     */
    'web_commit_signoff_required'?: boolean;
}

export const Repository6MergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type Repository6MergeCommitMessageEnum = typeof Repository6MergeCommitMessageEnum[keyof typeof Repository6MergeCommitMessageEnum];
export const Repository6MergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type Repository6MergeCommitTitleEnum = typeof Repository6MergeCommitTitleEnum[keyof typeof Repository6MergeCommitTitleEnum];
export const Repository6SquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type Repository6SquashMergeCommitMessageEnum = typeof Repository6SquashMergeCommitMessageEnum[keyof typeof Repository6SquashMergeCommitMessageEnum];
export const Repository6SquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type Repository6SquashMergeCommitTitleEnum = typeof Repository6SquashMergeCommitTitleEnum[keyof typeof Repository6SquashMergeCommitTitleEnum];
export const Repository6VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository6VisibilityEnum = typeof Repository6VisibilityEnum[keyof typeof Repository6VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository7
 */
export interface Repository7 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository7
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository7
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository7
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository7
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository7
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository7
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository7
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository7
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository7
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository7
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository7
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository7
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository7
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository7
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository7
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository7
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository7
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository7
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository7
     */
    'has_wiki': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof Repository7
     */
    'has_discussions'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository7
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository7
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository7
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'master_branch'?: string;
    /**
     * The default value for a merge commit message.  - `PR_TITLE` - default to the pull request\'s title. - `PR_BODY` - default to the pull request\'s body. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository7
     */
    'merge_commit_message'?: Repository7MergeCommitMessageEnum;
    /**
     * The default value for a merge commit title.  - `PR_TITLE` - default to the pull request\'s title. - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
     * @type {string}
     * @memberof Repository7
     */
    'merge_commit_title'?: Repository7MergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository7
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository7
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository7
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository7
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository7
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository7
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository7
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository7
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository7
     */
    'size': number;
    /**
     * The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof Repository7
     */
    'squash_merge_commit_message'?: Repository7SquashMergeCommitMessageEnum;
    /**
     * The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof Repository7
     */
    'squash_merge_commit_title'?: Repository7SquashMergeCommitTitleEnum;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository7
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository7
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository7
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'url': string;
    /**
     * Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
     * @type {boolean}
     * @memberof Repository7
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository7
     */
    'visibility': Repository7VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository7
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository7
     */
    'watchers_count': number;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof Repository7
     */
    'web_commit_signoff_required'?: boolean;
}

export const Repository7MergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type Repository7MergeCommitMessageEnum = typeof Repository7MergeCommitMessageEnum[keyof typeof Repository7MergeCommitMessageEnum];
export const Repository7MergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type Repository7MergeCommitTitleEnum = typeof Repository7MergeCommitTitleEnum[keyof typeof Repository7MergeCommitTitleEnum];
export const Repository7SquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type Repository7SquashMergeCommitMessageEnum = typeof Repository7SquashMergeCommitMessageEnum[keyof typeof Repository7SquashMergeCommitMessageEnum];
export const Repository7SquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type Repository7SquashMergeCommitTitleEnum = typeof Repository7SquashMergeCommitTitleEnum[keyof typeof Repository7SquashMergeCommitTitleEnum];
export const Repository7VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository7VisibilityEnum = typeof Repository7VisibilityEnum[keyof typeof Repository7VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository8
 */
export interface Repository8 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository8
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository8
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository8
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository8
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository8
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository8
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository8
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository8
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository8
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository8
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository8
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository8
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository8
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository8
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository8
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository8
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository8
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository8
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository8
     */
    'has_wiki': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository8
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository8
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository8
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'master_branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository8
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository8
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository8
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository8
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository8
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository8
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository8
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository8
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository8
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository8
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository8
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository8
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository8
     */
    'visibility': Repository8VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository8
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository8
     */
    'watchers_count': number;
}

export const Repository8VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository8VisibilityEnum = typeof Repository8VisibilityEnum[keyof typeof Repository8VisibilityEnum];

/**
 * A git repository
 * @export
 * @interface Repository9
 */
export interface Repository9 {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof Repository9
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to allow private forks
     * @type {boolean}
     * @memberof Repository9
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof Repository9
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof Repository9
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof Repository9
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository9
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'archive_url': string;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof Repository9
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'contributors_url': string;
    /**
     * 
     * @type {RepositoryCreatedAt}
     * @memberof Repository9
     */
    'created_at': RepositoryCreatedAt;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof Repository9
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof Repository9
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'description': string | null;
    /**
     * Returns whether or not this repository is disabled.
     * @type {boolean}
     * @memberof Repository9
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof Repository9
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof Repository9
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof Repository9
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'git_url': string;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof Repository9
     */
    'has_downloads': boolean;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof Repository9
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository9
     */
    'has_pages': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof Repository9
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof Repository9
     */
    'has_wiki': boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof Repository9
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof Repository9
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'language': string | null;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'languages_url': string;
    /**
     * 
     * @type {License}
     * @memberof Repository9
     */
    'license': License | null;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'master_branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'mirror_url': string | null;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof Repository9
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository9
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof Repository9
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'organization'?: string;
    /**
     * 
     * @type {User2}
     * @memberof Repository9
     */
    'owner': User2 | null;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof Repository9
     */
    'permissions'?: RepositoryPermissions;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof Repository9
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Repository9
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'pulls_url': string;
    /**
     * 
     * @type {RepositoryPushedAt}
     * @memberof Repository9
     */
    'pushed_at': RepositoryPushedAt | null;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Repository9
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof Repository9
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof Repository9
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Repository9
     */
    'topics': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Repository9
     */
    'visibility': Repository9VisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof Repository9
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof Repository9
     */
    'watchers_count': number;
}

export const Repository9VisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Internal: 'internal'
} as const;

export type Repository9VisibilityEnum = typeof Repository9VisibilityEnum[keyof typeof Repository9VisibilityEnum];

/**
 * A repository security advisory.
 * @export
 * @interface RepositoryAdvisory
 */
export interface RepositoryAdvisory {
    /**
     * The GitHub Security Advisory ID.
     * @type {string}
     * @memberof RepositoryAdvisory
     */
    'ghsa_id': string;
    /**
     * The Common Vulnerabilities and Exposures (CVE) ID.
     * @type {string}
     * @memberof RepositoryAdvisory
     */
    'cve_id': string | null;
    /**
     * The API URL for the advisory.
     * @type {string}
     * @memberof RepositoryAdvisory
     */
    'url': string;
    /**
     * The URL for the advisory.
     * @type {string}
     * @memberof RepositoryAdvisory
     */
    'html_url': string;
    /**
     * A short summary of the advisory.
     * @type {string}
     * @memberof RepositoryAdvisory
     */
    'summary': string;
    /**
     * A detailed description of what the advisory entails.
     * @type {string}
     * @memberof RepositoryAdvisory
     */
    'description': string | null;
    /**
     * The severity of the advisory.
     * @type {string}
     * @memberof RepositoryAdvisory
     */
    'severity': RepositoryAdvisorySeverityEnum | null;
    /**
     * The author of the advisory.
     * @type {SimpleUser}
     * @memberof RepositoryAdvisory
     */
    'author': SimpleUser | null;
    /**
     * The publisher of the advisory.
     * @type {SimpleUser}
     * @memberof RepositoryAdvisory
     */
    'publisher': SimpleUser | null;
    /**
     * 
     * @type {Array<GlobalAdvisoryIdentifiersInner>}
     * @memberof RepositoryAdvisory
     */
    'identifiers': Array<GlobalAdvisoryIdentifiersInner>;
    /**
     * The state of the advisory.
     * @type {string}
     * @memberof RepositoryAdvisory
     */
    'state': RepositoryAdvisoryStateEnum;
    /**
     * The date and time of when the advisory was created, in ISO 8601 format.
     * @type {string}
     * @memberof RepositoryAdvisory
     */
    'created_at': string | null;
    /**
     * The date and time of when the advisory was last updated, in ISO 8601 format.
     * @type {string}
     * @memberof RepositoryAdvisory
     */
    'updated_at': string | null;
    /**
     * The date and time of when the advisory was published, in ISO 8601 format.
     * @type {string}
     * @memberof RepositoryAdvisory
     */
    'published_at': string | null;
    /**
     * The date and time of when the advisory was closed, in ISO 8601 format.
     * @type {string}
     * @memberof RepositoryAdvisory
     */
    'closed_at': string | null;
    /**
     * The date and time of when the advisory was withdrawn, in ISO 8601 format.
     * @type {string}
     * @memberof RepositoryAdvisory
     */
    'withdrawn_at': string | null;
    /**
     * 
     * @type {RepositoryAdvisorySubmission}
     * @memberof RepositoryAdvisory
     */
    'submission': RepositoryAdvisorySubmission | null;
    /**
     * 
     * @type {Array<RepositoryAdvisoryVulnerability>}
     * @memberof RepositoryAdvisory
     */
    'vulnerabilities': Array<RepositoryAdvisoryVulnerability> | null;
    /**
     * 
     * @type {GlobalAdvisoryCvss}
     * @memberof RepositoryAdvisory
     */
    'cvss': GlobalAdvisoryCvss | null;
    /**
     * 
     * @type {CvssSeverities}
     * @memberof RepositoryAdvisory
     */
    'cvss_severities'?: CvssSeverities | null;
    /**
     * 
     * @type {Array<GlobalAdvisoryCwesInner>}
     * @memberof RepositoryAdvisory
     */
    'cwes': Array<GlobalAdvisoryCwesInner> | null;
    /**
     * A list of only the CWE IDs.
     * @type {Array<string>}
     * @memberof RepositoryAdvisory
     */
    'cwe_ids': Array<string> | null;
    /**
     * 
     * @type {Array<RepositoryAdvisoryCreditsInner>}
     * @memberof RepositoryAdvisory
     */
    'credits': Array<RepositoryAdvisoryCreditsInner> | null;
    /**
     * 
     * @type {Array<RepositoryAdvisoryCredit>}
     * @memberof RepositoryAdvisory
     */
    'credits_detailed': Array<RepositoryAdvisoryCredit> | null;
    /**
     * A list of users that collaborate on the advisory.
     * @type {Array<SimpleUser>}
     * @memberof RepositoryAdvisory
     */
    'collaborating_users': Array<SimpleUser> | null;
    /**
     * A list of teams that collaborate on the advisory.
     * @type {Array<Team>}
     * @memberof RepositoryAdvisory
     */
    'collaborating_teams': Array<Team> | null;
    /**
     * A temporary private fork of the advisory\'s repository for collaborating on a fix.
     * @type {SimpleRepository}
     * @memberof RepositoryAdvisory
     */
    'private_fork': SimpleRepository | null;
}

export const RepositoryAdvisorySeverityEnum = {
    Critical: 'critical',
    High: 'high',
    Medium: 'medium',
    Low: 'low'
} as const;

export type RepositoryAdvisorySeverityEnum = typeof RepositoryAdvisorySeverityEnum[keyof typeof RepositoryAdvisorySeverityEnum];
export const RepositoryAdvisoryStateEnum = {
    Published: 'published',
    Closed: 'closed',
    Withdrawn: 'withdrawn',
    Draft: 'draft',
    Triage: 'triage'
} as const;

export type RepositoryAdvisoryStateEnum = typeof RepositoryAdvisoryStateEnum[keyof typeof RepositoryAdvisoryStateEnum];

/**
 * 
 * @export
 * @interface RepositoryAdvisoryCreate
 */
export interface RepositoryAdvisoryCreate {
    /**
     * A short summary of the advisory.
     * @type {string}
     * @memberof RepositoryAdvisoryCreate
     */
    'summary': string;
    /**
     * A detailed description of what the advisory impacts.
     * @type {string}
     * @memberof RepositoryAdvisoryCreate
     */
    'description': string;
    /**
     * The Common Vulnerabilities and Exposures (CVE) ID.
     * @type {string}
     * @memberof RepositoryAdvisoryCreate
     */
    'cve_id'?: string | null;
    /**
     * A product affected by the vulnerability detailed in a repository security advisory.
     * @type {Array<RepositoryAdvisoryCreateVulnerabilitiesInner>}
     * @memberof RepositoryAdvisoryCreate
     */
    'vulnerabilities': Array<RepositoryAdvisoryCreateVulnerabilitiesInner>;
    /**
     * A list of Common Weakness Enumeration (CWE) IDs.
     * @type {Array<string>}
     * @memberof RepositoryAdvisoryCreate
     */
    'cwe_ids'?: Array<string> | null;
    /**
     * A list of users receiving credit for their participation in the security advisory.
     * @type {Array<RepositoryAdvisoryCreateCreditsInner>}
     * @memberof RepositoryAdvisoryCreate
     */
    'credits'?: Array<RepositoryAdvisoryCreateCreditsInner> | null;
    /**
     * The severity of the advisory. You must choose between setting this field or `cvss_vector_string`.
     * @type {string}
     * @memberof RepositoryAdvisoryCreate
     */
    'severity'?: RepositoryAdvisoryCreateSeverityEnum | null;
    /**
     * The CVSS vector that calculates the severity of the advisory. You must choose between setting this field or `severity`.
     * @type {string}
     * @memberof RepositoryAdvisoryCreate
     */
    'cvss_vector_string'?: string | null;
    /**
     * Whether to create a temporary private fork of the repository to collaborate on a fix.
     * @type {boolean}
     * @memberof RepositoryAdvisoryCreate
     */
    'start_private_fork'?: boolean;
}

export const RepositoryAdvisoryCreateSeverityEnum = {
    Critical: 'critical',
    High: 'high',
    Medium: 'medium',
    Low: 'low'
} as const;

export type RepositoryAdvisoryCreateSeverityEnum = typeof RepositoryAdvisoryCreateSeverityEnum[keyof typeof RepositoryAdvisoryCreateSeverityEnum];

/**
 * 
 * @export
 * @interface RepositoryAdvisoryCreateCreditsInner
 */
export interface RepositoryAdvisoryCreateCreditsInner {
    /**
     * The username of the user credited.
     * @type {string}
     * @memberof RepositoryAdvisoryCreateCreditsInner
     */
    'login': string;
    /**
     * 
     * @type {SecurityAdvisoryCreditTypes}
     * @memberof RepositoryAdvisoryCreateCreditsInner
     */
    'type': SecurityAdvisoryCreditTypes;
}


/**
 * 
 * @export
 * @interface RepositoryAdvisoryCreateVulnerabilitiesInner
 */
export interface RepositoryAdvisoryCreateVulnerabilitiesInner {
    /**
     * 
     * @type {RepositoryAdvisoryCreateVulnerabilitiesInnerPackage}
     * @memberof RepositoryAdvisoryCreateVulnerabilitiesInner
     */
    'package': RepositoryAdvisoryCreateVulnerabilitiesInnerPackage;
    /**
     * The range of the package versions affected by the vulnerability.
     * @type {string}
     * @memberof RepositoryAdvisoryCreateVulnerabilitiesInner
     */
    'vulnerable_version_range'?: string | null;
    /**
     * The package version(s) that resolve the vulnerability.
     * @type {string}
     * @memberof RepositoryAdvisoryCreateVulnerabilitiesInner
     */
    'patched_versions'?: string | null;
    /**
     * The functions in the package that are affected.
     * @type {Array<string>}
     * @memberof RepositoryAdvisoryCreateVulnerabilitiesInner
     */
    'vulnerable_functions'?: Array<string> | null;
}
/**
 * The name of the package affected by the vulnerability.
 * @export
 * @interface RepositoryAdvisoryCreateVulnerabilitiesInnerPackage
 */
export interface RepositoryAdvisoryCreateVulnerabilitiesInnerPackage {
    /**
     * 
     * @type {SecurityAdvisoryEcosystems}
     * @memberof RepositoryAdvisoryCreateVulnerabilitiesInnerPackage
     */
    'ecosystem': SecurityAdvisoryEcosystems;
    /**
     * The unique package name within its ecosystem.
     * @type {string}
     * @memberof RepositoryAdvisoryCreateVulnerabilitiesInnerPackage
     */
    'name'?: string | null;
}


/**
 * A credit given to a user for a repository security advisory.
 * @export
 * @interface RepositoryAdvisoryCredit
 */
export interface RepositoryAdvisoryCredit {
    /**
     * 
     * @type {SimpleUser}
     * @memberof RepositoryAdvisoryCredit
     */
    'user': SimpleUser;
    /**
     * 
     * @type {SecurityAdvisoryCreditTypes}
     * @memberof RepositoryAdvisoryCredit
     */
    'type': SecurityAdvisoryCreditTypes;
    /**
     * The state of the user\'s acceptance of the credit.
     * @type {string}
     * @memberof RepositoryAdvisoryCredit
     */
    'state': RepositoryAdvisoryCreditStateEnum;
}

export const RepositoryAdvisoryCreditStateEnum = {
    Accepted: 'accepted',
    Declined: 'declined',
    Pending: 'pending'
} as const;

export type RepositoryAdvisoryCreditStateEnum = typeof RepositoryAdvisoryCreditStateEnum[keyof typeof RepositoryAdvisoryCreditStateEnum];

/**
 * 
 * @export
 * @interface RepositoryAdvisoryCreditsInner
 */
export interface RepositoryAdvisoryCreditsInner {
    /**
     * The username of the user credited.
     * @type {string}
     * @memberof RepositoryAdvisoryCreditsInner
     */
    'login'?: string;
    /**
     * 
     * @type {SecurityAdvisoryCreditTypes}
     * @memberof RepositoryAdvisoryCreditsInner
     */
    'type'?: SecurityAdvisoryCreditTypes;
}


/**
 * 
 * @export
 * @interface RepositoryAdvisorySubmission
 */
export interface RepositoryAdvisorySubmission {
    /**
     * Whether a private vulnerability report was accepted by the repository\'s administrators.
     * @type {boolean}
     * @memberof RepositoryAdvisorySubmission
     */
    'accepted': boolean;
}
/**
 * 
 * @export
 * @interface RepositoryAdvisoryUpdate
 */
export interface RepositoryAdvisoryUpdate {
    /**
     * A short summary of the advisory.
     * @type {string}
     * @memberof RepositoryAdvisoryUpdate
     */
    'summary'?: string;
    /**
     * A detailed description of what the advisory impacts.
     * @type {string}
     * @memberof RepositoryAdvisoryUpdate
     */
    'description'?: string;
    /**
     * The Common Vulnerabilities and Exposures (CVE) ID.
     * @type {string}
     * @memberof RepositoryAdvisoryUpdate
     */
    'cve_id'?: string | null;
    /**
     * A product affected by the vulnerability detailed in a repository security advisory.
     * @type {Array<RepositoryAdvisoryCreateVulnerabilitiesInner>}
     * @memberof RepositoryAdvisoryUpdate
     */
    'vulnerabilities'?: Array<RepositoryAdvisoryCreateVulnerabilitiesInner>;
    /**
     * A list of Common Weakness Enumeration (CWE) IDs.
     * @type {Array<string>}
     * @memberof RepositoryAdvisoryUpdate
     */
    'cwe_ids'?: Array<string> | null;
    /**
     * A list of users receiving credit for their participation in the security advisory.
     * @type {Array<RepositoryAdvisoryCreateCreditsInner>}
     * @memberof RepositoryAdvisoryUpdate
     */
    'credits'?: Array<RepositoryAdvisoryCreateCreditsInner> | null;
    /**
     * The severity of the advisory. You must choose between setting this field or `cvss_vector_string`.
     * @type {string}
     * @memberof RepositoryAdvisoryUpdate
     */
    'severity'?: RepositoryAdvisoryUpdateSeverityEnum | null;
    /**
     * The CVSS vector that calculates the severity of the advisory. You must choose between setting this field or `severity`.
     * @type {string}
     * @memberof RepositoryAdvisoryUpdate
     */
    'cvss_vector_string'?: string | null;
    /**
     * The state of the advisory.
     * @type {string}
     * @memberof RepositoryAdvisoryUpdate
     */
    'state'?: RepositoryAdvisoryUpdateStateEnum;
    /**
     * A list of usernames who have been granted write access to the advisory.
     * @type {Array<string>}
     * @memberof RepositoryAdvisoryUpdate
     */
    'collaborating_users'?: Array<string> | null;
    /**
     * A list of team slugs which have been granted write access to the advisory.
     * @type {Array<string>}
     * @memberof RepositoryAdvisoryUpdate
     */
    'collaborating_teams'?: Array<string> | null;
}

export const RepositoryAdvisoryUpdateSeverityEnum = {
    Critical: 'critical',
    High: 'high',
    Medium: 'medium',
    Low: 'low'
} as const;

export type RepositoryAdvisoryUpdateSeverityEnum = typeof RepositoryAdvisoryUpdateSeverityEnum[keyof typeof RepositoryAdvisoryUpdateSeverityEnum];
export const RepositoryAdvisoryUpdateStateEnum = {
    Published: 'published',
    Closed: 'closed',
    Draft: 'draft'
} as const;

export type RepositoryAdvisoryUpdateStateEnum = typeof RepositoryAdvisoryUpdateStateEnum[keyof typeof RepositoryAdvisoryUpdateStateEnum];

/**
 * A product affected by the vulnerability detailed in a repository security advisory.
 * @export
 * @interface RepositoryAdvisoryVulnerability
 */
export interface RepositoryAdvisoryVulnerability {
    /**
     * 
     * @type {VulnerabilityPackage}
     * @memberof RepositoryAdvisoryVulnerability
     */
    'package': VulnerabilityPackage | null;
    /**
     * The range of the package versions affected by the vulnerability.
     * @type {string}
     * @memberof RepositoryAdvisoryVulnerability
     */
    'vulnerable_version_range': string | null;
    /**
     * The package version(s) that resolve the vulnerability.
     * @type {string}
     * @memberof RepositoryAdvisoryVulnerability
     */
    'patched_versions': string | null;
    /**
     * The functions in the package that are affected.
     * @type {Array<string>}
     * @memberof RepositoryAdvisoryVulnerability
     */
    'vulnerable_functions': Array<string> | null;
}
/**
 * The status of the code search index for this repository
 * @export
 * @interface RepositoryCodeSearchIndexStatus
 */
export interface RepositoryCodeSearchIndexStatus {
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryCodeSearchIndexStatus
     */
    'lexical_search_ok'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryCodeSearchIndexStatus
     */
    'lexical_commit_sha'?: string;
}
/**
 * Repository Collaborator Permission
 * @export
 * @interface RepositoryCollaboratorPermission
 */
export interface RepositoryCollaboratorPermission {
    /**
     * 
     * @type {string}
     * @memberof RepositoryCollaboratorPermission
     */
    'permission': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryCollaboratorPermission
     */
    'role_name': string;
    /**
     * 
     * @type {NullableCollaborator}
     * @memberof RepositoryCollaboratorPermission
     */
    'user': NullableCollaborator | null;
}
/**
 * @type RepositoryCreatedAt
 * @export
 */
export type RepositoryCreatedAt = number | string;

/**
 * Conditions to target repositories by id and refs by name
 * @export
 * @interface RepositoryIdAndRefName
 */
export interface RepositoryIdAndRefName {
    /**
     * 
     * @type {RepositoryRulesetConditionsRefName}
     * @memberof RepositoryIdAndRefName
     */
    'ref_name'?: RepositoryRulesetConditionsRefName;
    /**
     * 
     * @type {RepositoryRulesetConditionsRepositoryIdTargetRepositoryId}
     * @memberof RepositoryIdAndRefName
     */
    'repository_id': RepositoryRulesetConditionsRepositoryIdTargetRepositoryId;
}
/**
 * Repository invitations let you manage who you collaborate with.
 * @export
 * @interface RepositoryInvitation
 */
export interface RepositoryInvitation {
    /**
     * Unique identifier of the repository invitation.
     * @type {number}
     * @memberof RepositoryInvitation
     */
    'id': number;
    /**
     * 
     * @type {MinimalRepository}
     * @memberof RepositoryInvitation
     */
    'repository': MinimalRepository;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof RepositoryInvitation
     */
    'invitee': NullableSimpleUser | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof RepositoryInvitation
     */
    'inviter': NullableSimpleUser | null;
    /**
     * The permission associated with the invitation.
     * @type {string}
     * @memberof RepositoryInvitation
     */
    'permissions': RepositoryInvitationPermissionsEnum;
    /**
     * 
     * @type {string}
     * @memberof RepositoryInvitation
     */
    'created_at': string;
    /**
     * Whether or not the invitation has expired
     * @type {boolean}
     * @memberof RepositoryInvitation
     */
    'expired'?: boolean;
    /**
     * URL for the repository invitation
     * @type {string}
     * @memberof RepositoryInvitation
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryInvitation
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryInvitation
     */
    'node_id': string;
}

export const RepositoryInvitationPermissionsEnum = {
    Read: 'read',
    Write: 'write',
    Admin: 'admin',
    Triage: 'triage',
    Maintain: 'maintain'
} as const;

export type RepositoryInvitationPermissionsEnum = typeof RepositoryInvitationPermissionsEnum[keyof typeof RepositoryInvitationPermissionsEnum];

/**
 * 
 * @export
 * @interface RepositoryLite
 */
export interface RepositoryLite {
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'archive_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'contributors_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryLite
     */
    'fork': boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof RepositoryLite
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'languages_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'milestones_url': string;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof RepositoryLite
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'notifications_url': string;
    /**
     * 
     * @type {User2}
     * @memberof RepositoryLite
     */
    'owner': User2 | null;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof RepositoryLite
     */
    'private': boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'pulls_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface RepositoryLite1
 */
export interface RepositoryLite1 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'archive_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'contributors_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryLite1
     */
    'fork': boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof RepositoryLite1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'languages_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'milestones_url': string;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof RepositoryLite1
     */
    'name': string | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'notifications_url': string;
    /**
     * 
     * @type {User}
     * @memberof RepositoryLite1
     */
    'owner': User | null;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof RepositoryLite1
     */
    'private': boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'pulls_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite1
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface RepositoryLite2
 */
export interface RepositoryLite2 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'archive_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'contributors_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryLite2
     */
    'fork': boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'html_url': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof RepositoryLite2
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'languages_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'milestones_url': string;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof RepositoryLite2
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'notifications_url': string;
    /**
     * 
     * @type {User}
     * @memberof RepositoryLite2
     */
    'owner': User | null;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof RepositoryLite2
     */
    'private': boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'pulls_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryLite2
     */
    'url': string;
}
/**
 * Conditions to target repositories by name and refs by name
 * @export
 * @interface RepositoryNameAndRefName
 */
export interface RepositoryNameAndRefName {
    /**
     * 
     * @type {RepositoryRulesetConditionsRefName}
     * @memberof RepositoryNameAndRefName
     */
    'ref_name'?: RepositoryRulesetConditionsRefName;
    /**
     * 
     * @type {RepositoryRulesetConditionsRepositoryNameTargetRepositoryName}
     * @memberof RepositoryNameAndRefName
     */
    'repository_name': RepositoryRulesetConditionsRepositoryNameTargetRepositoryName;
}
/**
 * 
 * @export
 * @interface RepositoryPermissions
 */
export interface RepositoryPermissions {
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryPermissions
     */
    'admin': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryPermissions
     */
    'maintain'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryPermissions
     */
    'pull': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryPermissions
     */
    'push': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryPermissions
     */
    'triage'?: boolean;
}
/**
 * Conditions to target repositories by property and refs by name
 * @export
 * @interface RepositoryPropertyAndRefName
 */
export interface RepositoryPropertyAndRefName {
    /**
     * 
     * @type {RepositoryRulesetConditionsRefName}
     * @memberof RepositoryPropertyAndRefName
     */
    'ref_name'?: RepositoryRulesetConditionsRefName;
    /**
     * 
     * @type {RepositoryRulesetConditionsRepositoryPropertyTargetRepositoryProperty}
     * @memberof RepositoryPropertyAndRefName
     */
    'repository_property': RepositoryRulesetConditionsRepositoryPropertyTargetRepositoryProperty;
}
/**
 * @type RepositoryPushedAt
 * @export
 */
export type RepositoryPushedAt = number | string;

/**
 * @type RepositoryRule
 * A repository rule.
 * @export
 */
export type RepositoryRule = RepositoryRuleBranchNamePattern | RepositoryRuleCodeScanning | RepositoryRuleCommitAuthorEmailPattern | RepositoryRuleCommitMessagePattern | RepositoryRuleCommitterEmailPattern | RepositoryRuleCreation | RepositoryRuleDeletion | RepositoryRuleFileExtensionRestriction | RepositoryRuleFilePathRestriction | RepositoryRuleMaxFilePathLength | RepositoryRuleMaxFileSize | RepositoryRuleMergeQueue | RepositoryRuleNonFastForward | RepositoryRulePullRequest | RepositoryRuleRequiredDeployments | RepositoryRuleRequiredLinearHistory | RepositoryRuleRequiredSignatures | RepositoryRuleRequiredStatusChecks | RepositoryRuleTagNamePattern | RepositoryRuleUpdate | RepositoryRuleWorkflows;

/**
 * Parameters to be used for the branch_name_pattern rule
 * @export
 * @interface RepositoryRuleBranchNamePattern
 */
export interface RepositoryRuleBranchNamePattern {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleBranchNamePattern
     */
    'type': RepositoryRuleBranchNamePatternTypeEnum;
    /**
     * 
     * @type {RepositoryRuleCommitMessagePatternParameters}
     * @memberof RepositoryRuleBranchNamePattern
     */
    'parameters'?: RepositoryRuleCommitMessagePatternParameters;
}

export const RepositoryRuleBranchNamePatternTypeEnum = {
    BranchNamePattern: 'branch_name_pattern'
} as const;

export type RepositoryRuleBranchNamePatternTypeEnum = typeof RepositoryRuleBranchNamePatternTypeEnum[keyof typeof RepositoryRuleBranchNamePatternTypeEnum];

/**
 * Choose which tools must provide code scanning results before the reference is updated. When configured, code scanning must be enabled and have results for both the commit and the reference being updated.
 * @export
 * @interface RepositoryRuleCodeScanning
 */
export interface RepositoryRuleCodeScanning {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleCodeScanning
     */
    'type': RepositoryRuleCodeScanningTypeEnum;
    /**
     * 
     * @type {RepositoryRuleCodeScanningParameters}
     * @memberof RepositoryRuleCodeScanning
     */
    'parameters'?: RepositoryRuleCodeScanningParameters;
}

export const RepositoryRuleCodeScanningTypeEnum = {
    CodeScanning: 'code_scanning'
} as const;

export type RepositoryRuleCodeScanningTypeEnum = typeof RepositoryRuleCodeScanningTypeEnum[keyof typeof RepositoryRuleCodeScanningTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleCodeScanningParameters
 */
export interface RepositoryRuleCodeScanningParameters {
    /**
     * Tools that must provide code scanning results for this rule to pass.
     * @type {Array<RepositoryRuleParamsCodeScanningTool>}
     * @memberof RepositoryRuleCodeScanningParameters
     */
    'code_scanning_tools': Array<RepositoryRuleParamsCodeScanningTool>;
}
/**
 * Parameters to be used for the commit_author_email_pattern rule
 * @export
 * @interface RepositoryRuleCommitAuthorEmailPattern
 */
export interface RepositoryRuleCommitAuthorEmailPattern {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleCommitAuthorEmailPattern
     */
    'type': RepositoryRuleCommitAuthorEmailPatternTypeEnum;
    /**
     * 
     * @type {RepositoryRuleCommitMessagePatternParameters}
     * @memberof RepositoryRuleCommitAuthorEmailPattern
     */
    'parameters'?: RepositoryRuleCommitMessagePatternParameters;
}

export const RepositoryRuleCommitAuthorEmailPatternTypeEnum = {
    CommitAuthorEmailPattern: 'commit_author_email_pattern'
} as const;

export type RepositoryRuleCommitAuthorEmailPatternTypeEnum = typeof RepositoryRuleCommitAuthorEmailPatternTypeEnum[keyof typeof RepositoryRuleCommitAuthorEmailPatternTypeEnum];

/**
 * Parameters to be used for the commit_message_pattern rule
 * @export
 * @interface RepositoryRuleCommitMessagePattern
 */
export interface RepositoryRuleCommitMessagePattern {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleCommitMessagePattern
     */
    'type': RepositoryRuleCommitMessagePatternTypeEnum;
    /**
     * 
     * @type {RepositoryRuleCommitMessagePatternParameters}
     * @memberof RepositoryRuleCommitMessagePattern
     */
    'parameters'?: RepositoryRuleCommitMessagePatternParameters;
}

export const RepositoryRuleCommitMessagePatternTypeEnum = {
    CommitMessagePattern: 'commit_message_pattern'
} as const;

export type RepositoryRuleCommitMessagePatternTypeEnum = typeof RepositoryRuleCommitMessagePatternTypeEnum[keyof typeof RepositoryRuleCommitMessagePatternTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleCommitMessagePatternParameters
 */
export interface RepositoryRuleCommitMessagePatternParameters {
    /**
     * How this rule will appear to users.
     * @type {string}
     * @memberof RepositoryRuleCommitMessagePatternParameters
     */
    'name'?: string;
    /**
     * If true, the rule will fail if the pattern matches.
     * @type {boolean}
     * @memberof RepositoryRuleCommitMessagePatternParameters
     */
    'negate'?: boolean;
    /**
     * The operator to use for matching.
     * @type {string}
     * @memberof RepositoryRuleCommitMessagePatternParameters
     */
    'operator': RepositoryRuleCommitMessagePatternParametersOperatorEnum;
    /**
     * The pattern to match with.
     * @type {string}
     * @memberof RepositoryRuleCommitMessagePatternParameters
     */
    'pattern': string;
}

export const RepositoryRuleCommitMessagePatternParametersOperatorEnum = {
    StartsWith: 'starts_with',
    EndsWith: 'ends_with',
    Contains: 'contains',
    Regex: 'regex'
} as const;

export type RepositoryRuleCommitMessagePatternParametersOperatorEnum = typeof RepositoryRuleCommitMessagePatternParametersOperatorEnum[keyof typeof RepositoryRuleCommitMessagePatternParametersOperatorEnum];

/**
 * Parameters to be used for the committer_email_pattern rule
 * @export
 * @interface RepositoryRuleCommitterEmailPattern
 */
export interface RepositoryRuleCommitterEmailPattern {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleCommitterEmailPattern
     */
    'type': RepositoryRuleCommitterEmailPatternTypeEnum;
    /**
     * 
     * @type {RepositoryRuleCommitMessagePatternParameters}
     * @memberof RepositoryRuleCommitterEmailPattern
     */
    'parameters'?: RepositoryRuleCommitMessagePatternParameters;
}

export const RepositoryRuleCommitterEmailPatternTypeEnum = {
    CommitterEmailPattern: 'committer_email_pattern'
} as const;

export type RepositoryRuleCommitterEmailPatternTypeEnum = typeof RepositoryRuleCommitterEmailPatternTypeEnum[keyof typeof RepositoryRuleCommitterEmailPatternTypeEnum];

/**
 * Only allow users with bypass permission to create matching refs.
 * @export
 * @interface RepositoryRuleCreation
 */
export interface RepositoryRuleCreation {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleCreation
     */
    'type': RepositoryRuleCreationTypeEnum;
}

export const RepositoryRuleCreationTypeEnum = {
    Creation: 'creation'
} as const;

export type RepositoryRuleCreationTypeEnum = typeof RepositoryRuleCreationTypeEnum[keyof typeof RepositoryRuleCreationTypeEnum];

/**
 * Only allow users with bypass permissions to delete matching refs.
 * @export
 * @interface RepositoryRuleDeletion
 */
export interface RepositoryRuleDeletion {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDeletion
     */
    'type': RepositoryRuleDeletionTypeEnum;
}

export const RepositoryRuleDeletionTypeEnum = {
    Deletion: 'deletion'
} as const;

export type RepositoryRuleDeletionTypeEnum = typeof RepositoryRuleDeletionTypeEnum[keyof typeof RepositoryRuleDeletionTypeEnum];

/**
 * @type RepositoryRuleDetailed
 * A repository rule with ruleset details.
 * @export
 */
export type RepositoryRuleDetailed = RepositoryRuleDetailedOneOf | RepositoryRuleDetailedOneOf1 | RepositoryRuleDetailedOneOf10 | RepositoryRuleDetailedOneOf11 | RepositoryRuleDetailedOneOf12 | RepositoryRuleDetailedOneOf13 | RepositoryRuleDetailedOneOf14 | RepositoryRuleDetailedOneOf15 | RepositoryRuleDetailedOneOf16 | RepositoryRuleDetailedOneOf17 | RepositoryRuleDetailedOneOf18 | RepositoryRuleDetailedOneOf19 | RepositoryRuleDetailedOneOf2 | RepositoryRuleDetailedOneOf20 | RepositoryRuleDetailedOneOf3 | RepositoryRuleDetailedOneOf4 | RepositoryRuleDetailedOneOf5 | RepositoryRuleDetailedOneOf6 | RepositoryRuleDetailedOneOf7 | RepositoryRuleDetailedOneOf8 | RepositoryRuleDetailedOneOf9;

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf
 */
export interface RepositoryRuleDetailedOneOf {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf
     */
    'type': RepositoryRuleDetailedOneOfTypeEnum;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOfRulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOfTypeEnum = {
    Creation: 'creation'
} as const;

export type RepositoryRuleDetailedOneOfTypeEnum = typeof RepositoryRuleDetailedOneOfTypeEnum[keyof typeof RepositoryRuleDetailedOneOfTypeEnum];
export const RepositoryRuleDetailedOneOfRulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOfRulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOfRulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOfRulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf1
 */
export interface RepositoryRuleDetailedOneOf1 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf1
     */
    'type': RepositoryRuleDetailedOneOf1TypeEnum;
    /**
     * 
     * @type {RepositoryRuleUpdateParameters}
     * @memberof RepositoryRuleDetailedOneOf1
     */
    'parameters'?: RepositoryRuleUpdateParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf1
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf1RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf1
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf1
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf1TypeEnum = {
    Update: 'update'
} as const;

export type RepositoryRuleDetailedOneOf1TypeEnum = typeof RepositoryRuleDetailedOneOf1TypeEnum[keyof typeof RepositoryRuleDetailedOneOf1TypeEnum];
export const RepositoryRuleDetailedOneOf1RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf1RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf1RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf1RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf10
 */
export interface RepositoryRuleDetailedOneOf10 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf10
     */
    'type': RepositoryRuleDetailedOneOf10TypeEnum;
    /**
     * 
     * @type {RepositoryRuleCommitMessagePatternParameters}
     * @memberof RepositoryRuleDetailedOneOf10
     */
    'parameters'?: RepositoryRuleCommitMessagePatternParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf10
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf10RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf10
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf10
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf10TypeEnum = {
    CommitMessagePattern: 'commit_message_pattern'
} as const;

export type RepositoryRuleDetailedOneOf10TypeEnum = typeof RepositoryRuleDetailedOneOf10TypeEnum[keyof typeof RepositoryRuleDetailedOneOf10TypeEnum];
export const RepositoryRuleDetailedOneOf10RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf10RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf10RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf10RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf11
 */
export interface RepositoryRuleDetailedOneOf11 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf11
     */
    'type': RepositoryRuleDetailedOneOf11TypeEnum;
    /**
     * 
     * @type {RepositoryRuleCommitMessagePatternParameters}
     * @memberof RepositoryRuleDetailedOneOf11
     */
    'parameters'?: RepositoryRuleCommitMessagePatternParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf11
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf11RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf11
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf11
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf11TypeEnum = {
    CommitAuthorEmailPattern: 'commit_author_email_pattern'
} as const;

export type RepositoryRuleDetailedOneOf11TypeEnum = typeof RepositoryRuleDetailedOneOf11TypeEnum[keyof typeof RepositoryRuleDetailedOneOf11TypeEnum];
export const RepositoryRuleDetailedOneOf11RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf11RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf11RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf11RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf12
 */
export interface RepositoryRuleDetailedOneOf12 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf12
     */
    'type': RepositoryRuleDetailedOneOf12TypeEnum;
    /**
     * 
     * @type {RepositoryRuleCommitMessagePatternParameters}
     * @memberof RepositoryRuleDetailedOneOf12
     */
    'parameters'?: RepositoryRuleCommitMessagePatternParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf12
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf12RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf12
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf12
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf12TypeEnum = {
    CommitterEmailPattern: 'committer_email_pattern'
} as const;

export type RepositoryRuleDetailedOneOf12TypeEnum = typeof RepositoryRuleDetailedOneOf12TypeEnum[keyof typeof RepositoryRuleDetailedOneOf12TypeEnum];
export const RepositoryRuleDetailedOneOf12RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf12RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf12RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf12RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf13
 */
export interface RepositoryRuleDetailedOneOf13 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf13
     */
    'type': RepositoryRuleDetailedOneOf13TypeEnum;
    /**
     * 
     * @type {RepositoryRuleCommitMessagePatternParameters}
     * @memberof RepositoryRuleDetailedOneOf13
     */
    'parameters'?: RepositoryRuleCommitMessagePatternParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf13
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf13RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf13
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf13
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf13TypeEnum = {
    BranchNamePattern: 'branch_name_pattern'
} as const;

export type RepositoryRuleDetailedOneOf13TypeEnum = typeof RepositoryRuleDetailedOneOf13TypeEnum[keyof typeof RepositoryRuleDetailedOneOf13TypeEnum];
export const RepositoryRuleDetailedOneOf13RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf13RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf13RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf13RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf14
 */
export interface RepositoryRuleDetailedOneOf14 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf14
     */
    'type': RepositoryRuleDetailedOneOf14TypeEnum;
    /**
     * 
     * @type {RepositoryRuleCommitMessagePatternParameters}
     * @memberof RepositoryRuleDetailedOneOf14
     */
    'parameters'?: RepositoryRuleCommitMessagePatternParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf14
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf14RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf14
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf14
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf14TypeEnum = {
    TagNamePattern: 'tag_name_pattern'
} as const;

export type RepositoryRuleDetailedOneOf14TypeEnum = typeof RepositoryRuleDetailedOneOf14TypeEnum[keyof typeof RepositoryRuleDetailedOneOf14TypeEnum];
export const RepositoryRuleDetailedOneOf14RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf14RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf14RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf14RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf15
 */
export interface RepositoryRuleDetailedOneOf15 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf15
     */
    'type': RepositoryRuleDetailedOneOf15TypeEnum;
    /**
     * 
     * @type {RepositoryRuleFilePathRestrictionParameters}
     * @memberof RepositoryRuleDetailedOneOf15
     */
    'parameters'?: RepositoryRuleFilePathRestrictionParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf15
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf15RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf15
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf15
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf15TypeEnum = {
    FilePathRestriction: 'file_path_restriction'
} as const;

export type RepositoryRuleDetailedOneOf15TypeEnum = typeof RepositoryRuleDetailedOneOf15TypeEnum[keyof typeof RepositoryRuleDetailedOneOf15TypeEnum];
export const RepositoryRuleDetailedOneOf15RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf15RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf15RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf15RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf16
 */
export interface RepositoryRuleDetailedOneOf16 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf16
     */
    'type': RepositoryRuleDetailedOneOf16TypeEnum;
    /**
     * 
     * @type {RepositoryRuleMaxFilePathLengthParameters}
     * @memberof RepositoryRuleDetailedOneOf16
     */
    'parameters'?: RepositoryRuleMaxFilePathLengthParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf16
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf16RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf16
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf16
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf16TypeEnum = {
    MaxFilePathLength: 'max_file_path_length'
} as const;

export type RepositoryRuleDetailedOneOf16TypeEnum = typeof RepositoryRuleDetailedOneOf16TypeEnum[keyof typeof RepositoryRuleDetailedOneOf16TypeEnum];
export const RepositoryRuleDetailedOneOf16RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf16RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf16RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf16RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf17
 */
export interface RepositoryRuleDetailedOneOf17 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf17
     */
    'type': RepositoryRuleDetailedOneOf17TypeEnum;
    /**
     * 
     * @type {RepositoryRuleFileExtensionRestrictionParameters}
     * @memberof RepositoryRuleDetailedOneOf17
     */
    'parameters'?: RepositoryRuleFileExtensionRestrictionParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf17
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf17RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf17
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf17
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf17TypeEnum = {
    FileExtensionRestriction: 'file_extension_restriction'
} as const;

export type RepositoryRuleDetailedOneOf17TypeEnum = typeof RepositoryRuleDetailedOneOf17TypeEnum[keyof typeof RepositoryRuleDetailedOneOf17TypeEnum];
export const RepositoryRuleDetailedOneOf17RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf17RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf17RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf17RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf18
 */
export interface RepositoryRuleDetailedOneOf18 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf18
     */
    'type': RepositoryRuleDetailedOneOf18TypeEnum;
    /**
     * 
     * @type {RepositoryRuleMaxFileSizeParameters}
     * @memberof RepositoryRuleDetailedOneOf18
     */
    'parameters'?: RepositoryRuleMaxFileSizeParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf18
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf18RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf18
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf18
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf18TypeEnum = {
    MaxFileSize: 'max_file_size'
} as const;

export type RepositoryRuleDetailedOneOf18TypeEnum = typeof RepositoryRuleDetailedOneOf18TypeEnum[keyof typeof RepositoryRuleDetailedOneOf18TypeEnum];
export const RepositoryRuleDetailedOneOf18RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf18RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf18RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf18RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf19
 */
export interface RepositoryRuleDetailedOneOf19 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf19
     */
    'type': RepositoryRuleDetailedOneOf19TypeEnum;
    /**
     * 
     * @type {RepositoryRuleWorkflowsParameters}
     * @memberof RepositoryRuleDetailedOneOf19
     */
    'parameters'?: RepositoryRuleWorkflowsParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf19
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf19RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf19
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf19
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf19TypeEnum = {
    Workflows: 'workflows'
} as const;

export type RepositoryRuleDetailedOneOf19TypeEnum = typeof RepositoryRuleDetailedOneOf19TypeEnum[keyof typeof RepositoryRuleDetailedOneOf19TypeEnum];
export const RepositoryRuleDetailedOneOf19RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf19RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf19RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf19RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf2
 */
export interface RepositoryRuleDetailedOneOf2 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf2
     */
    'type': RepositoryRuleDetailedOneOf2TypeEnum;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf2
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf2RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf2
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf2
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf2TypeEnum = {
    Deletion: 'deletion'
} as const;

export type RepositoryRuleDetailedOneOf2TypeEnum = typeof RepositoryRuleDetailedOneOf2TypeEnum[keyof typeof RepositoryRuleDetailedOneOf2TypeEnum];
export const RepositoryRuleDetailedOneOf2RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf2RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf2RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf2RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf20
 */
export interface RepositoryRuleDetailedOneOf20 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf20
     */
    'type': RepositoryRuleDetailedOneOf20TypeEnum;
    /**
     * 
     * @type {RepositoryRuleCodeScanningParameters}
     * @memberof RepositoryRuleDetailedOneOf20
     */
    'parameters'?: RepositoryRuleCodeScanningParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf20
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf20RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf20
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf20
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf20TypeEnum = {
    CodeScanning: 'code_scanning'
} as const;

export type RepositoryRuleDetailedOneOf20TypeEnum = typeof RepositoryRuleDetailedOneOf20TypeEnum[keyof typeof RepositoryRuleDetailedOneOf20TypeEnum];
export const RepositoryRuleDetailedOneOf20RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf20RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf20RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf20RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf3
 */
export interface RepositoryRuleDetailedOneOf3 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf3
     */
    'type': RepositoryRuleDetailedOneOf3TypeEnum;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf3
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf3RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf3
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf3
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf3TypeEnum = {
    RequiredLinearHistory: 'required_linear_history'
} as const;

export type RepositoryRuleDetailedOneOf3TypeEnum = typeof RepositoryRuleDetailedOneOf3TypeEnum[keyof typeof RepositoryRuleDetailedOneOf3TypeEnum];
export const RepositoryRuleDetailedOneOf3RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf3RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf3RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf3RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf4
 */
export interface RepositoryRuleDetailedOneOf4 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf4
     */
    'type': RepositoryRuleDetailedOneOf4TypeEnum;
    /**
     * 
     * @type {RepositoryRuleMergeQueueParameters}
     * @memberof RepositoryRuleDetailedOneOf4
     */
    'parameters'?: RepositoryRuleMergeQueueParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf4
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf4RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf4
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf4
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf4TypeEnum = {
    MergeQueue: 'merge_queue'
} as const;

export type RepositoryRuleDetailedOneOf4TypeEnum = typeof RepositoryRuleDetailedOneOf4TypeEnum[keyof typeof RepositoryRuleDetailedOneOf4TypeEnum];
export const RepositoryRuleDetailedOneOf4RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf4RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf4RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf4RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf5
 */
export interface RepositoryRuleDetailedOneOf5 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf5
     */
    'type': RepositoryRuleDetailedOneOf5TypeEnum;
    /**
     * 
     * @type {RepositoryRuleRequiredDeploymentsParameters}
     * @memberof RepositoryRuleDetailedOneOf5
     */
    'parameters'?: RepositoryRuleRequiredDeploymentsParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf5
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf5RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf5
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf5
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf5TypeEnum = {
    RequiredDeployments: 'required_deployments'
} as const;

export type RepositoryRuleDetailedOneOf5TypeEnum = typeof RepositoryRuleDetailedOneOf5TypeEnum[keyof typeof RepositoryRuleDetailedOneOf5TypeEnum];
export const RepositoryRuleDetailedOneOf5RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf5RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf5RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf5RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf6
 */
export interface RepositoryRuleDetailedOneOf6 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf6
     */
    'type': RepositoryRuleDetailedOneOf6TypeEnum;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf6
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf6RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf6
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf6
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf6TypeEnum = {
    RequiredSignatures: 'required_signatures'
} as const;

export type RepositoryRuleDetailedOneOf6TypeEnum = typeof RepositoryRuleDetailedOneOf6TypeEnum[keyof typeof RepositoryRuleDetailedOneOf6TypeEnum];
export const RepositoryRuleDetailedOneOf6RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf6RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf6RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf6RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf7
 */
export interface RepositoryRuleDetailedOneOf7 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf7
     */
    'type': RepositoryRuleDetailedOneOf7TypeEnum;
    /**
     * 
     * @type {RepositoryRulePullRequestParameters}
     * @memberof RepositoryRuleDetailedOneOf7
     */
    'parameters'?: RepositoryRulePullRequestParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf7
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf7RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf7
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf7
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf7TypeEnum = {
    PullRequest: 'pull_request'
} as const;

export type RepositoryRuleDetailedOneOf7TypeEnum = typeof RepositoryRuleDetailedOneOf7TypeEnum[keyof typeof RepositoryRuleDetailedOneOf7TypeEnum];
export const RepositoryRuleDetailedOneOf7RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf7RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf7RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf7RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf8
 */
export interface RepositoryRuleDetailedOneOf8 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf8
     */
    'type': RepositoryRuleDetailedOneOf8TypeEnum;
    /**
     * 
     * @type {RepositoryRuleRequiredStatusChecksParameters}
     * @memberof RepositoryRuleDetailedOneOf8
     */
    'parameters'?: RepositoryRuleRequiredStatusChecksParameters;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf8
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf8RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf8
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf8
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf8TypeEnum = {
    RequiredStatusChecks: 'required_status_checks'
} as const;

export type RepositoryRuleDetailedOneOf8TypeEnum = typeof RepositoryRuleDetailedOneOf8TypeEnum[keyof typeof RepositoryRuleDetailedOneOf8TypeEnum];
export const RepositoryRuleDetailedOneOf8RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf8RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf8RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf8RulesetSourceTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleDetailedOneOf9
 */
export interface RepositoryRuleDetailedOneOf9 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf9
     */
    'type': RepositoryRuleDetailedOneOf9TypeEnum;
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf9
     */
    'ruleset_source_type'?: RepositoryRuleDetailedOneOf9RulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleDetailedOneOf9
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleDetailedOneOf9
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleDetailedOneOf9TypeEnum = {
    NonFastForward: 'non_fast_forward'
} as const;

export type RepositoryRuleDetailedOneOf9TypeEnum = typeof RepositoryRuleDetailedOneOf9TypeEnum[keyof typeof RepositoryRuleDetailedOneOf9TypeEnum];
export const RepositoryRuleDetailedOneOf9RulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleDetailedOneOf9RulesetSourceTypeEnum = typeof RepositoryRuleDetailedOneOf9RulesetSourceTypeEnum[keyof typeof RepositoryRuleDetailedOneOf9RulesetSourceTypeEnum];

/**
 * The enforcement level of the ruleset. `evaluate` allows admins to test rules before enforcing them. Admins can view insights on the Rule Insights page (`evaluate` is only available with GitHub Enterprise).
 * @export
 * @enum {string}
 */

export const RepositoryRuleEnforcement = {
    Disabled: 'disabled',
    Active: 'active',
    Evaluate: 'evaluate'
} as const;

export type RepositoryRuleEnforcement = typeof RepositoryRuleEnforcement[keyof typeof RepositoryRuleEnforcement];


/**
 * Prevent commits that include files with specified file extensions from being pushed to the commit graph.
 * @export
 * @interface RepositoryRuleFileExtensionRestriction
 */
export interface RepositoryRuleFileExtensionRestriction {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleFileExtensionRestriction
     */
    'type': RepositoryRuleFileExtensionRestrictionTypeEnum;
    /**
     * 
     * @type {RepositoryRuleFileExtensionRestrictionParameters}
     * @memberof RepositoryRuleFileExtensionRestriction
     */
    'parameters'?: RepositoryRuleFileExtensionRestrictionParameters;
}

export const RepositoryRuleFileExtensionRestrictionTypeEnum = {
    FileExtensionRestriction: 'file_extension_restriction'
} as const;

export type RepositoryRuleFileExtensionRestrictionTypeEnum = typeof RepositoryRuleFileExtensionRestrictionTypeEnum[keyof typeof RepositoryRuleFileExtensionRestrictionTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleFileExtensionRestrictionParameters
 */
export interface RepositoryRuleFileExtensionRestrictionParameters {
    /**
     * The file extensions that are restricted from being pushed to the commit graph.
     * @type {Array<string>}
     * @memberof RepositoryRuleFileExtensionRestrictionParameters
     */
    'restricted_file_extensions': Array<string>;
}
/**
 * Prevent commits that include changes in specified file and folder paths from being pushed to the commit graph. This includes absolute paths that contain file names.
 * @export
 * @interface RepositoryRuleFilePathRestriction
 */
export interface RepositoryRuleFilePathRestriction {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleFilePathRestriction
     */
    'type': RepositoryRuleFilePathRestrictionTypeEnum;
    /**
     * 
     * @type {RepositoryRuleFilePathRestrictionParameters}
     * @memberof RepositoryRuleFilePathRestriction
     */
    'parameters'?: RepositoryRuleFilePathRestrictionParameters;
}

export const RepositoryRuleFilePathRestrictionTypeEnum = {
    FilePathRestriction: 'file_path_restriction'
} as const;

export type RepositoryRuleFilePathRestrictionTypeEnum = typeof RepositoryRuleFilePathRestrictionTypeEnum[keyof typeof RepositoryRuleFilePathRestrictionTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleFilePathRestrictionParameters
 */
export interface RepositoryRuleFilePathRestrictionParameters {
    /**
     * The file paths that are restricted from being pushed to the commit graph.
     * @type {Array<string>}
     * @memberof RepositoryRuleFilePathRestrictionParameters
     */
    'restricted_file_paths': Array<string>;
}
/**
 * Prevent commits that include file paths that exceed the specified character limit from being pushed to the commit graph.
 * @export
 * @interface RepositoryRuleMaxFilePathLength
 */
export interface RepositoryRuleMaxFilePathLength {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleMaxFilePathLength
     */
    'type': RepositoryRuleMaxFilePathLengthTypeEnum;
    /**
     * 
     * @type {RepositoryRuleMaxFilePathLengthParameters}
     * @memberof RepositoryRuleMaxFilePathLength
     */
    'parameters'?: RepositoryRuleMaxFilePathLengthParameters;
}

export const RepositoryRuleMaxFilePathLengthTypeEnum = {
    MaxFilePathLength: 'max_file_path_length'
} as const;

export type RepositoryRuleMaxFilePathLengthTypeEnum = typeof RepositoryRuleMaxFilePathLengthTypeEnum[keyof typeof RepositoryRuleMaxFilePathLengthTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleMaxFilePathLengthParameters
 */
export interface RepositoryRuleMaxFilePathLengthParameters {
    /**
     * The maximum amount of characters allowed in file paths.
     * @type {number}
     * @memberof RepositoryRuleMaxFilePathLengthParameters
     */
    'max_file_path_length': number;
}
/**
 * Prevent commits with individual files that exceed the specified limit from being pushed to the commit graph.
 * @export
 * @interface RepositoryRuleMaxFileSize
 */
export interface RepositoryRuleMaxFileSize {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleMaxFileSize
     */
    'type': RepositoryRuleMaxFileSizeTypeEnum;
    /**
     * 
     * @type {RepositoryRuleMaxFileSizeParameters}
     * @memberof RepositoryRuleMaxFileSize
     */
    'parameters'?: RepositoryRuleMaxFileSizeParameters;
}

export const RepositoryRuleMaxFileSizeTypeEnum = {
    MaxFileSize: 'max_file_size'
} as const;

export type RepositoryRuleMaxFileSizeTypeEnum = typeof RepositoryRuleMaxFileSizeTypeEnum[keyof typeof RepositoryRuleMaxFileSizeTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleMaxFileSizeParameters
 */
export interface RepositoryRuleMaxFileSizeParameters {
    /**
     * The maximum file size allowed in megabytes. This limit does not apply to Git Large File Storage (Git LFS).
     * @type {number}
     * @memberof RepositoryRuleMaxFileSizeParameters
     */
    'max_file_size': number;
}
/**
 * Merges must be performed via a merge queue.
 * @export
 * @interface RepositoryRuleMergeQueue
 */
export interface RepositoryRuleMergeQueue {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleMergeQueue
     */
    'type': RepositoryRuleMergeQueueTypeEnum;
    /**
     * 
     * @type {RepositoryRuleMergeQueueParameters}
     * @memberof RepositoryRuleMergeQueue
     */
    'parameters'?: RepositoryRuleMergeQueueParameters;
}

export const RepositoryRuleMergeQueueTypeEnum = {
    MergeQueue: 'merge_queue'
} as const;

export type RepositoryRuleMergeQueueTypeEnum = typeof RepositoryRuleMergeQueueTypeEnum[keyof typeof RepositoryRuleMergeQueueTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleMergeQueueParameters
 */
export interface RepositoryRuleMergeQueueParameters {
    /**
     * Maximum time for a required status check to report a conclusion. After this much time has elapsed, checks that have not reported a conclusion will be assumed to have failed
     * @type {number}
     * @memberof RepositoryRuleMergeQueueParameters
     */
    'check_response_timeout_minutes': number;
    /**
     * When set to ALLGREEN, the merge commit created by merge queue for each PR in the group must pass all required checks to merge. When set to HEADGREEN, only the commit at the head of the merge group, i.e. the commit containing changes from all of the PRs in the group, must pass its required checks to merge.
     * @type {string}
     * @memberof RepositoryRuleMergeQueueParameters
     */
    'grouping_strategy': RepositoryRuleMergeQueueParametersGroupingStrategyEnum;
    /**
     * Limit the number of queued pull requests requesting checks and workflow runs at the same time.
     * @type {number}
     * @memberof RepositoryRuleMergeQueueParameters
     */
    'max_entries_to_build': number;
    /**
     * The maximum number of PRs that will be merged together in a group.
     * @type {number}
     * @memberof RepositoryRuleMergeQueueParameters
     */
    'max_entries_to_merge': number;
    /**
     * Method to use when merging changes from queued pull requests.
     * @type {string}
     * @memberof RepositoryRuleMergeQueueParameters
     */
    'merge_method': RepositoryRuleMergeQueueParametersMergeMethodEnum;
    /**
     * The minimum number of PRs that will be merged together in a group.
     * @type {number}
     * @memberof RepositoryRuleMergeQueueParameters
     */
    'min_entries_to_merge': number;
    /**
     * The time merge queue should wait after the first PR is added to the queue for the minimum group size to be met. After this time has elapsed, the minimum group size will be ignored and a smaller group will be merged.
     * @type {number}
     * @memberof RepositoryRuleMergeQueueParameters
     */
    'min_entries_to_merge_wait_minutes': number;
}

export const RepositoryRuleMergeQueueParametersGroupingStrategyEnum = {
    Allgreen: 'ALLGREEN',
    Headgreen: 'HEADGREEN'
} as const;

export type RepositoryRuleMergeQueueParametersGroupingStrategyEnum = typeof RepositoryRuleMergeQueueParametersGroupingStrategyEnum[keyof typeof RepositoryRuleMergeQueueParametersGroupingStrategyEnum];
export const RepositoryRuleMergeQueueParametersMergeMethodEnum = {
    Merge: 'MERGE',
    Squash: 'SQUASH',
    Rebase: 'REBASE'
} as const;

export type RepositoryRuleMergeQueueParametersMergeMethodEnum = typeof RepositoryRuleMergeQueueParametersMergeMethodEnum[keyof typeof RepositoryRuleMergeQueueParametersMergeMethodEnum];

/**
 * Prevent users with push access from force pushing to refs.
 * @export
 * @interface RepositoryRuleNonFastForward
 */
export interface RepositoryRuleNonFastForward {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleNonFastForward
     */
    'type': RepositoryRuleNonFastForwardTypeEnum;
}

export const RepositoryRuleNonFastForwardTypeEnum = {
    NonFastForward: 'non_fast_forward'
} as const;

export type RepositoryRuleNonFastForwardTypeEnum = typeof RepositoryRuleNonFastForwardTypeEnum[keyof typeof RepositoryRuleNonFastForwardTypeEnum];

/**
 * A tool that must provide code scanning results for this rule to pass.
 * @export
 * @interface RepositoryRuleParamsCodeScanningTool
 */
export interface RepositoryRuleParamsCodeScanningTool {
    /**
     * The severity level at which code scanning results that raise alerts block a reference update. For more information on alert severity levels, see \"[About code scanning alerts](https://docs.github.com/code-security/code-scanning/managing-code-scanning-alerts/about-code-scanning-alerts#about-alert-severity-and-security-severity-levels).\"
     * @type {string}
     * @memberof RepositoryRuleParamsCodeScanningTool
     */
    'alerts_threshold': RepositoryRuleParamsCodeScanningToolAlertsThresholdEnum;
    /**
     * The severity level at which code scanning results that raise security alerts block a reference update. For more information on security severity levels, see \"[About code scanning alerts](https://docs.github.com/code-security/code-scanning/managing-code-scanning-alerts/about-code-scanning-alerts#about-alert-severity-and-security-severity-levels).\"
     * @type {string}
     * @memberof RepositoryRuleParamsCodeScanningTool
     */
    'security_alerts_threshold': RepositoryRuleParamsCodeScanningToolSecurityAlertsThresholdEnum;
    /**
     * The name of a code scanning tool
     * @type {string}
     * @memberof RepositoryRuleParamsCodeScanningTool
     */
    'tool': string;
}

export const RepositoryRuleParamsCodeScanningToolAlertsThresholdEnum = {
    None: 'none',
    Errors: 'errors',
    ErrorsAndWarnings: 'errors_and_warnings',
    All: 'all'
} as const;

export type RepositoryRuleParamsCodeScanningToolAlertsThresholdEnum = typeof RepositoryRuleParamsCodeScanningToolAlertsThresholdEnum[keyof typeof RepositoryRuleParamsCodeScanningToolAlertsThresholdEnum];
export const RepositoryRuleParamsCodeScanningToolSecurityAlertsThresholdEnum = {
    None: 'none',
    Critical: 'critical',
    HighOrHigher: 'high_or_higher',
    MediumOrHigher: 'medium_or_higher',
    All: 'all'
} as const;

export type RepositoryRuleParamsCodeScanningToolSecurityAlertsThresholdEnum = typeof RepositoryRuleParamsCodeScanningToolSecurityAlertsThresholdEnum[keyof typeof RepositoryRuleParamsCodeScanningToolSecurityAlertsThresholdEnum];

/**
 * A reviewing team, and file patterns describing which files they must approve changes to.
 * @export
 * @interface RepositoryRuleParamsRequiredReviewerConfiguration
 */
export interface RepositoryRuleParamsRequiredReviewerConfiguration {
    /**
     * Array of file patterns. Pull requests which change matching files must be approved by the specified team. File patterns use the same syntax as `.gitignore` files.
     * @type {Array<string>}
     * @memberof RepositoryRuleParamsRequiredReviewerConfiguration
     */
    'file_patterns': Array<string>;
    /**
     * Minimum number of approvals required from the specified team. If set to zero, the team will be added to the pull request but approval is optional.
     * @type {number}
     * @memberof RepositoryRuleParamsRequiredReviewerConfiguration
     */
    'minimum_approvals': number;
    /**
     * 
     * @type {RepositoryRuleParamsReviewer}
     * @memberof RepositoryRuleParamsRequiredReviewerConfiguration
     */
    'reviewer': RepositoryRuleParamsReviewer;
}
/**
 * Restricted commit
 * @export
 * @interface RepositoryRuleParamsRestrictedCommits
 */
export interface RepositoryRuleParamsRestrictedCommits {
    /**
     * Full or abbreviated commit hash to reject
     * @type {string}
     * @memberof RepositoryRuleParamsRestrictedCommits
     */
    'oid': string;
    /**
     * Reason for restriction
     * @type {string}
     * @memberof RepositoryRuleParamsRestrictedCommits
     */
    'reason'?: string;
}
/**
 * A required reviewing team
 * @export
 * @interface RepositoryRuleParamsReviewer
 */
export interface RepositoryRuleParamsReviewer {
    /**
     * ID of the reviewer which must review changes to matching files.
     * @type {number}
     * @memberof RepositoryRuleParamsReviewer
     */
    'id': number;
    /**
     * The type of the reviewer
     * @type {string}
     * @memberof RepositoryRuleParamsReviewer
     */
    'type': RepositoryRuleParamsReviewerTypeEnum;
}

export const RepositoryRuleParamsReviewerTypeEnum = {
    Team: 'Team'
} as const;

export type RepositoryRuleParamsReviewerTypeEnum = typeof RepositoryRuleParamsReviewerTypeEnum[keyof typeof RepositoryRuleParamsReviewerTypeEnum];

/**
 * Required status check
 * @export
 * @interface RepositoryRuleParamsStatusCheckConfiguration
 */
export interface RepositoryRuleParamsStatusCheckConfiguration {
    /**
     * The status check context name that must be present on the commit.
     * @type {string}
     * @memberof RepositoryRuleParamsStatusCheckConfiguration
     */
    'context': string;
    /**
     * The optional integration ID that this status check must originate from.
     * @type {number}
     * @memberof RepositoryRuleParamsStatusCheckConfiguration
     */
    'integration_id'?: number;
}
/**
 * A workflow that must run for this rule to pass
 * @export
 * @interface RepositoryRuleParamsWorkflowFileReference
 */
export interface RepositoryRuleParamsWorkflowFileReference {
    /**
     * The path to the workflow file
     * @type {string}
     * @memberof RepositoryRuleParamsWorkflowFileReference
     */
    'path': string;
    /**
     * The ref (branch or tag) of the workflow file to use
     * @type {string}
     * @memberof RepositoryRuleParamsWorkflowFileReference
     */
    'ref'?: string;
    /**
     * The ID of the repository where the workflow is defined
     * @type {number}
     * @memberof RepositoryRuleParamsWorkflowFileReference
     */
    'repository_id': number;
    /**
     * The commit SHA of the workflow file to use
     * @type {string}
     * @memberof RepositoryRuleParamsWorkflowFileReference
     */
    'sha'?: string;
}
/**
 * Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
 * @export
 * @interface RepositoryRulePullRequest
 */
export interface RepositoryRulePullRequest {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRulePullRequest
     */
    'type': RepositoryRulePullRequestTypeEnum;
    /**
     * 
     * @type {RepositoryRulePullRequestParameters}
     * @memberof RepositoryRulePullRequest
     */
    'parameters'?: RepositoryRulePullRequestParameters;
}

export const RepositoryRulePullRequestTypeEnum = {
    PullRequest: 'pull_request'
} as const;

export type RepositoryRulePullRequestTypeEnum = typeof RepositoryRulePullRequestTypeEnum[keyof typeof RepositoryRulePullRequestTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRulePullRequestParameters
 */
export interface RepositoryRulePullRequestParameters {
    /**
     * Array of allowed merge methods. Allowed values include `merge`, `squash`, and `rebase`. At least one option must be enabled.
     * @type {Array<string>}
     * @memberof RepositoryRulePullRequestParameters
     */
    'allowed_merge_methods'?: Array<RepositoryRulePullRequestParametersAllowedMergeMethodsEnum>;
    /**
     * Automatically request review from Copilot for new pull requests, if the author has access to Copilot code review.
     * @type {boolean}
     * @memberof RepositoryRulePullRequestParameters
     */
    'automatic_copilot_code_review_enabled'?: boolean;
    /**
     * New, reviewable commits pushed will dismiss previous pull request review approvals.
     * @type {boolean}
     * @memberof RepositoryRulePullRequestParameters
     */
    'dismiss_stale_reviews_on_push': boolean;
    /**
     * Require an approving review in pull requests that modify files that have a designated code owner.
     * @type {boolean}
     * @memberof RepositoryRulePullRequestParameters
     */
    'require_code_owner_review': boolean;
    /**
     * Whether the most recent reviewable push must be approved by someone other than the person who pushed it.
     * @type {boolean}
     * @memberof RepositoryRulePullRequestParameters
     */
    'require_last_push_approval': boolean;
    /**
     * The number of approving reviews that are required before a pull request can be merged.
     * @type {number}
     * @memberof RepositoryRulePullRequestParameters
     */
    'required_approving_review_count': number;
    /**
     * All conversations on code must be resolved before a pull request can be merged.
     * @type {boolean}
     * @memberof RepositoryRulePullRequestParameters
     */
    'required_review_thread_resolution': boolean;
}

export const RepositoryRulePullRequestParametersAllowedMergeMethodsEnum = {
    Merge: 'merge',
    Squash: 'squash',
    Rebase: 'rebase'
} as const;

export type RepositoryRulePullRequestParametersAllowedMergeMethodsEnum = typeof RepositoryRulePullRequestParametersAllowedMergeMethodsEnum[keyof typeof RepositoryRulePullRequestParametersAllowedMergeMethodsEnum];

/**
 * Choose which environments must be successfully deployed to before refs can be pushed into a ref that matches this rule.
 * @export
 * @interface RepositoryRuleRequiredDeployments
 */
export interface RepositoryRuleRequiredDeployments {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleRequiredDeployments
     */
    'type': RepositoryRuleRequiredDeploymentsTypeEnum;
    /**
     * 
     * @type {RepositoryRuleRequiredDeploymentsParameters}
     * @memberof RepositoryRuleRequiredDeployments
     */
    'parameters'?: RepositoryRuleRequiredDeploymentsParameters;
}

export const RepositoryRuleRequiredDeploymentsTypeEnum = {
    RequiredDeployments: 'required_deployments'
} as const;

export type RepositoryRuleRequiredDeploymentsTypeEnum = typeof RepositoryRuleRequiredDeploymentsTypeEnum[keyof typeof RepositoryRuleRequiredDeploymentsTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleRequiredDeploymentsParameters
 */
export interface RepositoryRuleRequiredDeploymentsParameters {
    /**
     * The environments that must be successfully deployed to before branches can be merged.
     * @type {Array<string>}
     * @memberof RepositoryRuleRequiredDeploymentsParameters
     */
    'required_deployment_environments': Array<string>;
}
/**
 * Prevent merge commits from being pushed to matching refs.
 * @export
 * @interface RepositoryRuleRequiredLinearHistory
 */
export interface RepositoryRuleRequiredLinearHistory {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleRequiredLinearHistory
     */
    'type': RepositoryRuleRequiredLinearHistoryTypeEnum;
}

export const RepositoryRuleRequiredLinearHistoryTypeEnum = {
    RequiredLinearHistory: 'required_linear_history'
} as const;

export type RepositoryRuleRequiredLinearHistoryTypeEnum = typeof RepositoryRuleRequiredLinearHistoryTypeEnum[keyof typeof RepositoryRuleRequiredLinearHistoryTypeEnum];

/**
 * Commits pushed to matching refs must have verified signatures.
 * @export
 * @interface RepositoryRuleRequiredSignatures
 */
export interface RepositoryRuleRequiredSignatures {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleRequiredSignatures
     */
    'type': RepositoryRuleRequiredSignaturesTypeEnum;
}

export const RepositoryRuleRequiredSignaturesTypeEnum = {
    RequiredSignatures: 'required_signatures'
} as const;

export type RepositoryRuleRequiredSignaturesTypeEnum = typeof RepositoryRuleRequiredSignaturesTypeEnum[keyof typeof RepositoryRuleRequiredSignaturesTypeEnum];

/**
 * Choose which status checks must pass before the ref is updated. When enabled, commits must first be pushed to another ref where the checks pass.
 * @export
 * @interface RepositoryRuleRequiredStatusChecks
 */
export interface RepositoryRuleRequiredStatusChecks {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleRequiredStatusChecks
     */
    'type': RepositoryRuleRequiredStatusChecksTypeEnum;
    /**
     * 
     * @type {RepositoryRuleRequiredStatusChecksParameters}
     * @memberof RepositoryRuleRequiredStatusChecks
     */
    'parameters'?: RepositoryRuleRequiredStatusChecksParameters;
}

export const RepositoryRuleRequiredStatusChecksTypeEnum = {
    RequiredStatusChecks: 'required_status_checks'
} as const;

export type RepositoryRuleRequiredStatusChecksTypeEnum = typeof RepositoryRuleRequiredStatusChecksTypeEnum[keyof typeof RepositoryRuleRequiredStatusChecksTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleRequiredStatusChecksParameters
 */
export interface RepositoryRuleRequiredStatusChecksParameters {
    /**
     * Allow repositories and branches to be created if a check would otherwise prohibit it.
     * @type {boolean}
     * @memberof RepositoryRuleRequiredStatusChecksParameters
     */
    'do_not_enforce_on_create'?: boolean;
    /**
     * Status checks that are required.
     * @type {Array<RepositoryRuleParamsStatusCheckConfiguration>}
     * @memberof RepositoryRuleRequiredStatusChecksParameters
     */
    'required_status_checks': Array<RepositoryRuleParamsStatusCheckConfiguration>;
    /**
     * Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled.
     * @type {boolean}
     * @memberof RepositoryRuleRequiredStatusChecksParameters
     */
    'strict_required_status_checks_policy': boolean;
}
/**
 * User-defined metadata to store domain-specific information limited to 8 keys with scalar values.
 * @export
 * @interface RepositoryRuleRulesetInfo
 */
export interface RepositoryRuleRulesetInfo {
    /**
     * The type of source for the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleRulesetInfo
     */
    'ruleset_source_type'?: RepositoryRuleRulesetInfoRulesetSourceTypeEnum;
    /**
     * The name of the source of the ruleset that includes this rule.
     * @type {string}
     * @memberof RepositoryRuleRulesetInfo
     */
    'ruleset_source'?: string;
    /**
     * The ID of the ruleset that includes this rule.
     * @type {number}
     * @memberof RepositoryRuleRulesetInfo
     */
    'ruleset_id'?: number;
}

export const RepositoryRuleRulesetInfoRulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization'
} as const;

export type RepositoryRuleRulesetInfoRulesetSourceTypeEnum = typeof RepositoryRuleRulesetInfoRulesetSourceTypeEnum[keyof typeof RepositoryRuleRulesetInfoRulesetSourceTypeEnum];

/**
 * Parameters to be used for the tag_name_pattern rule
 * @export
 * @interface RepositoryRuleTagNamePattern
 */
export interface RepositoryRuleTagNamePattern {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleTagNamePattern
     */
    'type': RepositoryRuleTagNamePatternTypeEnum;
    /**
     * 
     * @type {RepositoryRuleCommitMessagePatternParameters}
     * @memberof RepositoryRuleTagNamePattern
     */
    'parameters'?: RepositoryRuleCommitMessagePatternParameters;
}

export const RepositoryRuleTagNamePatternTypeEnum = {
    TagNamePattern: 'tag_name_pattern'
} as const;

export type RepositoryRuleTagNamePatternTypeEnum = typeof RepositoryRuleTagNamePatternTypeEnum[keyof typeof RepositoryRuleTagNamePatternTypeEnum];

/**
 * Only allow users with bypass permission to update matching refs.
 * @export
 * @interface RepositoryRuleUpdate
 */
export interface RepositoryRuleUpdate {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleUpdate
     */
    'type': RepositoryRuleUpdateTypeEnum;
    /**
     * 
     * @type {RepositoryRuleUpdateParameters}
     * @memberof RepositoryRuleUpdate
     */
    'parameters'?: RepositoryRuleUpdateParameters;
}

export const RepositoryRuleUpdateTypeEnum = {
    Update: 'update'
} as const;

export type RepositoryRuleUpdateTypeEnum = typeof RepositoryRuleUpdateTypeEnum[keyof typeof RepositoryRuleUpdateTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleUpdateParameters
 */
export interface RepositoryRuleUpdateParameters {
    /**
     * Branch can pull changes from its upstream repository
     * @type {boolean}
     * @memberof RepositoryRuleUpdateParameters
     */
    'update_allows_fetch_and_merge': boolean;
}
/**
 * Repository rule violation was detected
 * @export
 * @interface RepositoryRuleViolationError
 */
export interface RepositoryRuleViolationError {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleViolationError
     */
    'message'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleViolationError
     */
    'documentation_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleViolationError
     */
    'status'?: string;
    /**
     * 
     * @type {RepositoryRuleViolationErrorMetadata}
     * @memberof RepositoryRuleViolationError
     */
    'metadata'?: RepositoryRuleViolationErrorMetadata;
}
/**
 * 
 * @export
 * @interface RepositoryRuleViolationErrorMetadata
 */
export interface RepositoryRuleViolationErrorMetadata {
    /**
     * 
     * @type {RepositoryRuleViolationErrorMetadataSecretScanning}
     * @memberof RepositoryRuleViolationErrorMetadata
     */
    'secret_scanning'?: RepositoryRuleViolationErrorMetadataSecretScanning;
}
/**
 * 
 * @export
 * @interface RepositoryRuleViolationErrorMetadataSecretScanning
 */
export interface RepositoryRuleViolationErrorMetadataSecretScanning {
    /**
     * 
     * @type {Array<RepositoryRuleViolationErrorMetadataSecretScanningBypassPlaceholdersInner>}
     * @memberof RepositoryRuleViolationErrorMetadataSecretScanning
     */
    'bypass_placeholders'?: Array<RepositoryRuleViolationErrorMetadataSecretScanningBypassPlaceholdersInner>;
}
/**
 * 
 * @export
 * @interface RepositoryRuleViolationErrorMetadataSecretScanningBypassPlaceholdersInner
 */
export interface RepositoryRuleViolationErrorMetadataSecretScanningBypassPlaceholdersInner {
    /**
     * The ID of the push protection bypass placeholder. This value is returned on any push protected routes.
     * @type {string}
     * @memberof RepositoryRuleViolationErrorMetadataSecretScanningBypassPlaceholdersInner
     */
    'placeholder_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleViolationErrorMetadataSecretScanningBypassPlaceholdersInner
     */
    'token_type'?: string;
}
/**
 * Require all changes made to a targeted branch to pass the specified workflows before they can be merged.
 * @export
 * @interface RepositoryRuleWorkflows
 */
export interface RepositoryRuleWorkflows {
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleWorkflows
     */
    'type': RepositoryRuleWorkflowsTypeEnum;
    /**
     * 
     * @type {RepositoryRuleWorkflowsParameters}
     * @memberof RepositoryRuleWorkflows
     */
    'parameters'?: RepositoryRuleWorkflowsParameters;
}

export const RepositoryRuleWorkflowsTypeEnum = {
    Workflows: 'workflows'
} as const;

export type RepositoryRuleWorkflowsTypeEnum = typeof RepositoryRuleWorkflowsTypeEnum[keyof typeof RepositoryRuleWorkflowsTypeEnum];

/**
 * 
 * @export
 * @interface RepositoryRuleWorkflowsParameters
 */
export interface RepositoryRuleWorkflowsParameters {
    /**
     * Allow repositories and branches to be created if a check would otherwise prohibit it.
     * @type {boolean}
     * @memberof RepositoryRuleWorkflowsParameters
     */
    'do_not_enforce_on_create'?: boolean;
    /**
     * Workflows that must pass for this rule to pass.
     * @type {Array<RepositoryRuleParamsWorkflowFileReference>}
     * @memberof RepositoryRuleWorkflowsParameters
     */
    'workflows': Array<RepositoryRuleParamsWorkflowFileReference>;
}
/**
 * A set of rules to apply when specified conditions are met.
 * @export
 * @interface RepositoryRuleset
 */
export interface RepositoryRuleset {
    /**
     * The ID of the ruleset
     * @type {number}
     * @memberof RepositoryRuleset
     */
    'id': number;
    /**
     * The name of the ruleset
     * @type {string}
     * @memberof RepositoryRuleset
     */
    'name': string;
    /**
     * The target of the ruleset
     * @type {string}
     * @memberof RepositoryRuleset
     */
    'target'?: RepositoryRulesetTargetEnum;
    /**
     * The type of the source of the ruleset
     * @type {string}
     * @memberof RepositoryRuleset
     */
    'source_type'?: RepositoryRulesetSourceTypeEnum;
    /**
     * The name of the source
     * @type {string}
     * @memberof RepositoryRuleset
     */
    'source': string;
    /**
     * 
     * @type {RepositoryRuleEnforcement}
     * @memberof RepositoryRuleset
     */
    'enforcement': RepositoryRuleEnforcement;
    /**
     * The actors that can bypass the rules in this ruleset
     * @type {Array<RepositoryRulesetBypassActor>}
     * @memberof RepositoryRuleset
     */
    'bypass_actors'?: Array<RepositoryRulesetBypassActor>;
    /**
     * The bypass type of the user making the API request for this ruleset. This field is only returned when querying the repository-level endpoint.
     * @type {string}
     * @memberof RepositoryRuleset
     */
    'current_user_can_bypass'?: RepositoryRulesetCurrentUserCanBypassEnum;
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleset
     */
    'node_id'?: string;
    /**
     * 
     * @type {RepositoryRulesetLinks}
     * @memberof RepositoryRuleset
     */
    '_links'?: RepositoryRulesetLinks;
    /**
     * 
     * @type {RepositoryRulesetConditions}
     * @memberof RepositoryRuleset
     */
    'conditions'?: RepositoryRulesetConditions | null;
    /**
     * 
     * @type {Array<RepositoryRule>}
     * @memberof RepositoryRuleset
     */
    'rules'?: Array<RepositoryRule>;
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleset
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryRuleset
     */
    'updated_at'?: string;
}

export const RepositoryRulesetTargetEnum = {
    Branch: 'branch',
    Tag: 'tag',
    Push: 'push',
    Repository: 'repository'
} as const;

export type RepositoryRulesetTargetEnum = typeof RepositoryRulesetTargetEnum[keyof typeof RepositoryRulesetTargetEnum];
export const RepositoryRulesetSourceTypeEnum = {
    Repository: 'Repository',
    Organization: 'Organization',
    Enterprise: 'Enterprise'
} as const;

export type RepositoryRulesetSourceTypeEnum = typeof RepositoryRulesetSourceTypeEnum[keyof typeof RepositoryRulesetSourceTypeEnum];
export const RepositoryRulesetCurrentUserCanBypassEnum = {
    Always: 'always',
    PullRequestsOnly: 'pull_requests_only',
    Never: 'never'
} as const;

export type RepositoryRulesetCurrentUserCanBypassEnum = typeof RepositoryRulesetCurrentUserCanBypassEnum[keyof typeof RepositoryRulesetCurrentUserCanBypassEnum];

/**
 * An actor that can bypass rules in a ruleset
 * @export
 * @interface RepositoryRulesetBypassActor
 */
export interface RepositoryRulesetBypassActor {
    /**
     * The ID of the actor that can bypass a ruleset. If `actor_type` is `OrganizationAdmin`, this should be `1`. If `actor_type` is `DeployKey`, this should be null. `OrganizationAdmin` is not applicable for personal repositories.
     * @type {number}
     * @memberof RepositoryRulesetBypassActor
     */
    'actor_id'?: number | null;
    /**
     * The type of actor that can bypass a ruleset.
     * @type {string}
     * @memberof RepositoryRulesetBypassActor
     */
    'actor_type': RepositoryRulesetBypassActorActorTypeEnum;
    /**
     * When the specified actor can bypass the ruleset. `pull_request` means that an actor can only bypass rules on pull requests. `pull_request` is not applicable for the `DeployKey` actor type. Also, `pull_request` is only applicable to branch rulesets.
     * @type {string}
     * @memberof RepositoryRulesetBypassActor
     */
    'bypass_mode'?: RepositoryRulesetBypassActorBypassModeEnum;
}

export const RepositoryRulesetBypassActorActorTypeEnum = {
    Integration: 'Integration',
    OrganizationAdmin: 'OrganizationAdmin',
    RepositoryRole: 'RepositoryRole',
    Team: 'Team',
    DeployKey: 'DeployKey'
} as const;

export type RepositoryRulesetBypassActorActorTypeEnum = typeof RepositoryRulesetBypassActorActorTypeEnum[keyof typeof RepositoryRulesetBypassActorActorTypeEnum];
export const RepositoryRulesetBypassActorBypassModeEnum = {
    Always: 'always',
    PullRequest: 'pull_request'
} as const;

export type RepositoryRulesetBypassActorBypassModeEnum = typeof RepositoryRulesetBypassActorBypassModeEnum[keyof typeof RepositoryRulesetBypassActorBypassModeEnum];

/**
 * 
 * @export
 * @interface RepositoryRulesetConditions
 */
export interface RepositoryRulesetConditions {
    /**
     * 
     * @type {RepositoryRulesetConditionsRefName}
     * @memberof RepositoryRulesetConditions
     */
    'ref_name'?: RepositoryRulesetConditionsRefName;
    /**
     * 
     * @type {RepositoryRulesetConditionsRepositoryNameTargetRepositoryName}
     * @memberof RepositoryRulesetConditions
     */
    'repository_name': RepositoryRulesetConditionsRepositoryNameTargetRepositoryName;
    /**
     * 
     * @type {RepositoryRulesetConditionsRepositoryIdTargetRepositoryId}
     * @memberof RepositoryRulesetConditions
     */
    'repository_id': RepositoryRulesetConditionsRepositoryIdTargetRepositoryId;
    /**
     * 
     * @type {RepositoryRulesetConditionsRepositoryPropertyTargetRepositoryProperty}
     * @memberof RepositoryRulesetConditions
     */
    'repository_property': RepositoryRulesetConditionsRepositoryPropertyTargetRepositoryProperty;
}
/**
 * 
 * @export
 * @interface RepositoryRulesetConditionsRefName
 */
export interface RepositoryRulesetConditionsRefName {
    /**
     * Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.
     * @type {Array<string>}
     * @memberof RepositoryRulesetConditionsRefName
     */
    'include'?: Array<string>;
    /**
     * Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
     * @type {Array<string>}
     * @memberof RepositoryRulesetConditionsRefName
     */
    'exclude'?: Array<string>;
}
/**
 * Parameters for a repository ID condition
 * @export
 * @interface RepositoryRulesetConditionsRepositoryIdTarget
 */
export interface RepositoryRulesetConditionsRepositoryIdTarget {
    /**
     * 
     * @type {RepositoryRulesetConditionsRepositoryIdTargetRepositoryId}
     * @memberof RepositoryRulesetConditionsRepositoryIdTarget
     */
    'repository_id': RepositoryRulesetConditionsRepositoryIdTargetRepositoryId;
}
/**
 * 
 * @export
 * @interface RepositoryRulesetConditionsRepositoryIdTargetRepositoryId
 */
export interface RepositoryRulesetConditionsRepositoryIdTargetRepositoryId {
    /**
     * The repository IDs that the ruleset applies to. One of these IDs must match for the condition to pass.
     * @type {Array<number>}
     * @memberof RepositoryRulesetConditionsRepositoryIdTargetRepositoryId
     */
    'repository_ids'?: Array<number>;
}
/**
 * Parameters for a repository name condition
 * @export
 * @interface RepositoryRulesetConditionsRepositoryNameTarget
 */
export interface RepositoryRulesetConditionsRepositoryNameTarget {
    /**
     * 
     * @type {RepositoryRulesetConditionsRepositoryNameTargetRepositoryName}
     * @memberof RepositoryRulesetConditionsRepositoryNameTarget
     */
    'repository_name': RepositoryRulesetConditionsRepositoryNameTargetRepositoryName;
}
/**
 * 
 * @export
 * @interface RepositoryRulesetConditionsRepositoryNameTargetRepositoryName
 */
export interface RepositoryRulesetConditionsRepositoryNameTargetRepositoryName {
    /**
     * Array of repository names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~ALL` to include all repositories.
     * @type {Array<string>}
     * @memberof RepositoryRulesetConditionsRepositoryNameTargetRepositoryName
     */
    'include'?: Array<string>;
    /**
     * Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match.
     * @type {Array<string>}
     * @memberof RepositoryRulesetConditionsRepositoryNameTargetRepositoryName
     */
    'exclude'?: Array<string>;
    /**
     * Whether renaming of target repositories is prevented.
     * @type {boolean}
     * @memberof RepositoryRulesetConditionsRepositoryNameTargetRepositoryName
     */
    'protected'?: boolean;
}
/**
 * Parameters for a targeting a repository property
 * @export
 * @interface RepositoryRulesetConditionsRepositoryPropertySpec
 */
export interface RepositoryRulesetConditionsRepositoryPropertySpec {
    /**
     * The name of the repository property to target
     * @type {string}
     * @memberof RepositoryRulesetConditionsRepositoryPropertySpec
     */
    'name': string;
    /**
     * The values to match for the repository property
     * @type {Array<string>}
     * @memberof RepositoryRulesetConditionsRepositoryPropertySpec
     */
    'property_values': Array<string>;
    /**
     * The source of the repository property. Defaults to \'custom\' if not specified.
     * @type {string}
     * @memberof RepositoryRulesetConditionsRepositoryPropertySpec
     */
    'source'?: RepositoryRulesetConditionsRepositoryPropertySpecSourceEnum;
}

export const RepositoryRulesetConditionsRepositoryPropertySpecSourceEnum = {
    Custom: 'custom',
    System: 'system'
} as const;

export type RepositoryRulesetConditionsRepositoryPropertySpecSourceEnum = typeof RepositoryRulesetConditionsRepositoryPropertySpecSourceEnum[keyof typeof RepositoryRulesetConditionsRepositoryPropertySpecSourceEnum];

/**
 * Parameters for a repository property condition
 * @export
 * @interface RepositoryRulesetConditionsRepositoryPropertyTarget
 */
export interface RepositoryRulesetConditionsRepositoryPropertyTarget {
    /**
     * 
     * @type {RepositoryRulesetConditionsRepositoryPropertyTargetRepositoryProperty}
     * @memberof RepositoryRulesetConditionsRepositoryPropertyTarget
     */
    'repository_property': RepositoryRulesetConditionsRepositoryPropertyTargetRepositoryProperty;
}
/**
 * 
 * @export
 * @interface RepositoryRulesetConditionsRepositoryPropertyTargetRepositoryProperty
 */
export interface RepositoryRulesetConditionsRepositoryPropertyTargetRepositoryProperty {
    /**
     * The repository properties and values to include. All of these properties must match for the condition to pass.
     * @type {Array<RepositoryRulesetConditionsRepositoryPropertySpec>}
     * @memberof RepositoryRulesetConditionsRepositoryPropertyTargetRepositoryProperty
     */
    'include'?: Array<RepositoryRulesetConditionsRepositoryPropertySpec>;
    /**
     * The repository properties and values to exclude. The condition will not pass if any of these properties match.
     * @type {Array<RepositoryRulesetConditionsRepositoryPropertySpec>}
     * @memberof RepositoryRulesetConditionsRepositoryPropertyTargetRepositoryProperty
     */
    'exclude'?: Array<RepositoryRulesetConditionsRepositoryPropertySpec>;
}
/**
 * 
 * @export
 * @interface RepositoryRulesetLinks
 */
export interface RepositoryRulesetLinks {
    /**
     * 
     * @type {RepositoryRulesetLinksSelf}
     * @memberof RepositoryRulesetLinks
     */
    'self'?: RepositoryRulesetLinksSelf;
    /**
     * 
     * @type {RepositoryRulesetLinksHtml}
     * @memberof RepositoryRulesetLinks
     */
    'html'?: RepositoryRulesetLinksHtml | null;
}
/**
 * 
 * @export
 * @interface RepositoryRulesetLinksHtml
 */
export interface RepositoryRulesetLinksHtml {
    /**
     * The html URL of the ruleset
     * @type {string}
     * @memberof RepositoryRulesetLinksHtml
     */
    'href'?: string;
}
/**
 * 
 * @export
 * @interface RepositoryRulesetLinksSelf
 */
export interface RepositoryRulesetLinksSelf {
    /**
     * The URL of the ruleset
     * @type {string}
     * @memberof RepositoryRulesetLinksSelf
     */
    'href'?: string;
}
/**
 * Repository invitations let you manage who you collaborate with.
 * @export
 * @interface RepositorySubscription
 */
export interface RepositorySubscription {
    /**
     * Determines if notifications should be received from this repository.
     * @type {boolean}
     * @memberof RepositorySubscription
     */
    'subscribed': boolean;
    /**
     * Determines if all notifications should be blocked from this repository.
     * @type {boolean}
     * @memberof RepositorySubscription
     */
    'ignored': boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositorySubscription
     */
    'reason': string | null;
    /**
     * 
     * @type {string}
     * @memberof RepositorySubscription
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof RepositorySubscription
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositorySubscription
     */
    'repository_url': string;
}
/**
 * The security alert of the vulnerable dependency.
 * @export
 * @interface RepositoryVulnerabilityAlertAlert
 */
export interface RepositoryVulnerabilityAlertAlert {
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'affected_package_name': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'affected_range': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'dismiss_comment'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'dismiss_reason': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'dismissed_at': string;
    /**
     * 
     * @type {User2}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'dismisser': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'external_identifier': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'external_reference': string | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'fix_reason'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'fixed_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'fixed_in'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'ghsa_id': string;
    /**
     * 
     * @type {number}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'severity': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert
     */
    'state': RepositoryVulnerabilityAlertAlertStateEnum;
}

export const RepositoryVulnerabilityAlertAlertStateEnum = {
    Dismissed: 'dismissed'
} as const;

export type RepositoryVulnerabilityAlertAlertStateEnum = typeof RepositoryVulnerabilityAlertAlertStateEnum[keyof typeof RepositoryVulnerabilityAlertAlertStateEnum];

/**
 * The security alert of the vulnerable dependency.
 * @export
 * @interface RepositoryVulnerabilityAlertAlert1
 */
export interface RepositoryVulnerabilityAlertAlert1 {
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'affected_package_name': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'affected_range': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'dismiss_reason'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'dismissed_at'?: string;
    /**
     * 
     * @type {User}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'dismisser'?: User | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'external_identifier': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'external_reference': string | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'fix_reason'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'fixed_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'fixed_in'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'ghsa_id': string;
    /**
     * 
     * @type {number}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'severity': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryVulnerabilityAlertAlert1
     */
    'state': RepositoryVulnerabilityAlertAlert1StateEnum;
}

export const RepositoryVulnerabilityAlertAlert1StateEnum = {
    Fixed: 'fixed',
    Open: 'open'
} as const;

export type RepositoryVulnerabilityAlertAlert1StateEnum = typeof RepositoryVulnerabilityAlertAlert1StateEnum[keyof typeof RepositoryVulnerabilityAlertAlert1StateEnum];

/**
 * The repository on GitHub where the event occurred. Webhook payloads contain the `repository` property when the event occurs from activity in a repository.
 * @export
 * @interface RepositoryWebhooks
 */
export interface RepositoryWebhooks {
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof RepositoryWebhooks
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'node_id': string;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'full_name': string;
    /**
     * 
     * @type {NullableLicenseSimple}
     * @memberof RepositoryWebhooks
     */
    'license': NullableLicenseSimple | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof RepositoryWebhooks
     */
    'organization'?: NullableSimpleUser | null;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooks
     */
    'forks': number;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof RepositoryWebhooks
     */
    'permissions'?: RepositoryPermissions;
    /**
     * 
     * @type {SimpleUser}
     * @memberof RepositoryWebhooks
     */
    'owner': SimpleUser;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'private': boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'description': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'fork': boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'archive_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'contributors_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'git_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'languages_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'notifications_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'pulls_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'ssh_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'mirror_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'language': string | null;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooks
     */
    'forks_count': number;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooks
     */
    'stargazers_count': number;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooks
     */
    'watchers_count': number;
    /**
     * The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
     * @type {number}
     * @memberof RepositoryWebhooks
     */
    'size': number;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'default_branch': string;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooks
     */
    'open_issues_count': number;
    /**
     * Whether this repository acts as a template that can be used to generate new repositories.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof RepositoryWebhooks
     */
    'topics'?: Array<string>;
    /**
     * The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.
     * @type {{ [key: string]: any; }}
     * @memberof RepositoryWebhooks
     */
    'custom_properties'?: { [key: string]: any; };
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'has_issues': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'has_wiki': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'has_pages': boolean;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'has_downloads': boolean;
    /**
     * Whether discussions are enabled.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'has_discussions'?: boolean;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'archived': boolean;
    /**
     * Returns whether or not this repository disabled.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'disabled': boolean;
    /**
     * The repository visibility: public, private, or internal.
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'visibility'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'pushed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'updated_at': string | null;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'allow_rebase_merge'?: boolean;
    /**
     * 
     * @type {RepositoryWebhooksTemplateRepository}
     * @memberof RepositoryWebhooks
     */
    'template_repository'?: RepositoryWebhooksTemplateRepository | null;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'temp_clone_token'?: string;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'allow_squash_merge'?: boolean;
    /**
     * Whether to allow Auto-merge to be used on pull requests.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'allow_update_branch'?: boolean;
    /**
     * Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     * @deprecated
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'squash_merge_commit_title'?: RepositoryWebhooksSquashMergeCommitTitleEnum;
    /**
     * The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'squash_merge_commit_message'?: RepositoryWebhooksSquashMergeCommitMessageEnum;
    /**
     * The default value for a merge commit title.  - `PR_TITLE` - default to the pull request\'s title. - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'merge_commit_title'?: RepositoryWebhooksMergeCommitTitleEnum;
    /**
     * The default value for a merge commit message.  - `PR_TITLE` - default to the pull request\'s title. - `PR_BODY` - default to the pull request\'s body. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'merge_commit_message'?: RepositoryWebhooksMergeCommitMessageEnum;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow forking this repo
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'allow_forking'?: boolean;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'web_commit_signoff_required'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooks
     */
    'subscribers_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooks
     */
    'network_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooks
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooks
     */
    'watchers': number;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'master_branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooks
     */
    'starred_at'?: string;
    /**
     * Whether anonymous git access is enabled for this repository
     * @type {boolean}
     * @memberof RepositoryWebhooks
     */
    'anonymous_access_enabled'?: boolean;
}

export const RepositoryWebhooksSquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type RepositoryWebhooksSquashMergeCommitTitleEnum = typeof RepositoryWebhooksSquashMergeCommitTitleEnum[keyof typeof RepositoryWebhooksSquashMergeCommitTitleEnum];
export const RepositoryWebhooksSquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type RepositoryWebhooksSquashMergeCommitMessageEnum = typeof RepositoryWebhooksSquashMergeCommitMessageEnum[keyof typeof RepositoryWebhooksSquashMergeCommitMessageEnum];
export const RepositoryWebhooksMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type RepositoryWebhooksMergeCommitTitleEnum = typeof RepositoryWebhooksMergeCommitTitleEnum[keyof typeof RepositoryWebhooksMergeCommitTitleEnum];
export const RepositoryWebhooksMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type RepositoryWebhooksMergeCommitMessageEnum = typeof RepositoryWebhooksMergeCommitMessageEnum[keyof typeof RepositoryWebhooksMergeCommitMessageEnum];

/**
 * 
 * @export
 * @interface RepositoryWebhooksTemplateRepository
 */
export interface RepositoryWebhooksTemplateRepository {
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'full_name'?: string;
    /**
     * 
     * @type {RepositoryWebhooksTemplateRepositoryOwner}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'owner'?: RepositoryWebhooksTemplateRepositoryOwner;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'private'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'html_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'description'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'fork'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'archive_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'assignees_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'blobs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'branches_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'collaborators_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'comments_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'commits_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'compare_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'contents_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'contributors_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'deployments_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'downloads_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'forks_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'git_commits_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'git_refs_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'git_tags_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'git_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'issue_comment_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'issue_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'issues_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'keys_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'labels_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'languages_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'merges_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'milestones_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'notifications_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'pulls_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'releases_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'ssh_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'stargazers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'statuses_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'subscribers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'subscription_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'tags_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'teams_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'trees_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'clone_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'mirror_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'hooks_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'svn_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'homepage'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'language'?: string;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'forks_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'stargazers_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'watchers_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'size'?: number;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'default_branch'?: string;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'open_issues_count'?: number;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'topics'?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'has_issues'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'has_projects'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'has_wiki'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'has_pages'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'has_downloads'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'archived'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'visibility'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'pushed_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'updated_at'?: string;
    /**
     * 
     * @type {MinimalRepositoryPermissions}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'permissions'?: MinimalRepositoryPermissions;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'allow_rebase_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'temp_clone_token'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'allow_auto_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'use_squash_pr_title_as_default'?: boolean;
    /**
     * The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request\'s title. - `COMMIT_OR_PR_TITLE` - default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'squash_merge_commit_title'?: RepositoryWebhooksTemplateRepositorySquashMergeCommitTitleEnum;
    /**
     * The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request\'s body. - `COMMIT_MESSAGES` - default to the branch\'s commit messages. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'squash_merge_commit_message'?: RepositoryWebhooksTemplateRepositorySquashMergeCommitMessageEnum;
    /**
     * The default value for a merge commit title.  - `PR_TITLE` - default to the pull request\'s title. - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'merge_commit_title'?: RepositoryWebhooksTemplateRepositoryMergeCommitTitleEnum;
    /**
     * The default value for a merge commit message.  - `PR_TITLE` - default to the pull request\'s title. - `PR_BODY` - default to the pull request\'s body. - `BLANK` - default to a blank commit message.
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'merge_commit_message'?: RepositoryWebhooksTemplateRepositoryMergeCommitMessageEnum;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'allow_merge_commit'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'subscribers_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooksTemplateRepository
     */
    'network_count'?: number;
}

export const RepositoryWebhooksTemplateRepositorySquashMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    CommitOrPrTitle: 'COMMIT_OR_PR_TITLE'
} as const;

export type RepositoryWebhooksTemplateRepositorySquashMergeCommitTitleEnum = typeof RepositoryWebhooksTemplateRepositorySquashMergeCommitTitleEnum[keyof typeof RepositoryWebhooksTemplateRepositorySquashMergeCommitTitleEnum];
export const RepositoryWebhooksTemplateRepositorySquashMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    CommitMessages: 'COMMIT_MESSAGES',
    Blank: 'BLANK'
} as const;

export type RepositoryWebhooksTemplateRepositorySquashMergeCommitMessageEnum = typeof RepositoryWebhooksTemplateRepositorySquashMergeCommitMessageEnum[keyof typeof RepositoryWebhooksTemplateRepositorySquashMergeCommitMessageEnum];
export const RepositoryWebhooksTemplateRepositoryMergeCommitTitleEnum = {
    PrTitle: 'PR_TITLE',
    MergeMessage: 'MERGE_MESSAGE'
} as const;

export type RepositoryWebhooksTemplateRepositoryMergeCommitTitleEnum = typeof RepositoryWebhooksTemplateRepositoryMergeCommitTitleEnum[keyof typeof RepositoryWebhooksTemplateRepositoryMergeCommitTitleEnum];
export const RepositoryWebhooksTemplateRepositoryMergeCommitMessageEnum = {
    PrBody: 'PR_BODY',
    PrTitle: 'PR_TITLE',
    Blank: 'BLANK'
} as const;

export type RepositoryWebhooksTemplateRepositoryMergeCommitMessageEnum = typeof RepositoryWebhooksTemplateRepositoryMergeCommitMessageEnum[keyof typeof RepositoryWebhooksTemplateRepositoryMergeCommitMessageEnum];

/**
 * 
 * @export
 * @interface RepositoryWebhooksTemplateRepositoryOwner
 */
export interface RepositoryWebhooksTemplateRepositoryOwner {
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'login'?: string;
    /**
     * 
     * @type {number}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'html_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'repos_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'type'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RepositoryWebhooksTemplateRepositoryOwner
     */
    'site_admin'?: boolean;
}
/**
 * Legacy Review Comment
 * @export
 * @interface ReviewComment
 */
export interface ReviewComment {
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof ReviewComment
     */
    'pull_request_review_id': number | null;
    /**
     * 
     * @type {number}
     * @memberof ReviewComment
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    'diff_hunk': string;
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    'path': string;
    /**
     * 
     * @type {number}
     * @memberof ReviewComment
     */
    'position': number | null;
    /**
     * 
     * @type {number}
     * @memberof ReviewComment
     */
    'original_position': number;
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    'commit_id': string;
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    'original_commit_id': string;
    /**
     * 
     * @type {number}
     * @memberof ReviewComment
     */
    'in_reply_to_id'?: number;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof ReviewComment
     */
    'user': NullableSimpleUser | null;
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    'body': string;
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    'pull_request_url': string;
    /**
     * 
     * @type {AuthorAssociation}
     * @memberof ReviewComment
     */
    'author_association': AuthorAssociation;
    /**
     * 
     * @type {ReviewCommentLinks}
     * @memberof ReviewComment
     */
    '_links': ReviewCommentLinks;
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    'body_text'?: string;
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    'body_html'?: string;
    /**
     * 
     * @type {ReactionRollup}
     * @memberof ReviewComment
     */
    'reactions'?: ReactionRollup;
    /**
     * The side of the first line of the range for a multi-line comment.
     * @type {string}
     * @memberof ReviewComment
     */
    'side'?: ReviewCommentSideEnum;
    /**
     * The side of the first line of the range for a multi-line comment.
     * @type {string}
     * @memberof ReviewComment
     */
    'start_side'?: ReviewCommentStartSideEnum | null;
    /**
     * The line of the blob to which the comment applies. The last line of the range for a multi-line comment
     * @type {number}
     * @memberof ReviewComment
     */
    'line'?: number;
    /**
     * The original line of the blob to which the comment applies. The last line of the range for a multi-line comment
     * @type {number}
     * @memberof ReviewComment
     */
    'original_line'?: number;
    /**
     * The first line of the range for a multi-line comment.
     * @type {number}
     * @memberof ReviewComment
     */
    'start_line'?: number | null;
    /**
     * The original first line of the range for a multi-line comment.
     * @type {number}
     * @memberof ReviewComment
     */
    'original_start_line'?: number | null;
}

export const ReviewCommentSideEnum = {
    Left: 'LEFT',
    Right: 'RIGHT'
} as const;

export type ReviewCommentSideEnum = typeof ReviewCommentSideEnum[keyof typeof ReviewCommentSideEnum];
export const ReviewCommentStartSideEnum = {
    Left: 'LEFT',
    Right: 'RIGHT'
} as const;

export type ReviewCommentStartSideEnum = typeof ReviewCommentStartSideEnum[keyof typeof ReviewCommentStartSideEnum];

/**
 * 
 * @export
 * @interface ReviewCommentLinks
 */
export interface ReviewCommentLinks {
    /**
     * 
     * @type {Link}
     * @memberof ReviewCommentLinks
     */
    'self': Link;
    /**
     * 
     * @type {Link}
     * @memberof ReviewCommentLinks
     */
    'html': Link;
    /**
     * 
     * @type {Link}
     * @memberof ReviewCommentLinks
     */
    'pull_request': Link;
}
/**
 * 
 * @export
 * @interface ReviewCustomGatesCommentRequired
 */
export interface ReviewCustomGatesCommentRequired {
    /**
     * The name of the environment to approve or reject.
     * @type {string}
     * @memberof ReviewCustomGatesCommentRequired
     */
    'environment_name': string;
    /**
     * Comment associated with the pending deployment protection rule. **Required when state is not provided.**
     * @type {string}
     * @memberof ReviewCustomGatesCommentRequired
     */
    'comment': string;
}
/**
 * 
 * @export
 * @interface ReviewCustomGatesStateRequired
 */
export interface ReviewCustomGatesStateRequired {
    /**
     * The name of the environment to approve or reject.
     * @type {string}
     * @memberof ReviewCustomGatesStateRequired
     */
    'environment_name': string;
    /**
     * Whether to approve or reject deployment to the specified environments.
     * @type {string}
     * @memberof ReviewCustomGatesStateRequired
     */
    'state': ReviewCustomGatesStateRequiredStateEnum;
    /**
     * Optional comment to include with the review.
     * @type {string}
     * @memberof ReviewCustomGatesStateRequired
     */
    'comment'?: string;
}

export const ReviewCustomGatesStateRequiredStateEnum = {
    Approved: 'approved',
    Rejected: 'rejected'
} as const;

export type ReviewCustomGatesStateRequiredStateEnum = typeof ReviewCustomGatesStateRequiredStateEnum[keyof typeof ReviewCustomGatesStateRequiredStateEnum];

/**
 * Review Dismissed Issue Event
 * @export
 * @interface ReviewDismissedIssueEvent
 */
export interface ReviewDismissedIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof ReviewDismissedIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof ReviewDismissedIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof ReviewDismissedIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof ReviewDismissedIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof ReviewDismissedIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof ReviewDismissedIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof ReviewDismissedIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ReviewDismissedIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof ReviewDismissedIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {ReviewDismissedIssueEventDismissedReview}
     * @memberof ReviewDismissedIssueEvent
     */
    'dismissed_review': ReviewDismissedIssueEventDismissedReview;
}
/**
 * 
 * @export
 * @interface ReviewDismissedIssueEventDismissedReview
 */
export interface ReviewDismissedIssueEventDismissedReview {
    /**
     * 
     * @type {string}
     * @memberof ReviewDismissedIssueEventDismissedReview
     */
    'state': string;
    /**
     * 
     * @type {number}
     * @memberof ReviewDismissedIssueEventDismissedReview
     */
    'review_id': number;
    /**
     * 
     * @type {string}
     * @memberof ReviewDismissedIssueEventDismissedReview
     */
    'dismissal_message': string | null;
    /**
     * 
     * @type {string}
     * @memberof ReviewDismissedIssueEventDismissedReview
     */
    'dismissal_commit_id'?: string;
}
/**
 * Review Request Removed Issue Event
 * @export
 * @interface ReviewRequestRemovedIssueEvent
 */
export interface ReviewRequestRemovedIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof ReviewRequestRemovedIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof ReviewRequestRemovedIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof ReviewRequestRemovedIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof ReviewRequestRemovedIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof ReviewRequestRemovedIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof ReviewRequestRemovedIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof ReviewRequestRemovedIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ReviewRequestRemovedIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof ReviewRequestRemovedIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof ReviewRequestRemovedIssueEvent
     */
    'review_requester': SimpleUser;
    /**
     * 
     * @type {Team}
     * @memberof ReviewRequestRemovedIssueEvent
     */
    'requested_team'?: Team;
    /**
     * 
     * @type {SimpleUser}
     * @memberof ReviewRequestRemovedIssueEvent
     */
    'requested_reviewer'?: SimpleUser;
}
/**
 * Review Requested Issue Event
 * @export
 * @interface ReviewRequestedIssueEvent
 */
export interface ReviewRequestedIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof ReviewRequestedIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof ReviewRequestedIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof ReviewRequestedIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof ReviewRequestedIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof ReviewRequestedIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof ReviewRequestedIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof ReviewRequestedIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof ReviewRequestedIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof ReviewRequestedIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof ReviewRequestedIssueEvent
     */
    'review_requester': SimpleUser;
    /**
     * 
     * @type {Team}
     * @memberof ReviewRequestedIssueEvent
     */
    'requested_team'?: Team;
    /**
     * 
     * @type {SimpleUser}
     * @memberof ReviewRequestedIssueEvent
     */
    'requested_reviewer'?: SimpleUser;
}
/**
 * 
 * @export
 * @interface Root
 */
export interface Root {
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'current_user_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'current_user_authorizations_html_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'authorizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'code_search_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'commit_search_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'emails_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'emojis_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'feeds_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'followers_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'following_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     * @deprecated
     */
    'hub_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'issue_search_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'label_search_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'notifications_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'organization_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'organization_repositories_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'organization_teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'public_gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'rate_limit_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'repository_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'repository_search_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'current_user_repositories_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'starred_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'starred_gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'topic_search_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'user_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'user_organizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'user_repositories_url': string;
    /**
     * 
     * @type {string}
     * @memberof Root
     */
    'user_search_url': string;
}
/**
 * Response
 * @export
 * @interface RuleSuite
 */
export interface RuleSuite {
    /**
     * The unique identifier of the rule insight.
     * @type {number}
     * @memberof RuleSuite
     */
    'id'?: number;
    /**
     * The number that identifies the user.
     * @type {number}
     * @memberof RuleSuite
     */
    'actor_id'?: number | null;
    /**
     * The handle for the GitHub user account.
     * @type {string}
     * @memberof RuleSuite
     */
    'actor_name'?: string | null;
    /**
     * The first commit sha before the push evaluation.
     * @type {string}
     * @memberof RuleSuite
     */
    'before_sha'?: string;
    /**
     * The last commit sha in the push evaluation.
     * @type {string}
     * @memberof RuleSuite
     */
    'after_sha'?: string;
    /**
     * The ref name that the evaluation ran on.
     * @type {string}
     * @memberof RuleSuite
     */
    'ref'?: string;
    /**
     * The ID of the repository associated with the rule evaluation.
     * @type {number}
     * @memberof RuleSuite
     */
    'repository_id'?: number;
    /**
     * The name of the repository without the `.git` extension.
     * @type {string}
     * @memberof RuleSuite
     */
    'repository_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof RuleSuite
     */
    'pushed_at'?: string;
    /**
     * The result of the rule evaluations for rules with the `active` enforcement status.
     * @type {string}
     * @memberof RuleSuite
     */
    'result'?: RuleSuiteResultEnum;
    /**
     * The result of the rule evaluations for rules with the `active` and `evaluate` enforcement statuses, demonstrating whether rules would pass or fail if all rules in the rule suite were `active`. Null if no rules with `evaluate` enforcement status were run.
     * @type {string}
     * @memberof RuleSuite
     */
    'evaluation_result'?: RuleSuiteEvaluationResultEnum | null;
    /**
     * Details on the evaluated rules.
     * @type {Array<RuleSuiteRuleEvaluationsInner>}
     * @memberof RuleSuite
     */
    'rule_evaluations'?: Array<RuleSuiteRuleEvaluationsInner>;
}

export const RuleSuiteResultEnum = {
    Pass: 'pass',
    Fail: 'fail',
    Bypass: 'bypass'
} as const;

export type RuleSuiteResultEnum = typeof RuleSuiteResultEnum[keyof typeof RuleSuiteResultEnum];
export const RuleSuiteEvaluationResultEnum = {
    Pass: 'pass',
    Fail: 'fail',
    Bypass: 'bypass'
} as const;

export type RuleSuiteEvaluationResultEnum = typeof RuleSuiteEvaluationResultEnum[keyof typeof RuleSuiteEvaluationResultEnum];

/**
 * 
 * @export
 * @interface RuleSuiteRuleEvaluationsInner
 */
export interface RuleSuiteRuleEvaluationsInner {
    /**
     * 
     * @type {RuleSuiteRuleEvaluationsInnerRuleSource}
     * @memberof RuleSuiteRuleEvaluationsInner
     */
    'rule_source'?: RuleSuiteRuleEvaluationsInnerRuleSource;
    /**
     * The enforcement level of this rule source.
     * @type {string}
     * @memberof RuleSuiteRuleEvaluationsInner
     */
    'enforcement'?: RuleSuiteRuleEvaluationsInnerEnforcementEnum;
    /**
     * The result of the evaluation of the individual rule.
     * @type {string}
     * @memberof RuleSuiteRuleEvaluationsInner
     */
    'result'?: RuleSuiteRuleEvaluationsInnerResultEnum;
    /**
     * The type of rule.
     * @type {string}
     * @memberof RuleSuiteRuleEvaluationsInner
     */
    'rule_type'?: string;
    /**
     * The detailed failure message for the rule. Null if the rule passed.
     * @type {string}
     * @memberof RuleSuiteRuleEvaluationsInner
     */
    'details'?: string | null;
}

export const RuleSuiteRuleEvaluationsInnerEnforcementEnum = {
    Active: 'active',
    Evaluate: 'evaluate',
    DeletedRuleset: 'deleted ruleset'
} as const;

export type RuleSuiteRuleEvaluationsInnerEnforcementEnum = typeof RuleSuiteRuleEvaluationsInnerEnforcementEnum[keyof typeof RuleSuiteRuleEvaluationsInnerEnforcementEnum];
export const RuleSuiteRuleEvaluationsInnerResultEnum = {
    Pass: 'pass',
    Fail: 'fail'
} as const;

export type RuleSuiteRuleEvaluationsInnerResultEnum = typeof RuleSuiteRuleEvaluationsInnerResultEnum[keyof typeof RuleSuiteRuleEvaluationsInnerResultEnum];

/**
 * 
 * @export
 * @interface RuleSuiteRuleEvaluationsInnerRuleSource
 */
export interface RuleSuiteRuleEvaluationsInnerRuleSource {
    /**
     * The type of rule source.
     * @type {string}
     * @memberof RuleSuiteRuleEvaluationsInnerRuleSource
     */
    'type'?: string;
    /**
     * The ID of the rule source.
     * @type {number}
     * @memberof RuleSuiteRuleEvaluationsInnerRuleSource
     */
    'id'?: number | null;
    /**
     * The name of the rule source.
     * @type {string}
     * @memberof RuleSuiteRuleEvaluationsInnerRuleSource
     */
    'name'?: string | null;
}
/**
 * 
 * @export
 * @interface RuleSuitesInner
 */
export interface RuleSuitesInner {
    /**
     * The unique identifier of the rule insight.
     * @type {number}
     * @memberof RuleSuitesInner
     */
    'id'?: number;
    /**
     * The number that identifies the user.
     * @type {number}
     * @memberof RuleSuitesInner
     */
    'actor_id'?: number;
    /**
     * The handle for the GitHub user account.
     * @type {string}
     * @memberof RuleSuitesInner
     */
    'actor_name'?: string;
    /**
     * The first commit sha before the push evaluation.
     * @type {string}
     * @memberof RuleSuitesInner
     */
    'before_sha'?: string;
    /**
     * The last commit sha in the push evaluation.
     * @type {string}
     * @memberof RuleSuitesInner
     */
    'after_sha'?: string;
    /**
     * The ref name that the evaluation ran on.
     * @type {string}
     * @memberof RuleSuitesInner
     */
    'ref'?: string;
    /**
     * The ID of the repository associated with the rule evaluation.
     * @type {number}
     * @memberof RuleSuitesInner
     */
    'repository_id'?: number;
    /**
     * The name of the repository without the `.git` extension.
     * @type {string}
     * @memberof RuleSuitesInner
     */
    'repository_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof RuleSuitesInner
     */
    'pushed_at'?: string;
    /**
     * The result of the rule evaluations for rules with the `active` enforcement status.
     * @type {string}
     * @memberof RuleSuitesInner
     */
    'result'?: RuleSuitesInnerResultEnum;
    /**
     * The result of the rule evaluations for rules with the `active` and `evaluate` enforcement statuses, demonstrating whether rules would pass or fail if all rules in the rule suite were `active`.
     * @type {string}
     * @memberof RuleSuitesInner
     */
    'evaluation_result'?: RuleSuitesInnerEvaluationResultEnum;
}

export const RuleSuitesInnerResultEnum = {
    Pass: 'pass',
    Fail: 'fail',
    Bypass: 'bypass'
} as const;

export type RuleSuitesInnerResultEnum = typeof RuleSuitesInnerResultEnum[keyof typeof RuleSuitesInnerResultEnum];
export const RuleSuitesInnerEvaluationResultEnum = {
    Pass: 'pass',
    Fail: 'fail',
    Bypass: 'bypass'
} as const;

export type RuleSuitesInnerEvaluationResultEnum = typeof RuleSuitesInnerEvaluationResultEnum[keyof typeof RuleSuitesInnerEvaluationResultEnum];

/**
 * The historical version of a ruleset
 * @export
 * @interface RulesetVersion
 */
export interface RulesetVersion {
    /**
     * The ID of the previous version of the ruleset
     * @type {number}
     * @memberof RulesetVersion
     */
    'version_id': number;
    /**
     * 
     * @type {RulesetVersionActor}
     * @memberof RulesetVersion
     */
    'actor': RulesetVersionActor;
    /**
     * 
     * @type {string}
     * @memberof RulesetVersion
     */
    'updated_at': string;
}
/**
 * The actor who updated the ruleset
 * @export
 * @interface RulesetVersionActor
 */
export interface RulesetVersionActor {
    /**
     * 
     * @type {number}
     * @memberof RulesetVersionActor
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof RulesetVersionActor
     */
    'type'?: string;
}
/**
 * 
 * @export
 * @interface RulesetVersionWithState
 */
export interface RulesetVersionWithState {
    /**
     * The ID of the previous version of the ruleset
     * @type {number}
     * @memberof RulesetVersionWithState
     */
    'version_id': number;
    /**
     * 
     * @type {RulesetVersionActor}
     * @memberof RulesetVersionWithState
     */
    'actor': RulesetVersionActor;
    /**
     * 
     * @type {string}
     * @memberof RulesetVersionWithState
     */
    'updated_at': string;
    /**
     * The state of the ruleset version
     * @type {object}
     * @memberof RulesetVersionWithState
     */
    'state': object;
}
/**
 * A self hosted runner
 * @export
 * @interface Runner
 */
export interface Runner {
    /**
     * The ID of the runner.
     * @type {number}
     * @memberof Runner
     */
    'id': number;
    /**
     * The ID of the runner group.
     * @type {number}
     * @memberof Runner
     */
    'runner_group_id'?: number;
    /**
     * The name of the runner.
     * @type {string}
     * @memberof Runner
     */
    'name': string;
    /**
     * The Operating System of the runner.
     * @type {string}
     * @memberof Runner
     */
    'os': string;
    /**
     * The status of the runner.
     * @type {string}
     * @memberof Runner
     */
    'status': string;
    /**
     * 
     * @type {boolean}
     * @memberof Runner
     */
    'busy': boolean;
    /**
     * 
     * @type {Array<RunnerLabel>}
     * @memberof Runner
     */
    'labels': Array<RunnerLabel>;
    /**
     * 
     * @type {boolean}
     * @memberof Runner
     */
    'ephemeral'?: boolean;
}
/**
 * Runner Application
 * @export
 * @interface RunnerApplication
 */
export interface RunnerApplication {
    /**
     * 
     * @type {string}
     * @memberof RunnerApplication
     */
    'os': string;
    /**
     * 
     * @type {string}
     * @memberof RunnerApplication
     */
    'architecture': string;
    /**
     * 
     * @type {string}
     * @memberof RunnerApplication
     */
    'download_url': string;
    /**
     * 
     * @type {string}
     * @memberof RunnerApplication
     */
    'filename': string;
    /**
     * A short lived bearer token used to download the runner, if needed.
     * @type {string}
     * @memberof RunnerApplication
     */
    'temp_download_token'?: string;
    /**
     * 
     * @type {string}
     * @memberof RunnerApplication
     */
    'sha256_checksum'?: string;
}
/**
 * 
 * @export
 * @interface RunnerGroupsOrg
 */
export interface RunnerGroupsOrg {
    /**
     * 
     * @type {number}
     * @memberof RunnerGroupsOrg
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof RunnerGroupsOrg
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof RunnerGroupsOrg
     */
    'visibility': string;
    /**
     * 
     * @type {boolean}
     * @memberof RunnerGroupsOrg
     */
    'default': boolean;
    /**
     * Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`
     * @type {string}
     * @memberof RunnerGroupsOrg
     */
    'selected_repositories_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof RunnerGroupsOrg
     */
    'runners_url': string;
    /**
     * 
     * @type {string}
     * @memberof RunnerGroupsOrg
     */
    'hosted_runners_url'?: string;
    /**
     * The identifier of a hosted compute network configuration.
     * @type {string}
     * @memberof RunnerGroupsOrg
     */
    'network_configuration_id'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RunnerGroupsOrg
     */
    'inherited': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RunnerGroupsOrg
     */
    'inherited_allows_public_repositories'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RunnerGroupsOrg
     */
    'allows_public_repositories': boolean;
    /**
     * If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.
     * @type {boolean}
     * @memberof RunnerGroupsOrg
     */
    'workflow_restrictions_read_only'?: boolean;
    /**
     * If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.
     * @type {boolean}
     * @memberof RunnerGroupsOrg
     */
    'restricted_to_workflows'?: boolean;
    /**
     * List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.
     * @type {Array<string>}
     * @memberof RunnerGroupsOrg
     */
    'selected_workflows'?: Array<string>;
}
/**
 * A label for a self hosted runner
 * @export
 * @interface RunnerLabel
 */
export interface RunnerLabel {
    /**
     * Unique identifier of the label.
     * @type {number}
     * @memberof RunnerLabel
     */
    'id'?: number;
    /**
     * Name of the label.
     * @type {string}
     * @memberof RunnerLabel
     */
    'name': string;
    /**
     * The type of label. Read-only labels are applied automatically when the runner is configured.
     * @type {string}
     * @memberof RunnerLabel
     */
    'type'?: RunnerLabelTypeEnum;
}

export const RunnerLabelTypeEnum = {
    ReadOnly: 'read-only',
    Custom: 'custom'
} as const;

export type RunnerLabelTypeEnum = typeof RunnerLabelTypeEnum[keyof typeof RunnerLabelTypeEnum];

/**
 * Scim Error
 * @export
 * @interface ScimError
 */
export interface ScimError {
    /**
     * 
     * @type {string}
     * @memberof ScimError
     */
    'message'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ScimError
     */
    'documentation_url'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ScimError
     */
    'detail'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ScimError
     */
    'status'?: number;
    /**
     * 
     * @type {string}
     * @memberof ScimError
     */
    'scimType'?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ScimError
     */
    'schemas'?: Array<string>;
}
/**
 * 
 * @export
 * @interface SearchResultTextMatchesInner
 */
export interface SearchResultTextMatchesInner {
    /**
     * 
     * @type {string}
     * @memberof SearchResultTextMatchesInner
     */
    'object_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof SearchResultTextMatchesInner
     */
    'object_type'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SearchResultTextMatchesInner
     */
    'property'?: string;
    /**
     * 
     * @type {string}
     * @memberof SearchResultTextMatchesInner
     */
    'fragment'?: string;
    /**
     * 
     * @type {Array<SearchResultTextMatchesInnerMatchesInner>}
     * @memberof SearchResultTextMatchesInner
     */
    'matches'?: Array<SearchResultTextMatchesInnerMatchesInner>;
}
/**
 * 
 * @export
 * @interface SearchResultTextMatchesInnerMatchesInner
 */
export interface SearchResultTextMatchesInnerMatchesInner {
    /**
     * 
     * @type {string}
     * @memberof SearchResultTextMatchesInnerMatchesInner
     */
    'text'?: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof SearchResultTextMatchesInnerMatchesInner
     */
    'indices'?: Array<number>;
}
/**
 * 
 * @export
 * @interface SecretScanningAlert
 */
export interface SecretScanningAlert {
    /**
     * The security alert number.
     * @type {number}
     * @memberof SecretScanningAlert
     */
    'number'?: number;
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'created_at'?: string;
    /**
     * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'updated_at'?: string | null;
    /**
     * The REST API URL of the alert resource.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'url'?: string;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'html_url'?: string;
    /**
     * The REST API URL of the code locations for this alert.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'locations_url'?: string;
    /**
     * 
     * @type {SecretScanningAlertState}
     * @memberof SecretScanningAlert
     */
    'state'?: SecretScanningAlertState;
    /**
     * 
     * @type {SecretScanningAlertResolution}
     * @memberof SecretScanningAlert
     */
    'resolution'?: SecretScanningAlertResolution | null;
    /**
     * The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'resolved_at'?: string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof SecretScanningAlert
     */
    'resolved_by'?: NullableSimpleUser | null;
    /**
     * An optional comment to resolve an alert.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'resolution_comment'?: string | null;
    /**
     * The type of secret that secret scanning detected.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'secret_type'?: string;
    /**
     * User-friendly name for the detected secret, matching the `secret_type`. For a list of built-in patterns, see \"[Supported secret scanning patterns](https://docs.github.com/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#supported-secrets).\"
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'secret_type_display_name'?: string;
    /**
     * The secret that was detected.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'secret'?: string;
    /**
     * Whether push protection was bypassed for the detected secret.
     * @type {boolean}
     * @memberof SecretScanningAlert
     */
    'push_protection_bypassed'?: boolean | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof SecretScanningAlert
     */
    'push_protection_bypassed_by'?: NullableSimpleUser | null;
    /**
     * The time that push protection was bypassed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'push_protection_bypassed_at'?: string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof SecretScanningAlert
     */
    'push_protection_bypass_request_reviewer'?: NullableSimpleUser | null;
    /**
     * An optional comment when reviewing a push protection bypass.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'push_protection_bypass_request_reviewer_comment'?: string | null;
    /**
     * An optional comment when requesting a push protection bypass.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'push_protection_bypass_request_comment'?: string | null;
    /**
     * The URL to a push protection bypass request.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'push_protection_bypass_request_html_url'?: string | null;
    /**
     * The token status as of the latest validity check.
     * @type {string}
     * @memberof SecretScanningAlert
     */
    'validity'?: SecretScanningAlertValidityEnum;
    /**
     * Whether the detected secret was publicly leaked.
     * @type {boolean}
     * @memberof SecretScanningAlert
     */
    'publicly_leaked'?: boolean | null;
    /**
     * Whether the detected secret was found in multiple repositories under the same organization or enterprise.
     * @type {boolean}
     * @memberof SecretScanningAlert
     */
    'multi_repo'?: boolean | null;
    /**
     * A boolean value representing whether or not alert is base64 encoded
     * @type {boolean}
     * @memberof SecretScanningAlert
     */
    'is_base64_encoded'?: boolean | null;
}

export const SecretScanningAlertValidityEnum = {
    Active: 'active',
    Inactive: 'inactive',
    Unknown: 'unknown'
} as const;

export type SecretScanningAlertValidityEnum = typeof SecretScanningAlertValidityEnum[keyof typeof SecretScanningAlertValidityEnum];

/**
 * **Required when the `state` is `resolved`.** The reason for resolving the alert.
 * @export
 * @enum {string}
 */

export const SecretScanningAlertResolution = {
    FalsePositive: 'false_positive',
    WontFix: 'wont_fix',
    Revoked: 'revoked',
    UsedInTests: 'used_in_tests'
} as const;

export type SecretScanningAlertResolution = typeof SecretScanningAlertResolution[keyof typeof SecretScanningAlertResolution];


/**
 * The reason for resolving the alert.
 * @export
 * @enum {string}
 */

export const SecretScanningAlertResolutionWebhook = {
    FalsePositive: 'false_positive',
    WontFix: 'wont_fix',
    Revoked: 'revoked',
    UsedInTests: 'used_in_tests',
    PatternDeleted: 'pattern_deleted',
    PatternEdited: 'pattern_edited'
} as const;

export type SecretScanningAlertResolutionWebhook = typeof SecretScanningAlertResolutionWebhook[keyof typeof SecretScanningAlertResolutionWebhook];


/**
 * Sets the state of the secret scanning alert. You must provide `resolution` when you set the state to `resolved`.
 * @export
 * @enum {string}
 */

export const SecretScanningAlertState = {
    Open: 'open',
    Resolved: 'resolved'
} as const;

export type SecretScanningAlertState = typeof SecretScanningAlertState[keyof typeof SecretScanningAlertState];


/**
 * 
 * @export
 * @interface SecretScanningAlertWebhook
 */
export interface SecretScanningAlertWebhook {
    /**
     * The security alert number.
     * @type {number}
     * @memberof SecretScanningAlertWebhook
     */
    'number'?: number;
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'created_at'?: string;
    /**
     * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'updated_at'?: string | null;
    /**
     * The REST API URL of the alert resource.
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'url'?: string;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'html_url'?: string;
    /**
     * The REST API URL of the code locations for this alert.
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'locations_url'?: string;
    /**
     * 
     * @type {SecretScanningAlertResolutionWebhook}
     * @memberof SecretScanningAlertWebhook
     */
    'resolution'?: SecretScanningAlertResolutionWebhook | null;
    /**
     * The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'resolved_at'?: string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof SecretScanningAlertWebhook
     */
    'resolved_by'?: NullableSimpleUser | null;
    /**
     * An optional comment to resolve an alert.
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'resolution_comment'?: string | null;
    /**
     * The type of secret that secret scanning detected.
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'secret_type'?: string;
    /**
     * User-friendly name for the detected secret, matching the `secret_type`. For a list of built-in patterns, see \"[Supported secret scanning patterns](https://docs.github.com/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#supported-secrets).\"
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'secret_type_display_name'?: string;
    /**
     * The token status as of the latest validity check.
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'validity'?: SecretScanningAlertWebhookValidityEnum;
    /**
     * Whether push protection was bypassed for the detected secret.
     * @type {boolean}
     * @memberof SecretScanningAlertWebhook
     */
    'push_protection_bypassed'?: boolean | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof SecretScanningAlertWebhook
     */
    'push_protection_bypassed_by'?: NullableSimpleUser | null;
    /**
     * The time that push protection was bypassed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'push_protection_bypassed_at'?: string | null;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof SecretScanningAlertWebhook
     */
    'push_protection_bypass_request_reviewer'?: NullableSimpleUser | null;
    /**
     * An optional comment when reviewing a push protection bypass.
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'push_protection_bypass_request_reviewer_comment'?: string | null;
    /**
     * An optional comment when requesting a push protection bypass.
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'push_protection_bypass_request_comment'?: string | null;
    /**
     * The URL to a push protection bypass request.
     * @type {string}
     * @memberof SecretScanningAlertWebhook
     */
    'push_protection_bypass_request_html_url'?: string | null;
    /**
     * Whether the detected secret was publicly leaked.
     * @type {boolean}
     * @memberof SecretScanningAlertWebhook
     */
    'publicly_leaked'?: boolean | null;
    /**
     * Whether the detected secret was found in multiple repositories in the same organization or business.
     * @type {boolean}
     * @memberof SecretScanningAlertWebhook
     */
    'multi_repo'?: boolean | null;
}

export const SecretScanningAlertWebhookValidityEnum = {
    Active: 'active',
    Inactive: 'inactive',
    Unknown: 'unknown'
} as const;

export type SecretScanningAlertWebhookValidityEnum = typeof SecretScanningAlertWebhookValidityEnum[keyof typeof SecretScanningAlertWebhookValidityEnum];

/**
 * 
 * @export
 * @interface SecretScanningLocation
 */
export interface SecretScanningLocation {
    /**
     * The location type. Because secrets may be found in different types of resources (ie. code, comments, issues, pull requests, discussions), this field identifies the type of resource where the secret was found.
     * @type {string}
     * @memberof SecretScanningLocation
     */
    'type'?: SecretScanningLocationTypeEnum;
    /**
     * 
     * @type {SecretScanningLocationDetails}
     * @memberof SecretScanningLocation
     */
    'details'?: SecretScanningLocationDetails;
}

export const SecretScanningLocationTypeEnum = {
    Commit: 'commit',
    WikiCommit: 'wiki_commit',
    IssueTitle: 'issue_title',
    IssueBody: 'issue_body',
    IssueComment: 'issue_comment',
    DiscussionTitle: 'discussion_title',
    DiscussionBody: 'discussion_body',
    DiscussionComment: 'discussion_comment',
    PullRequestTitle: 'pull_request_title',
    PullRequestBody: 'pull_request_body',
    PullRequestComment: 'pull_request_comment',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment'
} as const;

export type SecretScanningLocationTypeEnum = typeof SecretScanningLocationTypeEnum[keyof typeof SecretScanningLocationTypeEnum];

/**
 * Represents a \'commit\' secret scanning location type. This location type shows that a secret was detected inside a commit to a repository.
 * @export
 * @interface SecretScanningLocationCommit
 */
export interface SecretScanningLocationCommit {
    /**
     * The file path in the repository
     * @type {string}
     * @memberof SecretScanningLocationCommit
     */
    'path': string;
    /**
     * Line number at which the secret starts in the file
     * @type {number}
     * @memberof SecretScanningLocationCommit
     */
    'start_line': number;
    /**
     * Line number at which the secret ends in the file
     * @type {number}
     * @memberof SecretScanningLocationCommit
     */
    'end_line': number;
    /**
     * The column at which the secret starts within the start line when the file is interpreted as 8BIT ASCII
     * @type {number}
     * @memberof SecretScanningLocationCommit
     */
    'start_column': number;
    /**
     * The column at which the secret ends within the end line when the file is interpreted as 8BIT ASCII
     * @type {number}
     * @memberof SecretScanningLocationCommit
     */
    'end_column': number;
    /**
     * SHA-1 hash ID of the associated blob
     * @type {string}
     * @memberof SecretScanningLocationCommit
     */
    'blob_sha': string;
    /**
     * The API URL to get the associated blob resource
     * @type {string}
     * @memberof SecretScanningLocationCommit
     */
    'blob_url': string;
    /**
     * SHA-1 hash ID of the associated commit
     * @type {string}
     * @memberof SecretScanningLocationCommit
     */
    'commit_sha': string;
    /**
     * The API URL to get the associated commit resource
     * @type {string}
     * @memberof SecretScanningLocationCommit
     */
    'commit_url': string;
}
/**
 * @type SecretScanningLocationDetails
 * @export
 */
export type SecretScanningLocationDetails = SecretScanningLocationCommit | SecretScanningLocationDiscussionBody | SecretScanningLocationDiscussionComment | SecretScanningLocationDiscussionTitle | SecretScanningLocationIssueBody | SecretScanningLocationIssueComment | SecretScanningLocationIssueTitle | SecretScanningLocationPullRequestBody | SecretScanningLocationPullRequestComment | SecretScanningLocationPullRequestReview | SecretScanningLocationPullRequestReviewComment | SecretScanningLocationPullRequestTitle | SecretScanningLocationWikiCommit;

/**
 * Represents a \'discussion_body\' secret scanning location type. This location type shows that a secret was detected in the body of a discussion.
 * @export
 * @interface SecretScanningLocationDiscussionBody
 */
export interface SecretScanningLocationDiscussionBody {
    /**
     * The URL to the discussion where the secret was detected.
     * @type {string}
     * @memberof SecretScanningLocationDiscussionBody
     */
    'discussion_body_url': string;
}
/**
 * Represents a \'discussion_comment\' secret scanning location type. This location type shows that a secret was detected in a comment on a discussion.
 * @export
 * @interface SecretScanningLocationDiscussionComment
 */
export interface SecretScanningLocationDiscussionComment {
    /**
     * The API URL to get the discussion comment where the secret was detected.
     * @type {string}
     * @memberof SecretScanningLocationDiscussionComment
     */
    'discussion_comment_url': string;
}
/**
 * Represents a \'discussion_title\' secret scanning location type. This location type shows that a secret was detected in the title of a discussion.
 * @export
 * @interface SecretScanningLocationDiscussionTitle
 */
export interface SecretScanningLocationDiscussionTitle {
    /**
     * The URL to the discussion where the secret was detected.
     * @type {string}
     * @memberof SecretScanningLocationDiscussionTitle
     */
    'discussion_title_url': string;
}
/**
 * Represents an \'issue_body\' secret scanning location type. This location type shows that a secret was detected in the body of an issue.
 * @export
 * @interface SecretScanningLocationIssueBody
 */
export interface SecretScanningLocationIssueBody {
    /**
     * The API URL to get the issue where the secret was detected.
     * @type {string}
     * @memberof SecretScanningLocationIssueBody
     */
    'issue_body_url': string;
}
/**
 * Represents an \'issue_comment\' secret scanning location type. This location type shows that a secret was detected in a comment on an issue.
 * @export
 * @interface SecretScanningLocationIssueComment
 */
export interface SecretScanningLocationIssueComment {
    /**
     * The API URL to get the issue comment where the secret was detected.
     * @type {string}
     * @memberof SecretScanningLocationIssueComment
     */
    'issue_comment_url': string;
}
/**
 * Represents an \'issue_title\' secret scanning location type. This location type shows that a secret was detected in the title of an issue.
 * @export
 * @interface SecretScanningLocationIssueTitle
 */
export interface SecretScanningLocationIssueTitle {
    /**
     * The API URL to get the issue where the secret was detected.
     * @type {string}
     * @memberof SecretScanningLocationIssueTitle
     */
    'issue_title_url': string;
}
/**
 * Represents a \'pull_request_body\' secret scanning location type. This location type shows that a secret was detected in the body of a pull request.
 * @export
 * @interface SecretScanningLocationPullRequestBody
 */
export interface SecretScanningLocationPullRequestBody {
    /**
     * The API URL to get the pull request where the secret was detected.
     * @type {string}
     * @memberof SecretScanningLocationPullRequestBody
     */
    'pull_request_body_url': string;
}
/**
 * Represents a \'pull_request_comment\' secret scanning location type. This location type shows that a secret was detected in a comment on a pull request.
 * @export
 * @interface SecretScanningLocationPullRequestComment
 */
export interface SecretScanningLocationPullRequestComment {
    /**
     * The API URL to get the pull request comment where the secret was detected.
     * @type {string}
     * @memberof SecretScanningLocationPullRequestComment
     */
    'pull_request_comment_url': string;
}
/**
 * Represents a \'pull_request_review\' secret scanning location type. This location type shows that a secret was detected in a review on a pull request.
 * @export
 * @interface SecretScanningLocationPullRequestReview
 */
export interface SecretScanningLocationPullRequestReview {
    /**
     * The API URL to get the pull request review where the secret was detected.
     * @type {string}
     * @memberof SecretScanningLocationPullRequestReview
     */
    'pull_request_review_url': string;
}
/**
 * Represents a \'pull_request_review_comment\' secret scanning location type. This location type shows that a secret was detected in a review comment on a pull request.
 * @export
 * @interface SecretScanningLocationPullRequestReviewComment
 */
export interface SecretScanningLocationPullRequestReviewComment {
    /**
     * The API URL to get the pull request review comment where the secret was detected.
     * @type {string}
     * @memberof SecretScanningLocationPullRequestReviewComment
     */
    'pull_request_review_comment_url': string;
}
/**
 * Represents a \'pull_request_title\' secret scanning location type. This location type shows that a secret was detected in the title of a pull request.
 * @export
 * @interface SecretScanningLocationPullRequestTitle
 */
export interface SecretScanningLocationPullRequestTitle {
    /**
     * The API URL to get the pull request where the secret was detected.
     * @type {string}
     * @memberof SecretScanningLocationPullRequestTitle
     */
    'pull_request_title_url': string;
}
/**
 * Represents a \'wiki_commit\' secret scanning location type. This location type shows that a secret was detected inside a commit to a repository wiki.
 * @export
 * @interface SecretScanningLocationWikiCommit
 */
export interface SecretScanningLocationWikiCommit {
    /**
     * The file path of the wiki page
     * @type {string}
     * @memberof SecretScanningLocationWikiCommit
     */
    'path': string;
    /**
     * Line number at which the secret starts in the file
     * @type {number}
     * @memberof SecretScanningLocationWikiCommit
     */
    'start_line': number;
    /**
     * Line number at which the secret ends in the file
     * @type {number}
     * @memberof SecretScanningLocationWikiCommit
     */
    'end_line': number;
    /**
     * The column at which the secret starts within the start line when the file is interpreted as 8-bit ASCII.
     * @type {number}
     * @memberof SecretScanningLocationWikiCommit
     */
    'start_column': number;
    /**
     * The column at which the secret ends within the end line when the file is interpreted as 8-bit ASCII.
     * @type {number}
     * @memberof SecretScanningLocationWikiCommit
     */
    'end_column': number;
    /**
     * SHA-1 hash ID of the associated blob
     * @type {string}
     * @memberof SecretScanningLocationWikiCommit
     */
    'blob_sha': string;
    /**
     * The GitHub URL to get the associated wiki page
     * @type {string}
     * @memberof SecretScanningLocationWikiCommit
     */
    'page_url': string;
    /**
     * SHA-1 hash ID of the associated commit
     * @type {string}
     * @memberof SecretScanningLocationWikiCommit
     */
    'commit_sha': string;
    /**
     * The GitHub URL to get the associated wiki commit
     * @type {string}
     * @memberof SecretScanningLocationWikiCommit
     */
    'commit_url': string;
}
/**
 * 
 * @export
 * @interface SecretScanningPushProtectionBypass
 */
export interface SecretScanningPushProtectionBypass {
    /**
     * 
     * @type {SecretScanningPushProtectionBypassReason}
     * @memberof SecretScanningPushProtectionBypass
     */
    'reason'?: SecretScanningPushProtectionBypassReason;
    /**
     * The time that the bypass will expire in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof SecretScanningPushProtectionBypass
     */
    'expire_at'?: string | null;
    /**
     * The token type this bypass is for.
     * @type {string}
     * @memberof SecretScanningPushProtectionBypass
     */
    'token_type'?: string;
}


/**
 * The reason for bypassing push protection.
 * @export
 * @enum {string}
 */

export const SecretScanningPushProtectionBypassReason = {
    FalsePositive: 'false_positive',
    UsedInTests: 'used_in_tests',
    WillFixLater: 'will_fix_later'
} as const;

export type SecretScanningPushProtectionBypassReason = typeof SecretScanningPushProtectionBypassReason[keyof typeof SecretScanningPushProtectionBypassReason];


/**
 * Information on a single scan performed by secret scanning on the repository
 * @export
 * @interface SecretScanningScan
 */
export interface SecretScanningScan {
    /**
     * The type of scan
     * @type {string}
     * @memberof SecretScanningScan
     */
    'type'?: string;
    /**
     * The state of the scan. Either \"completed\", \"running\", or \"pending\"
     * @type {string}
     * @memberof SecretScanningScan
     */
    'status'?: string;
    /**
     * The time that the scan was completed. Empty if the scan is running
     * @type {string}
     * @memberof SecretScanningScan
     */
    'completed_at'?: string | null;
    /**
     * The time that the scan was started. Empty if the scan is pending
     * @type {string}
     * @memberof SecretScanningScan
     */
    'started_at'?: string | null;
}
/**
 * 
 * @export
 * @interface SecretScanningScanHistory
 */
export interface SecretScanningScanHistory {
    /**
     * 
     * @type {Array<SecretScanningScan>}
     * @memberof SecretScanningScanHistory
     */
    'incremental_scans'?: Array<SecretScanningScan>;
    /**
     * 
     * @type {Array<SecretScanningScan>}
     * @memberof SecretScanningScanHistory
     */
    'pattern_update_scans'?: Array<SecretScanningScan>;
    /**
     * 
     * @type {Array<SecretScanningScan>}
     * @memberof SecretScanningScanHistory
     */
    'backfill_scans'?: Array<SecretScanningScan>;
    /**
     * 
     * @type {Array<SecretScanningScanHistoryCustomPatternBackfillScansInner>}
     * @memberof SecretScanningScanHistory
     */
    'custom_pattern_backfill_scans'?: Array<SecretScanningScanHistoryCustomPatternBackfillScansInner>;
}
/**
 * 
 * @export
 * @interface SecretScanningScanHistoryCustomPatternBackfillScansInner
 */
export interface SecretScanningScanHistoryCustomPatternBackfillScansInner {
    /**
     * The type of scan
     * @type {string}
     * @memberof SecretScanningScanHistoryCustomPatternBackfillScansInner
     */
    'type'?: string;
    /**
     * The state of the scan. Either \"completed\", \"running\", or \"pending\"
     * @type {string}
     * @memberof SecretScanningScanHistoryCustomPatternBackfillScansInner
     */
    'status'?: string;
    /**
     * The time that the scan was completed. Empty if the scan is running
     * @type {string}
     * @memberof SecretScanningScanHistoryCustomPatternBackfillScansInner
     */
    'completed_at'?: string | null;
    /**
     * The time that the scan was started. Empty if the scan is pending
     * @type {string}
     * @memberof SecretScanningScanHistoryCustomPatternBackfillScansInner
     */
    'started_at'?: string | null;
    /**
     * Name of the custom pattern for custom pattern scans
     * @type {string}
     * @memberof SecretScanningScanHistoryCustomPatternBackfillScansInner
     */
    'pattern_name'?: string;
    /**
     * Level at which the custom pattern is defined, one of \"repository\", \"organization\", or \"enterprise\"
     * @type {string}
     * @memberof SecretScanningScanHistoryCustomPatternBackfillScansInner
     */
    'pattern_scope'?: string;
}
/**
 * The type of credit the user is receiving.
 * @export
 * @enum {string}
 */

export const SecurityAdvisoryCreditTypes = {
    Analyst: 'analyst',
    Finder: 'finder',
    Reporter: 'reporter',
    Coordinator: 'coordinator',
    RemediationDeveloper: 'remediation_developer',
    RemediationReviewer: 'remediation_reviewer',
    RemediationVerifier: 'remediation_verifier',
    Tool: 'tool',
    Sponsor: 'sponsor',
    Other: 'other'
} as const;

export type SecurityAdvisoryCreditTypes = typeof SecurityAdvisoryCreditTypes[keyof typeof SecurityAdvisoryCreditTypes];


/**
 * The package\'s language or package management ecosystem.
 * @export
 * @enum {string}
 */

export const SecurityAdvisoryEcosystems = {
    Rubygems: 'rubygems',
    Npm: 'npm',
    Pip: 'pip',
    Maven: 'maven',
    Nuget: 'nuget',
    Composer: 'composer',
    Go: 'go',
    Rust: 'rust',
    Erlang: 'erlang',
    Actions: 'actions',
    Pub: 'pub',
    Other: 'other',
    Swift: 'swift'
} as const;

export type SecurityAdvisoryEcosystems = typeof SecurityAdvisoryEcosystems[keyof typeof SecurityAdvisoryEcosystems];


/**
 * The EPSS scores as calculated by the [Exploit Prediction Scoring System](https://www.first.org/epss).
 * @export
 * @interface SecurityAdvisoryEpss
 */
export interface SecurityAdvisoryEpss {
    /**
     * 
     * @type {number}
     * @memberof SecurityAdvisoryEpss
     */
    'percentage'?: number;
    /**
     * 
     * @type {number}
     * @memberof SecurityAdvisoryEpss
     */
    'percentile'?: number;
}
/**
 * 
 * @export
 * @interface SecurityAndAnalysis
 */
export interface SecurityAndAnalysis {
    /**
     * 
     * @type {SecurityAndAnalysisAdvancedSecurity}
     * @memberof SecurityAndAnalysis
     */
    'advanced_security'?: SecurityAndAnalysisAdvancedSecurity;
    /**
     * 
     * @type {SecurityAndAnalysisAdvancedSecurity}
     * @memberof SecurityAndAnalysis
     */
    'code_security'?: SecurityAndAnalysisAdvancedSecurity;
    /**
     * 
     * @type {SecurityAndAnalysisDependabotSecurityUpdates}
     * @memberof SecurityAndAnalysis
     */
    'dependabot_security_updates'?: SecurityAndAnalysisDependabotSecurityUpdates;
    /**
     * 
     * @type {SecurityAndAnalysisAdvancedSecurity}
     * @memberof SecurityAndAnalysis
     */
    'secret_scanning'?: SecurityAndAnalysisAdvancedSecurity;
    /**
     * 
     * @type {SecurityAndAnalysisAdvancedSecurity}
     * @memberof SecurityAndAnalysis
     */
    'secret_scanning_push_protection'?: SecurityAndAnalysisAdvancedSecurity;
    /**
     * 
     * @type {SecurityAndAnalysisAdvancedSecurity}
     * @memberof SecurityAndAnalysis
     */
    'secret_scanning_non_provider_patterns'?: SecurityAndAnalysisAdvancedSecurity;
    /**
     * 
     * @type {SecurityAndAnalysisAdvancedSecurity}
     * @memberof SecurityAndAnalysis
     */
    'secret_scanning_ai_detection'?: SecurityAndAnalysisAdvancedSecurity;
}
/**
 * 
 * @export
 * @interface SecurityAndAnalysisAdvancedSecurity
 */
export interface SecurityAndAnalysisAdvancedSecurity {
    /**
     * 
     * @type {string}
     * @memberof SecurityAndAnalysisAdvancedSecurity
     */
    'status'?: SecurityAndAnalysisAdvancedSecurityStatusEnum;
}

export const SecurityAndAnalysisAdvancedSecurityStatusEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled'
} as const;

export type SecurityAndAnalysisAdvancedSecurityStatusEnum = typeof SecurityAndAnalysisAdvancedSecurityStatusEnum[keyof typeof SecurityAndAnalysisAdvancedSecurityStatusEnum];

/**
 * Enable or disable Dependabot security updates for the repository.
 * @export
 * @interface SecurityAndAnalysisDependabotSecurityUpdates
 */
export interface SecurityAndAnalysisDependabotSecurityUpdates {
    /**
     * The enablement status of Dependabot security updates for the repository.
     * @type {string}
     * @memberof SecurityAndAnalysisDependabotSecurityUpdates
     */
    'status'?: SecurityAndAnalysisDependabotSecurityUpdatesStatusEnum;
}

export const SecurityAndAnalysisDependabotSecurityUpdatesStatusEnum = {
    Enabled: 'enabled',
    Disabled: 'disabled'
} as const;

export type SecurityAndAnalysisDependabotSecurityUpdatesStatusEnum = typeof SecurityAndAnalysisDependabotSecurityUpdatesStatusEnum[keyof typeof SecurityAndAnalysisDependabotSecurityUpdatesStatusEnum];

/**
 * 
 * @export
 * @interface SelectedActions
 */
export interface SelectedActions {
    /**
     * Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.
     * @type {boolean}
     * @memberof SelectedActions
     */
    'github_owned_allowed'?: boolean;
    /**
     * Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow all actions by GitHub Marketplace verified creators.
     * @type {boolean}
     * @memberof SelectedActions
     */
    'verified_allowed'?: boolean;
    /**
     * Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/_*`.  > [!NOTE] > The `patterns_allowed` setting only applies to public repositories.
     * @type {Array<string>}
     * @memberof SelectedActions
     */
    'patterns_allowed'?: Array<string>;
}
/**
 * Short Blob
 * @export
 * @interface ShortBlob
 */
export interface ShortBlob {
    /**
     * 
     * @type {string}
     * @memberof ShortBlob
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof ShortBlob
     */
    'sha': string;
}
/**
 * Short Branch
 * @export
 * @interface ShortBranch
 */
export interface ShortBranch {
    /**
     * 
     * @type {string}
     * @memberof ShortBranch
     */
    'name': string;
    /**
     * 
     * @type {ShortBranchCommit}
     * @memberof ShortBranch
     */
    'commit': ShortBranchCommit;
    /**
     * 
     * @type {boolean}
     * @memberof ShortBranch
     */
    'protected': boolean;
    /**
     * 
     * @type {BranchProtection}
     * @memberof ShortBranch
     */
    'protection'?: BranchProtection;
    /**
     * 
     * @type {string}
     * @memberof ShortBranch
     */
    'protection_url'?: string;
}
/**
 * 
 * @export
 * @interface ShortBranchCommit
 */
export interface ShortBranchCommit {
    /**
     * 
     * @type {string}
     * @memberof ShortBranchCommit
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof ShortBranchCommit
     */
    'url': string;
}
/**
 * A suite of checks performed on the code of a given code change
 * @export
 * @interface SimpleCheckSuite
 */
export interface SimpleCheckSuite {
    /**
     * 
     * @type {string}
     * @memberof SimpleCheckSuite
     */
    'after'?: string | null;
    /**
     * 
     * @type {Integration}
     * @memberof SimpleCheckSuite
     */
    'app'?: Integration | null;
    /**
     * 
     * @type {string}
     * @memberof SimpleCheckSuite
     */
    'before'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SimpleCheckSuite
     */
    'conclusion'?: SimpleCheckSuiteConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof SimpleCheckSuite
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof SimpleCheckSuite
     */
    'head_branch'?: string | null;
    /**
     * The SHA of the head commit that is being checked.
     * @type {string}
     * @memberof SimpleCheckSuite
     */
    'head_sha'?: string;
    /**
     * 
     * @type {number}
     * @memberof SimpleCheckSuite
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof SimpleCheckSuite
     */
    'node_id'?: string;
    /**
     * 
     * @type {Array<PullRequestMinimal>}
     * @memberof SimpleCheckSuite
     */
    'pull_requests'?: Array<PullRequestMinimal>;
    /**
     * 
     * @type {MinimalRepository}
     * @memberof SimpleCheckSuite
     */
    'repository'?: MinimalRepository;
    /**
     * 
     * @type {string}
     * @memberof SimpleCheckSuite
     */
    'status'?: SimpleCheckSuiteStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof SimpleCheckSuite
     */
    'updated_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof SimpleCheckSuite
     */
    'url'?: string;
}

export const SimpleCheckSuiteConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    Skipped: 'skipped',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required',
    Stale: 'stale',
    StartupFailure: 'startup_failure'
} as const;

export type SimpleCheckSuiteConclusionEnum = typeof SimpleCheckSuiteConclusionEnum[keyof typeof SimpleCheckSuiteConclusionEnum];
export const SimpleCheckSuiteStatusEnum = {
    Queued: 'queued',
    InProgress: 'in_progress',
    Completed: 'completed',
    Pending: 'pending',
    Waiting: 'waiting'
} as const;

export type SimpleCheckSuiteStatusEnum = typeof SimpleCheckSuiteStatusEnum[keyof typeof SimpleCheckSuiteStatusEnum];

/**
 * A GitHub Classroom classroom
 * @export
 * @interface SimpleClassroom
 */
export interface SimpleClassroom {
    /**
     * Unique identifier of the classroom.
     * @type {number}
     * @memberof SimpleClassroom
     */
    'id': number;
    /**
     * The name of the classroom.
     * @type {string}
     * @memberof SimpleClassroom
     */
    'name': string;
    /**
     * Returns whether classroom is archived or not.
     * @type {boolean}
     * @memberof SimpleClassroom
     */
    'archived': boolean;
    /**
     * The url of the classroom on GitHub Classroom.
     * @type {string}
     * @memberof SimpleClassroom
     */
    'url': string;
}
/**
 * A GitHub Classroom assignment
 * @export
 * @interface SimpleClassroomAssignment
 */
export interface SimpleClassroomAssignment {
    /**
     * Unique identifier of the repository.
     * @type {number}
     * @memberof SimpleClassroomAssignment
     */
    'id': number;
    /**
     * Whether an accepted assignment creates a public repository.
     * @type {boolean}
     * @memberof SimpleClassroomAssignment
     */
    'public_repo': boolean;
    /**
     * Assignment title.
     * @type {string}
     * @memberof SimpleClassroomAssignment
     */
    'title': string;
    /**
     * Whether it\'s a Group Assignment or Individual Assignment.
     * @type {string}
     * @memberof SimpleClassroomAssignment
     */
    'type': SimpleClassroomAssignmentTypeEnum;
    /**
     * The link that a student can use to accept the assignment.
     * @type {string}
     * @memberof SimpleClassroomAssignment
     */
    'invite_link': string;
    /**
     * Whether the invitation link is enabled. Visiting an enabled invitation link will accept the assignment.
     * @type {boolean}
     * @memberof SimpleClassroomAssignment
     */
    'invitations_enabled': boolean;
    /**
     * Sluggified name of the assignment.
     * @type {string}
     * @memberof SimpleClassroomAssignment
     */
    'slug': string;
    /**
     * Whether students are admins on created repository on accepted assignment.
     * @type {boolean}
     * @memberof SimpleClassroomAssignment
     */
    'students_are_repo_admins': boolean;
    /**
     * Whether feedback pull request will be created on assignment acceptance.
     * @type {boolean}
     * @memberof SimpleClassroomAssignment
     */
    'feedback_pull_requests_enabled': boolean;
    /**
     * The maximum allowable teams for the assignment.
     * @type {number}
     * @memberof SimpleClassroomAssignment
     */
    'max_teams'?: number | null;
    /**
     * The maximum allowable members per team.
     * @type {number}
     * @memberof SimpleClassroomAssignment
     */
    'max_members'?: number | null;
    /**
     * The selected editor for the assignment.
     * @type {string}
     * @memberof SimpleClassroomAssignment
     */
    'editor': string;
    /**
     * The number of students that have accepted the assignment.
     * @type {number}
     * @memberof SimpleClassroomAssignment
     */
    'accepted': number;
    /**
     * The number of students that have submitted the assignment.
     * @type {number}
     * @memberof SimpleClassroomAssignment
     */
    'submitted': number;
    /**
     * The number of students that have passed the assignment.
     * @type {number}
     * @memberof SimpleClassroomAssignment
     */
    'passing': number;
    /**
     * The programming language used in the assignment.
     * @type {string}
     * @memberof SimpleClassroomAssignment
     */
    'language': string;
    /**
     * The time at which the assignment is due.
     * @type {string}
     * @memberof SimpleClassroomAssignment
     */
    'deadline': string | null;
    /**
     * 
     * @type {SimpleClassroom}
     * @memberof SimpleClassroomAssignment
     */
    'classroom': SimpleClassroom;
}

export const SimpleClassroomAssignmentTypeEnum = {
    Individual: 'individual',
    Group: 'group'
} as const;

export type SimpleClassroomAssignmentTypeEnum = typeof SimpleClassroomAssignmentTypeEnum[keyof typeof SimpleClassroomAssignmentTypeEnum];

/**
 * A GitHub organization.
 * @export
 * @interface SimpleClassroomOrganization
 */
export interface SimpleClassroomOrganization {
    /**
     * 
     * @type {number}
     * @memberof SimpleClassroomOrganization
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof SimpleClassroomOrganization
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleClassroomOrganization
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleClassroomOrganization
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleClassroomOrganization
     */
    'name': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimpleClassroomOrganization
     */
    'avatar_url': string;
}
/**
 * A GitHub repository view for Classroom
 * @export
 * @interface SimpleClassroomRepository
 */
export interface SimpleClassroomRepository {
    /**
     * A unique identifier of the repository.
     * @type {number}
     * @memberof SimpleClassroomRepository
     */
    'id': number;
    /**
     * The full, globally unique name of the repository.
     * @type {string}
     * @memberof SimpleClassroomRepository
     */
    'full_name': string;
    /**
     * The URL to view the repository on GitHub.com.
     * @type {string}
     * @memberof SimpleClassroomRepository
     */
    'html_url': string;
    /**
     * The GraphQL identifier of the repository.
     * @type {string}
     * @memberof SimpleClassroomRepository
     */
    'node_id': string;
    /**
     * Whether the repository is private.
     * @type {boolean}
     * @memberof SimpleClassroomRepository
     */
    'private': boolean;
    /**
     * The default branch for the repository.
     * @type {string}
     * @memberof SimpleClassroomRepository
     */
    'default_branch': string;
}
/**
 * A GitHub user simplified for Classroom.
 * @export
 * @interface SimpleClassroomUser
 */
export interface SimpleClassroomUser {
    /**
     * 
     * @type {number}
     * @memberof SimpleClassroomUser
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof SimpleClassroomUser
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleClassroomUser
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleClassroomUser
     */
    'html_url': string;
}
/**
 * 
 * @export
 * @interface SimpleCommit
 */
export interface SimpleCommit {
    /**
     * 
     * @type {Committer}
     * @memberof SimpleCommit
     */
    'author': Committer;
    /**
     * 
     * @type {Committer}
     * @memberof SimpleCommit
     */
    'committer': Committer;
    /**
     * 
     * @type {string}
     * @memberof SimpleCommit
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleCommit
     */
    'message': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleCommit
     */
    'timestamp': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleCommit
     */
    'tree_id': string;
}
/**
 * 
 * @export
 * @interface SimpleCommitStatus
 */
export interface SimpleCommitStatus {
    /**
     * 
     * @type {string}
     * @memberof SimpleCommitStatus
     */
    'description': string | null;
    /**
     * 
     * @type {number}
     * @memberof SimpleCommitStatus
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof SimpleCommitStatus
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleCommitStatus
     */
    'state': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleCommitStatus
     */
    'context': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleCommitStatus
     */
    'target_url': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof SimpleCommitStatus
     */
    'required'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof SimpleCommitStatus
     */
    'avatar_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimpleCommitStatus
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleCommitStatus
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleCommitStatus
     */
    'updated_at': string;
}
/**
 * The GitHub App installation. Webhook payloads contain the `installation` property when the event is configured for and sent to a GitHub App. For more information, see \"[Using webhooks with GitHub Apps](https://docs.github.com/apps/creating-github-apps/registering-a-github-app/using-webhooks-with-github-apps).\"
 * @export
 * @interface SimpleInstallation
 */
export interface SimpleInstallation {
    /**
     * The ID of the installation.
     * @type {number}
     * @memberof SimpleInstallation
     */
    'id': number;
    /**
     * The global node ID of the installation.
     * @type {string}
     * @memberof SimpleInstallation
     */
    'node_id': string;
}
/**
 * 
 * @export
 * @interface SimplePullRequest
 */
export interface SimplePullRequest {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof SimplePullRequest
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'active_lock_reason': SimplePullRequestActiveLockReasonEnum | null;
    /**
     * 
     * @type {User4}
     * @memberof SimplePullRequest
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof SimplePullRequest
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof SimplePullRequest
     */
    'author_association': SimplePullRequestAuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof SimplePullRequest
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof SimplePullRequest
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'closed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'diff_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof SimplePullRequest
     */
    'draft': boolean;
    /**
     * 
     * @type {WebhookPullRequestReviewCommentDeletedPullRequestHead}
     * @memberof SimplePullRequest
     */
    'head': WebhookPullRequestReviewCommentDeletedPullRequestHead;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof SimplePullRequest
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof SimplePullRequest
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof SimplePullRequest
     */
    'locked': boolean;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'merged_at': string | null;
    /**
     * 
     * @type {Milestone1}
     * @memberof SimplePullRequest
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof SimplePullRequest
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'patch_url': string;
    /**
     * 
     * @type {Array<PullRequestRequestedReviewersInner>}
     * @memberof SimplePullRequest
     */
    'requested_reviewers': Array<PullRequestRequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof SimplePullRequest
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'review_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'review_comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'state': SimplePullRequestStateEnum;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof SimplePullRequest
     */
    'user': User3 | null;
}

export const SimplePullRequestActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type SimplePullRequestActiveLockReasonEnum = typeof SimplePullRequestActiveLockReasonEnum[keyof typeof SimplePullRequestActiveLockReasonEnum];
export const SimplePullRequestAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type SimplePullRequestAuthorAssociationEnum = typeof SimplePullRequestAuthorAssociationEnum[keyof typeof SimplePullRequestAuthorAssociationEnum];
export const SimplePullRequestStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type SimplePullRequestStateEnum = typeof SimplePullRequestStateEnum[keyof typeof SimplePullRequestStateEnum];

/**
 * 
 * @export
 * @interface SimplePullRequest1
 */
export interface SimplePullRequest1 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof SimplePullRequest1
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'active_lock_reason': SimplePullRequest1ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User4}
     * @memberof SimplePullRequest1
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof SimplePullRequest1
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'author_association': SimplePullRequest1AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof SimplePullRequest1
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {SimplePullRequest1Base}
     * @memberof SimplePullRequest1
     */
    'base': SimplePullRequest1Base;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'closed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'diff_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof SimplePullRequest1
     */
    'draft': boolean;
    /**
     * 
     * @type {SimplePullRequest1Head}
     * @memberof SimplePullRequest1
     */
    'head': SimplePullRequest1Head;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof SimplePullRequest1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof SimplePullRequest1
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof SimplePullRequest1
     */
    'locked': boolean;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'merged_at': string | null;
    /**
     * 
     * @type {Milestone}
     * @memberof SimplePullRequest1
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof SimplePullRequest1
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'patch_url': string;
    /**
     * 
     * @type {Array<PullRequestRequestedReviewersInner>}
     * @memberof SimplePullRequest1
     */
    'requested_reviewers': Array<PullRequestRequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof SimplePullRequest1
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'review_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'review_comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'state': SimplePullRequest1StateEnum;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof SimplePullRequest1
     */
    'user': User3 | null;
}

export const SimplePullRequest1ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type SimplePullRequest1ActiveLockReasonEnum = typeof SimplePullRequest1ActiveLockReasonEnum[keyof typeof SimplePullRequest1ActiveLockReasonEnum];
export const SimplePullRequest1AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type SimplePullRequest1AuthorAssociationEnum = typeof SimplePullRequest1AuthorAssociationEnum[keyof typeof SimplePullRequest1AuthorAssociationEnum];
export const SimplePullRequest1StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type SimplePullRequest1StateEnum = typeof SimplePullRequest1StateEnum[keyof typeof SimplePullRequest1StateEnum];

/**
 * 
 * @export
 * @interface SimplePullRequest1Base
 */
export interface SimplePullRequest1Base {
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1Base
     */
    'label': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1Base
     */
    'ref': string;
    /**
     * 
     * @type {Repository8}
     * @memberof SimplePullRequest1Base
     */
    'repo': Repository8;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1Base
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof SimplePullRequest1Base
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface SimplePullRequest1Head
 */
export interface SimplePullRequest1Head {
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1Head
     */
    'label': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1Head
     */
    'ref': string;
    /**
     * 
     * @type {Repository9}
     * @memberof SimplePullRequest1Head
     */
    'repo': Repository9 | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest1Head
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof SimplePullRequest1Head
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface SimplePullRequest2
 */
export interface SimplePullRequest2 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof SimplePullRequest2
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'active_lock_reason': SimplePullRequest2ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User4}
     * @memberof SimplePullRequest2
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof SimplePullRequest2
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'author_association': SimplePullRequest2AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof SimplePullRequest2
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof SimplePullRequest2
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'closed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'diff_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof SimplePullRequest2
     */
    'draft': boolean;
    /**
     * 
     * @type {PullRequestHead}
     * @memberof SimplePullRequest2
     */
    'head': PullRequestHead;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof SimplePullRequest2
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof SimplePullRequest2
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof SimplePullRequest2
     */
    'locked': boolean;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'merged_at': string | null;
    /**
     * 
     * @type {Milestone}
     * @memberof SimplePullRequest2
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof SimplePullRequest2
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'patch_url': string;
    /**
     * 
     * @type {Array<PullRequestRequestedReviewersInner>}
     * @memberof SimplePullRequest2
     */
    'requested_reviewers': Array<PullRequestRequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof SimplePullRequest2
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'review_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'review_comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'state': SimplePullRequest2StateEnum;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest2
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof SimplePullRequest2
     */
    'user': User3 | null;
}

export const SimplePullRequest2ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type SimplePullRequest2ActiveLockReasonEnum = typeof SimplePullRequest2ActiveLockReasonEnum[keyof typeof SimplePullRequest2ActiveLockReasonEnum];
export const SimplePullRequest2AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type SimplePullRequest2AuthorAssociationEnum = typeof SimplePullRequest2AuthorAssociationEnum[keyof typeof SimplePullRequest2AuthorAssociationEnum];
export const SimplePullRequest2StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type SimplePullRequest2StateEnum = typeof SimplePullRequest2StateEnum[keyof typeof SimplePullRequest2StateEnum];

/**
 * 
 * @export
 * @interface SimplePullRequest3
 */
export interface SimplePullRequest3 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof SimplePullRequest3
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'active_lock_reason': SimplePullRequest3ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User2}
     * @memberof SimplePullRequest3
     */
    'assignee': User2 | null;
    /**
     * 
     * @type {Array<User>}
     * @memberof SimplePullRequest3
     */
    'assignees': Array<User>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'author_association': SimplePullRequest3AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof SimplePullRequest3
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {SimplePullRequest3Base}
     * @memberof SimplePullRequest3
     */
    'base': SimplePullRequest3Base;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'closed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'diff_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof SimplePullRequest3
     */
    'draft': boolean;
    /**
     * 
     * @type {SimplePullRequest3Head}
     * @memberof SimplePullRequest3
     */
    'head': SimplePullRequest3Head;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof SimplePullRequest3
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof SimplePullRequest3
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof SimplePullRequest3
     */
    'locked': boolean;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'merged_at': string | null;
    /**
     * 
     * @type {Milestone1}
     * @memberof SimplePullRequest3
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof SimplePullRequest3
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'patch_url': string;
    /**
     * 
     * @type {Array<PullRequestRequestedReviewersInner>}
     * @memberof SimplePullRequest3
     */
    'requested_reviewers': Array<PullRequestRequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof SimplePullRequest3
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'review_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'review_comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'state': SimplePullRequest3StateEnum;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof SimplePullRequest3
     */
    'user': User3 | null;
}

export const SimplePullRequest3ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type SimplePullRequest3ActiveLockReasonEnum = typeof SimplePullRequest3ActiveLockReasonEnum[keyof typeof SimplePullRequest3ActiveLockReasonEnum];
export const SimplePullRequest3AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type SimplePullRequest3AuthorAssociationEnum = typeof SimplePullRequest3AuthorAssociationEnum[keyof typeof SimplePullRequest3AuthorAssociationEnum];
export const SimplePullRequest3StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type SimplePullRequest3StateEnum = typeof SimplePullRequest3StateEnum[keyof typeof SimplePullRequest3StateEnum];

/**
 * 
 * @export
 * @interface SimplePullRequest3Base
 */
export interface SimplePullRequest3Base {
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3Base
     */
    'label': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3Base
     */
    'ref': string;
    /**
     * 
     * @type {Repository11}
     * @memberof SimplePullRequest3Base
     */
    'repo': Repository11;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3Base
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof SimplePullRequest3Base
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface SimplePullRequest3Head
 */
export interface SimplePullRequest3Head {
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3Head
     */
    'label': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3Head
     */
    'ref': string;
    /**
     * 
     * @type {Repository12}
     * @memberof SimplePullRequest3Head
     */
    'repo': Repository12 | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest3Head
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof SimplePullRequest3Head
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface SimplePullRequest4
 */
export interface SimplePullRequest4 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof SimplePullRequest4
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'active_lock_reason': SimplePullRequest4ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User2}
     * @memberof SimplePullRequest4
     */
    'assignee': User2 | null;
    /**
     * 
     * @type {Array<User>}
     * @memberof SimplePullRequest4
     */
    'assignees': Array<User>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'author_association': SimplePullRequest4AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge1}
     * @memberof SimplePullRequest4
     */
    'auto_merge': PullRequestAutoMerge1 | null;
    /**
     * 
     * @type {SimplePullRequest3Base}
     * @memberof SimplePullRequest4
     */
    'base': SimplePullRequest3Base;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'closed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'diff_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof SimplePullRequest4
     */
    'draft': boolean;
    /**
     * 
     * @type {SimplePullRequest3Base}
     * @memberof SimplePullRequest4
     */
    'head': SimplePullRequest3Base;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof SimplePullRequest4
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof SimplePullRequest4
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof SimplePullRequest4
     */
    'locked': boolean;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'merged_at': string | null;
    /**
     * 
     * @type {Milestone1}
     * @memberof SimplePullRequest4
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof SimplePullRequest4
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'patch_url': string;
    /**
     * 
     * @type {Array<PullRequest3RequestedReviewersInner>}
     * @memberof SimplePullRequest4
     */
    'requested_reviewers': Array<PullRequest3RequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof SimplePullRequest4
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'review_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'review_comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'state': SimplePullRequest4StateEnum;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof SimplePullRequest4
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof SimplePullRequest4
     */
    'user': User1 | null;
}

export const SimplePullRequest4ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type SimplePullRequest4ActiveLockReasonEnum = typeof SimplePullRequest4ActiveLockReasonEnum[keyof typeof SimplePullRequest4ActiveLockReasonEnum];
export const SimplePullRequest4AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type SimplePullRequest4AuthorAssociationEnum = typeof SimplePullRequest4AuthorAssociationEnum[keyof typeof SimplePullRequest4AuthorAssociationEnum];
export const SimplePullRequest4StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type SimplePullRequest4StateEnum = typeof SimplePullRequest4StateEnum[keyof typeof SimplePullRequest4StateEnum];

/**
 * A GitHub repository.
 * @export
 * @interface SimpleRepository
 */
export interface SimpleRepository {
    /**
     * A unique identifier of the repository.
     * @type {number}
     * @memberof SimpleRepository
     */
    'id': number;
    /**
     * The GraphQL identifier of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'node_id': string;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'name': string;
    /**
     * The full, globally unique, name of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'full_name': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof SimpleRepository
     */
    'owner': SimpleUser;
    /**
     * Whether the repository is private.
     * @type {boolean}
     * @memberof SimpleRepository
     */
    'private': boolean;
    /**
     * The URL to view the repository on GitHub.com.
     * @type {string}
     * @memberof SimpleRepository
     */
    'html_url': string;
    /**
     * The repository description.
     * @type {string}
     * @memberof SimpleRepository
     */
    'description': string | null;
    /**
     * Whether the repository is a fork.
     * @type {boolean}
     * @memberof SimpleRepository
     */
    'fork': boolean;
    /**
     * The URL to get more information about the repository from the GitHub API.
     * @type {string}
     * @memberof SimpleRepository
     */
    'url': string;
    /**
     * A template for the API URL to download the repository as an archive.
     * @type {string}
     * @memberof SimpleRepository
     */
    'archive_url': string;
    /**
     * A template for the API URL to list the available assignees for issues in the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'assignees_url': string;
    /**
     * A template for the API URL to create or retrieve a raw Git blob in the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'blobs_url': string;
    /**
     * A template for the API URL to get information about branches in the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'branches_url': string;
    /**
     * A template for the API URL to get information about collaborators of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'collaborators_url': string;
    /**
     * A template for the API URL to get information about comments on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'comments_url': string;
    /**
     * A template for the API URL to get information about commits on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'commits_url': string;
    /**
     * A template for the API URL to compare two commits or refs.
     * @type {string}
     * @memberof SimpleRepository
     */
    'compare_url': string;
    /**
     * A template for the API URL to get the contents of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'contents_url': string;
    /**
     * A template for the API URL to list the contributors to the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'contributors_url': string;
    /**
     * The API URL to list the deployments of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'deployments_url': string;
    /**
     * The API URL to list the downloads on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'downloads_url': string;
    /**
     * The API URL to list the events of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'events_url': string;
    /**
     * The API URL to list the forks of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'forks_url': string;
    /**
     * A template for the API URL to get information about Git commits of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'git_commits_url': string;
    /**
     * A template for the API URL to get information about Git refs of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'git_refs_url': string;
    /**
     * A template for the API URL to get information about Git tags of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'git_tags_url': string;
    /**
     * A template for the API URL to get information about issue comments on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'issue_comment_url': string;
    /**
     * A template for the API URL to get information about issue events on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'issue_events_url': string;
    /**
     * A template for the API URL to get information about issues on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'issues_url': string;
    /**
     * A template for the API URL to get information about deploy keys on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'keys_url': string;
    /**
     * A template for the API URL to get information about labels of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'labels_url': string;
    /**
     * The API URL to get information about the languages of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'languages_url': string;
    /**
     * The API URL to merge branches in the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'merges_url': string;
    /**
     * A template for the API URL to get information about milestones of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'milestones_url': string;
    /**
     * A template for the API URL to get information about notifications on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'notifications_url': string;
    /**
     * A template for the API URL to get information about pull requests on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'pulls_url': string;
    /**
     * A template for the API URL to get information about releases on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'releases_url': string;
    /**
     * The API URL to list the stargazers on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'stargazers_url': string;
    /**
     * A template for the API URL to get information about statuses of a commit.
     * @type {string}
     * @memberof SimpleRepository
     */
    'statuses_url': string;
    /**
     * The API URL to list the subscribers on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'subscribers_url': string;
    /**
     * The API URL to subscribe to notifications for this repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'subscription_url': string;
    /**
     * The API URL to get information about tags on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'tags_url': string;
    /**
     * The API URL to list the teams on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'teams_url': string;
    /**
     * A template for the API URL to create or retrieve a raw Git tree of the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'trees_url': string;
    /**
     * The API URL to list the hooks on the repository.
     * @type {string}
     * @memberof SimpleRepository
     */
    'hooks_url': string;
}
/**
 * A GitHub user.
 * @export
 * @interface SimpleUser
 */
export interface SimpleUser {
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'name'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof SimpleUser
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'gravatar_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'followers_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'following_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'starred_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'subscriptions_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'organizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'received_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'type': string;
    /**
     * 
     * @type {boolean}
     * @memberof SimpleUser
     */
    'site_admin': boolean;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'starred_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof SimpleUser
     */
    'user_view_type'?: string;
}
/**
 * Create a new snapshot of a repository\'s dependencies.
 * @export
 * @interface Snapshot
 */
export interface Snapshot {
    /**
     * The version of the repository snapshot submission.
     * @type {number}
     * @memberof Snapshot
     */
    'version': number;
    /**
     * 
     * @type {SnapshotJob}
     * @memberof Snapshot
     */
    'job': SnapshotJob;
    /**
     * The commit SHA associated with this dependency snapshot. Maximum length: 40 characters.
     * @type {string}
     * @memberof Snapshot
     */
    'sha': string;
    /**
     * The repository branch that triggered this snapshot.
     * @type {string}
     * @memberof Snapshot
     */
    'ref': string;
    /**
     * 
     * @type {SnapshotDetector}
     * @memberof Snapshot
     */
    'detector': SnapshotDetector;
    /**
     * User-defined metadata to store domain-specific information limited to 8 keys with scalar values.
     * @type {{ [key: string]: MetadataValue; }}
     * @memberof Snapshot
     */
    'metadata'?: { [key: string]: MetadataValue; };
    /**
     * A collection of package manifests, which are a collection of related dependencies declared in a file or representing a logical group of dependencies.
     * @type {{ [key: string]: Manifest; }}
     * @memberof Snapshot
     */
    'manifests'?: { [key: string]: Manifest; };
    /**
     * The time at which the snapshot was scanned.
     * @type {string}
     * @memberof Snapshot
     */
    'scanned': string;
}
/**
 * A description of the detector used.
 * @export
 * @interface SnapshotDetector
 */
export interface SnapshotDetector {
    /**
     * The name of the detector used.
     * @type {string}
     * @memberof SnapshotDetector
     */
    'name': string;
    /**
     * The version of the detector used.
     * @type {string}
     * @memberof SnapshotDetector
     */
    'version': string;
    /**
     * The url of the detector used.
     * @type {string}
     * @memberof SnapshotDetector
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface SnapshotJob
 */
export interface SnapshotJob {
    /**
     * The external ID of the job.
     * @type {string}
     * @memberof SnapshotJob
     */
    'id': string;
    /**
     * Correlator provides a key that is used to group snapshots submitted over time. Only the \"latest\" submitted snapshot for a given combination of `job.correlator` and `detector.name` will be considered when calculating a repository\'s current dependencies. Correlator should be as unique as it takes to distinguish all detection runs for a given \"wave\" of CI workflow you run. If you\'re using GitHub Actions, a good default value for this could be the environment variables GITHUB_WORKFLOW and GITHUB_JOB concatenated together. If you\'re using a build matrix, then you\'ll also need to add additional key(s) to distinguish between each submission inside a matrix variation.
     * @type {string}
     * @memberof SnapshotJob
     */
    'correlator': string;
    /**
     * The url for the job.
     * @type {string}
     * @memberof SnapshotJob
     */
    'html_url'?: string;
}
/**
 * Social media account
 * @export
 * @interface SocialAccount
 */
export interface SocialAccount {
    /**
     * 
     * @type {string}
     * @memberof SocialAccount
     */
    'provider': string;
    /**
     * 
     * @type {string}
     * @memberof SocialAccount
     */
    'url': string;
}
/**
 * The `tier_changed` and `pending_tier_change` will include the original tier before the change or pending change. For more information, see the pending tier change payload.
 * @export
 * @interface SponsorshipTier
 */
export interface SponsorshipTier {
    /**
     * 
     * @type {string}
     * @memberof SponsorshipTier
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof SponsorshipTier
     */
    'description': string;
    /**
     * 
     * @type {boolean}
     * @memberof SponsorshipTier
     */
    'is_custom_ammount'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SponsorshipTier
     */
    'is_custom_amount'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SponsorshipTier
     */
    'is_one_time': boolean;
    /**
     * 
     * @type {number}
     * @memberof SponsorshipTier
     */
    'monthly_price_in_cents': number;
    /**
     * 
     * @type {number}
     * @memberof SponsorshipTier
     */
    'monthly_price_in_dollars': number;
    /**
     * 
     * @type {string}
     * @memberof SponsorshipTier
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof SponsorshipTier
     */
    'node_id': string;
}
/**
 * A public SSH key used to sign Git commits
 * @export
 * @interface SshSigningKey
 */
export interface SshSigningKey {
    /**
     * 
     * @type {string}
     * @memberof SshSigningKey
     */
    'key': string;
    /**
     * 
     * @type {number}
     * @memberof SshSigningKey
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof SshSigningKey
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof SshSigningKey
     */
    'created_at': string;
}
/**
 * Stargazer
 * @export
 * @interface Stargazer
 */
export interface Stargazer {
    /**
     * 
     * @type {string}
     * @memberof Stargazer
     */
    'starred_at': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof Stargazer
     */
    'user': NullableSimpleUser | null;
}
/**
 * Starred Repository
 * @export
 * @interface StarredRepository
 */
export interface StarredRepository {
    /**
     * 
     * @type {string}
     * @memberof StarredRepository
     */
    'starred_at': string;
    /**
     * 
     * @type {Repository}
     * @memberof StarredRepository
     */
    'repo': Repository;
}
/**
 * State Change Issue Event
 * @export
 * @interface StateChangeIssueEvent
 */
export interface StateChangeIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof StateChangeIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof StateChangeIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof StateChangeIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof StateChangeIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof StateChangeIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof StateChangeIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof StateChangeIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof StateChangeIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof StateChangeIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {string}
     * @memberof StateChangeIssueEvent
     */
    'state_reason'?: string | null;
}
/**
 * Provides details of static public IP limits for GitHub-hosted Hosted Runners
 * @export
 * @interface StaticPublicIPLimitsForGitHubHostedHostedRunners
 */
export interface StaticPublicIPLimitsForGitHubHostedHostedRunners {
    /**
     * The maximum number of static public IP addresses that can be used for Hosted Runners.
     * @type {number}
     * @memberof StaticPublicIPLimitsForGitHubHostedHostedRunners
     */
    'maximum': number;
    /**
     * The current number of static public IP addresses in use by Hosted Runners.
     * @type {number}
     * @memberof StaticPublicIPLimitsForGitHubHostedHostedRunners
     */
    'current_usage': number;
}
/**
 * The status of a commit.
 * @export
 * @interface Status
 */
export interface Status {
    /**
     * 
     * @type {string}
     * @memberof Status
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Status
     */
    'avatar_url': string | null;
    /**
     * 
     * @type {number}
     * @memberof Status
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Status
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Status
     */
    'state': string;
    /**
     * 
     * @type {string}
     * @memberof Status
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof Status
     */
    'target_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof Status
     */
    'context': string;
    /**
     * 
     * @type {string}
     * @memberof Status
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof Status
     */
    'updated_at': string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof Status
     */
    'creator': NullableSimpleUser | null;
}
/**
 * Status Check Policy
 * @export
 * @interface StatusCheckPolicy
 */
export interface StatusCheckPolicy {
    /**
     * 
     * @type {string}
     * @memberof StatusCheckPolicy
     */
    'url': string;
    /**
     * 
     * @type {boolean}
     * @memberof StatusCheckPolicy
     */
    'strict': boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof StatusCheckPolicy
     */
    'contexts': Array<string>;
    /**
     * 
     * @type {Array<StatusCheckPolicyChecksInner>}
     * @memberof StatusCheckPolicy
     */
    'checks': Array<StatusCheckPolicyChecksInner>;
    /**
     * 
     * @type {string}
     * @memberof StatusCheckPolicy
     */
    'contexts_url': string;
}
/**
 * 
 * @export
 * @interface StatusCheckPolicyChecksInner
 */
export interface StatusCheckPolicyChecksInner {
    /**
     * 
     * @type {string}
     * @memberof StatusCheckPolicyChecksInner
     */
    'context': string;
    /**
     * 
     * @type {number}
     * @memberof StatusCheckPolicyChecksInner
     */
    'app_id': number | null;
}
/**
 * 
 * @export
 * @interface SubIssuesSummary
 */
export interface SubIssuesSummary {
    /**
     * 
     * @type {number}
     * @memberof SubIssuesSummary
     */
    'total': number;
    /**
     * 
     * @type {number}
     * @memberof SubIssuesSummary
     */
    'completed': number;
    /**
     * 
     * @type {number}
     * @memberof SubIssuesSummary
     */
    'percent_completed': number;
}
/**
 * Tag
 * @export
 * @interface Tag
 */
export interface Tag {
    /**
     * 
     * @type {string}
     * @memberof Tag
     */
    'name': string;
    /**
     * 
     * @type {ShortBranchCommit}
     * @memberof Tag
     */
    'commit': ShortBranchCommit;
    /**
     * 
     * @type {string}
     * @memberof Tag
     */
    'zipball_url': string;
    /**
     * 
     * @type {string}
     * @memberof Tag
     */
    'tarball_url': string;
    /**
     * 
     * @type {string}
     * @memberof Tag
     */
    'node_id': string;
}
/**
 * Tag protection
 * @export
 * @interface TagProtection
 */
export interface TagProtection {
    /**
     * 
     * @type {number}
     * @memberof TagProtection
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof TagProtection
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof TagProtection
     */
    'updated_at'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TagProtection
     */
    'enabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TagProtection
     */
    'pattern': string;
}
/**
 * Groups of organization members that gives permissions on specified repositories.
 * @export
 * @interface Team
 */
export interface Team {
    /**
     * 
     * @type {boolean}
     * @memberof Team
     */
    'deleted'?: boolean;
    /**
     * Description of the team
     * @type {string}
     * @memberof Team
     */
    'description'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    'html_url'?: string;
    /**
     * Unique identifier of the team
     * @type {number}
     * @memberof Team
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    'members_url'?: string;
    /**
     * Name of the team
     * @type {string}
     * @memberof Team
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    'node_id'?: string;
    /**
     * 
     * @type {TeamParent}
     * @memberof Team
     */
    'parent'?: TeamParent | null;
    /**
     * Permission that the team will have for its repositories
     * @type {string}
     * @memberof Team
     */
    'permission'?: string;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    'privacy'?: TeamPrivacyEnum;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    'repositories_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Team
     */
    'slug'?: string;
    /**
     * URL for the team
     * @type {string}
     * @memberof Team
     */
    'url'?: string;
}

export const TeamPrivacyEnum = {
    Open: 'open',
    Closed: 'closed',
    Secret: 'secret'
} as const;

export type TeamPrivacyEnum = typeof TeamPrivacyEnum[keyof typeof TeamPrivacyEnum];

/**
 * Groups of organization members that gives permissions on specified repositories.
 * @export
 * @interface Team1
 */
export interface Team1 {
    /**
     * 
     * @type {boolean}
     * @memberof Team1
     */
    'deleted'?: boolean;
    /**
     * Description of the team
     * @type {string}
     * @memberof Team1
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof Team1
     */
    'html_url': string;
    /**
     * Unique identifier of the team
     * @type {number}
     * @memberof Team1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Team1
     */
    'members_url': string;
    /**
     * Name of the team
     * @type {string}
     * @memberof Team1
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Team1
     */
    'node_id': string;
    /**
     * 
     * @type {TeamParent}
     * @memberof Team1
     */
    'parent'?: TeamParent | null;
    /**
     * Permission that the team will have for its repositories
     * @type {string}
     * @memberof Team1
     */
    'permission': string;
    /**
     * 
     * @type {string}
     * @memberof Team1
     */
    'privacy': Team1PrivacyEnum;
    /**
     * 
     * @type {string}
     * @memberof Team1
     */
    'repositories_url': string;
    /**
     * 
     * @type {string}
     * @memberof Team1
     */
    'slug': string;
    /**
     * URL for the team
     * @type {string}
     * @memberof Team1
     */
    'url': string;
}

export const Team1PrivacyEnum = {
    Open: 'open',
    Closed: 'closed',
    Secret: 'secret'
} as const;

export type Team1PrivacyEnum = typeof Team1PrivacyEnum[keyof typeof Team1PrivacyEnum];

/**
 * A team discussion is a persistent record of a free-form conversation within a team.
 * @export
 * @interface TeamDiscussion
 */
export interface TeamDiscussion {
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof TeamDiscussion
     */
    'author': NullableSimpleUser | null;
    /**
     * The main text of the discussion.
     * @type {string}
     * @memberof TeamDiscussion
     */
    'body': string;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussion
     */
    'body_html': string;
    /**
     * The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.
     * @type {string}
     * @memberof TeamDiscussion
     */
    'body_version': string;
    /**
     * 
     * @type {number}
     * @memberof TeamDiscussion
     */
    'comments_count': number;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussion
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussion
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussion
     */
    'last_edited_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussion
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussion
     */
    'node_id': string;
    /**
     * The unique sequence number of a team discussion.
     * @type {number}
     * @memberof TeamDiscussion
     */
    'number': number;
    /**
     * Whether or not this discussion should be pinned for easy retrieval.
     * @type {boolean}
     * @memberof TeamDiscussion
     */
    'pinned': boolean;
    /**
     * Whether or not this discussion should be restricted to team members and organization owners.
     * @type {boolean}
     * @memberof TeamDiscussion
     */
    'private': boolean;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussion
     */
    'team_url': string;
    /**
     * The title of the discussion.
     * @type {string}
     * @memberof TeamDiscussion
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussion
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussion
     */
    'url': string;
    /**
     * 
     * @type {ReactionRollup}
     * @memberof TeamDiscussion
     */
    'reactions'?: ReactionRollup;
}
/**
 * A reply to a discussion within a team.
 * @export
 * @interface TeamDiscussionComment
 */
export interface TeamDiscussionComment {
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof TeamDiscussionComment
     */
    'author': NullableSimpleUser | null;
    /**
     * The main text of the comment.
     * @type {string}
     * @memberof TeamDiscussionComment
     */
    'body': string;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussionComment
     */
    'body_html': string;
    /**
     * The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.
     * @type {string}
     * @memberof TeamDiscussionComment
     */
    'body_version': string;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussionComment
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussionComment
     */
    'last_edited_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussionComment
     */
    'discussion_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussionComment
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussionComment
     */
    'node_id': string;
    /**
     * The unique sequence number of a team discussion comment.
     * @type {number}
     * @memberof TeamDiscussionComment
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussionComment
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof TeamDiscussionComment
     */
    'url': string;
    /**
     * 
     * @type {ReactionRollup}
     * @memberof TeamDiscussionComment
     */
    'reactions'?: ReactionRollup;
}
/**
 * Groups of organization members that gives permissions on specified repositories.
 * @export
 * @interface TeamFull
 */
export interface TeamFull {
    /**
     * Unique identifier of the team
     * @type {number}
     * @memberof TeamFull
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof TeamFull
     */
    'node_id': string;
    /**
     * URL for the team
     * @type {string}
     * @memberof TeamFull
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamFull
     */
    'html_url': string;
    /**
     * Name of the team
     * @type {string}
     * @memberof TeamFull
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof TeamFull
     */
    'slug': string;
    /**
     * 
     * @type {string}
     * @memberof TeamFull
     */
    'description': string | null;
    /**
     * The level of privacy this team should have
     * @type {string}
     * @memberof TeamFull
     */
    'privacy'?: TeamFullPrivacyEnum;
    /**
     * The notification setting the team has set
     * @type {string}
     * @memberof TeamFull
     */
    'notification_setting'?: TeamFullNotificationSettingEnum;
    /**
     * Permission that the team will have for its repositories
     * @type {string}
     * @memberof TeamFull
     */
    'permission': string;
    /**
     * 
     * @type {string}
     * @memberof TeamFull
     */
    'members_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamFull
     */
    'repositories_url': string;
    /**
     * 
     * @type {NullableTeamSimple}
     * @memberof TeamFull
     */
    'parent'?: NullableTeamSimple | null;
    /**
     * 
     * @type {number}
     * @memberof TeamFull
     */
    'members_count': number;
    /**
     * 
     * @type {number}
     * @memberof TeamFull
     */
    'repos_count': number;
    /**
     * 
     * @type {string}
     * @memberof TeamFull
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof TeamFull
     */
    'updated_at': string;
    /**
     * 
     * @type {TeamOrganization}
     * @memberof TeamFull
     */
    'organization': TeamOrganization;
    /**
     * Distinguished Name (DN) that team maps to within LDAP environment
     * @type {string}
     * @memberof TeamFull
     */
    'ldap_dn'?: string;
}

export const TeamFullPrivacyEnum = {
    Closed: 'closed',
    Secret: 'secret'
} as const;

export type TeamFullPrivacyEnum = typeof TeamFullPrivacyEnum[keyof typeof TeamFullPrivacyEnum];
export const TeamFullNotificationSettingEnum = {
    NotificationsEnabled: 'notifications_enabled',
    NotificationsDisabled: 'notifications_disabled'
} as const;

export type TeamFullNotificationSettingEnum = typeof TeamFullNotificationSettingEnum[keyof typeof TeamFullNotificationSettingEnum];

/**
 * Team Membership
 * @export
 * @interface TeamMembership
 */
export interface TeamMembership {
    /**
     * 
     * @type {string}
     * @memberof TeamMembership
     */
    'url': string;
    /**
     * The role of the user in the team.
     * @type {string}
     * @memberof TeamMembership
     */
    'role': TeamMembershipRoleEnum;
    /**
     * The state of the user\'s membership in the team.
     * @type {string}
     * @memberof TeamMembership
     */
    'state': TeamMembershipStateEnum;
}

export const TeamMembershipRoleEnum = {
    Member: 'member',
    Maintainer: 'maintainer'
} as const;

export type TeamMembershipRoleEnum = typeof TeamMembershipRoleEnum[keyof typeof TeamMembershipRoleEnum];
export const TeamMembershipStateEnum = {
    Active: 'active',
    Pending: 'pending'
} as const;

export type TeamMembershipStateEnum = typeof TeamMembershipStateEnum[keyof typeof TeamMembershipStateEnum];

/**
 * Team Organization
 * @export
 * @interface TeamOrganization
 */
export interface TeamOrganization {
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof TeamOrganization
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'members_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'public_members_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'company'?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'blog'?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'location'?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'email'?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'twitter_username'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof TeamOrganization
     */
    'is_verified'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamOrganization
     */
    'has_organization_projects': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamOrganization
     */
    'has_repository_projects': boolean;
    /**
     * 
     * @type {number}
     * @memberof TeamOrganization
     */
    'public_repos': number;
    /**
     * 
     * @type {number}
     * @memberof TeamOrganization
     */
    'public_gists': number;
    /**
     * 
     * @type {number}
     * @memberof TeamOrganization
     */
    'followers': number;
    /**
     * 
     * @type {number}
     * @memberof TeamOrganization
     */
    'following': number;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'type': string;
    /**
     * 
     * @type {number}
     * @memberof TeamOrganization
     */
    'total_private_repos'?: number;
    /**
     * 
     * @type {number}
     * @memberof TeamOrganization
     */
    'owned_private_repos'?: number;
    /**
     * 
     * @type {number}
     * @memberof TeamOrganization
     */
    'private_gists'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TeamOrganization
     */
    'disk_usage'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TeamOrganization
     */
    'collaborators'?: number | null;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'billing_email'?: string | null;
    /**
     * 
     * @type {OrganizationFullPlan}
     * @memberof TeamOrganization
     */
    'plan'?: OrganizationFullPlan;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'default_repository_permission'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof TeamOrganization
     */
    'members_can_create_repositories'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof TeamOrganization
     */
    'two_factor_requirement_enabled'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'members_allowed_repository_creation_type'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TeamOrganization
     */
    'members_can_create_public_repositories'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamOrganization
     */
    'members_can_create_private_repositories'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamOrganization
     */
    'members_can_create_internal_repositories'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamOrganization
     */
    'members_can_create_pages'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamOrganization
     */
    'members_can_create_public_pages'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamOrganization
     */
    'members_can_create_private_pages'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamOrganization
     */
    'members_can_fork_private_repositories'?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof TeamOrganization
     */
    'web_commit_signoff_required'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof TeamOrganization
     */
    'archived_at': string | null;
}
/**
 * 
 * @export
 * @interface TeamParent
 */
export interface TeamParent {
    /**
     * Description of the team
     * @type {string}
     * @memberof TeamParent
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof TeamParent
     */
    'html_url': string;
    /**
     * Unique identifier of the team
     * @type {number}
     * @memberof TeamParent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof TeamParent
     */
    'members_url': string;
    /**
     * Name of the team
     * @type {string}
     * @memberof TeamParent
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof TeamParent
     */
    'node_id': string;
    /**
     * Permission that the team will have for its repositories
     * @type {string}
     * @memberof TeamParent
     */
    'permission': string;
    /**
     * 
     * @type {string}
     * @memberof TeamParent
     */
    'privacy': TeamParentPrivacyEnum;
    /**
     * 
     * @type {string}
     * @memberof TeamParent
     */
    'repositories_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamParent
     */
    'slug': string;
    /**
     * URL for the team
     * @type {string}
     * @memberof TeamParent
     */
    'url': string;
}

export const TeamParentPrivacyEnum = {
    Open: 'open',
    Closed: 'closed',
    Secret: 'secret'
} as const;

export type TeamParentPrivacyEnum = typeof TeamParentPrivacyEnum[keyof typeof TeamParentPrivacyEnum];

/**
 * 
 * @export
 * @interface TeamPermissions
 */
export interface TeamPermissions {
    /**
     * 
     * @type {boolean}
     * @memberof TeamPermissions
     */
    'pull': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamPermissions
     */
    'triage': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamPermissions
     */
    'push': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamPermissions
     */
    'maintain': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamPermissions
     */
    'admin': boolean;
}
/**
 * A team\'s access to a project.
 * @export
 * @interface TeamProject
 */
export interface TeamProject {
    /**
     * 
     * @type {string}
     * @memberof TeamProject
     */
    'owner_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamProject
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamProject
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamProject
     */
    'columns_url': string;
    /**
     * 
     * @type {number}
     * @memberof TeamProject
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof TeamProject
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof TeamProject
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof TeamProject
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof TeamProject
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof TeamProject
     */
    'state': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TeamProject
     */
    'creator': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof TeamProject
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof TeamProject
     */
    'updated_at': string;
    /**
     * The organization permission for this project. Only present when owner is an organization.
     * @type {string}
     * @memberof TeamProject
     */
    'organization_permission'?: string;
    /**
     * Whether the project is private or not. Only present when owner is an organization.
     * @type {boolean}
     * @memberof TeamProject
     */
    'private'?: boolean;
    /**
     * 
     * @type {TeamProjectPermissions}
     * @memberof TeamProject
     */
    'permissions': TeamProjectPermissions;
}
/**
 * 
 * @export
 * @interface TeamProjectPermissions
 */
export interface TeamProjectPermissions {
    /**
     * 
     * @type {boolean}
     * @memberof TeamProjectPermissions
     */
    'read': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamProjectPermissions
     */
    'write': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamProjectPermissions
     */
    'admin': boolean;
}
/**
 * A team\'s access to a repository.
 * @export
 * @interface TeamRepository
 */
export interface TeamRepository {
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof TeamRepository
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'node_id': string;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof TeamRepository
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'full_name': string;
    /**
     * 
     * @type {NullableLicenseSimple}
     * @memberof TeamRepository
     */
    'license': NullableLicenseSimple | null;
    /**
     * 
     * @type {number}
     * @memberof TeamRepository
     */
    'forks': number;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof TeamRepository
     */
    'permissions'?: RepositoryPermissions;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'role_name'?: string;
    /**
     * 
     * @type {NullableSimpleUser}
     * @memberof TeamRepository
     */
    'owner': NullableSimpleUser | null;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof TeamRepository
     */
    'private': boolean;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'description': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof TeamRepository
     */
    'fork': boolean;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'archive_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'contributors_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'git_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'languages_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'milestones_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'notifications_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'pulls_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'ssh_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'teams_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'mirror_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'language': string | null;
    /**
     * 
     * @type {number}
     * @memberof TeamRepository
     */
    'forks_count': number;
    /**
     * 
     * @type {number}
     * @memberof TeamRepository
     */
    'stargazers_count': number;
    /**
     * 
     * @type {number}
     * @memberof TeamRepository
     */
    'watchers_count': number;
    /**
     * 
     * @type {number}
     * @memberof TeamRepository
     */
    'size': number;
    /**
     * The default branch of the repository.
     * @type {string}
     * @memberof TeamRepository
     */
    'default_branch': string;
    /**
     * 
     * @type {number}
     * @memberof TeamRepository
     */
    'open_issues_count': number;
    /**
     * Whether this repository acts as a template that can be used to generate new repositories.
     * @type {boolean}
     * @memberof TeamRepository
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof TeamRepository
     */
    'topics'?: Array<string>;
    /**
     * Whether issues are enabled.
     * @type {boolean}
     * @memberof TeamRepository
     */
    'has_issues': boolean;
    /**
     * Whether projects are enabled.
     * @type {boolean}
     * @memberof TeamRepository
     */
    'has_projects': boolean;
    /**
     * Whether the wiki is enabled.
     * @type {boolean}
     * @memberof TeamRepository
     */
    'has_wiki': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TeamRepository
     */
    'has_pages': boolean;
    /**
     * Whether downloads are enabled.
     * @type {boolean}
     * @memberof TeamRepository
     */
    'has_downloads': boolean;
    /**
     * Whether the repository is archived.
     * @type {boolean}
     * @memberof TeamRepository
     */
    'archived': boolean;
    /**
     * Returns whether or not this repository disabled.
     * @type {boolean}
     * @memberof TeamRepository
     */
    'disabled': boolean;
    /**
     * The repository visibility: public, private, or internal.
     * @type {string}
     * @memberof TeamRepository
     */
    'visibility'?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'pushed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'updated_at': string | null;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof TeamRepository
     */
    'allow_rebase_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'temp_clone_token'?: string;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof TeamRepository
     */
    'allow_squash_merge'?: boolean;
    /**
     * Whether to allow Auto-merge to be used on pull requests.
     * @type {boolean}
     * @memberof TeamRepository
     */
    'allow_auto_merge'?: boolean;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof TeamRepository
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof TeamRepository
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow forking this repo
     * @type {boolean}
     * @memberof TeamRepository
     */
    'allow_forking'?: boolean;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof TeamRepository
     */
    'web_commit_signoff_required'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof TeamRepository
     */
    'subscribers_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof TeamRepository
     */
    'network_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof TeamRepository
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof TeamRepository
     */
    'watchers': number;
    /**
     * 
     * @type {string}
     * @memberof TeamRepository
     */
    'master_branch'?: string;
}
/**
 * The Relationship a Team has with a role.
 * @export
 * @interface TeamRoleAssignment
 */
export interface TeamRoleAssignment {
    /**
     * Determines if the team has a direct, indirect, or mixed relationship to a role
     * @type {string}
     * @memberof TeamRoleAssignment
     */
    'assignment'?: TeamRoleAssignmentAssignmentEnum;
    /**
     * 
     * @type {number}
     * @memberof TeamRoleAssignment
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof TeamRoleAssignment
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRoleAssignment
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRoleAssignment
     */
    'slug': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRoleAssignment
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof TeamRoleAssignment
     */
    'privacy'?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamRoleAssignment
     */
    'notification_setting'?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamRoleAssignment
     */
    'permission': string;
    /**
     * 
     * @type {TeamPermissions}
     * @memberof TeamRoleAssignment
     */
    'permissions'?: TeamPermissions;
    /**
     * 
     * @type {string}
     * @memberof TeamRoleAssignment
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRoleAssignment
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRoleAssignment
     */
    'members_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamRoleAssignment
     */
    'repositories_url': string;
    /**
     * 
     * @type {NullableTeamSimple}
     * @memberof TeamRoleAssignment
     */
    'parent': NullableTeamSimple | null;
}

export const TeamRoleAssignmentAssignmentEnum = {
    Direct: 'direct',
    Indirect: 'indirect',
    Mixed: 'mixed'
} as const;

export type TeamRoleAssignmentAssignmentEnum = typeof TeamRoleAssignmentAssignmentEnum[keyof typeof TeamRoleAssignmentAssignmentEnum];

/**
 * Groups of organization members that gives permissions on specified repositories.
 * @export
 * @interface TeamSimple
 */
export interface TeamSimple {
    /**
     * Unique identifier of the team
     * @type {number}
     * @memberof TeamSimple
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof TeamSimple
     */
    'node_id': string;
    /**
     * URL for the team
     * @type {string}
     * @memberof TeamSimple
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamSimple
     */
    'members_url': string;
    /**
     * Name of the team
     * @type {string}
     * @memberof TeamSimple
     */
    'name': string;
    /**
     * Description of the team
     * @type {string}
     * @memberof TeamSimple
     */
    'description': string | null;
    /**
     * Permission that the team will have for its repositories
     * @type {string}
     * @memberof TeamSimple
     */
    'permission': string;
    /**
     * The level of privacy this team should have
     * @type {string}
     * @memberof TeamSimple
     */
    'privacy'?: string;
    /**
     * The notification setting the team has set
     * @type {string}
     * @memberof TeamSimple
     */
    'notification_setting'?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamSimple
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamSimple
     */
    'repositories_url': string;
    /**
     * 
     * @type {string}
     * @memberof TeamSimple
     */
    'slug': string;
    /**
     * Distinguished Name (DN) that team maps to within LDAP environment
     * @type {string}
     * @memberof TeamSimple
     */
    'ldap_dn'?: string;
}
/**
 * Thread
 * @export
 * @interface Thread
 */
export interface Thread {
    /**
     * 
     * @type {string}
     * @memberof Thread
     */
    'id': string;
    /**
     * 
     * @type {MinimalRepository}
     * @memberof Thread
     */
    'repository': MinimalRepository;
    /**
     * 
     * @type {ThreadSubject}
     * @memberof Thread
     */
    'subject': ThreadSubject;
    /**
     * 
     * @type {string}
     * @memberof Thread
     */
    'reason': string;
    /**
     * 
     * @type {boolean}
     * @memberof Thread
     */
    'unread': boolean;
    /**
     * 
     * @type {string}
     * @memberof Thread
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Thread
     */
    'last_read_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof Thread
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Thread
     */
    'subscription_url': string;
}
/**
 * 
 * @export
 * @interface ThreadSubject
 */
export interface ThreadSubject {
    /**
     * 
     * @type {string}
     * @memberof ThreadSubject
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof ThreadSubject
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof ThreadSubject
     */
    'latest_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof ThreadSubject
     */
    'type': string;
}
/**
 * Thread Subscription
 * @export
 * @interface ThreadSubscription
 */
export interface ThreadSubscription {
    /**
     * 
     * @type {boolean}
     * @memberof ThreadSubscription
     */
    'subscribed': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ThreadSubscription
     */
    'ignored': boolean;
    /**
     * 
     * @type {string}
     * @memberof ThreadSubscription
     */
    'reason': string | null;
    /**
     * 
     * @type {string}
     * @memberof ThreadSubscription
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof ThreadSubscription
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof ThreadSubscription
     */
    'thread_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof ThreadSubscription
     */
    'repository_url'?: string;
}
/**
 * Timeline Assigned Issue Event
 * @export
 * @interface TimelineAssignedIssueEvent
 */
export interface TimelineAssignedIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof TimelineAssignedIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof TimelineAssignedIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineAssignedIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TimelineAssignedIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof TimelineAssignedIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineAssignedIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof TimelineAssignedIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof TimelineAssignedIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof TimelineAssignedIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TimelineAssignedIssueEvent
     */
    'assignee': SimpleUser;
}
/**
 * Timeline Comment Event
 * @export
 * @interface TimelineCommentEvent
 */
export interface TimelineCommentEvent {
    /**
     * 
     * @type {string}
     * @memberof TimelineCommentEvent
     */
    'event': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TimelineCommentEvent
     */
    'actor': SimpleUser;
    /**
     * Unique identifier of the issue comment
     * @type {number}
     * @memberof TimelineCommentEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof TimelineCommentEvent
     */
    'node_id': string;
    /**
     * URL for the issue comment
     * @type {string}
     * @memberof TimelineCommentEvent
     */
    'url': string;
    /**
     * Contents of the issue comment
     * @type {string}
     * @memberof TimelineCommentEvent
     */
    'body'?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineCommentEvent
     */
    'body_text'?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineCommentEvent
     */
    'body_html'?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineCommentEvent
     */
    'html_url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TimelineCommentEvent
     */
    'user': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof TimelineCommentEvent
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineCommentEvent
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineCommentEvent
     */
    'issue_url': string;
    /**
     * 
     * @type {AuthorAssociation}
     * @memberof TimelineCommentEvent
     */
    'author_association': AuthorAssociation;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof TimelineCommentEvent
     */
    'performed_via_github_app'?: NullableIntegration | null;
    /**
     * 
     * @type {ReactionRollup}
     * @memberof TimelineCommentEvent
     */
    'reactions'?: ReactionRollup;
}


/**
 * Timeline Commit Commented Event
 * @export
 * @interface TimelineCommitCommentedEvent
 */
export interface TimelineCommitCommentedEvent {
    /**
     * 
     * @type {string}
     * @memberof TimelineCommitCommentedEvent
     */
    'event'?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineCommitCommentedEvent
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineCommitCommentedEvent
     */
    'commit_id'?: string;
    /**
     * 
     * @type {Array<CommitComment>}
     * @memberof TimelineCommitCommentedEvent
     */
    'comments'?: Array<CommitComment>;
}
/**
 * Timeline Committed Event
 * @export
 * @interface TimelineCommittedEvent
 */
export interface TimelineCommittedEvent {
    /**
     * 
     * @type {string}
     * @memberof TimelineCommittedEvent
     */
    'event'?: string;
    /**
     * SHA for the commit
     * @type {string}
     * @memberof TimelineCommittedEvent
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineCommittedEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineCommittedEvent
     */
    'url': string;
    /**
     * 
     * @type {GitCommitAuthor}
     * @memberof TimelineCommittedEvent
     */
    'author': GitCommitAuthor;
    /**
     * 
     * @type {GitCommitAuthor}
     * @memberof TimelineCommittedEvent
     */
    'committer': GitCommitAuthor;
    /**
     * Message describing the purpose of the commit
     * @type {string}
     * @memberof TimelineCommittedEvent
     */
    'message': string;
    /**
     * 
     * @type {GitCommitTree}
     * @memberof TimelineCommittedEvent
     */
    'tree': GitCommitTree;
    /**
     * 
     * @type {Array<GitCommitParentsInner>}
     * @memberof TimelineCommittedEvent
     */
    'parents': Array<GitCommitParentsInner>;
    /**
     * 
     * @type {GitCommitVerification}
     * @memberof TimelineCommittedEvent
     */
    'verification': GitCommitVerification;
    /**
     * 
     * @type {string}
     * @memberof TimelineCommittedEvent
     */
    'html_url': string;
}
/**
 * Timeline Cross Referenced Event
 * @export
 * @interface TimelineCrossReferencedEvent
 */
export interface TimelineCrossReferencedEvent {
    /**
     * 
     * @type {string}
     * @memberof TimelineCrossReferencedEvent
     */
    'event': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TimelineCrossReferencedEvent
     */
    'actor'?: SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof TimelineCrossReferencedEvent
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineCrossReferencedEvent
     */
    'updated_at': string;
    /**
     * 
     * @type {TimelineCrossReferencedEventSource}
     * @memberof TimelineCrossReferencedEvent
     */
    'source': TimelineCrossReferencedEventSource;
}
/**
 * 
 * @export
 * @interface TimelineCrossReferencedEventSource
 */
export interface TimelineCrossReferencedEventSource {
    /**
     * 
     * @type {string}
     * @memberof TimelineCrossReferencedEventSource
     */
    'type'?: string;
    /**
     * 
     * @type {Issue}
     * @memberof TimelineCrossReferencedEventSource
     */
    'issue'?: Issue;
}
/**
 * Timeline Event
 * @export
 * @interface TimelineIssueEvents
 */
export interface TimelineIssueEvents {
    /**
     * 
     * @type {number}
     * @memberof TimelineIssueEvents
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TimelineIssueEvents
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof TimelineIssueEvents
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {LabeledIssueEventLabel}
     * @memberof TimelineIssueEvents
     */
    'label': LabeledIssueEventLabel;
    /**
     * 
     * @type {MilestonedIssueEventMilestone}
     * @memberof TimelineIssueEvents
     */
    'milestone': MilestonedIssueEventMilestone;
    /**
     * 
     * @type {RenamedIssueEventRename}
     * @memberof TimelineIssueEvents
     */
    'rename': RenamedIssueEventRename;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TimelineIssueEvents
     */
    'review_requester': SimpleUser;
    /**
     * 
     * @type {Team}
     * @memberof TimelineIssueEvents
     */
    'requested_team'?: Team;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TimelineIssueEvents
     */
    'requested_reviewer'?: SimpleUser;
    /**
     * 
     * @type {ReviewDismissedIssueEventDismissedReview}
     * @memberof TimelineIssueEvents
     */
    'dismissed_review': ReviewDismissedIssueEventDismissedReview;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'lock_reason': string | null;
    /**
     * 
     * @type {AddedToProjectIssueEventProjectCard}
     * @memberof TimelineIssueEvents
     */
    'project_card'?: AddedToProjectIssueEventProjectCard;
    /**
     * The text of the review.
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'body_text'?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'body_html'?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'html_url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TimelineIssueEvents
     */
    'user': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'issue_url': string;
    /**
     * 
     * @type {AuthorAssociation}
     * @memberof TimelineIssueEvents
     */
    'author_association': AuthorAssociation;
    /**
     * 
     * @type {ReactionRollup}
     * @memberof TimelineIssueEvents
     */
    'reactions'?: ReactionRollup;
    /**
     * 
     * @type {TimelineCrossReferencedEventSource}
     * @memberof TimelineIssueEvents
     */
    'source': TimelineCrossReferencedEventSource;
    /**
     * SHA for the commit
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'sha': string;
    /**
     * 
     * @type {GitCommitAuthor}
     * @memberof TimelineIssueEvents
     */
    'author': GitCommitAuthor;
    /**
     * 
     * @type {GitCommitAuthor}
     * @memberof TimelineIssueEvents
     */
    'committer': GitCommitAuthor;
    /**
     * Message describing the purpose of the commit
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'message': string;
    /**
     * 
     * @type {GitCommitTree}
     * @memberof TimelineIssueEvents
     */
    'tree': GitCommitTree;
    /**
     * 
     * @type {Array<GitCommitParentsInner>}
     * @memberof TimelineIssueEvents
     */
    'parents': Array<GitCommitParentsInner>;
    /**
     * 
     * @type {GitCommitVerification}
     * @memberof TimelineIssueEvents
     */
    'verification': GitCommitVerification;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'state': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'pull_request_url': string;
    /**
     * 
     * @type {TimelineReviewedEventLinks}
     * @memberof TimelineIssueEvents
     */
    '_links': TimelineReviewedEventLinks;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'submitted_at'?: string;
    /**
     * 
     * @type {Array<CommitComment>}
     * @memberof TimelineIssueEvents
     */
    'comments'?: Array<CommitComment>;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TimelineIssueEvents
     */
    'assignee': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof TimelineIssueEvents
     */
    'state_reason'?: string | null;
}


/**
 * Timeline Line Commented Event
 * @export
 * @interface TimelineLineCommentedEvent
 */
export interface TimelineLineCommentedEvent {
    /**
     * 
     * @type {string}
     * @memberof TimelineLineCommentedEvent
     */
    'event'?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineLineCommentedEvent
     */
    'node_id'?: string;
    /**
     * 
     * @type {Array<PullRequestReviewComment>}
     * @memberof TimelineLineCommentedEvent
     */
    'comments'?: Array<PullRequestReviewComment>;
}
/**
 * Timeline Reviewed Event
 * @export
 * @interface TimelineReviewedEvent
 */
export interface TimelineReviewedEvent {
    /**
     * 
     * @type {string}
     * @memberof TimelineReviewedEvent
     */
    'event': string;
    /**
     * Unique identifier of the review
     * @type {number}
     * @memberof TimelineReviewedEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof TimelineReviewedEvent
     */
    'node_id': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TimelineReviewedEvent
     */
    'user': SimpleUser;
    /**
     * The text of the review.
     * @type {string}
     * @memberof TimelineReviewedEvent
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof TimelineReviewedEvent
     */
    'state': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineReviewedEvent
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineReviewedEvent
     */
    'pull_request_url': string;
    /**
     * 
     * @type {TimelineReviewedEventLinks}
     * @memberof TimelineReviewedEvent
     */
    '_links': TimelineReviewedEventLinks;
    /**
     * 
     * @type {string}
     * @memberof TimelineReviewedEvent
     */
    'submitted_at'?: string;
    /**
     * A commit SHA for the review.
     * @type {string}
     * @memberof TimelineReviewedEvent
     */
    'commit_id': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineReviewedEvent
     */
    'body_html'?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineReviewedEvent
     */
    'body_text'?: string;
    /**
     * 
     * @type {AuthorAssociation}
     * @memberof TimelineReviewedEvent
     */
    'author_association': AuthorAssociation;
}


/**
 * 
 * @export
 * @interface TimelineReviewedEventLinks
 */
export interface TimelineReviewedEventLinks {
    /**
     * 
     * @type {TimelineReviewedEventLinksHtml}
     * @memberof TimelineReviewedEventLinks
     */
    'html': TimelineReviewedEventLinksHtml;
    /**
     * 
     * @type {TimelineReviewedEventLinksHtml}
     * @memberof TimelineReviewedEventLinks
     */
    'pull_request': TimelineReviewedEventLinksHtml;
}
/**
 * 
 * @export
 * @interface TimelineReviewedEventLinksHtml
 */
export interface TimelineReviewedEventLinksHtml {
    /**
     * 
     * @type {string}
     * @memberof TimelineReviewedEventLinksHtml
     */
    'href': string;
}
/**
 * Timeline Unassigned Issue Event
 * @export
 * @interface TimelineUnassignedIssueEvent
 */
export interface TimelineUnassignedIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof TimelineUnassignedIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof TimelineUnassignedIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineUnassignedIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TimelineUnassignedIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof TimelineUnassignedIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof TimelineUnassignedIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof TimelineUnassignedIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof TimelineUnassignedIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof TimelineUnassignedIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof TimelineUnassignedIssueEvent
     */
    'assignee': SimpleUser;
}
/**
 * A topic aggregates entities that are related to a subject.
 * @export
 * @interface Topic
 */
export interface Topic {
    /**
     * 
     * @type {Array<string>}
     * @memberof Topic
     */
    'names': Array<string>;
}
/**
 * Topic Search Result Item
 * @export
 * @interface TopicSearchResultItem
 */
export interface TopicSearchResultItem {
    /**
     * 
     * @type {string}
     * @memberof TopicSearchResultItem
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof TopicSearchResultItem
     */
    'display_name': string | null;
    /**
     * 
     * @type {string}
     * @memberof TopicSearchResultItem
     */
    'short_description': string | null;
    /**
     * 
     * @type {string}
     * @memberof TopicSearchResultItem
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof TopicSearchResultItem
     */
    'created_by': string | null;
    /**
     * 
     * @type {string}
     * @memberof TopicSearchResultItem
     */
    'released': string | null;
    /**
     * 
     * @type {string}
     * @memberof TopicSearchResultItem
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof TopicSearchResultItem
     */
    'updated_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof TopicSearchResultItem
     */
    'featured': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TopicSearchResultItem
     */
    'curated': boolean;
    /**
     * 
     * @type {number}
     * @memberof TopicSearchResultItem
     */
    'score': number;
    /**
     * 
     * @type {number}
     * @memberof TopicSearchResultItem
     */
    'repository_count'?: number | null;
    /**
     * 
     * @type {string}
     * @memberof TopicSearchResultItem
     */
    'logo_url'?: string | null;
    /**
     * 
     * @type {Array<SearchResultTextMatchesInner>}
     * @memberof TopicSearchResultItem
     */
    'text_matches'?: Array<SearchResultTextMatchesInner>;
    /**
     * 
     * @type {Array<TopicSearchResultItemRelatedInner>}
     * @memberof TopicSearchResultItem
     */
    'related'?: Array<TopicSearchResultItemRelatedInner> | null;
    /**
     * 
     * @type {Array<TopicSearchResultItemRelatedInner>}
     * @memberof TopicSearchResultItem
     */
    'aliases'?: Array<TopicSearchResultItemRelatedInner> | null;
}
/**
 * 
 * @export
 * @interface TopicSearchResultItemRelatedInner
 */
export interface TopicSearchResultItemRelatedInner {
    /**
     * 
     * @type {TopicSearchResultItemRelatedInnerTopicRelation}
     * @memberof TopicSearchResultItemRelatedInner
     */
    'topic_relation'?: TopicSearchResultItemRelatedInnerTopicRelation;
}
/**
 * 
 * @export
 * @interface TopicSearchResultItemRelatedInnerTopicRelation
 */
export interface TopicSearchResultItemRelatedInnerTopicRelation {
    /**
     * 
     * @type {number}
     * @memberof TopicSearchResultItemRelatedInnerTopicRelation
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof TopicSearchResultItemRelatedInnerTopicRelation
     */
    'name'?: string;
    /**
     * 
     * @type {number}
     * @memberof TopicSearchResultItemRelatedInnerTopicRelation
     */
    'topic_id'?: number;
    /**
     * 
     * @type {string}
     * @memberof TopicSearchResultItemRelatedInnerTopicRelation
     */
    'relation_type'?: string;
}
/**
 * 
 * @export
 * @interface Traffic
 */
export interface Traffic {
    /**
     * 
     * @type {string}
     * @memberof Traffic
     */
    'timestamp': string;
    /**
     * 
     * @type {number}
     * @memberof Traffic
     */
    'uniques': number;
    /**
     * 
     * @type {number}
     * @memberof Traffic
     */
    'count': number;
}
/**
 * Unassigned Issue Event
 * @export
 * @interface UnassignedIssueEvent
 */
export interface UnassignedIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof UnassignedIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof UnassignedIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof UnassignedIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof UnassignedIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof UnassignedIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof UnassignedIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof UnassignedIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof UnassignedIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof UnassignedIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof UnassignedIssueEvent
     */
    'assignee': SimpleUser;
    /**
     * 
     * @type {SimpleUser}
     * @memberof UnassignedIssueEvent
     */
    'assigner': SimpleUser;
}
/**
 * Unlabeled Issue Event
 * @export
 * @interface UnlabeledIssueEvent
 */
export interface UnlabeledIssueEvent {
    /**
     * 
     * @type {number}
     * @memberof UnlabeledIssueEvent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof UnlabeledIssueEvent
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof UnlabeledIssueEvent
     */
    'url': string;
    /**
     * 
     * @type {SimpleUser}
     * @memberof UnlabeledIssueEvent
     */
    'actor': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof UnlabeledIssueEvent
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof UnlabeledIssueEvent
     */
    'commit_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof UnlabeledIssueEvent
     */
    'commit_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof UnlabeledIssueEvent
     */
    'created_at': string;
    /**
     * 
     * @type {NullableIntegration}
     * @memberof UnlabeledIssueEvent
     */
    'performed_via_github_app': NullableIntegration | null;
    /**
     * 
     * @type {LabeledIssueEventLabel}
     * @memberof UnlabeledIssueEvent
     */
    'label': LabeledIssueEventLabel;
}
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    'deleted'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'type'?: UserTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'url'?: string;
}

export const UserTypeEnum = {
    Bot: 'Bot',
    User: 'User',
    Organization: 'Organization'
} as const;

export type UserTypeEnum = typeof UserTypeEnum[keyof typeof UserTypeEnum];

/**
 * 
 * @export
 * @interface User1
 */
export interface User1 {
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User1
     */
    'deleted'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof User1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User1
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'type'?: User1TypeEnum;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User1
     */
    'user_view_type'?: string;
}

export const User1TypeEnum = {
    Bot: 'Bot',
    User: 'User',
    Organization: 'Organization'
} as const;

export type User1TypeEnum = typeof User1TypeEnum[keyof typeof User1TypeEnum];

/**
 * 
 * @export
 * @interface User2
 */
export interface User2 {
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User2
     */
    'deleted'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof User2
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User2
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'type'?: User2TypeEnum;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User2
     */
    'user_view_type'?: string;
}

export const User2TypeEnum = {
    Bot: 'Bot',
    User: 'User',
    Organization: 'Organization'
} as const;

export type User2TypeEnum = typeof User2TypeEnum[keyof typeof User2TypeEnum];

/**
 * 
 * @export
 * @interface User3
 */
export interface User3 {
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User3
     */
    'deleted'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof User3
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User3
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'type'?: User3TypeEnum;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User3
     */
    'user_view_type'?: string;
}

export const User3TypeEnum = {
    Bot: 'Bot',
    User: 'User',
    Organization: 'Organization',
    Mannequin: 'Mannequin'
} as const;

export type User3TypeEnum = typeof User3TypeEnum[keyof typeof User3TypeEnum];

/**
 * 
 * @export
 * @interface User4
 */
export interface User4 {
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User4
     */
    'deleted'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof User4
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User4
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'type'?: User4TypeEnum;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User4
     */
    'user_view_type'?: string;
}

export const User4TypeEnum = {
    Bot: 'Bot',
    User: 'User',
    Organization: 'Organization',
    Mannequin: 'Mannequin'
} as const;

export type User4TypeEnum = typeof User4TypeEnum[keyof typeof User4TypeEnum];

/**
 * 
 * @export
 * @interface User5
 */
export interface User5 {
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User5
     */
    'deleted'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof User5
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User5
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'type'?: User5TypeEnum;
    /**
     * 
     * @type {string}
     * @memberof User5
     */
    'url'?: string;
}

export const User5TypeEnum = {
    Bot: 'Bot',
    User: 'User',
    Organization: 'Organization',
    Mannequin: 'Mannequin'
} as const;

export type User5TypeEnum = typeof User5TypeEnum[keyof typeof User5TypeEnum];

/**
 * 
 * @export
 * @interface User6
 */
export interface User6 {
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User6
     */
    'deleted'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof User6
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'login'?: string;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User6
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'type'?: User6TypeEnum;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User6
     */
    'user_view_type'?: string;
}

export const User6TypeEnum = {
    Bot: 'Bot',
    User: 'User',
    Organization: 'Organization'
} as const;

export type User6TypeEnum = typeof User6TypeEnum[keyof typeof User6TypeEnum];

/**
 * 
 * @export
 * @interface User7
 */
export interface User7 {
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User7
     */
    'deleted'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof User7
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User7
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'type'?: User7TypeEnum;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'user_view_type'?: string;
    /**
     * 
     * @type {string}
     * @memberof User7
     */
    'url'?: string;
}

export const User7TypeEnum = {
    Bot: 'Bot',
    User: 'User',
    Organization: 'Organization',
    Mannequin: 'Mannequin'
} as const;

export type User7TypeEnum = typeof User7TypeEnum[keyof typeof User7TypeEnum];

/**
 * 
 * @export
 * @interface User8
 */
export interface User8 {
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User8
     */
    'deleted'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof User8
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'login'?: string;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User8
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'type'?: User8TypeEnum;
    /**
     * 
     * @type {string}
     * @memberof User8
     */
    'url'?: string;
}

export const User8TypeEnum = {
    Bot: 'Bot',
    User: 'User',
    Organization: 'Organization'
} as const;

export type User8TypeEnum = typeof User8TypeEnum[keyof typeof User8TypeEnum];

/**
 * User Marketplace Purchase
 * @export
 * @interface UserMarketplacePurchase
 */
export interface UserMarketplacePurchase {
    /**
     * 
     * @type {string}
     * @memberof UserMarketplacePurchase
     */
    'billing_cycle': string;
    /**
     * 
     * @type {string}
     * @memberof UserMarketplacePurchase
     */
    'next_billing_date': string | null;
    /**
     * 
     * @type {number}
     * @memberof UserMarketplacePurchase
     */
    'unit_count': number | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserMarketplacePurchase
     */
    'on_free_trial': boolean;
    /**
     * 
     * @type {string}
     * @memberof UserMarketplacePurchase
     */
    'free_trial_ends_on': string | null;
    /**
     * 
     * @type {string}
     * @memberof UserMarketplacePurchase
     */
    'updated_at': string | null;
    /**
     * 
     * @type {MarketplaceAccount}
     * @memberof UserMarketplacePurchase
     */
    'account': MarketplaceAccount;
    /**
     * 
     * @type {MarketplaceListingPlan}
     * @memberof UserMarketplacePurchase
     */
    'plan': MarketplaceListingPlan;
}
/**
 * The Relationship a User has with a role.
 * @export
 * @interface UserRoleAssignment
 */
export interface UserRoleAssignment {
    /**
     * Determines if the user has a direct, indirect, or mixed relationship to a role
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'assignment'?: UserRoleAssignmentAssignmentEnum;
    /**
     * Team the user has gotten the role through
     * @type {Array<TeamSimple>}
     * @memberof UserRoleAssignment
     */
    'inherited_from'?: Array<TeamSimple>;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'name'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof UserRoleAssignment
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'gravatar_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'followers_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'following_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'starred_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'subscriptions_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'organizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'received_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'type': string;
    /**
     * 
     * @type {boolean}
     * @memberof UserRoleAssignment
     */
    'site_admin': boolean;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'starred_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserRoleAssignment
     */
    'user_view_type'?: string;
}

export const UserRoleAssignmentAssignmentEnum = {
    Direct: 'direct',
    Indirect: 'indirect',
    Mixed: 'mixed'
} as const;

export type UserRoleAssignmentAssignmentEnum = typeof UserRoleAssignmentAssignmentEnum[keyof typeof UserRoleAssignmentAssignmentEnum];

/**
 * User Search Result Item
 * @export
 * @interface UserSearchResultItem
 */
export interface UserSearchResultItem {
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'login': string;
    /**
     * 
     * @type {number}
     * @memberof UserSearchResultItem
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'gravatar_id': string | null;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'followers_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'subscriptions_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'organizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'repos_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'received_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'type': string;
    /**
     * 
     * @type {number}
     * @memberof UserSearchResultItem
     */
    'score': number;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'following_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'starred_url': string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'events_url': string;
    /**
     * 
     * @type {number}
     * @memberof UserSearchResultItem
     */
    'public_repos'?: number;
    /**
     * 
     * @type {number}
     * @memberof UserSearchResultItem
     */
    'public_gists'?: number;
    /**
     * 
     * @type {number}
     * @memberof UserSearchResultItem
     */
    'followers'?: number;
    /**
     * 
     * @type {number}
     * @memberof UserSearchResultItem
     */
    'following'?: number;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'updated_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'name'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'bio'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'location'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserSearchResultItem
     */
    'site_admin': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserSearchResultItem
     */
    'hireable'?: boolean | null;
    /**
     * 
     * @type {Array<SearchResultTextMatchesInner>}
     * @memberof UserSearchResultItem
     */
    'text_matches'?: Array<SearchResultTextMatchesInner>;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'blog'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'company'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'suspended_at'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserSearchResultItem
     */
    'user_view_type'?: string;
}
/**
 * @type UsersGetByUsername200Response
 * @export
 */
export type UsersGetByUsername200Response = { user_view_type: 'private' } & PrivateUser | { user_view_type: 'public' } & PublicUser;

/**
 * Validation Error
 * @export
 * @interface ValidationError
 */
export interface ValidationError {
    /**
     * 
     * @type {string}
     * @memberof ValidationError
     */
    'message': string;
    /**
     * 
     * @type {string}
     * @memberof ValidationError
     */
    'documentation_url': string;
    /**
     * 
     * @type {Array<ValidationErrorErrorsInner>}
     * @memberof ValidationError
     */
    'errors'?: Array<ValidationErrorErrorsInner>;
}
/**
 * 
 * @export
 * @interface ValidationErrorErrorsInner
 */
export interface ValidationErrorErrorsInner {
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorErrorsInner
     */
    'resource'?: string;
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorErrorsInner
     */
    'field'?: string;
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorErrorsInner
     */
    'message'?: string;
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorErrorsInner
     */
    'code': string;
    /**
     * 
     * @type {number}
     * @memberof ValidationErrorErrorsInner
     */
    'index'?: number;
    /**
     * 
     * @type {ValidationErrorErrorsInnerValue}
     * @memberof ValidationErrorErrorsInner
     */
    'value'?: ValidationErrorErrorsInnerValue;
}
/**
 * @type ValidationErrorErrorsInnerValue
 * @export
 */
export type ValidationErrorErrorsInnerValue = Array<string> | number | string;

/**
 * Validation Error Simple
 * @export
 * @interface ValidationErrorSimple
 */
export interface ValidationErrorSimple {
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorSimple
     */
    'message': string;
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorSimple
     */
    'documentation_url': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ValidationErrorSimple
     */
    'errors'?: Array<string>;
}
/**
 * 
 * @export
 * @interface Verification
 */
export interface Verification {
    /**
     * 
     * @type {boolean}
     * @memberof Verification
     */
    'verified': boolean;
    /**
     * 
     * @type {string}
     * @memberof Verification
     */
    'reason': string;
    /**
     * 
     * @type {string}
     * @memberof Verification
     */
    'payload': string | null;
    /**
     * 
     * @type {string}
     * @memberof Verification
     */
    'signature': string | null;
    /**
     * 
     * @type {string}
     * @memberof Verification
     */
    'verified_at': string | null;
}
/**
 * View Traffic
 * @export
 * @interface ViewTraffic
 */
export interface ViewTraffic {
    /**
     * 
     * @type {number}
     * @memberof ViewTraffic
     */
    'count': number;
    /**
     * 
     * @type {number}
     * @memberof ViewTraffic
     */
    'uniques': number;
    /**
     * 
     * @type {Array<Traffic>}
     * @memberof ViewTraffic
     */
    'views': Array<Traffic>;
}
/**
 * A vulnerability describing the product and its affected versions within a GitHub Security Advisory.
 * @export
 * @interface Vulnerability
 */
export interface Vulnerability {
    /**
     * 
     * @type {VulnerabilityPackage}
     * @memberof Vulnerability
     */
    'package': VulnerabilityPackage | null;
    /**
     * The range of the package versions affected by the vulnerability.
     * @type {string}
     * @memberof Vulnerability
     */
    'vulnerable_version_range': string | null;
    /**
     * The package version that resolves the vulnerability.
     * @type {string}
     * @memberof Vulnerability
     */
    'first_patched_version': string | null;
    /**
     * The functions in the package that are affected by the vulnerability.
     * @type {Array<string>}
     * @memberof Vulnerability
     */
    'vulnerable_functions': Array<string> | null;
}
/**
 * The name of the package affected by the vulnerability.
 * @export
 * @interface VulnerabilityPackage
 */
export interface VulnerabilityPackage {
    /**
     * 
     * @type {SecurityAdvisoryEcosystems}
     * @memberof VulnerabilityPackage
     */
    'ecosystem': SecurityAdvisoryEcosystems;
    /**
     * The unique package name within its ecosystem.
     * @type {string}
     * @memberof VulnerabilityPackage
     */
    'name': string | null;
}


/**
 * The webhook that is being pinged
 * @export
 * @interface Webhook
 */
export interface Webhook {
    /**
     * Determines whether the hook is actually triggered for the events it subscribes to.
     * @type {boolean}
     * @memberof Webhook
     */
    'active': boolean;
    /**
     * Only included for GitHub Apps. When you register a new GitHub App, GitHub sends a ping event to the webhook URL you specified during registration. The GitHub App ID sent in this field is required for authenticating an app.
     * @type {number}
     * @memberof Webhook
     */
    'app_id'?: number;
    /**
     * 
     * @type {WebhookConfig}
     * @memberof Webhook
     */
    'config': WebhookConfig;
    /**
     * 
     * @type {string}
     * @memberof Webhook
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof Webhook
     */
    'deliveries_url'?: string;
    /**
     * Determines what events the hook is triggered for. Default: [\'push\'].
     * @type {Array<string>}
     * @memberof Webhook
     */
    'events': Array<string>;
    /**
     * Unique identifier of the webhook.
     * @type {number}
     * @memberof Webhook
     */
    'id': number;
    /**
     * 
     * @type {HookResponse}
     * @memberof Webhook
     */
    'last_response'?: HookResponse;
    /**
     * The type of webhook. The only valid value is \'web\'.
     * @type {string}
     * @memberof Webhook
     */
    'name': WebhookNameEnum;
    /**
     * 
     * @type {string}
     * @memberof Webhook
     */
    'ping_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Webhook
     */
    'test_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof Webhook
     */
    'type': string;
    /**
     * 
     * @type {string}
     * @memberof Webhook
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Webhook
     */
    'url'?: string;
}

export const WebhookNameEnum = {
    Web: 'web'
} as const;

export type WebhookNameEnum = typeof WebhookNameEnum[keyof typeof WebhookNameEnum];

/**
 * 
 * @export
 * @interface WebhookBranchProtectionConfigurationDisabled
 */
export interface WebhookBranchProtectionConfigurationDisabled {
    /**
     * 
     * @type {string}
     * @memberof WebhookBranchProtectionConfigurationDisabled
     */
    'action': WebhookBranchProtectionConfigurationDisabledActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookBranchProtectionConfigurationDisabled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookBranchProtectionConfigurationDisabled
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookBranchProtectionConfigurationDisabled
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookBranchProtectionConfigurationDisabled
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookBranchProtectionConfigurationDisabled
     */
    'sender': SimpleUser;
}

export const WebhookBranchProtectionConfigurationDisabledActionEnum = {
    Disabled: 'disabled'
} as const;

export type WebhookBranchProtectionConfigurationDisabledActionEnum = typeof WebhookBranchProtectionConfigurationDisabledActionEnum[keyof typeof WebhookBranchProtectionConfigurationDisabledActionEnum];

/**
 * 
 * @export
 * @interface WebhookBranchProtectionConfigurationEnabled
 */
export interface WebhookBranchProtectionConfigurationEnabled {
    /**
     * 
     * @type {string}
     * @memberof WebhookBranchProtectionConfigurationEnabled
     */
    'action': WebhookBranchProtectionConfigurationEnabledActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookBranchProtectionConfigurationEnabled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookBranchProtectionConfigurationEnabled
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookBranchProtectionConfigurationEnabled
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookBranchProtectionConfigurationEnabled
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookBranchProtectionConfigurationEnabled
     */
    'sender': SimpleUser;
}

export const WebhookBranchProtectionConfigurationEnabledActionEnum = {
    Enabled: 'enabled'
} as const;

export type WebhookBranchProtectionConfigurationEnabledActionEnum = typeof WebhookBranchProtectionConfigurationEnabledActionEnum[keyof typeof WebhookBranchProtectionConfigurationEnabledActionEnum];

/**
 * 
 * @export
 * @interface WebhookBranchProtectionRuleCreated
 */
export interface WebhookBranchProtectionRuleCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookBranchProtectionRuleCreated
     */
    'action': WebhookBranchProtectionRuleCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookBranchProtectionRuleCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookBranchProtectionRuleCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookBranchProtectionRuleCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookBranchProtectionRuleCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {WebhooksRule}
     * @memberof WebhookBranchProtectionRuleCreated
     */
    'rule': WebhooksRule;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookBranchProtectionRuleCreated
     */
    'sender': SimpleUser;
}

export const WebhookBranchProtectionRuleCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookBranchProtectionRuleCreatedActionEnum = typeof WebhookBranchProtectionRuleCreatedActionEnum[keyof typeof WebhookBranchProtectionRuleCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookBranchProtectionRuleDeleted
 */
export interface WebhookBranchProtectionRuleDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookBranchProtectionRuleDeleted
     */
    'action': WebhookBranchProtectionRuleDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookBranchProtectionRuleDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookBranchProtectionRuleDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookBranchProtectionRuleDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookBranchProtectionRuleDeleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {WebhooksRule}
     * @memberof WebhookBranchProtectionRuleDeleted
     */
    'rule': WebhooksRule;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookBranchProtectionRuleDeleted
     */
    'sender': SimpleUser;
}

export const WebhookBranchProtectionRuleDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookBranchProtectionRuleDeletedActionEnum = typeof WebhookBranchProtectionRuleDeletedActionEnum[keyof typeof WebhookBranchProtectionRuleDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookBranchProtectionRuleEdited
 */
export interface WebhookBranchProtectionRuleEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookBranchProtectionRuleEdited
     */
    'action': WebhookBranchProtectionRuleEditedActionEnum;
    /**
     * 
     * @type {WebhookBranchProtectionRuleEditedChanges}
     * @memberof WebhookBranchProtectionRuleEdited
     */
    'changes'?: WebhookBranchProtectionRuleEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookBranchProtectionRuleEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookBranchProtectionRuleEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookBranchProtectionRuleEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookBranchProtectionRuleEdited
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {WebhooksRule}
     * @memberof WebhookBranchProtectionRuleEdited
     */
    'rule': WebhooksRule;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookBranchProtectionRuleEdited
     */
    'sender': SimpleUser;
}

export const WebhookBranchProtectionRuleEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookBranchProtectionRuleEditedActionEnum = typeof WebhookBranchProtectionRuleEditedActionEnum[keyof typeof WebhookBranchProtectionRuleEditedActionEnum];

/**
 * If the action was `edited`, the changes to the rule.
 * @export
 * @interface WebhookBranchProtectionRuleEditedChanges
 */
export interface WebhookBranchProtectionRuleEditedChanges {
    /**
     * 
     * @type {WebhookBranchProtectionRuleEditedChangesAdminEnforced}
     * @memberof WebhookBranchProtectionRuleEditedChanges
     */
    'admin_enforced'?: WebhookBranchProtectionRuleEditedChangesAdminEnforced;
    /**
     * 
     * @type {WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames}
     * @memberof WebhookBranchProtectionRuleEditedChanges
     */
    'authorized_actor_names'?: WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames;
    /**
     * 
     * @type {WebhookBranchProtectionRuleEditedChangesAdminEnforced}
     * @memberof WebhookBranchProtectionRuleEditedChanges
     */
    'authorized_actors_only'?: WebhookBranchProtectionRuleEditedChangesAdminEnforced;
    /**
     * 
     * @type {WebhookBranchProtectionRuleEditedChangesAdminEnforced}
     * @memberof WebhookBranchProtectionRuleEditedChanges
     */
    'authorized_dismissal_actors_only'?: WebhookBranchProtectionRuleEditedChangesAdminEnforced;
    /**
     * 
     * @type {WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel}
     * @memberof WebhookBranchProtectionRuleEditedChanges
     */
    'linear_history_requirement_enforcement_level'?: WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel;
    /**
     * 
     * @type {WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel}
     * @memberof WebhookBranchProtectionRuleEditedChanges
     */
    'lock_branch_enforcement_level'?: WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel;
    /**
     * 
     * @type {WebhookBranchProtectionRuleEditedChangesAdminEnforced}
     * @memberof WebhookBranchProtectionRuleEditedChanges
     */
    'lock_allows_fork_sync'?: WebhookBranchProtectionRuleEditedChangesAdminEnforced;
    /**
     * 
     * @type {WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel}
     * @memberof WebhookBranchProtectionRuleEditedChanges
     */
    'pull_request_reviews_enforcement_level'?: WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel;
    /**
     * 
     * @type {WebhookBranchProtectionRuleEditedChangesAdminEnforced}
     * @memberof WebhookBranchProtectionRuleEditedChanges
     */
    'require_last_push_approval'?: WebhookBranchProtectionRuleEditedChangesAdminEnforced;
    /**
     * 
     * @type {WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames}
     * @memberof WebhookBranchProtectionRuleEditedChanges
     */
    'required_status_checks'?: WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames;
    /**
     * 
     * @type {WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel}
     * @memberof WebhookBranchProtectionRuleEditedChanges
     */
    'required_status_checks_enforcement_level'?: WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel;
}
/**
 * 
 * @export
 * @interface WebhookBranchProtectionRuleEditedChangesAdminEnforced
 */
export interface WebhookBranchProtectionRuleEditedChangesAdminEnforced {
    /**
     * 
     * @type {boolean}
     * @memberof WebhookBranchProtectionRuleEditedChangesAdminEnforced
     */
    'from': boolean | null;
}
/**
 * 
 * @export
 * @interface WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames
 */
export interface WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames {
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames
     */
    'from': Array<string>;
}
/**
 * 
 * @export
 * @interface WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel
 */
export interface WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel {
    /**
     * 
     * @type {string}
     * @memberof WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel
     */
    'from': WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevelFromEnum;
}

export const WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevelFromEnum = {
    Off: 'off',
    NonAdmins: 'non_admins',
    Everyone: 'everyone'
} as const;

export type WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevelFromEnum = typeof WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevelFromEnum[keyof typeof WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevelFromEnum];

/**
 * 
 * @export
 * @interface WebhookCheckRunCompleted
 */
export interface WebhookCheckRunCompleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckRunCompleted
     */
    'action'?: WebhookCheckRunCompletedActionEnum;
    /**
     * 
     * @type {CheckRunWithSimpleCheckSuite}
     * @memberof WebhookCheckRunCompleted
     */
    'check_run': CheckRunWithSimpleCheckSuite;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCheckRunCompleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCheckRunCompleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCheckRunCompleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCheckRunCompleted
     */
    'sender': SimpleUser;
}

export const WebhookCheckRunCompletedActionEnum = {
    Completed: 'completed'
} as const;

export type WebhookCheckRunCompletedActionEnum = typeof WebhookCheckRunCompletedActionEnum[keyof typeof WebhookCheckRunCompletedActionEnum];

/**
 * The check_run.completed webhook encoded with URL encoding
 * @export
 * @interface WebhookCheckRunCompletedFormEncoded
 */
export interface WebhookCheckRunCompletedFormEncoded {
    /**
     * A URL-encoded string of the check_run.completed JSON payload. The decoded payload is a JSON object.
     * @type {string}
     * @memberof WebhookCheckRunCompletedFormEncoded
     */
    'payload': string;
}
/**
 * 
 * @export
 * @interface WebhookCheckRunCreated
 */
export interface WebhookCheckRunCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckRunCreated
     */
    'action'?: WebhookCheckRunCreatedActionEnum;
    /**
     * 
     * @type {CheckRunWithSimpleCheckSuite}
     * @memberof WebhookCheckRunCreated
     */
    'check_run': CheckRunWithSimpleCheckSuite;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCheckRunCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCheckRunCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCheckRunCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCheckRunCreated
     */
    'sender': SimpleUser;
}

export const WebhookCheckRunCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookCheckRunCreatedActionEnum = typeof WebhookCheckRunCreatedActionEnum[keyof typeof WebhookCheckRunCreatedActionEnum];

/**
 * The check_run.created webhook encoded with URL encoding
 * @export
 * @interface WebhookCheckRunCreatedFormEncoded
 */
export interface WebhookCheckRunCreatedFormEncoded {
    /**
     * A URL-encoded string of the check_run.created JSON payload. The decoded payload is a JSON object.
     * @type {string}
     * @memberof WebhookCheckRunCreatedFormEncoded
     */
    'payload': string;
}
/**
 * 
 * @export
 * @interface WebhookCheckRunRequestedAction
 */
export interface WebhookCheckRunRequestedAction {
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckRunRequestedAction
     */
    'action': WebhookCheckRunRequestedActionActionEnum;
    /**
     * 
     * @type {CheckRunWithSimpleCheckSuite}
     * @memberof WebhookCheckRunRequestedAction
     */
    'check_run': CheckRunWithSimpleCheckSuite;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCheckRunRequestedAction
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCheckRunRequestedAction
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCheckRunRequestedAction
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {WebhookCheckRunRequestedActionRequestedAction}
     * @memberof WebhookCheckRunRequestedAction
     */
    'requested_action'?: WebhookCheckRunRequestedActionRequestedAction;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCheckRunRequestedAction
     */
    'sender': SimpleUser;
}

export const WebhookCheckRunRequestedActionActionEnum = {
    RequestedAction: 'requested_action'
} as const;

export type WebhookCheckRunRequestedActionActionEnum = typeof WebhookCheckRunRequestedActionActionEnum[keyof typeof WebhookCheckRunRequestedActionActionEnum];

/**
 * The check_run.requested_action webhook encoded with URL encoding
 * @export
 * @interface WebhookCheckRunRequestedActionFormEncoded
 */
export interface WebhookCheckRunRequestedActionFormEncoded {
    /**
     * A URL-encoded string of the check_run.requested_action JSON payload. The decoded payload is a JSON object.
     * @type {string}
     * @memberof WebhookCheckRunRequestedActionFormEncoded
     */
    'payload': string;
}
/**
 * The action requested by the user.
 * @export
 * @interface WebhookCheckRunRequestedActionRequestedAction
 */
export interface WebhookCheckRunRequestedActionRequestedAction {
    /**
     * The integrator reference of the action requested by the user.
     * @type {string}
     * @memberof WebhookCheckRunRequestedActionRequestedAction
     */
    'identifier'?: string;
}
/**
 * 
 * @export
 * @interface WebhookCheckRunRerequested
 */
export interface WebhookCheckRunRerequested {
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckRunRerequested
     */
    'action'?: WebhookCheckRunRerequestedActionEnum;
    /**
     * 
     * @type {CheckRunWithSimpleCheckSuite}
     * @memberof WebhookCheckRunRerequested
     */
    'check_run': CheckRunWithSimpleCheckSuite;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCheckRunRerequested
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCheckRunRerequested
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCheckRunRerequested
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCheckRunRerequested
     */
    'sender': SimpleUser;
}

export const WebhookCheckRunRerequestedActionEnum = {
    Rerequested: 'rerequested'
} as const;

export type WebhookCheckRunRerequestedActionEnum = typeof WebhookCheckRunRerequestedActionEnum[keyof typeof WebhookCheckRunRerequestedActionEnum];

/**
 * The check_run.rerequested webhook encoded with URL encoding
 * @export
 * @interface WebhookCheckRunRerequestedFormEncoded
 */
export interface WebhookCheckRunRerequestedFormEncoded {
    /**
     * A URL-encoded string of the check_run.rerequested JSON payload. The decoded payload is a JSON object.
     * @type {string}
     * @memberof WebhookCheckRunRerequestedFormEncoded
     */
    'payload': string;
}
/**
 * 
 * @export
 * @interface WebhookCheckSuiteCompleted
 */
export interface WebhookCheckSuiteCompleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteCompleted
     */
    'action': WebhookCheckSuiteCompletedActionEnum;
    /**
     * 
     * @type {WebhookCheckSuiteCompletedCheckSuite}
     * @memberof WebhookCheckSuiteCompleted
     */
    'check_suite': WebhookCheckSuiteCompletedCheckSuite;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCheckSuiteCompleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCheckSuiteCompleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCheckSuiteCompleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCheckSuiteCompleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCheckSuiteCompleted
     */
    'sender': SimpleUser;
}

export const WebhookCheckSuiteCompletedActionEnum = {
    Completed: 'completed'
} as const;

export type WebhookCheckSuiteCompletedActionEnum = typeof WebhookCheckSuiteCompletedActionEnum[keyof typeof WebhookCheckSuiteCompletedActionEnum];

/**
 * The [check_suite](https://docs.github.com/rest/checks/suites#get-a-check-suite).
 * @export
 * @interface WebhookCheckSuiteCompletedCheckSuite
 */
export interface WebhookCheckSuiteCompletedCheckSuite {
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'after': string | null;
    /**
     * 
     * @type {App2}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'app': App2;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'before': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'check_runs_url': string;
    /**
     * The summary conclusion for all check runs that are part of the check suite. This value will be `null` until the check run has `completed`.
     * @type {string}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'conclusion': WebhookCheckSuiteCompletedCheckSuiteConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'created_at': string;
    /**
     * The head branch name the changes are on.
     * @type {string}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'head_branch': string | null;
    /**
     * 
     * @type {SimpleCommit}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'head_commit': SimpleCommit;
    /**
     * The SHA of the head commit that is being checked.
     * @type {string}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'head_sha': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'id': number;
    /**
     * 
     * @type {number}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'latest_check_runs_count': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'node_id': string;
    /**
     * An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_sha` and `head_branch`. When the check suite\'s `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.
     * @type {Array<CheckRunPullRequest>}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'pull_requests': Array<CheckRunPullRequest>;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'rerequestable'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'runs_rerequestable'?: boolean;
    /**
     * The summary status for all check runs that are part of the check suite. Can be `requested`, `in_progress`, or `completed`.
     * @type {string}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'status': WebhookCheckSuiteCompletedCheckSuiteStatusEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'updated_at': string;
    /**
     * URL that points to the check suite API resource.
     * @type {string}
     * @memberof WebhookCheckSuiteCompletedCheckSuite
     */
    'url': string;
}

export const WebhookCheckSuiteCompletedCheckSuiteConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required',
    Stale: 'stale',
    Skipped: 'skipped',
    StartupFailure: 'startup_failure'
} as const;

export type WebhookCheckSuiteCompletedCheckSuiteConclusionEnum = typeof WebhookCheckSuiteCompletedCheckSuiteConclusionEnum[keyof typeof WebhookCheckSuiteCompletedCheckSuiteConclusionEnum];
export const WebhookCheckSuiteCompletedCheckSuiteStatusEnum = {
    Requested: 'requested',
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued',
    Pending: 'pending'
} as const;

export type WebhookCheckSuiteCompletedCheckSuiteStatusEnum = typeof WebhookCheckSuiteCompletedCheckSuiteStatusEnum[keyof typeof WebhookCheckSuiteCompletedCheckSuiteStatusEnum];

/**
 * 
 * @export
 * @interface WebhookCheckSuiteRequested
 */
export interface WebhookCheckSuiteRequested {
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRequested
     */
    'action': WebhookCheckSuiteRequestedActionEnum;
    /**
     * 
     * @type {WebhookCheckSuiteRequestedCheckSuite}
     * @memberof WebhookCheckSuiteRequested
     */
    'check_suite': WebhookCheckSuiteRequestedCheckSuite;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCheckSuiteRequested
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCheckSuiteRequested
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCheckSuiteRequested
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCheckSuiteRequested
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCheckSuiteRequested
     */
    'sender': SimpleUser;
}

export const WebhookCheckSuiteRequestedActionEnum = {
    Requested: 'requested'
} as const;

export type WebhookCheckSuiteRequestedActionEnum = typeof WebhookCheckSuiteRequestedActionEnum[keyof typeof WebhookCheckSuiteRequestedActionEnum];

/**
 * The [check_suite](https://docs.github.com/rest/checks/suites#get-a-check-suite).
 * @export
 * @interface WebhookCheckSuiteRequestedCheckSuite
 */
export interface WebhookCheckSuiteRequestedCheckSuite {
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'after': string | null;
    /**
     * 
     * @type {App3}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'app': App3;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'before': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'check_runs_url': string;
    /**
     * The summary conclusion for all check runs that are part of the check suite. This value will be `null` until the check run has completed.
     * @type {string}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'conclusion': WebhookCheckSuiteRequestedCheckSuiteConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'created_at': string;
    /**
     * The head branch name the changes are on.
     * @type {string}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'head_branch': string | null;
    /**
     * 
     * @type {SimpleCommit}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'head_commit': SimpleCommit;
    /**
     * The SHA of the head commit that is being checked.
     * @type {string}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'head_sha': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'id': number;
    /**
     * 
     * @type {number}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'latest_check_runs_count': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'node_id': string;
    /**
     * An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_sha` and `head_branch`. When the check suite\'s `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.
     * @type {Array<CheckRunPullRequest>}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'pull_requests': Array<CheckRunPullRequest>;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'rerequestable'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'runs_rerequestable'?: boolean;
    /**
     * The summary status for all check runs that are part of the check suite. Can be `requested`, `in_progress`, or `completed`.
     * @type {string}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'status': WebhookCheckSuiteRequestedCheckSuiteStatusEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'updated_at': string;
    /**
     * URL that points to the check suite API resource.
     * @type {string}
     * @memberof WebhookCheckSuiteRequestedCheckSuite
     */
    'url': string;
}

export const WebhookCheckSuiteRequestedCheckSuiteConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required',
    Stale: 'stale',
    Skipped: 'skipped'
} as const;

export type WebhookCheckSuiteRequestedCheckSuiteConclusionEnum = typeof WebhookCheckSuiteRequestedCheckSuiteConclusionEnum[keyof typeof WebhookCheckSuiteRequestedCheckSuiteConclusionEnum];
export const WebhookCheckSuiteRequestedCheckSuiteStatusEnum = {
    Requested: 'requested',
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued'
} as const;

export type WebhookCheckSuiteRequestedCheckSuiteStatusEnum = typeof WebhookCheckSuiteRequestedCheckSuiteStatusEnum[keyof typeof WebhookCheckSuiteRequestedCheckSuiteStatusEnum];

/**
 * 
 * @export
 * @interface WebhookCheckSuiteRerequested
 */
export interface WebhookCheckSuiteRerequested {
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRerequested
     */
    'action': WebhookCheckSuiteRerequestedActionEnum;
    /**
     * 
     * @type {WebhookCheckSuiteRerequestedCheckSuite}
     * @memberof WebhookCheckSuiteRerequested
     */
    'check_suite': WebhookCheckSuiteRerequestedCheckSuite;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCheckSuiteRerequested
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCheckSuiteRerequested
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCheckSuiteRerequested
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCheckSuiteRerequested
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCheckSuiteRerequested
     */
    'sender': SimpleUser;
}

export const WebhookCheckSuiteRerequestedActionEnum = {
    Rerequested: 'rerequested'
} as const;

export type WebhookCheckSuiteRerequestedActionEnum = typeof WebhookCheckSuiteRerequestedActionEnum[keyof typeof WebhookCheckSuiteRerequestedActionEnum];

/**
 * The [check_suite](https://docs.github.com/rest/checks/suites#get-a-check-suite).
 * @export
 * @interface WebhookCheckSuiteRerequestedCheckSuite
 */
export interface WebhookCheckSuiteRerequestedCheckSuite {
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'after': string | null;
    /**
     * 
     * @type {App4}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'app': App4;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'before': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'check_runs_url': string;
    /**
     * The summary conclusion for all check runs that are part of the check suite. This value will be `null` until the check run has completed.
     * @type {string}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'conclusion': WebhookCheckSuiteRerequestedCheckSuiteConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'created_at': string;
    /**
     * The head branch name the changes are on.
     * @type {string}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'head_branch': string | null;
    /**
     * 
     * @type {SimpleCommit}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'head_commit': SimpleCommit;
    /**
     * The SHA of the head commit that is being checked.
     * @type {string}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'head_sha': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'id': number;
    /**
     * 
     * @type {number}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'latest_check_runs_count': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'node_id': string;
    /**
     * An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_sha` and `head_branch`. When the check suite\'s `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.
     * @type {Array<CheckRunPullRequest>}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'pull_requests': Array<CheckRunPullRequest>;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'rerequestable'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'runs_rerequestable'?: boolean;
    /**
     * The summary status for all check runs that are part of the check suite. Can be `requested`, `in_progress`, or `completed`.
     * @type {string}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'status': WebhookCheckSuiteRerequestedCheckSuiteStatusEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'updated_at': string;
    /**
     * URL that points to the check suite API resource.
     * @type {string}
     * @memberof WebhookCheckSuiteRerequestedCheckSuite
     */
    'url': string;
}

export const WebhookCheckSuiteRerequestedCheckSuiteConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required',
    Stale: 'stale'
} as const;

export type WebhookCheckSuiteRerequestedCheckSuiteConclusionEnum = typeof WebhookCheckSuiteRerequestedCheckSuiteConclusionEnum[keyof typeof WebhookCheckSuiteRerequestedCheckSuiteConclusionEnum];
export const WebhookCheckSuiteRerequestedCheckSuiteStatusEnum = {
    Requested: 'requested',
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued'
} as const;

export type WebhookCheckSuiteRerequestedCheckSuiteStatusEnum = typeof WebhookCheckSuiteRerequestedCheckSuiteStatusEnum[keyof typeof WebhookCheckSuiteRerequestedCheckSuiteStatusEnum];

/**
 * 
 * @export
 * @interface WebhookCodeScanningAlertAppearedInBranch
 */
export interface WebhookCodeScanningAlertAppearedInBranch {
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranch
     */
    'action': WebhookCodeScanningAlertAppearedInBranchActionEnum;
    /**
     * 
     * @type {WebhookCodeScanningAlertAppearedInBranchAlert}
     * @memberof WebhookCodeScanningAlertAppearedInBranch
     */
    'alert': WebhookCodeScanningAlertAppearedInBranchAlert;
    /**
     * The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranch
     */
    'commit_oid': string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCodeScanningAlertAppearedInBranch
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCodeScanningAlertAppearedInBranch
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCodeScanningAlertAppearedInBranch
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranch
     */
    'ref': string;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCodeScanningAlertAppearedInBranch
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCodeScanningAlertAppearedInBranch
     */
    'sender': SimpleUser;
}

export const WebhookCodeScanningAlertAppearedInBranchActionEnum = {
    AppearedInBranch: 'appeared_in_branch'
} as const;

export type WebhookCodeScanningAlertAppearedInBranchActionEnum = typeof WebhookCodeScanningAlertAppearedInBranchActionEnum[keyof typeof WebhookCodeScanningAlertAppearedInBranchActionEnum];

/**
 * The code scanning alert involved in the event.
 * @export
 * @interface WebhookCodeScanningAlertAppearedInBranchAlert
 */
export interface WebhookCodeScanningAlertAppearedInBranchAlert {
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlert
     */
    'created_at': string;
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlert
     */
    'dismissed_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlert
     */
    'dismissed_by': User2 | null;
    /**
     * The dismissal comment associated with the dismissal of the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlert
     */
    'dismissed_comment'?: string | null;
    /**
     * The reason for dismissing or closing the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlert
     */
    'dismissed_reason': WebhookCodeScanningAlertAppearedInBranchAlertDismissedReasonEnum | null;
    /**
     * The time that the alert was fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {any}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlert
     */
    'fixed_at'?: any | null;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlert
     */
    'html_url': string;
    /**
     * 
     * @type {AlertInstance}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlert
     */
    'most_recent_instance'?: AlertInstance | null;
    /**
     * The code scanning alert number.
     * @type {number}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlert
     */
    'number': number;
    /**
     * 
     * @type {WebhookCodeScanningAlertAppearedInBranchAlertRule}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlert
     */
    'rule': WebhookCodeScanningAlertAppearedInBranchAlertRule;
    /**
     * State of a code scanning alert. Events for alerts found outside the default branch will return a `null` value until they are dismissed or fixed.
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlert
     */
    'state': WebhookCodeScanningAlertAppearedInBranchAlertStateEnum | null;
    /**
     * 
     * @type {WebhookCodeScanningAlertAppearedInBranchAlertTool}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlert
     */
    'tool': WebhookCodeScanningAlertAppearedInBranchAlertTool;
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlert
     */
    'url': string;
}

export const WebhookCodeScanningAlertAppearedInBranchAlertDismissedReasonEnum = {
    FalsePositive: 'false positive',
    WontFix: 'won\'t fix',
    UsedInTests: 'used in tests'
} as const;

export type WebhookCodeScanningAlertAppearedInBranchAlertDismissedReasonEnum = typeof WebhookCodeScanningAlertAppearedInBranchAlertDismissedReasonEnum[keyof typeof WebhookCodeScanningAlertAppearedInBranchAlertDismissedReasonEnum];
export const WebhookCodeScanningAlertAppearedInBranchAlertStateEnum = {
    Open: 'open',
    Dismissed: 'dismissed',
    Fixed: 'fixed'
} as const;

export type WebhookCodeScanningAlertAppearedInBranchAlertStateEnum = typeof WebhookCodeScanningAlertAppearedInBranchAlertStateEnum[keyof typeof WebhookCodeScanningAlertAppearedInBranchAlertStateEnum];

/**
 * 
 * @export
 * @interface WebhookCodeScanningAlertAppearedInBranchAlertRule
 */
export interface WebhookCodeScanningAlertAppearedInBranchAlertRule {
    /**
     * A short description of the rule used to detect the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlertRule
     */
    'description': string;
    /**
     * A unique identifier for the rule used to detect the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlertRule
     */
    'id': string;
    /**
     * The severity of the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlertRule
     */
    'severity': WebhookCodeScanningAlertAppearedInBranchAlertRuleSeverityEnum | null;
}

export const WebhookCodeScanningAlertAppearedInBranchAlertRuleSeverityEnum = {
    None: 'none',
    Note: 'note',
    Warning: 'warning',
    Error: 'error'
} as const;

export type WebhookCodeScanningAlertAppearedInBranchAlertRuleSeverityEnum = typeof WebhookCodeScanningAlertAppearedInBranchAlertRuleSeverityEnum[keyof typeof WebhookCodeScanningAlertAppearedInBranchAlertRuleSeverityEnum];

/**
 * 
 * @export
 * @interface WebhookCodeScanningAlertAppearedInBranchAlertTool
 */
export interface WebhookCodeScanningAlertAppearedInBranchAlertTool {
    /**
     * The name of the tool used to generate the code scanning analysis alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlertTool
     */
    'name': string;
    /**
     * The version of the tool used to detect the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertAppearedInBranchAlertTool
     */
    'version': string | null;
}
/**
 * 
 * @export
 * @interface WebhookCodeScanningAlertClosedByUser
 */
export interface WebhookCodeScanningAlertClosedByUser {
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUser
     */
    'action': WebhookCodeScanningAlertClosedByUserActionEnum;
    /**
     * 
     * @type {WebhookCodeScanningAlertClosedByUserAlert}
     * @memberof WebhookCodeScanningAlertClosedByUser
     */
    'alert': WebhookCodeScanningAlertClosedByUserAlert;
    /**
     * The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUser
     */
    'commit_oid': string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCodeScanningAlertClosedByUser
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCodeScanningAlertClosedByUser
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCodeScanningAlertClosedByUser
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUser
     */
    'ref': string;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCodeScanningAlertClosedByUser
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCodeScanningAlertClosedByUser
     */
    'sender': SimpleUser;
}

export const WebhookCodeScanningAlertClosedByUserActionEnum = {
    ClosedByUser: 'closed_by_user'
} as const;

export type WebhookCodeScanningAlertClosedByUserActionEnum = typeof WebhookCodeScanningAlertClosedByUserActionEnum[keyof typeof WebhookCodeScanningAlertClosedByUserActionEnum];

/**
 * The code scanning alert involved in the event.
 * @export
 * @interface WebhookCodeScanningAlertClosedByUserAlert
 */
export interface WebhookCodeScanningAlertClosedByUserAlert {
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'created_at': string;
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'dismissed_at': string;
    /**
     * 
     * @type {User2}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'dismissed_by': User2 | null;
    /**
     * The dismissal comment associated with the dismissal of the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'dismissed_comment'?: string | null;
    /**
     * The reason for dismissing or closing the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'dismissed_reason': WebhookCodeScanningAlertClosedByUserAlertDismissedReasonEnum | null;
    /**
     * The time that the alert was fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {any}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'fixed_at'?: any | null;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'html_url': string;
    /**
     * 
     * @type {AlertInstance}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'most_recent_instance'?: AlertInstance | null;
    /**
     * The code scanning alert number.
     * @type {number}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'number': number;
    /**
     * 
     * @type {WebhookCodeScanningAlertClosedByUserAlertRule}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'rule': WebhookCodeScanningAlertClosedByUserAlertRule;
    /**
     * State of a code scanning alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'state': WebhookCodeScanningAlertClosedByUserAlertStateEnum;
    /**
     * 
     * @type {WebhookCodeScanningAlertClosedByUserAlertTool}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'tool': WebhookCodeScanningAlertClosedByUserAlertTool;
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'url': string;
    /**
     * 
     * @type {User2}
     * @memberof WebhookCodeScanningAlertClosedByUserAlert
     */
    'dismissal_approved_by'?: User2 | null;
}

export const WebhookCodeScanningAlertClosedByUserAlertDismissedReasonEnum = {
    FalsePositive: 'false positive',
    WontFix: 'won\'t fix',
    UsedInTests: 'used in tests'
} as const;

export type WebhookCodeScanningAlertClosedByUserAlertDismissedReasonEnum = typeof WebhookCodeScanningAlertClosedByUserAlertDismissedReasonEnum[keyof typeof WebhookCodeScanningAlertClosedByUserAlertDismissedReasonEnum];
export const WebhookCodeScanningAlertClosedByUserAlertStateEnum = {
    Dismissed: 'dismissed',
    Fixed: 'fixed'
} as const;

export type WebhookCodeScanningAlertClosedByUserAlertStateEnum = typeof WebhookCodeScanningAlertClosedByUserAlertStateEnum[keyof typeof WebhookCodeScanningAlertClosedByUserAlertStateEnum];

/**
 * 
 * @export
 * @interface WebhookCodeScanningAlertClosedByUserAlertRule
 */
export interface WebhookCodeScanningAlertClosedByUserAlertRule {
    /**
     * A short description of the rule used to detect the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlertRule
     */
    'description': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlertRule
     */
    'full_description'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlertRule
     */
    'help'?: string | null;
    /**
     * A link to the documentation for the rule used to detect the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlertRule
     */
    'help_uri'?: string | null;
    /**
     * A unique identifier for the rule used to detect the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlertRule
     */
    'id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlertRule
     */
    'name'?: string;
    /**
     * The severity of the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlertRule
     */
    'severity': WebhookCodeScanningAlertClosedByUserAlertRuleSeverityEnum | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookCodeScanningAlertClosedByUserAlertRule
     */
    'tags'?: Array<string> | null;
}

export const WebhookCodeScanningAlertClosedByUserAlertRuleSeverityEnum = {
    None: 'none',
    Note: 'note',
    Warning: 'warning',
    Error: 'error'
} as const;

export type WebhookCodeScanningAlertClosedByUserAlertRuleSeverityEnum = typeof WebhookCodeScanningAlertClosedByUserAlertRuleSeverityEnum[keyof typeof WebhookCodeScanningAlertClosedByUserAlertRuleSeverityEnum];

/**
 * 
 * @export
 * @interface WebhookCodeScanningAlertClosedByUserAlertTool
 */
export interface WebhookCodeScanningAlertClosedByUserAlertTool {
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlertTool
     */
    'guid'?: string | null;
    /**
     * The name of the tool used to generate the code scanning analysis alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlertTool
     */
    'name': string;
    /**
     * The version of the tool used to detect the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertClosedByUserAlertTool
     */
    'version': string | null;
}
/**
 * 
 * @export
 * @interface WebhookCodeScanningAlertCreated
 */
export interface WebhookCodeScanningAlertCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertCreated
     */
    'action': WebhookCodeScanningAlertCreatedActionEnum;
    /**
     * 
     * @type {WebhookCodeScanningAlertCreatedAlert}
     * @memberof WebhookCodeScanningAlertCreated
     */
    'alert': WebhookCodeScanningAlertCreatedAlert;
    /**
     * The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.
     * @type {string}
     * @memberof WebhookCodeScanningAlertCreated
     */
    'commit_oid': string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCodeScanningAlertCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCodeScanningAlertCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCodeScanningAlertCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.
     * @type {string}
     * @memberof WebhookCodeScanningAlertCreated
     */
    'ref': string;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCodeScanningAlertCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCodeScanningAlertCreated
     */
    'sender': SimpleUser;
}

export const WebhookCodeScanningAlertCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookCodeScanningAlertCreatedActionEnum = typeof WebhookCodeScanningAlertCreatedActionEnum[keyof typeof WebhookCodeScanningAlertCreatedActionEnum];

/**
 * The code scanning alert involved in the event.
 * @export
 * @interface WebhookCodeScanningAlertCreatedAlert
 */
export interface WebhookCodeScanningAlertCreatedAlert {
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`
     * @type {string}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'created_at': string | null;
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {any}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'dismissed_at': any | null;
    /**
     * 
     * @type {any}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'dismissed_by': any | null;
    /**
     * The dismissal comment associated with the dismissal of the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'dismissed_comment'?: string | null;
    /**
     * The reason for dismissing or closing the alert. Can be one of: `false positive`, `won\'t fix`, and `used in tests`.
     * @type {any}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'dismissed_reason': any | null;
    /**
     * The time that the alert was fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {any}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'fixed_at'?: any | null;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'instances_url'?: string;
    /**
     * 
     * @type {AlertInstance}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'most_recent_instance'?: AlertInstance | null;
    /**
     * The code scanning alert number.
     * @type {number}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'number': number;
    /**
     * 
     * @type {WebhookCodeScanningAlertClosedByUserAlertRule}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'rule': WebhookCodeScanningAlertClosedByUserAlertRule;
    /**
     * State of a code scanning alert. Events for alerts found outside the default branch will return a `null` value until they are dismissed or fixed.
     * @type {string}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'state': WebhookCodeScanningAlertCreatedAlertStateEnum | null;
    /**
     * 
     * @type {WebhookCodeScanningAlertCreatedAlertTool}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'tool': WebhookCodeScanningAlertCreatedAlertTool | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'updated_at'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'url': string;
    /**
     * 
     * @type {any}
     * @memberof WebhookCodeScanningAlertCreatedAlert
     */
    'dismissal_approved_by'?: any | null;
}

export const WebhookCodeScanningAlertCreatedAlertStateEnum = {
    Open: 'open',
    Dismissed: 'dismissed'
} as const;

export type WebhookCodeScanningAlertCreatedAlertStateEnum = typeof WebhookCodeScanningAlertCreatedAlertStateEnum[keyof typeof WebhookCodeScanningAlertCreatedAlertStateEnum];

/**
 * 
 * @export
 * @interface WebhookCodeScanningAlertCreatedAlertTool
 */
export interface WebhookCodeScanningAlertCreatedAlertTool {
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertCreatedAlertTool
     */
    'guid'?: string | null;
    /**
     * The name of the tool used to generate the code scanning analysis alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertCreatedAlertTool
     */
    'name': string;
    /**
     * The version of the tool used to detect the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertCreatedAlertTool
     */
    'version': string | null;
}
/**
 * 
 * @export
 * @interface WebhookCodeScanningAlertFixed
 */
export interface WebhookCodeScanningAlertFixed {
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertFixed
     */
    'action': WebhookCodeScanningAlertFixedActionEnum;
    /**
     * 
     * @type {WebhookCodeScanningAlertFixedAlert}
     * @memberof WebhookCodeScanningAlertFixed
     */
    'alert': WebhookCodeScanningAlertFixedAlert;
    /**
     * The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.
     * @type {string}
     * @memberof WebhookCodeScanningAlertFixed
     */
    'commit_oid': string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCodeScanningAlertFixed
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCodeScanningAlertFixed
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCodeScanningAlertFixed
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.
     * @type {string}
     * @memberof WebhookCodeScanningAlertFixed
     */
    'ref': string;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCodeScanningAlertFixed
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCodeScanningAlertFixed
     */
    'sender': SimpleUser;
}

export const WebhookCodeScanningAlertFixedActionEnum = {
    Fixed: 'fixed'
} as const;

export type WebhookCodeScanningAlertFixedActionEnum = typeof WebhookCodeScanningAlertFixedActionEnum[keyof typeof WebhookCodeScanningAlertFixedActionEnum];

/**
 * The code scanning alert involved in the event.
 * @export
 * @interface WebhookCodeScanningAlertFixedAlert
 */
export interface WebhookCodeScanningAlertFixedAlert {
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`
     * @type {string}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'created_at': string;
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'dismissed_at': string | null;
    /**
     * 
     * @type {User2}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'dismissed_by': User2 | null;
    /**
     * The dismissal comment associated with the dismissal of the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'dismissed_comment'?: string | null;
    /**
     * The reason for dismissing or closing the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'dismissed_reason': WebhookCodeScanningAlertFixedAlertDismissedReasonEnum | null;
    /**
     * The time that the alert was fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {any}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'fixed_at'?: any | null;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'instances_url'?: string;
    /**
     * 
     * @type {AlertInstance}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'most_recent_instance'?: AlertInstance | null;
    /**
     * The code scanning alert number.
     * @type {number}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'number': number;
    /**
     * 
     * @type {WebhookCodeScanningAlertClosedByUserAlertRule}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'rule': WebhookCodeScanningAlertClosedByUserAlertRule;
    /**
     * State of a code scanning alert. Events for alerts found outside the default branch will return a `null` value until they are dismissed or fixed.
     * @type {string}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'state': WebhookCodeScanningAlertFixedAlertStateEnum | null;
    /**
     * 
     * @type {WebhookCodeScanningAlertClosedByUserAlertTool}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'tool': WebhookCodeScanningAlertClosedByUserAlertTool;
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertFixedAlert
     */
    'url': string;
}

export const WebhookCodeScanningAlertFixedAlertDismissedReasonEnum = {
    FalsePositive: 'false positive',
    WontFix: 'won\'t fix',
    UsedInTests: 'used in tests'
} as const;

export type WebhookCodeScanningAlertFixedAlertDismissedReasonEnum = typeof WebhookCodeScanningAlertFixedAlertDismissedReasonEnum[keyof typeof WebhookCodeScanningAlertFixedAlertDismissedReasonEnum];
export const WebhookCodeScanningAlertFixedAlertStateEnum = {
    Fixed: 'fixed'
} as const;

export type WebhookCodeScanningAlertFixedAlertStateEnum = typeof WebhookCodeScanningAlertFixedAlertStateEnum[keyof typeof WebhookCodeScanningAlertFixedAlertStateEnum];

/**
 * 
 * @export
 * @interface WebhookCodeScanningAlertReopened
 */
export interface WebhookCodeScanningAlertReopened {
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopened
     */
    'action': WebhookCodeScanningAlertReopenedActionEnum;
    /**
     * 
     * @type {WebhookCodeScanningAlertReopenedAlert}
     * @memberof WebhookCodeScanningAlertReopened
     */
    'alert': WebhookCodeScanningAlertReopenedAlert | null;
    /**
     * The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopened
     */
    'commit_oid': string | null;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCodeScanningAlertReopened
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCodeScanningAlertReopened
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCodeScanningAlertReopened
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopened
     */
    'ref': string | null;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCodeScanningAlertReopened
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCodeScanningAlertReopened
     */
    'sender': SimpleUser;
}

export const WebhookCodeScanningAlertReopenedActionEnum = {
    Reopened: 'reopened'
} as const;

export type WebhookCodeScanningAlertReopenedActionEnum = typeof WebhookCodeScanningAlertReopenedActionEnum[keyof typeof WebhookCodeScanningAlertReopenedActionEnum];

/**
 * The code scanning alert involved in the event.
 * @export
 * @interface WebhookCodeScanningAlertReopenedAlert
 */
export interface WebhookCodeScanningAlertReopenedAlert {
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedAlert
     */
    'created_at': string;
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedAlert
     */
    'dismissed_at': string | null;
    /**
     * 
     * @type {object}
     * @memberof WebhookCodeScanningAlertReopenedAlert
     */
    'dismissed_by': object | null;
    /**
     * The dismissal comment associated with the dismissal of the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedAlert
     */
    'dismissed_comment'?: string | null;
    /**
     * The reason for dismissing or closing the alert. Can be one of: `false positive`, `won\'t fix`, and `used in tests`.
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedAlert
     */
    'dismissed_reason': string | null;
    /**
     * The time that the alert was fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {any}
     * @memberof WebhookCodeScanningAlertReopenedAlert
     */
    'fixed_at'?: any | null;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedAlert
     */
    'html_url': string;
    /**
     * 
     * @type {AlertInstance}
     * @memberof WebhookCodeScanningAlertReopenedAlert
     */
    'most_recent_instance'?: AlertInstance | null;
    /**
     * The code scanning alert number.
     * @type {number}
     * @memberof WebhookCodeScanningAlertReopenedAlert
     */
    'number': number;
    /**
     * 
     * @type {WebhookCodeScanningAlertClosedByUserAlertRule}
     * @memberof WebhookCodeScanningAlertReopenedAlert
     */
    'rule': WebhookCodeScanningAlertClosedByUserAlertRule;
    /**
     * State of a code scanning alert. Events for alerts found outside the default branch will return a `null` value until they are dismissed or fixed.
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedAlert
     */
    'state': WebhookCodeScanningAlertReopenedAlertStateEnum | null;
    /**
     * 
     * @type {WebhookCodeScanningAlertClosedByUserAlertTool}
     * @memberof WebhookCodeScanningAlertReopenedAlert
     */
    'tool': WebhookCodeScanningAlertClosedByUserAlertTool;
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedAlert
     */
    'url': string;
}

export const WebhookCodeScanningAlertReopenedAlertStateEnum = {
    Open: 'open',
    Dismissed: 'dismissed',
    Fixed: 'fixed'
} as const;

export type WebhookCodeScanningAlertReopenedAlertStateEnum = typeof WebhookCodeScanningAlertReopenedAlertStateEnum[keyof typeof WebhookCodeScanningAlertReopenedAlertStateEnum];

/**
 * 
 * @export
 * @interface WebhookCodeScanningAlertReopenedByUser
 */
export interface WebhookCodeScanningAlertReopenedByUser {
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedByUser
     */
    'action': WebhookCodeScanningAlertReopenedByUserActionEnum;
    /**
     * 
     * @type {WebhookCodeScanningAlertReopenedByUserAlert}
     * @memberof WebhookCodeScanningAlertReopenedByUser
     */
    'alert': WebhookCodeScanningAlertReopenedByUserAlert;
    /**
     * The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedByUser
     */
    'commit_oid': string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCodeScanningAlertReopenedByUser
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCodeScanningAlertReopenedByUser
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCodeScanningAlertReopenedByUser
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedByUser
     */
    'ref': string;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCodeScanningAlertReopenedByUser
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCodeScanningAlertReopenedByUser
     */
    'sender': SimpleUser;
}

export const WebhookCodeScanningAlertReopenedByUserActionEnum = {
    ReopenedByUser: 'reopened_by_user'
} as const;

export type WebhookCodeScanningAlertReopenedByUserActionEnum = typeof WebhookCodeScanningAlertReopenedByUserActionEnum[keyof typeof WebhookCodeScanningAlertReopenedByUserActionEnum];

/**
 * The code scanning alert involved in the event.
 * @export
 * @interface WebhookCodeScanningAlertReopenedByUserAlert
 */
export interface WebhookCodeScanningAlertReopenedByUserAlert {
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedByUserAlert
     */
    'created_at': string;
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {any}
     * @memberof WebhookCodeScanningAlertReopenedByUserAlert
     */
    'dismissed_at': any | null;
    /**
     * 
     * @type {any}
     * @memberof WebhookCodeScanningAlertReopenedByUserAlert
     */
    'dismissed_by': any | null;
    /**
     * The dismissal comment associated with the dismissal of the alert.
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedByUserAlert
     */
    'dismissed_comment'?: string | null;
    /**
     * The reason for dismissing or closing the alert. Can be one of: `false positive`, `won\'t fix`, and `used in tests`.
     * @type {any}
     * @memberof WebhookCodeScanningAlertReopenedByUserAlert
     */
    'dismissed_reason': any | null;
    /**
     * The time that the alert was fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {any}
     * @memberof WebhookCodeScanningAlertReopenedByUserAlert
     */
    'fixed_at'?: any | null;
    /**
     * The GitHub URL of the alert resource.
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedByUserAlert
     */
    'html_url': string;
    /**
     * 
     * @type {AlertInstance}
     * @memberof WebhookCodeScanningAlertReopenedByUserAlert
     */
    'most_recent_instance'?: AlertInstance | null;
    /**
     * The code scanning alert number.
     * @type {number}
     * @memberof WebhookCodeScanningAlertReopenedByUserAlert
     */
    'number': number;
    /**
     * 
     * @type {WebhookCodeScanningAlertAppearedInBranchAlertRule}
     * @memberof WebhookCodeScanningAlertReopenedByUserAlert
     */
    'rule': WebhookCodeScanningAlertAppearedInBranchAlertRule;
    /**
     * State of a code scanning alert. Events for alerts found outside the default branch will return a `null` value until they are dismissed or fixed.
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedByUserAlert
     */
    'state': WebhookCodeScanningAlertReopenedByUserAlertStateEnum | null;
    /**
     * 
     * @type {WebhookCodeScanningAlertAppearedInBranchAlertTool}
     * @memberof WebhookCodeScanningAlertReopenedByUserAlert
     */
    'tool': WebhookCodeScanningAlertAppearedInBranchAlertTool;
    /**
     * 
     * @type {string}
     * @memberof WebhookCodeScanningAlertReopenedByUserAlert
     */
    'url': string;
}

export const WebhookCodeScanningAlertReopenedByUserAlertStateEnum = {
    Open: 'open',
    Fixed: 'fixed'
} as const;

export type WebhookCodeScanningAlertReopenedByUserAlertStateEnum = typeof WebhookCodeScanningAlertReopenedByUserAlertStateEnum[keyof typeof WebhookCodeScanningAlertReopenedByUserAlertStateEnum];

/**
 * 
 * @export
 * @interface WebhookCommitCommentCreated
 */
export interface WebhookCommitCommentCreated {
    /**
     * The action performed. Can be `created`.
     * @type {string}
     * @memberof WebhookCommitCommentCreated
     */
    'action': WebhookCommitCommentCreatedActionEnum;
    /**
     * 
     * @type {WebhookCommitCommentCreatedComment}
     * @memberof WebhookCommitCommentCreated
     */
    'comment': WebhookCommitCommentCreatedComment;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCommitCommentCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCommitCommentCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCommitCommentCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCommitCommentCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCommitCommentCreated
     */
    'sender': SimpleUser;
}

export const WebhookCommitCommentCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookCommitCommentCreatedActionEnum = typeof WebhookCommitCommentCreatedActionEnum[keyof typeof WebhookCommitCommentCreatedActionEnum];

/**
 * The [commit comment](${externalDocsUpapp/api/description/components/schemas/webhooks/issue-comment-created.yamlrl}/rest/commits/comments#get-a-commit-comment) resource.
 * @export
 * @interface WebhookCommitCommentCreatedComment
 */
export interface WebhookCommitCommentCreatedComment {
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'author_association': WebhookCommitCommentCreatedCommentAuthorAssociationEnum;
    /**
     * The text of the comment.
     * @type {string}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'body': string;
    /**
     * The SHA of the commit to which the comment applies.
     * @type {string}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'commit_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'html_url': string;
    /**
     * The ID of the commit comment.
     * @type {number}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'id': number;
    /**
     * The line of the blob to which the comment applies. The last line of the range for a multi-line comment
     * @type {number}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'line': number | null;
    /**
     * The node ID of the commit comment.
     * @type {string}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'node_id': string;
    /**
     * The relative path of the file to which the comment applies.
     * @type {string}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'path': string | null;
    /**
     * The line index in the diff to which the comment applies.
     * @type {number}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'position': number | null;
    /**
     * 
     * @type {Reactions}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'reactions'?: Reactions;
    /**
     * 
     * @type {string}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof WebhookCommitCommentCreatedComment
     */
    'user': User1 | null;
}

export const WebhookCommitCommentCreatedCommentAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type WebhookCommitCommentCreatedCommentAuthorAssociationEnum = typeof WebhookCommitCommentCreatedCommentAuthorAssociationEnum[keyof typeof WebhookCommitCommentCreatedCommentAuthorAssociationEnum];

/**
 * 
 * @export
 * @interface WebhookConfig
 */
export interface WebhookConfig {
    /**
     * The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
     * @type {string}
     * @memberof WebhookConfig
     */
    'content_type'?: string;
    /**
     * 
     * @type {WebhookConfigInsecureSsl}
     * @memberof WebhookConfig
     */
    'insecure_ssl'?: WebhookConfigInsecureSsl;
    /**
     * If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).
     * @type {string}
     * @memberof WebhookConfig
     */
    'secret'?: string;
    /**
     * The URL to which the payloads will be delivered.
     * @type {string}
     * @memberof WebhookConfig
     */
    'url'?: string;
}
/**
 * @type WebhookConfigInsecureSsl
 * @export
 */
export type WebhookConfigInsecureSsl = number | string;

/**
 * 
 * @export
 * @interface WebhookCreate
 */
export interface WebhookCreate {
    /**
     * The repository\'s current description.
     * @type {string}
     * @memberof WebhookCreate
     */
    'description': string | null;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCreate
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCreate
     */
    'installation'?: SimpleInstallation;
    /**
     * The name of the repository\'s default branch (usually `main`).
     * @type {string}
     * @memberof WebhookCreate
     */
    'master_branch': string;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCreate
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * The pusher type for the event. Can be either `user` or a deploy key.
     * @type {string}
     * @memberof WebhookCreate
     */
    'pusher_type': string;
    /**
     * The [`git ref`](https://docs.github.com/rest/git/refs#get-a-reference) resource.
     * @type {string}
     * @memberof WebhookCreate
     */
    'ref': string;
    /**
     * The type of Git ref object created in the repository.
     * @type {string}
     * @memberof WebhookCreate
     */
    'ref_type': WebhookCreateRefTypeEnum;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCreate
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCreate
     */
    'sender': SimpleUser;
}

export const WebhookCreateRefTypeEnum = {
    Tag: 'tag',
    Branch: 'branch'
} as const;

export type WebhookCreateRefTypeEnum = typeof WebhookCreateRefTypeEnum[keyof typeof WebhookCreateRefTypeEnum];

/**
 * 
 * @export
 * @interface WebhookCustomPropertyCreated
 */
export interface WebhookCustomPropertyCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookCustomPropertyCreated
     */
    'action': WebhookCustomPropertyCreatedActionEnum;
    /**
     * 
     * @type {CustomProperty}
     * @memberof WebhookCustomPropertyCreated
     */
    'definition': CustomProperty;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCustomPropertyCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCustomPropertyCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCustomPropertyCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCustomPropertyCreated
     */
    'sender'?: SimpleUser;
}

export const WebhookCustomPropertyCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookCustomPropertyCreatedActionEnum = typeof WebhookCustomPropertyCreatedActionEnum[keyof typeof WebhookCustomPropertyCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookCustomPropertyDeleted
 */
export interface WebhookCustomPropertyDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookCustomPropertyDeleted
     */
    'action': WebhookCustomPropertyDeletedActionEnum;
    /**
     * 
     * @type {WebhookCustomPropertyDeletedDefinition}
     * @memberof WebhookCustomPropertyDeleted
     */
    'definition': WebhookCustomPropertyDeletedDefinition;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCustomPropertyDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCustomPropertyDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCustomPropertyDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCustomPropertyDeleted
     */
    'sender'?: SimpleUser;
}

export const WebhookCustomPropertyDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookCustomPropertyDeletedActionEnum = typeof WebhookCustomPropertyDeletedActionEnum[keyof typeof WebhookCustomPropertyDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookCustomPropertyDeletedDefinition
 */
export interface WebhookCustomPropertyDeletedDefinition {
    /**
     * The name of the property that was deleted.
     * @type {string}
     * @memberof WebhookCustomPropertyDeletedDefinition
     */
    'property_name': string;
}
/**
 * 
 * @export
 * @interface WebhookCustomPropertyPromotedToEnterprise
 */
export interface WebhookCustomPropertyPromotedToEnterprise {
    /**
     * 
     * @type {string}
     * @memberof WebhookCustomPropertyPromotedToEnterprise
     */
    'action': WebhookCustomPropertyPromotedToEnterpriseActionEnum;
    /**
     * 
     * @type {CustomProperty}
     * @memberof WebhookCustomPropertyPromotedToEnterprise
     */
    'definition': CustomProperty;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCustomPropertyPromotedToEnterprise
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCustomPropertyPromotedToEnterprise
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCustomPropertyPromotedToEnterprise
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCustomPropertyPromotedToEnterprise
     */
    'sender'?: SimpleUser;
}

export const WebhookCustomPropertyPromotedToEnterpriseActionEnum = {
    PromoteToEnterprise: 'promote_to_enterprise'
} as const;

export type WebhookCustomPropertyPromotedToEnterpriseActionEnum = typeof WebhookCustomPropertyPromotedToEnterpriseActionEnum[keyof typeof WebhookCustomPropertyPromotedToEnterpriseActionEnum];

/**
 * 
 * @export
 * @interface WebhookCustomPropertyUpdated
 */
export interface WebhookCustomPropertyUpdated {
    /**
     * 
     * @type {string}
     * @memberof WebhookCustomPropertyUpdated
     */
    'action': WebhookCustomPropertyUpdatedActionEnum;
    /**
     * 
     * @type {CustomProperty}
     * @memberof WebhookCustomPropertyUpdated
     */
    'definition': CustomProperty;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCustomPropertyUpdated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCustomPropertyUpdated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCustomPropertyUpdated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCustomPropertyUpdated
     */
    'sender'?: SimpleUser;
}

export const WebhookCustomPropertyUpdatedActionEnum = {
    Updated: 'updated'
} as const;

export type WebhookCustomPropertyUpdatedActionEnum = typeof WebhookCustomPropertyUpdatedActionEnum[keyof typeof WebhookCustomPropertyUpdatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookCustomPropertyValuesUpdated
 */
export interface WebhookCustomPropertyValuesUpdated {
    /**
     * 
     * @type {string}
     * @memberof WebhookCustomPropertyValuesUpdated
     */
    'action': WebhookCustomPropertyValuesUpdatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookCustomPropertyValuesUpdated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookCustomPropertyValuesUpdated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookCustomPropertyValuesUpdated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookCustomPropertyValuesUpdated
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookCustomPropertyValuesUpdated
     */
    'sender'?: SimpleUser;
    /**
     * The new custom property values for the repository.
     * @type {Array<CustomPropertyValue>}
     * @memberof WebhookCustomPropertyValuesUpdated
     */
    'new_property_values': Array<CustomPropertyValue>;
    /**
     * The old custom property values for the repository.
     * @type {Array<CustomPropertyValue>}
     * @memberof WebhookCustomPropertyValuesUpdated
     */
    'old_property_values': Array<CustomPropertyValue>;
}

export const WebhookCustomPropertyValuesUpdatedActionEnum = {
    Updated: 'updated'
} as const;

export type WebhookCustomPropertyValuesUpdatedActionEnum = typeof WebhookCustomPropertyValuesUpdatedActionEnum[keyof typeof WebhookCustomPropertyValuesUpdatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDelete
 */
export interface WebhookDelete {
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDelete
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDelete
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDelete
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * The pusher type for the event. Can be either `user` or a deploy key.
     * @type {string}
     * @memberof WebhookDelete
     */
    'pusher_type': string;
    /**
     * The [`git ref`](https://docs.github.com/rest/git/refs#get-a-reference) resource.
     * @type {string}
     * @memberof WebhookDelete
     */
    'ref': string;
    /**
     * The type of Git ref object deleted in the repository.
     * @type {string}
     * @memberof WebhookDelete
     */
    'ref_type': WebhookDeleteRefTypeEnum;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDelete
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDelete
     */
    'sender': SimpleUser;
}

export const WebhookDeleteRefTypeEnum = {
    Tag: 'tag',
    Branch: 'branch'
} as const;

export type WebhookDeleteRefTypeEnum = typeof WebhookDeleteRefTypeEnum[keyof typeof WebhookDeleteRefTypeEnum];

/**
 * 
 * @export
 * @interface WebhookDependabotAlertAutoDismissed
 */
export interface WebhookDependabotAlertAutoDismissed {
    /**
     * 
     * @type {string}
     * @memberof WebhookDependabotAlertAutoDismissed
     */
    'action': WebhookDependabotAlertAutoDismissedActionEnum;
    /**
     * 
     * @type {DependabotAlert}
     * @memberof WebhookDependabotAlertAutoDismissed
     */
    'alert': DependabotAlert;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDependabotAlertAutoDismissed
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDependabotAlertAutoDismissed
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDependabotAlertAutoDismissed
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDependabotAlertAutoDismissed
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDependabotAlertAutoDismissed
     */
    'sender': SimpleUser;
}

export const WebhookDependabotAlertAutoDismissedActionEnum = {
    AutoDismissed: 'auto_dismissed'
} as const;

export type WebhookDependabotAlertAutoDismissedActionEnum = typeof WebhookDependabotAlertAutoDismissedActionEnum[keyof typeof WebhookDependabotAlertAutoDismissedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDependabotAlertAutoReopened
 */
export interface WebhookDependabotAlertAutoReopened {
    /**
     * 
     * @type {string}
     * @memberof WebhookDependabotAlertAutoReopened
     */
    'action': WebhookDependabotAlertAutoReopenedActionEnum;
    /**
     * 
     * @type {DependabotAlert}
     * @memberof WebhookDependabotAlertAutoReopened
     */
    'alert': DependabotAlert;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDependabotAlertAutoReopened
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDependabotAlertAutoReopened
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDependabotAlertAutoReopened
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDependabotAlertAutoReopened
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDependabotAlertAutoReopened
     */
    'sender': SimpleUser;
}

export const WebhookDependabotAlertAutoReopenedActionEnum = {
    AutoReopened: 'auto_reopened'
} as const;

export type WebhookDependabotAlertAutoReopenedActionEnum = typeof WebhookDependabotAlertAutoReopenedActionEnum[keyof typeof WebhookDependabotAlertAutoReopenedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDependabotAlertCreated
 */
export interface WebhookDependabotAlertCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookDependabotAlertCreated
     */
    'action': WebhookDependabotAlertCreatedActionEnum;
    /**
     * 
     * @type {DependabotAlert}
     * @memberof WebhookDependabotAlertCreated
     */
    'alert': DependabotAlert;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDependabotAlertCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDependabotAlertCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDependabotAlertCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDependabotAlertCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDependabotAlertCreated
     */
    'sender': SimpleUser;
}

export const WebhookDependabotAlertCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookDependabotAlertCreatedActionEnum = typeof WebhookDependabotAlertCreatedActionEnum[keyof typeof WebhookDependabotAlertCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDependabotAlertDismissed
 */
export interface WebhookDependabotAlertDismissed {
    /**
     * 
     * @type {string}
     * @memberof WebhookDependabotAlertDismissed
     */
    'action': WebhookDependabotAlertDismissedActionEnum;
    /**
     * 
     * @type {DependabotAlert}
     * @memberof WebhookDependabotAlertDismissed
     */
    'alert': DependabotAlert;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDependabotAlertDismissed
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDependabotAlertDismissed
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDependabotAlertDismissed
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDependabotAlertDismissed
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDependabotAlertDismissed
     */
    'sender': SimpleUser;
}

export const WebhookDependabotAlertDismissedActionEnum = {
    Dismissed: 'dismissed'
} as const;

export type WebhookDependabotAlertDismissedActionEnum = typeof WebhookDependabotAlertDismissedActionEnum[keyof typeof WebhookDependabotAlertDismissedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDependabotAlertFixed
 */
export interface WebhookDependabotAlertFixed {
    /**
     * 
     * @type {string}
     * @memberof WebhookDependabotAlertFixed
     */
    'action': WebhookDependabotAlertFixedActionEnum;
    /**
     * 
     * @type {DependabotAlert}
     * @memberof WebhookDependabotAlertFixed
     */
    'alert': DependabotAlert;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDependabotAlertFixed
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDependabotAlertFixed
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDependabotAlertFixed
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDependabotAlertFixed
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDependabotAlertFixed
     */
    'sender': SimpleUser;
}

export const WebhookDependabotAlertFixedActionEnum = {
    Fixed: 'fixed'
} as const;

export type WebhookDependabotAlertFixedActionEnum = typeof WebhookDependabotAlertFixedActionEnum[keyof typeof WebhookDependabotAlertFixedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDependabotAlertReintroduced
 */
export interface WebhookDependabotAlertReintroduced {
    /**
     * 
     * @type {string}
     * @memberof WebhookDependabotAlertReintroduced
     */
    'action': WebhookDependabotAlertReintroducedActionEnum;
    /**
     * 
     * @type {DependabotAlert}
     * @memberof WebhookDependabotAlertReintroduced
     */
    'alert': DependabotAlert;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDependabotAlertReintroduced
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDependabotAlertReintroduced
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDependabotAlertReintroduced
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDependabotAlertReintroduced
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDependabotAlertReintroduced
     */
    'sender': SimpleUser;
}

export const WebhookDependabotAlertReintroducedActionEnum = {
    Reintroduced: 'reintroduced'
} as const;

export type WebhookDependabotAlertReintroducedActionEnum = typeof WebhookDependabotAlertReintroducedActionEnum[keyof typeof WebhookDependabotAlertReintroducedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDependabotAlertReopened
 */
export interface WebhookDependabotAlertReopened {
    /**
     * 
     * @type {string}
     * @memberof WebhookDependabotAlertReopened
     */
    'action': WebhookDependabotAlertReopenedActionEnum;
    /**
     * 
     * @type {DependabotAlert}
     * @memberof WebhookDependabotAlertReopened
     */
    'alert': DependabotAlert;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDependabotAlertReopened
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDependabotAlertReopened
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDependabotAlertReopened
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDependabotAlertReopened
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDependabotAlertReopened
     */
    'sender': SimpleUser;
}

export const WebhookDependabotAlertReopenedActionEnum = {
    Reopened: 'reopened'
} as const;

export type WebhookDependabotAlertReopenedActionEnum = typeof WebhookDependabotAlertReopenedActionEnum[keyof typeof WebhookDependabotAlertReopenedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDeployKeyCreated
 */
export interface WebhookDeployKeyCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookDeployKeyCreated
     */
    'action': WebhookDeployKeyCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDeployKeyCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDeployKeyCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksDeployKey}
     * @memberof WebhookDeployKeyCreated
     */
    'key': WebhooksDeployKey;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDeployKeyCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDeployKeyCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDeployKeyCreated
     */
    'sender': SimpleUser;
}

export const WebhookDeployKeyCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookDeployKeyCreatedActionEnum = typeof WebhookDeployKeyCreatedActionEnum[keyof typeof WebhookDeployKeyCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDeployKeyDeleted
 */
export interface WebhookDeployKeyDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookDeployKeyDeleted
     */
    'action': WebhookDeployKeyDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDeployKeyDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDeployKeyDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksDeployKey}
     * @memberof WebhookDeployKeyDeleted
     */
    'key': WebhooksDeployKey;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDeployKeyDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDeployKeyDeleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDeployKeyDeleted
     */
    'sender': SimpleUser;
}

export const WebhookDeployKeyDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookDeployKeyDeletedActionEnum = typeof WebhookDeployKeyDeletedActionEnum[keyof typeof WebhookDeployKeyDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDeploymentCreated
 */
export interface WebhookDeploymentCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentCreated
     */
    'action': WebhookDeploymentCreatedActionEnum;
    /**
     * 
     * @type {Deployment}
     * @memberof WebhookDeploymentCreated
     */
    'deployment': Deployment;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDeploymentCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDeploymentCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDeploymentCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDeploymentCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDeploymentCreated
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksWorkflow}
     * @memberof WebhookDeploymentCreated
     */
    'workflow': WebhooksWorkflow | null;
    /**
     * 
     * @type {DeploymentWorkflowRun}
     * @memberof WebhookDeploymentCreated
     */
    'workflow_run': DeploymentWorkflowRun | null;
}

export const WebhookDeploymentCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookDeploymentCreatedActionEnum = typeof WebhookDeploymentCreatedActionEnum[keyof typeof WebhookDeploymentCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDeploymentProtectionRuleRequested
 */
export interface WebhookDeploymentProtectionRuleRequested {
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentProtectionRuleRequested
     */
    'action'?: WebhookDeploymentProtectionRuleRequestedActionEnum;
    /**
     * The name of the environment that has the deployment protection rule.
     * @type {string}
     * @memberof WebhookDeploymentProtectionRuleRequested
     */
    'environment'?: string;
    /**
     * The event that triggered the deployment protection rule.
     * @type {string}
     * @memberof WebhookDeploymentProtectionRuleRequested
     */
    'event'?: string;
    /**
     * The URL to review the deployment protection rule.
     * @type {string}
     * @memberof WebhookDeploymentProtectionRuleRequested
     */
    'deployment_callback_url'?: string;
    /**
     * 
     * @type {Deployment}
     * @memberof WebhookDeploymentProtectionRuleRequested
     */
    'deployment'?: Deployment;
    /**
     * 
     * @type {Array<PullRequest>}
     * @memberof WebhookDeploymentProtectionRuleRequested
     */
    'pull_requests'?: Array<PullRequest>;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDeploymentProtectionRuleRequested
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDeploymentProtectionRuleRequested
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDeploymentProtectionRuleRequested
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDeploymentProtectionRuleRequested
     */
    'sender'?: SimpleUser;
}

export const WebhookDeploymentProtectionRuleRequestedActionEnum = {
    Requested: 'requested'
} as const;

export type WebhookDeploymentProtectionRuleRequestedActionEnum = typeof WebhookDeploymentProtectionRuleRequestedActionEnum[keyof typeof WebhookDeploymentProtectionRuleRequestedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDeploymentReviewApproved
 */
export interface WebhookDeploymentReviewApproved {
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewApproved
     */
    'action': WebhookDeploymentReviewApprovedActionEnum;
    /**
     * 
     * @type {WebhooksApprover}
     * @memberof WebhookDeploymentReviewApproved
     */
    'approver'?: WebhooksApprover;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewApproved
     */
    'comment'?: string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDeploymentReviewApproved
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDeploymentReviewApproved
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDeploymentReviewApproved
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDeploymentReviewApproved
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {Array<WebhooksReviewersInner>}
     * @memberof WebhookDeploymentReviewApproved
     */
    'reviewers'?: Array<WebhooksReviewersInner>;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDeploymentReviewApproved
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewApproved
     */
    'since': string;
    /**
     * 
     * @type {WebhooksWorkflowJobRun}
     * @memberof WebhookDeploymentReviewApproved
     */
    'workflow_job_run'?: WebhooksWorkflowJobRun;
    /**
     * 
     * @type {Array<WebhookDeploymentReviewApprovedWorkflowJobRunsInner>}
     * @memberof WebhookDeploymentReviewApproved
     */
    'workflow_job_runs'?: Array<WebhookDeploymentReviewApprovedWorkflowJobRunsInner>;
    /**
     * 
     * @type {DeploymentWorkflowRun1}
     * @memberof WebhookDeploymentReviewApproved
     */
    'workflow_run': DeploymentWorkflowRun1 | null;
}

export const WebhookDeploymentReviewApprovedActionEnum = {
    Approved: 'approved'
} as const;

export type WebhookDeploymentReviewApprovedActionEnum = typeof WebhookDeploymentReviewApprovedActionEnum[keyof typeof WebhookDeploymentReviewApprovedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDeploymentReviewApprovedWorkflowJobRunsInner
 */
export interface WebhookDeploymentReviewApprovedWorkflowJobRunsInner {
    /**
     * 
     * @type {any}
     * @memberof WebhookDeploymentReviewApprovedWorkflowJobRunsInner
     */
    'conclusion'?: any | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewApprovedWorkflowJobRunsInner
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewApprovedWorkflowJobRunsInner
     */
    'environment'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewApprovedWorkflowJobRunsInner
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookDeploymentReviewApprovedWorkflowJobRunsInner
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewApprovedWorkflowJobRunsInner
     */
    'name'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewApprovedWorkflowJobRunsInner
     */
    'status'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewApprovedWorkflowJobRunsInner
     */
    'updated_at'?: string;
}
/**
 * 
 * @export
 * @interface WebhookDeploymentReviewRejected
 */
export interface WebhookDeploymentReviewRejected {
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRejected
     */
    'action': WebhookDeploymentReviewRejectedActionEnum;
    /**
     * 
     * @type {WebhooksApprover}
     * @memberof WebhookDeploymentReviewRejected
     */
    'approver'?: WebhooksApprover;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRejected
     */
    'comment'?: string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDeploymentReviewRejected
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDeploymentReviewRejected
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDeploymentReviewRejected
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDeploymentReviewRejected
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {Array<WebhooksReviewersInner>}
     * @memberof WebhookDeploymentReviewRejected
     */
    'reviewers'?: Array<WebhooksReviewersInner>;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDeploymentReviewRejected
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRejected
     */
    'since': string;
    /**
     * 
     * @type {WebhooksWorkflowJobRun}
     * @memberof WebhookDeploymentReviewRejected
     */
    'workflow_job_run'?: WebhooksWorkflowJobRun;
    /**
     * 
     * @type {Array<WebhookDeploymentReviewRejectedWorkflowJobRunsInner>}
     * @memberof WebhookDeploymentReviewRejected
     */
    'workflow_job_runs'?: Array<WebhookDeploymentReviewRejectedWorkflowJobRunsInner>;
    /**
     * 
     * @type {DeploymentWorkflowRun2}
     * @memberof WebhookDeploymentReviewRejected
     */
    'workflow_run': DeploymentWorkflowRun2 | null;
}

export const WebhookDeploymentReviewRejectedActionEnum = {
    Rejected: 'rejected'
} as const;

export type WebhookDeploymentReviewRejectedActionEnum = typeof WebhookDeploymentReviewRejectedActionEnum[keyof typeof WebhookDeploymentReviewRejectedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDeploymentReviewRejectedWorkflowJobRunsInner
 */
export interface WebhookDeploymentReviewRejectedWorkflowJobRunsInner {
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRejectedWorkflowJobRunsInner
     */
    'conclusion'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRejectedWorkflowJobRunsInner
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRejectedWorkflowJobRunsInner
     */
    'environment'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRejectedWorkflowJobRunsInner
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookDeploymentReviewRejectedWorkflowJobRunsInner
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRejectedWorkflowJobRunsInner
     */
    'name'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRejectedWorkflowJobRunsInner
     */
    'status'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRejectedWorkflowJobRunsInner
     */
    'updated_at'?: string;
}
/**
 * 
 * @export
 * @interface WebhookDeploymentReviewRequested
 */
export interface WebhookDeploymentReviewRequested {
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRequested
     */
    'action': WebhookDeploymentReviewRequestedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDeploymentReviewRequested
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRequested
     */
    'environment': string;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDeploymentReviewRequested
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDeploymentReviewRequested
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDeploymentReviewRequested
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookDeploymentReviewRequested
     */
    'requestor': WebhooksUser | null;
    /**
     * 
     * @type {Array<WebhookDeploymentReviewRequestedReviewersInner>}
     * @memberof WebhookDeploymentReviewRequested
     */
    'reviewers': Array<WebhookDeploymentReviewRequestedReviewersInner>;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDeploymentReviewRequested
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRequested
     */
    'since': string;
    /**
     * 
     * @type {WebhookDeploymentReviewRequestedWorkflowJobRun}
     * @memberof WebhookDeploymentReviewRequested
     */
    'workflow_job_run': WebhookDeploymentReviewRequestedWorkflowJobRun;
    /**
     * 
     * @type {DeploymentWorkflowRun3}
     * @memberof WebhookDeploymentReviewRequested
     */
    'workflow_run': DeploymentWorkflowRun3 | null;
}

export const WebhookDeploymentReviewRequestedActionEnum = {
    Requested: 'requested'
} as const;

export type WebhookDeploymentReviewRequestedActionEnum = typeof WebhookDeploymentReviewRequestedActionEnum[keyof typeof WebhookDeploymentReviewRequestedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDeploymentReviewRequestedReviewersInner
 */
export interface WebhookDeploymentReviewRequestedReviewersInner {
    /**
     * 
     * @type {User6}
     * @memberof WebhookDeploymentReviewRequestedReviewersInner
     */
    'reviewer'?: User6 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRequestedReviewersInner
     */
    'type'?: WebhookDeploymentReviewRequestedReviewersInnerTypeEnum;
}

export const WebhookDeploymentReviewRequestedReviewersInnerTypeEnum = {
    User: 'User',
    Team: 'Team'
} as const;

export type WebhookDeploymentReviewRequestedReviewersInnerTypeEnum = typeof WebhookDeploymentReviewRequestedReviewersInnerTypeEnum[keyof typeof WebhookDeploymentReviewRequestedReviewersInnerTypeEnum];

/**
 * 
 * @export
 * @interface WebhookDeploymentReviewRequestedWorkflowJobRun
 */
export interface WebhookDeploymentReviewRequestedWorkflowJobRun {
    /**
     * 
     * @type {any}
     * @memberof WebhookDeploymentReviewRequestedWorkflowJobRun
     */
    'conclusion': any | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRequestedWorkflowJobRun
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRequestedWorkflowJobRun
     */
    'environment': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRequestedWorkflowJobRun
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookDeploymentReviewRequestedWorkflowJobRun
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRequestedWorkflowJobRun
     */
    'name': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRequestedWorkflowJobRun
     */
    'status': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentReviewRequestedWorkflowJobRun
     */
    'updated_at': string;
}
/**
 * 
 * @export
 * @interface WebhookDeploymentStatusCreated
 */
export interface WebhookDeploymentStatusCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreated
     */
    'action': WebhookDeploymentStatusCreatedActionEnum;
    /**
     * 
     * @type {WebhookDeploymentStatusCreatedCheckRun}
     * @memberof WebhookDeploymentStatusCreated
     */
    'check_run'?: WebhookDeploymentStatusCreatedCheckRun | null;
    /**
     * 
     * @type {Deployment1}
     * @memberof WebhookDeploymentStatusCreated
     */
    'deployment': Deployment1;
    /**
     * 
     * @type {WebhookDeploymentStatusCreatedDeploymentStatus}
     * @memberof WebhookDeploymentStatusCreated
     */
    'deployment_status': WebhookDeploymentStatusCreatedDeploymentStatus;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDeploymentStatusCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDeploymentStatusCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDeploymentStatusCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDeploymentStatusCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDeploymentStatusCreated
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksWorkflow}
     * @memberof WebhookDeploymentStatusCreated
     */
    'workflow'?: WebhooksWorkflow | null;
    /**
     * 
     * @type {DeploymentWorkflowRun4}
     * @memberof WebhookDeploymentStatusCreated
     */
    'workflow_run'?: DeploymentWorkflowRun4 | null;
}

export const WebhookDeploymentStatusCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookDeploymentStatusCreatedActionEnum = typeof WebhookDeploymentStatusCreatedActionEnum[keyof typeof WebhookDeploymentStatusCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDeploymentStatusCreatedCheckRun
 */
export interface WebhookDeploymentStatusCreatedCheckRun {
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedCheckRun
     */
    'completed_at': string | null;
    /**
     * The result of the completed check run. This value will be `null` until the check run has completed.
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedCheckRun
     */
    'conclusion': WebhookDeploymentStatusCreatedCheckRunConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedCheckRun
     */
    'details_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedCheckRun
     */
    'external_id': string;
    /**
     * The SHA of the commit that is being checked.
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedCheckRun
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedCheckRun
     */
    'html_url': string;
    /**
     * The id of the check.
     * @type {number}
     * @memberof WebhookDeploymentStatusCreatedCheckRun
     */
    'id': number;
    /**
     * The name of the check run.
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedCheckRun
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedCheckRun
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedCheckRun
     */
    'started_at': string;
    /**
     * The current status of the check run. Can be `queued`, `in_progress`, or `completed`.
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedCheckRun
     */
    'status': WebhookDeploymentStatusCreatedCheckRunStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedCheckRun
     */
    'url': string;
}

export const WebhookDeploymentStatusCreatedCheckRunConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required',
    Stale: 'stale',
    Skipped: 'skipped'
} as const;

export type WebhookDeploymentStatusCreatedCheckRunConclusionEnum = typeof WebhookDeploymentStatusCreatedCheckRunConclusionEnum[keyof typeof WebhookDeploymentStatusCreatedCheckRunConclusionEnum];
export const WebhookDeploymentStatusCreatedCheckRunStatusEnum = {
    Queued: 'queued',
    InProgress: 'in_progress',
    Completed: 'completed',
    Waiting: 'waiting',
    Pending: 'pending'
} as const;

export type WebhookDeploymentStatusCreatedCheckRunStatusEnum = typeof WebhookDeploymentStatusCreatedCheckRunStatusEnum[keyof typeof WebhookDeploymentStatusCreatedCheckRunStatusEnum];

/**
 * The [deployment status](https://docs.github.com/rest/deployments/statuses#list-deployment-statuses).
 * @export
 * @interface WebhookDeploymentStatusCreatedDeploymentStatus
 */
export interface WebhookDeploymentStatusCreatedDeploymentStatus {
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'created_at': string;
    /**
     * 
     * @type {User2}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'creator': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'deployment_url': string;
    /**
     * The optional human-readable description added to the status.
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'description': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'environment': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'environment_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'log_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'node_id': string;
    /**
     * 
     * @type {App7}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'performed_via_github_app'?: App7 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'repository_url': string;
    /**
     * The new state. Can be `pending`, `success`, `failure`, or `error`.
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'state': string;
    /**
     * The optional link added to the status.
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'target_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookDeploymentStatusCreatedDeploymentStatus
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WebhookDiscussionAnswered
 */
export interface WebhookDiscussionAnswered {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionAnswered
     */
    'action': WebhookDiscussionAnsweredActionEnum;
    /**
     * 
     * @type {WebhooksAnswer}
     * @memberof WebhookDiscussionAnswered
     */
    'answer': WebhooksAnswer;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionAnswered
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionAnswered
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionAnswered
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionAnswered
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionAnswered
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionAnswered
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionAnsweredActionEnum = {
    Answered: 'answered'
} as const;

export type WebhookDiscussionAnsweredActionEnum = typeof WebhookDiscussionAnsweredActionEnum[keyof typeof WebhookDiscussionAnsweredActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionCategoryChanged
 */
export interface WebhookDiscussionCategoryChanged {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionCategoryChanged
     */
    'action': WebhookDiscussionCategoryChangedActionEnum;
    /**
     * 
     * @type {WebhookDiscussionCategoryChangedChanges}
     * @memberof WebhookDiscussionCategoryChanged
     */
    'changes': WebhookDiscussionCategoryChangedChanges;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionCategoryChanged
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionCategoryChanged
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionCategoryChanged
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionCategoryChanged
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionCategoryChanged
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionCategoryChanged
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionCategoryChangedActionEnum = {
    CategoryChanged: 'category_changed'
} as const;

export type WebhookDiscussionCategoryChangedActionEnum = typeof WebhookDiscussionCategoryChangedActionEnum[keyof typeof WebhookDiscussionCategoryChangedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionCategoryChangedChanges
 */
export interface WebhookDiscussionCategoryChangedChanges {
    /**
     * 
     * @type {WebhookDiscussionCategoryChangedChangesCategory}
     * @memberof WebhookDiscussionCategoryChangedChanges
     */
    'category': WebhookDiscussionCategoryChangedChangesCategory;
}
/**
 * 
 * @export
 * @interface WebhookDiscussionCategoryChangedChangesCategory
 */
export interface WebhookDiscussionCategoryChangedChangesCategory {
    /**
     * 
     * @type {DiscussionCategory}
     * @memberof WebhookDiscussionCategoryChangedChangesCategory
     */
    'from': DiscussionCategory;
}
/**
 * 
 * @export
 * @interface WebhookDiscussionClosed
 */
export interface WebhookDiscussionClosed {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionClosed
     */
    'action': WebhookDiscussionClosedActionEnum;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionClosed
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionClosed
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionClosed
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionClosed
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionClosed
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionClosed
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionClosedActionEnum = {
    Closed: 'closed'
} as const;

export type WebhookDiscussionClosedActionEnum = typeof WebhookDiscussionClosedActionEnum[keyof typeof WebhookDiscussionClosedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionCommentCreated
 */
export interface WebhookDiscussionCommentCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionCommentCreated
     */
    'action': WebhookDiscussionCommentCreatedActionEnum;
    /**
     * 
     * @type {WebhooksComment}
     * @memberof WebhookDiscussionCommentCreated
     */
    'comment': WebhooksComment;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionCommentCreated
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionCommentCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionCommentCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionCommentCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionCommentCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionCommentCreated
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionCommentCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookDiscussionCommentCreatedActionEnum = typeof WebhookDiscussionCommentCreatedActionEnum[keyof typeof WebhookDiscussionCommentCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionCommentDeleted
 */
export interface WebhookDiscussionCommentDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionCommentDeleted
     */
    'action': WebhookDiscussionCommentDeletedActionEnum;
    /**
     * 
     * @type {WebhooksComment}
     * @memberof WebhookDiscussionCommentDeleted
     */
    'comment': WebhooksComment;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionCommentDeleted
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionCommentDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionCommentDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionCommentDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionCommentDeleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionCommentDeleted
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionCommentDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookDiscussionCommentDeletedActionEnum = typeof WebhookDiscussionCommentDeletedActionEnum[keyof typeof WebhookDiscussionCommentDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionCommentEdited
 */
export interface WebhookDiscussionCommentEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionCommentEdited
     */
    'action': WebhookDiscussionCommentEditedActionEnum;
    /**
     * 
     * @type {WebhookDiscussionCommentEditedChanges}
     * @memberof WebhookDiscussionCommentEdited
     */
    'changes': WebhookDiscussionCommentEditedChanges;
    /**
     * 
     * @type {WebhooksComment}
     * @memberof WebhookDiscussionCommentEdited
     */
    'comment': WebhooksComment;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionCommentEdited
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionCommentEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionCommentEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionCommentEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionCommentEdited
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionCommentEdited
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionCommentEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookDiscussionCommentEditedActionEnum = typeof WebhookDiscussionCommentEditedActionEnum[keyof typeof WebhookDiscussionCommentEditedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionCommentEditedChanges
 */
export interface WebhookDiscussionCommentEditedChanges {
    /**
     * 
     * @type {WebhookDiscussionCommentEditedChangesBody}
     * @memberof WebhookDiscussionCommentEditedChanges
     */
    'body': WebhookDiscussionCommentEditedChangesBody;
}
/**
 * 
 * @export
 * @interface WebhookDiscussionCommentEditedChangesBody
 */
export interface WebhookDiscussionCommentEditedChangesBody {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionCommentEditedChangesBody
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookDiscussionCreated
 */
export interface WebhookDiscussionCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionCreated
     */
    'action': WebhookDiscussionCreatedActionEnum;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionCreated
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionCreated
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookDiscussionCreatedActionEnum = typeof WebhookDiscussionCreatedActionEnum[keyof typeof WebhookDiscussionCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionDeleted
 */
export interface WebhookDiscussionDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionDeleted
     */
    'action': WebhookDiscussionDeletedActionEnum;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionDeleted
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionDeleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionDeleted
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookDiscussionDeletedActionEnum = typeof WebhookDiscussionDeletedActionEnum[keyof typeof WebhookDiscussionDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionEdited
 */
export interface WebhookDiscussionEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionEdited
     */
    'action': WebhookDiscussionEditedActionEnum;
    /**
     * 
     * @type {WebhookDiscussionEditedChanges}
     * @memberof WebhookDiscussionEdited
     */
    'changes'?: WebhookDiscussionEditedChanges;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionEdited
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionEdited
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionEdited
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookDiscussionEditedActionEnum = typeof WebhookDiscussionEditedActionEnum[keyof typeof WebhookDiscussionEditedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionEditedChanges
 */
export interface WebhookDiscussionEditedChanges {
    /**
     * 
     * @type {WebhookDiscussionCommentEditedChangesBody}
     * @memberof WebhookDiscussionEditedChanges
     */
    'body'?: WebhookDiscussionCommentEditedChangesBody;
    /**
     * 
     * @type {WebhookDiscussionCommentEditedChangesBody}
     * @memberof WebhookDiscussionEditedChanges
     */
    'title'?: WebhookDiscussionCommentEditedChangesBody;
}
/**
 * 
 * @export
 * @interface WebhookDiscussionLabeled
 */
export interface WebhookDiscussionLabeled {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionLabeled
     */
    'action': WebhookDiscussionLabeledActionEnum;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionLabeled
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionLabeled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionLabeled
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksLabel}
     * @memberof WebhookDiscussionLabeled
     */
    'label': WebhooksLabel;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionLabeled
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionLabeled
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionLabeled
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionLabeledActionEnum = {
    Labeled: 'labeled'
} as const;

export type WebhookDiscussionLabeledActionEnum = typeof WebhookDiscussionLabeledActionEnum[keyof typeof WebhookDiscussionLabeledActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionLocked
 */
export interface WebhookDiscussionLocked {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionLocked
     */
    'action': WebhookDiscussionLockedActionEnum;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionLocked
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionLocked
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionLocked
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionLocked
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionLocked
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionLocked
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionLockedActionEnum = {
    Locked: 'locked'
} as const;

export type WebhookDiscussionLockedActionEnum = typeof WebhookDiscussionLockedActionEnum[keyof typeof WebhookDiscussionLockedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionPinned
 */
export interface WebhookDiscussionPinned {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionPinned
     */
    'action': WebhookDiscussionPinnedActionEnum;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionPinned
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionPinned
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionPinned
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionPinned
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionPinned
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionPinned
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionPinnedActionEnum = {
    Pinned: 'pinned'
} as const;

export type WebhookDiscussionPinnedActionEnum = typeof WebhookDiscussionPinnedActionEnum[keyof typeof WebhookDiscussionPinnedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionReopened
 */
export interface WebhookDiscussionReopened {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionReopened
     */
    'action': WebhookDiscussionReopenedActionEnum;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionReopened
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionReopened
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionReopened
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionReopened
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionReopened
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionReopened
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionReopenedActionEnum = {
    Reopened: 'reopened'
} as const;

export type WebhookDiscussionReopenedActionEnum = typeof WebhookDiscussionReopenedActionEnum[keyof typeof WebhookDiscussionReopenedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionTransferred
 */
export interface WebhookDiscussionTransferred {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionTransferred
     */
    'action': WebhookDiscussionTransferredActionEnum;
    /**
     * 
     * @type {WebhookDiscussionTransferredChanges}
     * @memberof WebhookDiscussionTransferred
     */
    'changes': WebhookDiscussionTransferredChanges;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionTransferred
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionTransferred
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionTransferred
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionTransferred
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionTransferred
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionTransferred
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionTransferredActionEnum = {
    Transferred: 'transferred'
} as const;

export type WebhookDiscussionTransferredActionEnum = typeof WebhookDiscussionTransferredActionEnum[keyof typeof WebhookDiscussionTransferredActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionTransferredChanges
 */
export interface WebhookDiscussionTransferredChanges {
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionTransferredChanges
     */
    'new_discussion': Discussion;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionTransferredChanges
     */
    'new_repository': RepositoryWebhooks;
}
/**
 * 
 * @export
 * @interface WebhookDiscussionUnanswered
 */
export interface WebhookDiscussionUnanswered {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionUnanswered
     */
    'action': WebhookDiscussionUnansweredActionEnum;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionUnanswered
     */
    'discussion': Discussion;
    /**
     * 
     * @type {WebhooksAnswer}
     * @memberof WebhookDiscussionUnanswered
     */
    'old_answer': WebhooksAnswer;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionUnanswered
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionUnanswered
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionUnanswered
     */
    'sender'?: SimpleUser;
}

export const WebhookDiscussionUnansweredActionEnum = {
    Unanswered: 'unanswered'
} as const;

export type WebhookDiscussionUnansweredActionEnum = typeof WebhookDiscussionUnansweredActionEnum[keyof typeof WebhookDiscussionUnansweredActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionUnlabeled
 */
export interface WebhookDiscussionUnlabeled {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionUnlabeled
     */
    'action': WebhookDiscussionUnlabeledActionEnum;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionUnlabeled
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionUnlabeled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionUnlabeled
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksLabel}
     * @memberof WebhookDiscussionUnlabeled
     */
    'label': WebhooksLabel;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionUnlabeled
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionUnlabeled
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionUnlabeled
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionUnlabeledActionEnum = {
    Unlabeled: 'unlabeled'
} as const;

export type WebhookDiscussionUnlabeledActionEnum = typeof WebhookDiscussionUnlabeledActionEnum[keyof typeof WebhookDiscussionUnlabeledActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionUnlocked
 */
export interface WebhookDiscussionUnlocked {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionUnlocked
     */
    'action': WebhookDiscussionUnlockedActionEnum;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionUnlocked
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionUnlocked
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionUnlocked
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionUnlocked
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionUnlocked
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionUnlocked
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionUnlockedActionEnum = {
    Unlocked: 'unlocked'
} as const;

export type WebhookDiscussionUnlockedActionEnum = typeof WebhookDiscussionUnlockedActionEnum[keyof typeof WebhookDiscussionUnlockedActionEnum];

/**
 * 
 * @export
 * @interface WebhookDiscussionUnpinned
 */
export interface WebhookDiscussionUnpinned {
    /**
     * 
     * @type {string}
     * @memberof WebhookDiscussionUnpinned
     */
    'action': WebhookDiscussionUnpinnedActionEnum;
    /**
     * 
     * @type {Discussion}
     * @memberof WebhookDiscussionUnpinned
     */
    'discussion': Discussion;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookDiscussionUnpinned
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookDiscussionUnpinned
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookDiscussionUnpinned
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookDiscussionUnpinned
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookDiscussionUnpinned
     */
    'sender': SimpleUser;
}

export const WebhookDiscussionUnpinnedActionEnum = {
    Unpinned: 'unpinned'
} as const;

export type WebhookDiscussionUnpinnedActionEnum = typeof WebhookDiscussionUnpinnedActionEnum[keyof typeof WebhookDiscussionUnpinnedActionEnum];

/**
 * A user forks a repository.
 * @export
 * @interface WebhookFork
 */
export interface WebhookFork {
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookFork
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {WebhookForkForkee}
     * @memberof WebhookFork
     */
    'forkee': WebhookForkForkee;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookFork
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookFork
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookFork
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookFork
     */
    'sender': SimpleUser;
}
/**
 * The created [`repository`](https://docs.github.com/rest/repos/repos#get-a-repository) resource.
 * @export
 * @interface WebhookForkForkee
 */
export interface WebhookForkForkee {
    /**
     * Whether to allow auto-merge for pull requests.
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'allow_auto_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'allow_forking'?: boolean;
    /**
     * Whether to allow merge commits for pull requests.
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'allow_merge_commit'?: boolean;
    /**
     * Whether to allow rebase merges for pull requests.
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'allow_rebase_merge'?: boolean;
    /**
     * Whether to allow squash merges for pull requests.
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'allow_squash_merge'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'allow_update_branch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'archive_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'archived': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'assignees_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'blobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'branches_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'clone_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'collaborators_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'compare_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'contents_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'contributors_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'default_branch': string;
    /**
     * Whether to delete head branches when pull requests are merged
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'delete_branch_on_merge'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'deployments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'description': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'disabled'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'downloads_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'events_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'fork': boolean;
    /**
     * 
     * @type {number}
     * @memberof WebhookForkForkee
     */
    'forks': number;
    /**
     * 
     * @type {number}
     * @memberof WebhookForkForkee
     */
    'forks_count': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'forks_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'full_name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'git_commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'git_refs_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'git_tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'git_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'has_downloads': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'has_issues': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'has_pages': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'has_projects': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'has_wiki': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'homepage': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'hooks_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookForkForkee
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'is_template'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'issue_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'issue_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'issues_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'keys_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'labels_url': string;
    /**
     * 
     * @type {any}
     * @memberof WebhookForkForkee
     */
    'language': any | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'languages_url': string;
    /**
     * 
     * @type {object}
     * @memberof WebhookForkForkee
     */
    'license': object | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'master_branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'merges_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'milestones_url': string;
    /**
     * 
     * @type {any}
     * @memberof WebhookForkForkee
     */
    'mirror_url': any | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'notifications_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookForkForkee
     */
    'open_issues': number;
    /**
     * 
     * @type {number}
     * @memberof WebhookForkForkee
     */
    'open_issues_count': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'organization'?: string;
    /**
     * 
     * @type {DeploymentWorkflowRunHeadRepositoryOwner}
     * @memberof WebhookForkForkee
     */
    'owner': DeploymentWorkflowRunHeadRepositoryOwner;
    /**
     * 
     * @type {RepositoryPermissions}
     * @memberof WebhookForkForkee
     */
    'permissions'?: RepositoryPermissions;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'private': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'public'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'pulls_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'pushed_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'releases_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'role_name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookForkForkee
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'ssh_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookForkForkee
     */
    'stargazers'?: number;
    /**
     * 
     * @type {number}
     * @memberof WebhookForkForkee
     */
    'stargazers_count': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'stargazers_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'subscribers_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'subscription_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'svn_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'tags_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'teams_url': string;
    /**
     * 
     * @type {Array<any | null>}
     * @memberof WebhookForkForkee
     */
    'topics': Array<any | null>;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'trees_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookForkForkee
     */
    'visibility': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookForkForkee
     */
    'watchers': number;
    /**
     * 
     * @type {number}
     * @memberof WebhookForkForkee
     */
    'watchers_count': number;
    /**
     * Whether to require contributors to sign off on web-based commits
     * @type {boolean}
     * @memberof WebhookForkForkee
     */
    'web_commit_signoff_required'?: boolean;
}
/**
 * 
 * @export
 * @interface WebhookGithubAppAuthorizationRevoked
 */
export interface WebhookGithubAppAuthorizationRevoked {
    /**
     * 
     * @type {string}
     * @memberof WebhookGithubAppAuthorizationRevoked
     */
    'action': WebhookGithubAppAuthorizationRevokedActionEnum;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookGithubAppAuthorizationRevoked
     */
    'sender': SimpleUser;
}

export const WebhookGithubAppAuthorizationRevokedActionEnum = {
    Revoked: 'revoked'
} as const;

export type WebhookGithubAppAuthorizationRevokedActionEnum = typeof WebhookGithubAppAuthorizationRevokedActionEnum[keyof typeof WebhookGithubAppAuthorizationRevokedActionEnum];

/**
 * 
 * @export
 * @interface WebhookGollum
 */
export interface WebhookGollum {
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookGollum
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookGollum
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookGollum
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * The pages that were updated.
     * @type {Array<WebhookGollumPagesInner>}
     * @memberof WebhookGollum
     */
    'pages': Array<WebhookGollumPagesInner>;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookGollum
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookGollum
     */
    'sender': SimpleUser;
}
/**
 * 
 * @export
 * @interface WebhookGollumPagesInner
 */
export interface WebhookGollumPagesInner {
    /**
     * The action that was performed on the page. Can be `created` or `edited`.
     * @type {string}
     * @memberof WebhookGollumPagesInner
     */
    'action': WebhookGollumPagesInnerActionEnum;
    /**
     * Points to the HTML wiki page.
     * @type {string}
     * @memberof WebhookGollumPagesInner
     */
    'html_url': string;
    /**
     * The name of the page.
     * @type {string}
     * @memberof WebhookGollumPagesInner
     */
    'page_name': string;
    /**
     * The latest commit SHA of the page.
     * @type {string}
     * @memberof WebhookGollumPagesInner
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookGollumPagesInner
     */
    'summary': string | null;
    /**
     * The current page title.
     * @type {string}
     * @memberof WebhookGollumPagesInner
     */
    'title': string;
}

export const WebhookGollumPagesInnerActionEnum = {
    Created: 'created',
    Edited: 'edited'
} as const;

export type WebhookGollumPagesInnerActionEnum = typeof WebhookGollumPagesInnerActionEnum[keyof typeof WebhookGollumPagesInnerActionEnum];

/**
 * 
 * @export
 * @interface WebhookInstallationCreated
 */
export interface WebhookInstallationCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationCreated
     */
    'action': WebhookInstallationCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookInstallationCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {Installation}
     * @memberof WebhookInstallationCreated
     */
    'installation': Installation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookInstallationCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * An array of repository objects that the installation can access.
     * @type {Array<WebhooksRepositoriesInner>}
     * @memberof WebhookInstallationCreated
     */
    'repositories'?: Array<WebhooksRepositoriesInner>;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookInstallationCreated
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookInstallationCreated
     */
    'requester'?: WebhooksUser | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookInstallationCreated
     */
    'sender': SimpleUser;
}

export const WebhookInstallationCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookInstallationCreatedActionEnum = typeof WebhookInstallationCreatedActionEnum[keyof typeof WebhookInstallationCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookInstallationDeleted
 */
export interface WebhookInstallationDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationDeleted
     */
    'action': WebhookInstallationDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookInstallationDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {Installation}
     * @memberof WebhookInstallationDeleted
     */
    'installation': Installation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookInstallationDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * An array of repository objects that the installation can access.
     * @type {Array<WebhooksRepositoriesInner>}
     * @memberof WebhookInstallationDeleted
     */
    'repositories'?: Array<WebhooksRepositoriesInner>;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookInstallationDeleted
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {any}
     * @memberof WebhookInstallationDeleted
     */
    'requester'?: any | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookInstallationDeleted
     */
    'sender': SimpleUser;
}

export const WebhookInstallationDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookInstallationDeletedActionEnum = typeof WebhookInstallationDeletedActionEnum[keyof typeof WebhookInstallationDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookInstallationNewPermissionsAccepted
 */
export interface WebhookInstallationNewPermissionsAccepted {
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationNewPermissionsAccepted
     */
    'action': WebhookInstallationNewPermissionsAcceptedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookInstallationNewPermissionsAccepted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {Installation}
     * @memberof WebhookInstallationNewPermissionsAccepted
     */
    'installation': Installation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookInstallationNewPermissionsAccepted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * An array of repository objects that the installation can access.
     * @type {Array<WebhooksRepositoriesInner>}
     * @memberof WebhookInstallationNewPermissionsAccepted
     */
    'repositories'?: Array<WebhooksRepositoriesInner>;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookInstallationNewPermissionsAccepted
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {any}
     * @memberof WebhookInstallationNewPermissionsAccepted
     */
    'requester'?: any | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookInstallationNewPermissionsAccepted
     */
    'sender': SimpleUser;
}

export const WebhookInstallationNewPermissionsAcceptedActionEnum = {
    NewPermissionsAccepted: 'new_permissions_accepted'
} as const;

export type WebhookInstallationNewPermissionsAcceptedActionEnum = typeof WebhookInstallationNewPermissionsAcceptedActionEnum[keyof typeof WebhookInstallationNewPermissionsAcceptedActionEnum];

/**
 * 
 * @export
 * @interface WebhookInstallationRepositoriesAdded
 */
export interface WebhookInstallationRepositoriesAdded {
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationRepositoriesAdded
     */
    'action': WebhookInstallationRepositoriesAddedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookInstallationRepositoriesAdded
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {Installation}
     * @memberof WebhookInstallationRepositoriesAdded
     */
    'installation': Installation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookInstallationRepositoriesAdded
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * An array of repository objects, which were added to the installation.
     * @type {Array<WebhooksRepositoriesInner>}
     * @memberof WebhookInstallationRepositoriesAdded
     */
    'repositories_added': Array<WebhooksRepositoriesInner>;
    /**
     * An array of repository objects, which were removed from the installation.
     * @type {Array<WebhookInstallationRepositoriesAddedRepositoriesRemovedInner>}
     * @memberof WebhookInstallationRepositoriesAdded
     */
    'repositories_removed': Array<WebhookInstallationRepositoriesAddedRepositoriesRemovedInner>;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookInstallationRepositoriesAdded
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {WebhooksRepositorySelection}
     * @memberof WebhookInstallationRepositoriesAdded
     */
    'repository_selection': WebhooksRepositorySelection;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookInstallationRepositoriesAdded
     */
    'requester': WebhooksUser | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookInstallationRepositoriesAdded
     */
    'sender': SimpleUser;
}

export const WebhookInstallationRepositoriesAddedActionEnum = {
    Added: 'added'
} as const;

export type WebhookInstallationRepositoriesAddedActionEnum = typeof WebhookInstallationRepositoriesAddedActionEnum[keyof typeof WebhookInstallationRepositoriesAddedActionEnum];

/**
 * 
 * @export
 * @interface WebhookInstallationRepositoriesAddedRepositoriesRemovedInner
 */
export interface WebhookInstallationRepositoriesAddedRepositoriesRemovedInner {
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationRepositoriesAddedRepositoriesRemovedInner
     */
    'full_name'?: string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof WebhookInstallationRepositoriesAddedRepositoriesRemovedInner
     */
    'id'?: number;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof WebhookInstallationRepositoriesAddedRepositoriesRemovedInner
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationRepositoriesAddedRepositoriesRemovedInner
     */
    'node_id'?: string;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof WebhookInstallationRepositoriesAddedRepositoriesRemovedInner
     */
    'private'?: boolean;
}
/**
 * 
 * @export
 * @interface WebhookInstallationRepositoriesRemoved
 */
export interface WebhookInstallationRepositoriesRemoved {
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationRepositoriesRemoved
     */
    'action': WebhookInstallationRepositoriesRemovedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookInstallationRepositoriesRemoved
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {Installation}
     * @memberof WebhookInstallationRepositoriesRemoved
     */
    'installation': Installation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookInstallationRepositoriesRemoved
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * An array of repository objects, which were added to the installation.
     * @type {Array<WebhooksRepositoriesInner>}
     * @memberof WebhookInstallationRepositoriesRemoved
     */
    'repositories_added': Array<WebhooksRepositoriesInner>;
    /**
     * An array of repository objects, which were removed from the installation.
     * @type {Array<WebhooksRepositoriesInner>}
     * @memberof WebhookInstallationRepositoriesRemoved
     */
    'repositories_removed': Array<WebhooksRepositoriesInner>;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookInstallationRepositoriesRemoved
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {WebhooksRepositorySelection}
     * @memberof WebhookInstallationRepositoriesRemoved
     */
    'repository_selection': WebhooksRepositorySelection;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookInstallationRepositoriesRemoved
     */
    'requester': WebhooksUser | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookInstallationRepositoriesRemoved
     */
    'sender': SimpleUser;
}

export const WebhookInstallationRepositoriesRemovedActionEnum = {
    Removed: 'removed'
} as const;

export type WebhookInstallationRepositoriesRemovedActionEnum = typeof WebhookInstallationRepositoriesRemovedActionEnum[keyof typeof WebhookInstallationRepositoriesRemovedActionEnum];

/**
 * 
 * @export
 * @interface WebhookInstallationSuspend
 */
export interface WebhookInstallationSuspend {
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationSuspend
     */
    'action': WebhookInstallationSuspendActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookInstallationSuspend
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {Installation}
     * @memberof WebhookInstallationSuspend
     */
    'installation': Installation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookInstallationSuspend
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * An array of repository objects that the installation can access.
     * @type {Array<WebhooksRepositoriesInner>}
     * @memberof WebhookInstallationSuspend
     */
    'repositories'?: Array<WebhooksRepositoriesInner>;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookInstallationSuspend
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {any}
     * @memberof WebhookInstallationSuspend
     */
    'requester'?: any | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookInstallationSuspend
     */
    'sender': SimpleUser;
}

export const WebhookInstallationSuspendActionEnum = {
    Suspend: 'suspend'
} as const;

export type WebhookInstallationSuspendActionEnum = typeof WebhookInstallationSuspendActionEnum[keyof typeof WebhookInstallationSuspendActionEnum];

/**
 * 
 * @export
 * @interface WebhookInstallationTargetRenamed
 */
export interface WebhookInstallationTargetRenamed {
    /**
     * 
     * @type {WebhookInstallationTargetRenamedAccount}
     * @memberof WebhookInstallationTargetRenamed
     */
    'account': WebhookInstallationTargetRenamedAccount;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamed
     */
    'action': WebhookInstallationTargetRenamedActionEnum;
    /**
     * 
     * @type {WebhookInstallationTargetRenamedChanges}
     * @memberof WebhookInstallationTargetRenamed
     */
    'changes': WebhookInstallationTargetRenamedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookInstallationTargetRenamed
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookInstallationTargetRenamed
     */
    'installation': SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookInstallationTargetRenamed
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookInstallationTargetRenamed
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookInstallationTargetRenamed
     */
    'sender'?: SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamed
     */
    'target_type': string;
}

export const WebhookInstallationTargetRenamedActionEnum = {
    Renamed: 'renamed'
} as const;

export type WebhookInstallationTargetRenamedActionEnum = typeof WebhookInstallationTargetRenamedActionEnum[keyof typeof WebhookInstallationTargetRenamedActionEnum];

/**
 * 
 * @export
 * @interface WebhookInstallationTargetRenamedAccount
 */
export interface WebhookInstallationTargetRenamedAccount {
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'archived_at'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'created_at'?: string;
    /**
     * 
     * @type {any}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'description'?: any | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'events_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'followers'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'followers_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'following'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'has_organization_projects'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'has_repository_projects'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'hooks_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'is_verified'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'issues_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'login'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'members_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'public_gists'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'public_members_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'public_repos'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'slug'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'type'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'updated_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'url'?: string;
    /**
     * 
     * @type {any}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'website_url'?: any | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationTargetRenamedAccount
     */
    'user_view_type'?: string;
}
/**
 * 
 * @export
 * @interface WebhookInstallationTargetRenamedChanges
 */
export interface WebhookInstallationTargetRenamedChanges {
    /**
     * 
     * @type {WebhookDiscussionCommentEditedChangesBody}
     * @memberof WebhookInstallationTargetRenamedChanges
     */
    'login'?: WebhookDiscussionCommentEditedChangesBody;
    /**
     * 
     * @type {WebhookDiscussionCommentEditedChangesBody}
     * @memberof WebhookInstallationTargetRenamedChanges
     */
    'slug'?: WebhookDiscussionCommentEditedChangesBody;
}
/**
 * 
 * @export
 * @interface WebhookInstallationUnsuspend
 */
export interface WebhookInstallationUnsuspend {
    /**
     * 
     * @type {string}
     * @memberof WebhookInstallationUnsuspend
     */
    'action': WebhookInstallationUnsuspendActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookInstallationUnsuspend
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {Installation}
     * @memberof WebhookInstallationUnsuspend
     */
    'installation': Installation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookInstallationUnsuspend
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * An array of repository objects that the installation can access.
     * @type {Array<WebhooksRepositoriesInner>}
     * @memberof WebhookInstallationUnsuspend
     */
    'repositories'?: Array<WebhooksRepositoriesInner>;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookInstallationUnsuspend
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {any}
     * @memberof WebhookInstallationUnsuspend
     */
    'requester'?: any | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookInstallationUnsuspend
     */
    'sender': SimpleUser;
}

export const WebhookInstallationUnsuspendActionEnum = {
    Unsuspend: 'unsuspend'
} as const;

export type WebhookInstallationUnsuspendActionEnum = typeof WebhookInstallationUnsuspendActionEnum[keyof typeof WebhookInstallationUnsuspendActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssueCommentCreated
 */
export interface WebhookIssueCommentCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreated
     */
    'action': WebhookIssueCommentCreatedActionEnum;
    /**
     * 
     * @type {IssueComment}
     * @memberof WebhookIssueCommentCreated
     */
    'comment': IssueComment;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssueCommentCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssueCommentCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhookIssueCommentCreatedIssue}
     * @memberof WebhookIssueCommentCreated
     */
    'issue': WebhookIssueCommentCreatedIssue;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssueCommentCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssueCommentCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssueCommentCreated
     */
    'sender': SimpleUser;
}

export const WebhookIssueCommentCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookIssueCommentCreatedActionEnum = typeof WebhookIssueCommentCreatedActionEnum[keyof typeof WebhookIssueCommentCreatedActionEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) the comment belongs to.
 * @export
 * @interface WebhookIssueCommentCreatedIssue
 */
export interface WebhookIssueCommentCreatedIssue {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'active_lock_reason': string | null;
    /**
     * 
     * @type {User4}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<object | null>}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'assignees': Array<object | null>;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'author_association': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'id': number;
    /**
     * 
     * @type {Array<Label>}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'locked': boolean;
    /**
     * 
     * @type {object}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'milestone': object | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'number': number;
    /**
     * 
     * @type {object}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'performed_via_github_app'?: object | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {WebhookIssueCommentCreatedIssueAllOfReactions}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'reactions': WebhookIssueCommentCreatedIssueAllOfReactions;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'state': WebhookIssueCommentCreatedIssueStateEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'timeline_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'title': string;
    /**
     * 
     * @type {IssueType}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'url': string;
    /**
     * 
     * @type {WebhookIssueCommentCreatedIssueAllOfUser}
     * @memberof WebhookIssueCommentCreatedIssue
     */
    'user': WebhookIssueCommentCreatedIssueAllOfUser;
}

export const WebhookIssueCommentCreatedIssueStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type WebhookIssueCommentCreatedIssueStateEnum = typeof WebhookIssueCommentCreatedIssueStateEnum[keyof typeof WebhookIssueCommentCreatedIssueStateEnum];

/**
 * 
 * @export
 * @interface WebhookIssueCommentCreatedIssueAllOfReactions
 */
export interface WebhookIssueCommentCreatedIssueAllOfReactions {
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentCreatedIssueAllOfReactions
     */
    '+1'?: number;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentCreatedIssueAllOfReactions
     */
    '-1'?: number;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentCreatedIssueAllOfReactions
     */
    'confused'?: number;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentCreatedIssueAllOfReactions
     */
    'eyes'?: number;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentCreatedIssueAllOfReactions
     */
    'heart'?: number;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentCreatedIssueAllOfReactions
     */
    'hooray'?: number;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentCreatedIssueAllOfReactions
     */
    'laugh'?: number;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentCreatedIssueAllOfReactions
     */
    'rocket'?: number;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentCreatedIssueAllOfReactions
     */
    'total_count'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfReactions
     */
    'url'?: string;
}
/**
 * 
 * @export
 * @interface WebhookIssueCommentCreatedIssueAllOfUser
 */
export interface WebhookIssueCommentCreatedIssueAllOfUser {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'login'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'type'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentCreatedIssueAllOfUser
     */
    'url'?: string;
}
/**
 * 
 * @export
 * @interface WebhookIssueCommentDeleted
 */
export interface WebhookIssueCommentDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeleted
     */
    'action': WebhookIssueCommentDeletedActionEnum;
    /**
     * 
     * @type {WebhooksIssueComment}
     * @memberof WebhookIssueCommentDeleted
     */
    'comment': WebhooksIssueComment;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssueCommentDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssueCommentDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhookIssueCommentDeletedIssue}
     * @memberof WebhookIssueCommentDeleted
     */
    'issue': WebhookIssueCommentDeletedIssue;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssueCommentDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssueCommentDeleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssueCommentDeleted
     */
    'sender': SimpleUser;
}

export const WebhookIssueCommentDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookIssueCommentDeletedActionEnum = typeof WebhookIssueCommentDeletedActionEnum[keyof typeof WebhookIssueCommentDeletedActionEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) the comment belongs to.
 * @export
 * @interface WebhookIssueCommentDeletedIssue
 */
export interface WebhookIssueCommentDeletedIssue {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'active_lock_reason': string | null;
    /**
     * 
     * @type {User4}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<object | null>}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'assignees': Array<object | null>;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'author_association': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'id': number;
    /**
     * 
     * @type {Array<Label>}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'locked': boolean;
    /**
     * 
     * @type {object}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'milestone': object | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'number': number;
    /**
     * 
     * @type {object}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'performed_via_github_app'?: object | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {WebhookIssueCommentCreatedIssueAllOfReactions}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'reactions': WebhookIssueCommentCreatedIssueAllOfReactions;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'state': WebhookIssueCommentDeletedIssueStateEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'timeline_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'title': string;
    /**
     * 
     * @type {IssueType}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'url': string;
    /**
     * 
     * @type {WebhookIssueCommentDeletedIssueAllOfUser}
     * @memberof WebhookIssueCommentDeletedIssue
     */
    'user': WebhookIssueCommentDeletedIssueAllOfUser;
}

export const WebhookIssueCommentDeletedIssueStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type WebhookIssueCommentDeletedIssueStateEnum = typeof WebhookIssueCommentDeletedIssueStateEnum[keyof typeof WebhookIssueCommentDeletedIssueStateEnum];

/**
 * 
 * @export
 * @interface WebhookIssueCommentDeletedIssueAllOfUser
 */
export interface WebhookIssueCommentDeletedIssueAllOfUser {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'login'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'type'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentDeletedIssueAllOfUser
     */
    'user_view_type'?: string;
}
/**
 * 
 * @export
 * @interface WebhookIssueCommentEdited
 */
export interface WebhookIssueCommentEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEdited
     */
    'action': WebhookIssueCommentEditedActionEnum;
    /**
     * 
     * @type {WebhooksChanges}
     * @memberof WebhookIssueCommentEdited
     */
    'changes': WebhooksChanges;
    /**
     * 
     * @type {WebhooksIssueComment}
     * @memberof WebhookIssueCommentEdited
     */
    'comment': WebhooksIssueComment;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssueCommentEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssueCommentEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhookIssueCommentEditedIssue}
     * @memberof WebhookIssueCommentEdited
     */
    'issue': WebhookIssueCommentEditedIssue;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssueCommentEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssueCommentEdited
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssueCommentEdited
     */
    'sender': SimpleUser;
}

export const WebhookIssueCommentEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookIssueCommentEditedActionEnum = typeof WebhookIssueCommentEditedActionEnum[keyof typeof WebhookIssueCommentEditedActionEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) the comment belongs to.
 * @export
 * @interface WebhookIssueCommentEditedIssue
 */
export interface WebhookIssueCommentEditedIssue {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'active_lock_reason': string | null;
    /**
     * 
     * @type {User4}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<object | null>}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'assignees': Array<object | null>;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'author_association': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'id': number;
    /**
     * 
     * @type {Array<Label>}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'locked': boolean;
    /**
     * 
     * @type {object}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'milestone': object | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'number': number;
    /**
     * 
     * @type {object}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'performed_via_github_app'?: object | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {WebhookIssueCommentCreatedIssueAllOfReactions}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'reactions': WebhookIssueCommentCreatedIssueAllOfReactions;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'state': WebhookIssueCommentEditedIssueStateEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'timeline_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'title': string;
    /**
     * 
     * @type {IssueType}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'url': string;
    /**
     * 
     * @type {WebhookIssueCommentCreatedIssueAllOfUser}
     * @memberof WebhookIssueCommentEditedIssue
     */
    'user': WebhookIssueCommentCreatedIssueAllOfUser;
}

export const WebhookIssueCommentEditedIssueStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type WebhookIssueCommentEditedIssueStateEnum = typeof WebhookIssueCommentEditedIssueStateEnum[keyof typeof WebhookIssueCommentEditedIssueStateEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesAssigned
 */
export interface WebhookIssuesAssigned {
    /**
     * The action that was performed.
     * @type {string}
     * @memberof WebhookIssuesAssigned
     */
    'action': WebhookIssuesAssignedActionEnum;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookIssuesAssigned
     */
    'assignee'?: WebhooksUser | null;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesAssigned
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesAssigned
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksIssue}
     * @memberof WebhookIssuesAssigned
     */
    'issue': WebhooksIssue;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesAssigned
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesAssigned
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesAssigned
     */
    'sender': SimpleUser;
}

export const WebhookIssuesAssignedActionEnum = {
    Assigned: 'assigned'
} as const;

export type WebhookIssuesAssignedActionEnum = typeof WebhookIssuesAssignedActionEnum[keyof typeof WebhookIssuesAssignedActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesClosed
 */
export interface WebhookIssuesClosed {
    /**
     * The action that was performed.
     * @type {string}
     * @memberof WebhookIssuesClosed
     */
    'action': WebhookIssuesClosedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesClosed
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesClosed
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhookIssuesClosedIssue}
     * @memberof WebhookIssuesClosed
     */
    'issue': WebhookIssuesClosedIssue;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesClosed
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesClosed
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesClosed
     */
    'sender': SimpleUser;
}

export const WebhookIssuesClosedActionEnum = {
    Closed: 'closed'
} as const;

export type WebhookIssuesClosedActionEnum = typeof WebhookIssuesClosedActionEnum[keyof typeof WebhookIssuesClosedActionEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface WebhookIssuesClosedIssue
 */
export interface WebhookIssuesClosedIssue {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'active_lock_reason': string | null;
    /**
     * 
     * @type {object}
     * @memberof WebhookIssuesClosedIssue
     */
    'assignee'?: object | null;
    /**
     * 
     * @type {Array<object | null>}
     * @memberof WebhookIssuesClosedIssue
     */
    'assignees': Array<object | null>;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'author_association': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssuesClosedIssue
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookIssuesClosedIssue
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssuesClosedIssue
     */
    'id': number;
    /**
     * 
     * @type {Array<object | null>}
     * @memberof WebhookIssuesClosedIssue
     */
    'labels'?: Array<object | null>;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookIssuesClosedIssue
     */
    'locked'?: boolean;
    /**
     * 
     * @type {object}
     * @memberof WebhookIssuesClosedIssue
     */
    'milestone': object | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookIssuesClosedIssue
     */
    'number': number;
    /**
     * 
     * @type {object}
     * @memberof WebhookIssuesClosedIssue
     */
    'performed_via_github_app'?: object | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof WebhookIssuesClosedIssue
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {WebhookIssueCommentCreatedIssueAllOfReactions}
     * @memberof WebhookIssuesClosedIssue
     */
    'reactions': WebhookIssueCommentCreatedIssueAllOfReactions;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof WebhookIssuesClosedIssue
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'state': WebhookIssuesClosedIssueStateEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'timeline_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'title': string;
    /**
     * 
     * @type {IssueType}
     * @memberof WebhookIssuesClosedIssue
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesClosedIssue
     */
    'url': string;
    /**
     * 
     * @type {WebhookIssueCommentDeletedIssueAllOfUser}
     * @memberof WebhookIssuesClosedIssue
     */
    'user': WebhookIssueCommentDeletedIssueAllOfUser;
}

export const WebhookIssuesClosedIssueStateEnum = {
    Closed: 'closed',
    Open: 'open'
} as const;

export type WebhookIssuesClosedIssueStateEnum = typeof WebhookIssuesClosedIssueStateEnum[keyof typeof WebhookIssuesClosedIssueStateEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesDeleted
 */
export interface WebhookIssuesDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesDeleted
     */
    'action': WebhookIssuesDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {Issue}
     * @memberof WebhookIssuesDeleted
     */
    'issue': Issue;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesDeleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesDeleted
     */
    'sender': SimpleUser;
}

export const WebhookIssuesDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookIssuesDeletedActionEnum = typeof WebhookIssuesDeletedActionEnum[keyof typeof WebhookIssuesDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesDemilestoned
 */
export interface WebhookIssuesDemilestoned {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesDemilestoned
     */
    'action': WebhookIssuesDemilestonedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesDemilestoned
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesDemilestoned
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {Issue1}
     * @memberof WebhookIssuesDemilestoned
     */
    'issue': Issue1;
    /**
     * 
     * @type {WebhooksMilestone}
     * @memberof WebhookIssuesDemilestoned
     */
    'milestone'?: WebhooksMilestone;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesDemilestoned
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesDemilestoned
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesDemilestoned
     */
    'sender': SimpleUser;
}

export const WebhookIssuesDemilestonedActionEnum = {
    Demilestoned: 'demilestoned'
} as const;

export type WebhookIssuesDemilestonedActionEnum = typeof WebhookIssuesDemilestonedActionEnum[keyof typeof WebhookIssuesDemilestonedActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesEdited
 */
export interface WebhookIssuesEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesEdited
     */
    'action': WebhookIssuesEditedActionEnum;
    /**
     * 
     * @type {WebhookIssuesEditedChanges}
     * @memberof WebhookIssuesEdited
     */
    'changes': WebhookIssuesEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {Issue2}
     * @memberof WebhookIssuesEdited
     */
    'issue': Issue2;
    /**
     * 
     * @type {WebhooksLabel}
     * @memberof WebhookIssuesEdited
     */
    'label'?: WebhooksLabel;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesEdited
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesEdited
     */
    'sender': SimpleUser;
}

export const WebhookIssuesEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookIssuesEditedActionEnum = typeof WebhookIssuesEditedActionEnum[keyof typeof WebhookIssuesEditedActionEnum];

/**
 * The changes to the issue.
 * @export
 * @interface WebhookIssuesEditedChanges
 */
export interface WebhookIssuesEditedChanges {
    /**
     * 
     * @type {WebhooksChangesBody}
     * @memberof WebhookIssuesEditedChanges
     */
    'body'?: WebhooksChangesBody;
    /**
     * 
     * @type {WebhookIssuesEditedChangesTitle}
     * @memberof WebhookIssuesEditedChanges
     */
    'title'?: WebhookIssuesEditedChangesTitle;
}
/**
 * 
 * @export
 * @interface WebhookIssuesEditedChangesTitle
 */
export interface WebhookIssuesEditedChangesTitle {
    /**
     * The previous version of the title.
     * @type {string}
     * @memberof WebhookIssuesEditedChangesTitle
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookIssuesLabeled
 */
export interface WebhookIssuesLabeled {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesLabeled
     */
    'action': WebhookIssuesLabeledActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesLabeled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesLabeled
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {Issue3}
     * @memberof WebhookIssuesLabeled
     */
    'issue': Issue3;
    /**
     * 
     * @type {WebhooksLabel}
     * @memberof WebhookIssuesLabeled
     */
    'label'?: WebhooksLabel;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesLabeled
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesLabeled
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesLabeled
     */
    'sender': SimpleUser;
}

export const WebhookIssuesLabeledActionEnum = {
    Labeled: 'labeled'
} as const;

export type WebhookIssuesLabeledActionEnum = typeof WebhookIssuesLabeledActionEnum[keyof typeof WebhookIssuesLabeledActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesLocked
 */
export interface WebhookIssuesLocked {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesLocked
     */
    'action': WebhookIssuesLockedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesLocked
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesLocked
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {Issue4}
     * @memberof WebhookIssuesLocked
     */
    'issue': Issue4;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesLocked
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesLocked
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesLocked
     */
    'sender': SimpleUser;
}

export const WebhookIssuesLockedActionEnum = {
    Locked: 'locked'
} as const;

export type WebhookIssuesLockedActionEnum = typeof WebhookIssuesLockedActionEnum[keyof typeof WebhookIssuesLockedActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesMilestoned
 */
export interface WebhookIssuesMilestoned {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesMilestoned
     */
    'action': WebhookIssuesMilestonedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesMilestoned
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesMilestoned
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {Issue5}
     * @memberof WebhookIssuesMilestoned
     */
    'issue': Issue5;
    /**
     * 
     * @type {WebhooksMilestone}
     * @memberof WebhookIssuesMilestoned
     */
    'milestone': WebhooksMilestone;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesMilestoned
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesMilestoned
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesMilestoned
     */
    'sender': SimpleUser;
}

export const WebhookIssuesMilestonedActionEnum = {
    Milestoned: 'milestoned'
} as const;

export type WebhookIssuesMilestonedActionEnum = typeof WebhookIssuesMilestonedActionEnum[keyof typeof WebhookIssuesMilestonedActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesOpened
 */
export interface WebhookIssuesOpened {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesOpened
     */
    'action': WebhookIssuesOpenedActionEnum;
    /**
     * 
     * @type {WebhookIssuesOpenedChanges}
     * @memberof WebhookIssuesOpened
     */
    'changes'?: WebhookIssuesOpenedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesOpened
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesOpened
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {Issue7}
     * @memberof WebhookIssuesOpened
     */
    'issue': Issue7;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesOpened
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesOpened
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesOpened
     */
    'sender': SimpleUser;
}

export const WebhookIssuesOpenedActionEnum = {
    Opened: 'opened'
} as const;

export type WebhookIssuesOpenedActionEnum = typeof WebhookIssuesOpenedActionEnum[keyof typeof WebhookIssuesOpenedActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesOpenedChanges
 */
export interface WebhookIssuesOpenedChanges {
    /**
     * 
     * @type {Issue6}
     * @memberof WebhookIssuesOpenedChanges
     */
    'old_issue': Issue6 | null;
    /**
     * 
     * @type {Repository1}
     * @memberof WebhookIssuesOpenedChanges
     */
    'old_repository': Repository1;
}
/**
 * 
 * @export
 * @interface WebhookIssuesPinned
 */
export interface WebhookIssuesPinned {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesPinned
     */
    'action': WebhookIssuesPinnedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesPinned
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesPinned
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksIssue2}
     * @memberof WebhookIssuesPinned
     */
    'issue': WebhooksIssue2;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesPinned
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesPinned
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesPinned
     */
    'sender': SimpleUser;
}

export const WebhookIssuesPinnedActionEnum = {
    Pinned: 'pinned'
} as const;

export type WebhookIssuesPinnedActionEnum = typeof WebhookIssuesPinnedActionEnum[keyof typeof WebhookIssuesPinnedActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesReopened
 */
export interface WebhookIssuesReopened {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesReopened
     */
    'action': WebhookIssuesReopenedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesReopened
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesReopened
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {Issue8}
     * @memberof WebhookIssuesReopened
     */
    'issue': Issue8;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesReopened
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesReopened
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesReopened
     */
    'sender': SimpleUser;
}

export const WebhookIssuesReopenedActionEnum = {
    Reopened: 'reopened'
} as const;

export type WebhookIssuesReopenedActionEnum = typeof WebhookIssuesReopenedActionEnum[keyof typeof WebhookIssuesReopenedActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesTransferred
 */
export interface WebhookIssuesTransferred {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesTransferred
     */
    'action': WebhookIssuesTransferredActionEnum;
    /**
     * 
     * @type {WebhookIssuesTransferredChanges}
     * @memberof WebhookIssuesTransferred
     */
    'changes': WebhookIssuesTransferredChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesTransferred
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesTransferred
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksIssue2}
     * @memberof WebhookIssuesTransferred
     */
    'issue': WebhooksIssue2;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesTransferred
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesTransferred
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesTransferred
     */
    'sender': SimpleUser;
}

export const WebhookIssuesTransferredActionEnum = {
    Transferred: 'transferred'
} as const;

export type WebhookIssuesTransferredActionEnum = typeof WebhookIssuesTransferredActionEnum[keyof typeof WebhookIssuesTransferredActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesTransferredChanges
 */
export interface WebhookIssuesTransferredChanges {
    /**
     * 
     * @type {Issue9}
     * @memberof WebhookIssuesTransferredChanges
     */
    'new_issue': Issue9;
    /**
     * 
     * @type {Repository2}
     * @memberof WebhookIssuesTransferredChanges
     */
    'new_repository': Repository2;
}
/**
 * 
 * @export
 * @interface WebhookIssuesTyped
 */
export interface WebhookIssuesTyped {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesTyped
     */
    'action': WebhookIssuesTypedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesTyped
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesTyped
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksIssue}
     * @memberof WebhookIssuesTyped
     */
    'issue': WebhooksIssue;
    /**
     * 
     * @type {IssueType}
     * @memberof WebhookIssuesTyped
     */
    'type': IssueType | null;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesTyped
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesTyped
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesTyped
     */
    'sender': SimpleUser;
}

export const WebhookIssuesTypedActionEnum = {
    Typed: 'typed'
} as const;

export type WebhookIssuesTypedActionEnum = typeof WebhookIssuesTypedActionEnum[keyof typeof WebhookIssuesTypedActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesUnassigned
 */
export interface WebhookIssuesUnassigned {
    /**
     * The action that was performed.
     * @type {string}
     * @memberof WebhookIssuesUnassigned
     */
    'action': WebhookIssuesUnassignedActionEnum;
    /**
     * 
     * @type {WebhooksUserMannequin}
     * @memberof WebhookIssuesUnassigned
     */
    'assignee'?: WebhooksUserMannequin | null;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesUnassigned
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesUnassigned
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksIssue}
     * @memberof WebhookIssuesUnassigned
     */
    'issue': WebhooksIssue;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesUnassigned
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesUnassigned
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesUnassigned
     */
    'sender': SimpleUser;
}

export const WebhookIssuesUnassignedActionEnum = {
    Unassigned: 'unassigned'
} as const;

export type WebhookIssuesUnassignedActionEnum = typeof WebhookIssuesUnassignedActionEnum[keyof typeof WebhookIssuesUnassignedActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesUnlabeled
 */
export interface WebhookIssuesUnlabeled {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesUnlabeled
     */
    'action': WebhookIssuesUnlabeledActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesUnlabeled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesUnlabeled
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksIssue}
     * @memberof WebhookIssuesUnlabeled
     */
    'issue': WebhooksIssue;
    /**
     * 
     * @type {WebhooksLabel}
     * @memberof WebhookIssuesUnlabeled
     */
    'label'?: WebhooksLabel;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesUnlabeled
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesUnlabeled
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesUnlabeled
     */
    'sender': SimpleUser;
}

export const WebhookIssuesUnlabeledActionEnum = {
    Unlabeled: 'unlabeled'
} as const;

export type WebhookIssuesUnlabeledActionEnum = typeof WebhookIssuesUnlabeledActionEnum[keyof typeof WebhookIssuesUnlabeledActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesUnlocked
 */
export interface WebhookIssuesUnlocked {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesUnlocked
     */
    'action': WebhookIssuesUnlockedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesUnlocked
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesUnlocked
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {Issue10}
     * @memberof WebhookIssuesUnlocked
     */
    'issue': Issue10;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesUnlocked
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesUnlocked
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesUnlocked
     */
    'sender': SimpleUser;
}

export const WebhookIssuesUnlockedActionEnum = {
    Unlocked: 'unlocked'
} as const;

export type WebhookIssuesUnlockedActionEnum = typeof WebhookIssuesUnlockedActionEnum[keyof typeof WebhookIssuesUnlockedActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesUnpinned
 */
export interface WebhookIssuesUnpinned {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesUnpinned
     */
    'action': WebhookIssuesUnpinnedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesUnpinned
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesUnpinned
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksIssue2}
     * @memberof WebhookIssuesUnpinned
     */
    'issue': WebhooksIssue2;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesUnpinned
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesUnpinned
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesUnpinned
     */
    'sender': SimpleUser;
}

export const WebhookIssuesUnpinnedActionEnum = {
    Unpinned: 'unpinned'
} as const;

export type WebhookIssuesUnpinnedActionEnum = typeof WebhookIssuesUnpinnedActionEnum[keyof typeof WebhookIssuesUnpinnedActionEnum];

/**
 * 
 * @export
 * @interface WebhookIssuesUntyped
 */
export interface WebhookIssuesUntyped {
    /**
     * 
     * @type {string}
     * @memberof WebhookIssuesUntyped
     */
    'action': WebhookIssuesUntypedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookIssuesUntyped
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookIssuesUntyped
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksIssue}
     * @memberof WebhookIssuesUntyped
     */
    'issue': WebhooksIssue;
    /**
     * 
     * @type {IssueType}
     * @memberof WebhookIssuesUntyped
     */
    'type': IssueType | null;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookIssuesUntyped
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookIssuesUntyped
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookIssuesUntyped
     */
    'sender': SimpleUser;
}

export const WebhookIssuesUntypedActionEnum = {
    Untyped: 'untyped'
} as const;

export type WebhookIssuesUntypedActionEnum = typeof WebhookIssuesUntypedActionEnum[keyof typeof WebhookIssuesUntypedActionEnum];

/**
 * 
 * @export
 * @interface WebhookLabelCreated
 */
export interface WebhookLabelCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookLabelCreated
     */
    'action': WebhookLabelCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookLabelCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookLabelCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksLabel}
     * @memberof WebhookLabelCreated
     */
    'label': WebhooksLabel;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookLabelCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookLabelCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookLabelCreated
     */
    'sender'?: SimpleUser;
}

export const WebhookLabelCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookLabelCreatedActionEnum = typeof WebhookLabelCreatedActionEnum[keyof typeof WebhookLabelCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookLabelDeleted
 */
export interface WebhookLabelDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookLabelDeleted
     */
    'action': WebhookLabelDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookLabelDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookLabelDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksLabel}
     * @memberof WebhookLabelDeleted
     */
    'label': WebhooksLabel;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookLabelDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookLabelDeleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookLabelDeleted
     */
    'sender': SimpleUser;
}

export const WebhookLabelDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookLabelDeletedActionEnum = typeof WebhookLabelDeletedActionEnum[keyof typeof WebhookLabelDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookLabelEdited
 */
export interface WebhookLabelEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookLabelEdited
     */
    'action': WebhookLabelEditedActionEnum;
    /**
     * 
     * @type {WebhookLabelEditedChanges}
     * @memberof WebhookLabelEdited
     */
    'changes'?: WebhookLabelEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookLabelEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookLabelEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksLabel}
     * @memberof WebhookLabelEdited
     */
    'label': WebhooksLabel;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookLabelEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookLabelEdited
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookLabelEdited
     */
    'sender': SimpleUser;
}

export const WebhookLabelEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookLabelEditedActionEnum = typeof WebhookLabelEditedActionEnum[keyof typeof WebhookLabelEditedActionEnum];

/**
 * The changes to the label if the action was `edited`.
 * @export
 * @interface WebhookLabelEditedChanges
 */
export interface WebhookLabelEditedChanges {
    /**
     * 
     * @type {WebhookLabelEditedChangesColor}
     * @memberof WebhookLabelEditedChanges
     */
    'color'?: WebhookLabelEditedChangesColor;
    /**
     * 
     * @type {WebhookLabelEditedChangesDescription}
     * @memberof WebhookLabelEditedChanges
     */
    'description'?: WebhookLabelEditedChangesDescription;
    /**
     * 
     * @type {WebhookLabelEditedChangesName}
     * @memberof WebhookLabelEditedChanges
     */
    'name'?: WebhookLabelEditedChangesName;
}
/**
 * 
 * @export
 * @interface WebhookLabelEditedChangesColor
 */
export interface WebhookLabelEditedChangesColor {
    /**
     * The previous version of the color if the action was `edited`.
     * @type {string}
     * @memberof WebhookLabelEditedChangesColor
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookLabelEditedChangesDescription
 */
export interface WebhookLabelEditedChangesDescription {
    /**
     * The previous version of the description if the action was `edited`.
     * @type {string}
     * @memberof WebhookLabelEditedChangesDescription
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookLabelEditedChangesName
 */
export interface WebhookLabelEditedChangesName {
    /**
     * The previous version of the name if the action was `edited`.
     * @type {string}
     * @memberof WebhookLabelEditedChangesName
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookMarketplacePurchaseCancelled
 */
export interface WebhookMarketplacePurchaseCancelled {
    /**
     * 
     * @type {string}
     * @memberof WebhookMarketplacePurchaseCancelled
     */
    'action': WebhookMarketplacePurchaseCancelledActionEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookMarketplacePurchaseCancelled
     */
    'effective_date': string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMarketplacePurchaseCancelled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMarketplacePurchaseCancelled
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksMarketplacePurchase}
     * @memberof WebhookMarketplacePurchaseCancelled
     */
    'marketplace_purchase': WebhooksMarketplacePurchase;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMarketplacePurchaseCancelled
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksPreviousMarketplacePurchase}
     * @memberof WebhookMarketplacePurchaseCancelled
     */
    'previous_marketplace_purchase'?: WebhooksPreviousMarketplacePurchase;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMarketplacePurchaseCancelled
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMarketplacePurchaseCancelled
     */
    'sender': SimpleUser;
}

export const WebhookMarketplacePurchaseCancelledActionEnum = {
    Cancelled: 'cancelled'
} as const;

export type WebhookMarketplacePurchaseCancelledActionEnum = typeof WebhookMarketplacePurchaseCancelledActionEnum[keyof typeof WebhookMarketplacePurchaseCancelledActionEnum];

/**
 * 
 * @export
 * @interface WebhookMarketplacePurchaseChanged
 */
export interface WebhookMarketplacePurchaseChanged {
    /**
     * 
     * @type {string}
     * @memberof WebhookMarketplacePurchaseChanged
     */
    'action': WebhookMarketplacePurchaseChangedActionEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookMarketplacePurchaseChanged
     */
    'effective_date': string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMarketplacePurchaseChanged
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMarketplacePurchaseChanged
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksMarketplacePurchase}
     * @memberof WebhookMarketplacePurchaseChanged
     */
    'marketplace_purchase': WebhooksMarketplacePurchase;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMarketplacePurchaseChanged
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {MarketplacePurchase}
     * @memberof WebhookMarketplacePurchaseChanged
     */
    'previous_marketplace_purchase'?: MarketplacePurchase;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMarketplacePurchaseChanged
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMarketplacePurchaseChanged
     */
    'sender': SimpleUser;
}

export const WebhookMarketplacePurchaseChangedActionEnum = {
    Changed: 'changed'
} as const;

export type WebhookMarketplacePurchaseChangedActionEnum = typeof WebhookMarketplacePurchaseChangedActionEnum[keyof typeof WebhookMarketplacePurchaseChangedActionEnum];

/**
 * 
 * @export
 * @interface WebhookMarketplacePurchasePendingChange
 */
export interface WebhookMarketplacePurchasePendingChange {
    /**
     * 
     * @type {string}
     * @memberof WebhookMarketplacePurchasePendingChange
     */
    'action': WebhookMarketplacePurchasePendingChangeActionEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookMarketplacePurchasePendingChange
     */
    'effective_date': string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMarketplacePurchasePendingChange
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMarketplacePurchasePendingChange
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksMarketplacePurchase}
     * @memberof WebhookMarketplacePurchasePendingChange
     */
    'marketplace_purchase': WebhooksMarketplacePurchase;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMarketplacePurchasePendingChange
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {MarketplacePurchase1}
     * @memberof WebhookMarketplacePurchasePendingChange
     */
    'previous_marketplace_purchase'?: MarketplacePurchase1;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMarketplacePurchasePendingChange
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMarketplacePurchasePendingChange
     */
    'sender': SimpleUser;
}

export const WebhookMarketplacePurchasePendingChangeActionEnum = {
    PendingChange: 'pending_change'
} as const;

export type WebhookMarketplacePurchasePendingChangeActionEnum = typeof WebhookMarketplacePurchasePendingChangeActionEnum[keyof typeof WebhookMarketplacePurchasePendingChangeActionEnum];

/**
 * 
 * @export
 * @interface WebhookMarketplacePurchasePendingChangeCancelled
 */
export interface WebhookMarketplacePurchasePendingChangeCancelled {
    /**
     * 
     * @type {string}
     * @memberof WebhookMarketplacePurchasePendingChangeCancelled
     */
    'action': WebhookMarketplacePurchasePendingChangeCancelledActionEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookMarketplacePurchasePendingChangeCancelled
     */
    'effective_date': string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMarketplacePurchasePendingChangeCancelled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMarketplacePurchasePendingChangeCancelled
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {MarketplacePurchase2}
     * @memberof WebhookMarketplacePurchasePendingChangeCancelled
     */
    'marketplace_purchase': MarketplacePurchase2;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMarketplacePurchasePendingChangeCancelled
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksPreviousMarketplacePurchase}
     * @memberof WebhookMarketplacePurchasePendingChangeCancelled
     */
    'previous_marketplace_purchase'?: WebhooksPreviousMarketplacePurchase;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMarketplacePurchasePendingChangeCancelled
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMarketplacePurchasePendingChangeCancelled
     */
    'sender': SimpleUser;
}

export const WebhookMarketplacePurchasePendingChangeCancelledActionEnum = {
    PendingChangeCancelled: 'pending_change_cancelled'
} as const;

export type WebhookMarketplacePurchasePendingChangeCancelledActionEnum = typeof WebhookMarketplacePurchasePendingChangeCancelledActionEnum[keyof typeof WebhookMarketplacePurchasePendingChangeCancelledActionEnum];

/**
 * 
 * @export
 * @interface WebhookMarketplacePurchasePurchased
 */
export interface WebhookMarketplacePurchasePurchased {
    /**
     * 
     * @type {string}
     * @memberof WebhookMarketplacePurchasePurchased
     */
    'action': WebhookMarketplacePurchasePurchasedActionEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookMarketplacePurchasePurchased
     */
    'effective_date': string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMarketplacePurchasePurchased
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMarketplacePurchasePurchased
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksMarketplacePurchase}
     * @memberof WebhookMarketplacePurchasePurchased
     */
    'marketplace_purchase': WebhooksMarketplacePurchase;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMarketplacePurchasePurchased
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksPreviousMarketplacePurchase}
     * @memberof WebhookMarketplacePurchasePurchased
     */
    'previous_marketplace_purchase'?: WebhooksPreviousMarketplacePurchase;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMarketplacePurchasePurchased
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMarketplacePurchasePurchased
     */
    'sender': SimpleUser;
}

export const WebhookMarketplacePurchasePurchasedActionEnum = {
    Purchased: 'purchased'
} as const;

export type WebhookMarketplacePurchasePurchasedActionEnum = typeof WebhookMarketplacePurchasePurchasedActionEnum[keyof typeof WebhookMarketplacePurchasePurchasedActionEnum];

/**
 * 
 * @export
 * @interface WebhookMemberAdded
 */
export interface WebhookMemberAdded {
    /**
     * 
     * @type {string}
     * @memberof WebhookMemberAdded
     */
    'action': WebhookMemberAddedActionEnum;
    /**
     * 
     * @type {WebhookMemberAddedChanges}
     * @memberof WebhookMemberAdded
     */
    'changes'?: WebhookMemberAddedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMemberAdded
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMemberAdded
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookMemberAdded
     */
    'member': WebhooksUser | null;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMemberAdded
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMemberAdded
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMemberAdded
     */
    'sender': SimpleUser;
}

export const WebhookMemberAddedActionEnum = {
    Added: 'added'
} as const;

export type WebhookMemberAddedActionEnum = typeof WebhookMemberAddedActionEnum[keyof typeof WebhookMemberAddedActionEnum];

/**
 * 
 * @export
 * @interface WebhookMemberAddedChanges
 */
export interface WebhookMemberAddedChanges {
    /**
     * 
     * @type {WebhookMemberAddedChangesPermission}
     * @memberof WebhookMemberAddedChanges
     */
    'permission'?: WebhookMemberAddedChangesPermission;
    /**
     * 
     * @type {WebhookMemberAddedChangesRoleName}
     * @memberof WebhookMemberAddedChanges
     */
    'role_name'?: WebhookMemberAddedChangesRoleName;
}
/**
 * This field is included for legacy purposes; use the `role_name` field instead. The `maintain` role is mapped to `write` and the `triage` role is mapped to `read`. To determine the role assigned to the collaborator, use the `role_name` field instead, which will provide the full role name, including custom roles.
 * @export
 * @interface WebhookMemberAddedChangesPermission
 */
export interface WebhookMemberAddedChangesPermission {
    /**
     * 
     * @type {string}
     * @memberof WebhookMemberAddedChangesPermission
     */
    'to': WebhookMemberAddedChangesPermissionToEnum;
}

export const WebhookMemberAddedChangesPermissionToEnum = {
    Write: 'write',
    Admin: 'admin',
    Read: 'read'
} as const;

export type WebhookMemberAddedChangesPermissionToEnum = typeof WebhookMemberAddedChangesPermissionToEnum[keyof typeof WebhookMemberAddedChangesPermissionToEnum];

/**
 * The role assigned to the collaborator.
 * @export
 * @interface WebhookMemberAddedChangesRoleName
 */
export interface WebhookMemberAddedChangesRoleName {
    /**
     * 
     * @type {string}
     * @memberof WebhookMemberAddedChangesRoleName
     */
    'to': string;
}
/**
 * 
 * @export
 * @interface WebhookMemberEdited
 */
export interface WebhookMemberEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookMemberEdited
     */
    'action': WebhookMemberEditedActionEnum;
    /**
     * 
     * @type {WebhookMemberEditedChanges}
     * @memberof WebhookMemberEdited
     */
    'changes': WebhookMemberEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMemberEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMemberEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookMemberEdited
     */
    'member': WebhooksUser | null;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMemberEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMemberEdited
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMemberEdited
     */
    'sender': SimpleUser;
}

export const WebhookMemberEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookMemberEditedActionEnum = typeof WebhookMemberEditedActionEnum[keyof typeof WebhookMemberEditedActionEnum];

/**
 * The changes to the collaborator permissions
 * @export
 * @interface WebhookMemberEditedChanges
 */
export interface WebhookMemberEditedChanges {
    /**
     * 
     * @type {WebhookMemberEditedChangesOldPermission}
     * @memberof WebhookMemberEditedChanges
     */
    'old_permission'?: WebhookMemberEditedChangesOldPermission;
    /**
     * 
     * @type {WebhookMemberEditedChangesPermission}
     * @memberof WebhookMemberEditedChanges
     */
    'permission'?: WebhookMemberEditedChangesPermission;
}
/**
 * 
 * @export
 * @interface WebhookMemberEditedChangesOldPermission
 */
export interface WebhookMemberEditedChangesOldPermission {
    /**
     * The previous permissions of the collaborator if the action was edited.
     * @type {string}
     * @memberof WebhookMemberEditedChangesOldPermission
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookMemberEditedChangesPermission
 */
export interface WebhookMemberEditedChangesPermission {
    /**
     * 
     * @type {string}
     * @memberof WebhookMemberEditedChangesPermission
     */
    'from'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookMemberEditedChangesPermission
     */
    'to'?: string | null;
}
/**
 * 
 * @export
 * @interface WebhookMemberRemoved
 */
export interface WebhookMemberRemoved {
    /**
     * 
     * @type {string}
     * @memberof WebhookMemberRemoved
     */
    'action': WebhookMemberRemovedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMemberRemoved
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMemberRemoved
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookMemberRemoved
     */
    'member': WebhooksUser | null;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMemberRemoved
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMemberRemoved
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMemberRemoved
     */
    'sender': SimpleUser;
}

export const WebhookMemberRemovedActionEnum = {
    Removed: 'removed'
} as const;

export type WebhookMemberRemovedActionEnum = typeof WebhookMemberRemovedActionEnum[keyof typeof WebhookMemberRemovedActionEnum];

/**
 * 
 * @export
 * @interface WebhookMembershipAdded
 */
export interface WebhookMembershipAdded {
    /**
     * 
     * @type {string}
     * @memberof WebhookMembershipAdded
     */
    'action': WebhookMembershipAddedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMembershipAdded
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMembershipAdded
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookMembershipAdded
     */
    'member': WebhooksUser | null;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMembershipAdded
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMembershipAdded
     */
    'repository'?: RepositoryWebhooks;
    /**
     * The scope of the membership. Currently, can only be `team`.
     * @type {string}
     * @memberof WebhookMembershipAdded
     */
    'scope': WebhookMembershipAddedScopeEnum;
    /**
     * 
     * @type {User2}
     * @memberof WebhookMembershipAdded
     */
    'sender': User2 | null;
    /**
     * 
     * @type {WebhooksTeam}
     * @memberof WebhookMembershipAdded
     */
    'team': WebhooksTeam;
}

export const WebhookMembershipAddedActionEnum = {
    Added: 'added'
} as const;

export type WebhookMembershipAddedActionEnum = typeof WebhookMembershipAddedActionEnum[keyof typeof WebhookMembershipAddedActionEnum];
export const WebhookMembershipAddedScopeEnum = {
    Team: 'team'
} as const;

export type WebhookMembershipAddedScopeEnum = typeof WebhookMembershipAddedScopeEnum[keyof typeof WebhookMembershipAddedScopeEnum];

/**
 * 
 * @export
 * @interface WebhookMembershipRemoved
 */
export interface WebhookMembershipRemoved {
    /**
     * 
     * @type {string}
     * @memberof WebhookMembershipRemoved
     */
    'action': WebhookMembershipRemovedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMembershipRemoved
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMembershipRemoved
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookMembershipRemoved
     */
    'member': WebhooksUser | null;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMembershipRemoved
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMembershipRemoved
     */
    'repository'?: RepositoryWebhooks;
    /**
     * The scope of the membership. Currently, can only be `team`.
     * @type {string}
     * @memberof WebhookMembershipRemoved
     */
    'scope': WebhookMembershipRemovedScopeEnum;
    /**
     * 
     * @type {User2}
     * @memberof WebhookMembershipRemoved
     */
    'sender': User2 | null;
    /**
     * 
     * @type {WebhooksTeam}
     * @memberof WebhookMembershipRemoved
     */
    'team': WebhooksTeam;
}

export const WebhookMembershipRemovedActionEnum = {
    Removed: 'removed'
} as const;

export type WebhookMembershipRemovedActionEnum = typeof WebhookMembershipRemovedActionEnum[keyof typeof WebhookMembershipRemovedActionEnum];
export const WebhookMembershipRemovedScopeEnum = {
    Team: 'team',
    Organization: 'organization'
} as const;

export type WebhookMembershipRemovedScopeEnum = typeof WebhookMembershipRemovedScopeEnum[keyof typeof WebhookMembershipRemovedScopeEnum];

/**
 * 
 * @export
 * @interface WebhookMergeGroupChecksRequested
 */
export interface WebhookMergeGroupChecksRequested {
    /**
     * 
     * @type {string}
     * @memberof WebhookMergeGroupChecksRequested
     */
    'action': WebhookMergeGroupChecksRequestedActionEnum;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMergeGroupChecksRequested
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {MergeGroup}
     * @memberof WebhookMergeGroupChecksRequested
     */
    'merge_group': MergeGroup;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMergeGroupChecksRequested
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMergeGroupChecksRequested
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMergeGroupChecksRequested
     */
    'sender'?: SimpleUser;
}

export const WebhookMergeGroupChecksRequestedActionEnum = {
    ChecksRequested: 'checks_requested'
} as const;

export type WebhookMergeGroupChecksRequestedActionEnum = typeof WebhookMergeGroupChecksRequestedActionEnum[keyof typeof WebhookMergeGroupChecksRequestedActionEnum];

/**
 * 
 * @export
 * @interface WebhookMergeGroupDestroyed
 */
export interface WebhookMergeGroupDestroyed {
    /**
     * 
     * @type {string}
     * @memberof WebhookMergeGroupDestroyed
     */
    'action': WebhookMergeGroupDestroyedActionEnum;
    /**
     * Explains why the merge group is being destroyed. The group could have been merged, removed from the queue (dequeued), or invalidated by an earlier queue entry being dequeued (invalidated).
     * @type {string}
     * @memberof WebhookMergeGroupDestroyed
     */
    'reason'?: WebhookMergeGroupDestroyedReasonEnum;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMergeGroupDestroyed
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {MergeGroup}
     * @memberof WebhookMergeGroupDestroyed
     */
    'merge_group': MergeGroup;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMergeGroupDestroyed
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMergeGroupDestroyed
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMergeGroupDestroyed
     */
    'sender'?: SimpleUser;
}

export const WebhookMergeGroupDestroyedActionEnum = {
    Destroyed: 'destroyed'
} as const;

export type WebhookMergeGroupDestroyedActionEnum = typeof WebhookMergeGroupDestroyedActionEnum[keyof typeof WebhookMergeGroupDestroyedActionEnum];
export const WebhookMergeGroupDestroyedReasonEnum = {
    Merged: 'merged',
    Invalidated: 'invalidated',
    Dequeued: 'dequeued'
} as const;

export type WebhookMergeGroupDestroyedReasonEnum = typeof WebhookMergeGroupDestroyedReasonEnum[keyof typeof WebhookMergeGroupDestroyedReasonEnum];

/**
 * 
 * @export
 * @interface WebhookMetaDeleted
 */
export interface WebhookMetaDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookMetaDeleted
     */
    'action': WebhookMetaDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMetaDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {WebhookMetaDeletedHook}
     * @memberof WebhookMetaDeleted
     */
    'hook': WebhookMetaDeletedHook;
    /**
     * The id of the modified webhook.
     * @type {number}
     * @memberof WebhookMetaDeleted
     */
    'hook_id': number;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMetaDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMetaDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {NullableRepositoryWebhooks}
     * @memberof WebhookMetaDeleted
     */
    'repository'?: NullableRepositoryWebhooks | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMetaDeleted
     */
    'sender'?: SimpleUser;
}

export const WebhookMetaDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookMetaDeletedActionEnum = typeof WebhookMetaDeletedActionEnum[keyof typeof WebhookMetaDeletedActionEnum];

/**
 * The modified webhook. This will contain different keys based on the type of webhook it is: repository, organization, business, app, or GitHub Marketplace.
 * @export
 * @interface WebhookMetaDeletedHook
 */
export interface WebhookMetaDeletedHook {
    /**
     * 
     * @type {boolean}
     * @memberof WebhookMetaDeletedHook
     */
    'active': boolean;
    /**
     * 
     * @type {WebhookMetaDeletedHookConfig}
     * @memberof WebhookMetaDeletedHook
     */
    'config': WebhookMetaDeletedHookConfig;
    /**
     * 
     * @type {string}
     * @memberof WebhookMetaDeletedHook
     */
    'created_at': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookMetaDeletedHook
     */
    'events': Array<WebhookMetaDeletedHookEventsEnum>;
    /**
     * 
     * @type {number}
     * @memberof WebhookMetaDeletedHook
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookMetaDeletedHook
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookMetaDeletedHook
     */
    'type': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookMetaDeletedHook
     */
    'updated_at': string;
}

export const WebhookMetaDeletedHookEventsEnum = {
    Star: '*',
    BranchProtectionRule: 'branch_protection_rule',
    CheckRun: 'check_run',
    CheckSuite: 'check_suite',
    CodeScanningAlert: 'code_scanning_alert',
    CommitComment: 'commit_comment',
    Create: 'create',
    Delete: 'delete',
    Deployment: 'deployment',
    DeploymentStatus: 'deployment_status',
    DeployKey: 'deploy_key',
    Discussion: 'discussion',
    DiscussionComment: 'discussion_comment',
    Fork: 'fork',
    Gollum: 'gollum',
    Issues: 'issues',
    IssueComment: 'issue_comment',
    Label: 'label',
    Member: 'member',
    Membership: 'membership',
    Meta: 'meta',
    Milestone: 'milestone',
    Organization: 'organization',
    OrgBlock: 'org_block',
    Package: 'package',
    PageBuild: 'page_build',
    Project: 'project',
    ProjectCard: 'project_card',
    ProjectColumn: 'project_column',
    Public: 'public',
    PullRequest: 'pull_request',
    PullRequestReview: 'pull_request_review',
    PullRequestReviewComment: 'pull_request_review_comment',
    PullRequestReviewThread: 'pull_request_review_thread',
    Push: 'push',
    RegistryPackage: 'registry_package',
    Release: 'release',
    Repository: 'repository',
    RepositoryImport: 'repository_import',
    RepositoryVulnerabilityAlert: 'repository_vulnerability_alert',
    SecretScanningAlert: 'secret_scanning_alert',
    SecretScanningAlertLocation: 'secret_scanning_alert_location',
    SecurityAndAnalysis: 'security_and_analysis',
    Star2: 'star',
    Status: 'status',
    Team: 'team',
    TeamAdd: 'team_add',
    Watch: 'watch',
    WorkflowJob: 'workflow_job',
    WorkflowRun: 'workflow_run',
    RepositoryDispatch: 'repository_dispatch',
    ProjectsV2Item: 'projects_v2_item'
} as const;

export type WebhookMetaDeletedHookEventsEnum = typeof WebhookMetaDeletedHookEventsEnum[keyof typeof WebhookMetaDeletedHookEventsEnum];

/**
 * 
 * @export
 * @interface WebhookMetaDeletedHookConfig
 */
export interface WebhookMetaDeletedHookConfig {
    /**
     * 
     * @type {string}
     * @memberof WebhookMetaDeletedHookConfig
     */
    'content_type': WebhookMetaDeletedHookConfigContentTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookMetaDeletedHookConfig
     */
    'insecure_ssl': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookMetaDeletedHookConfig
     */
    'secret'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookMetaDeletedHookConfig
     */
    'url': string;
}

export const WebhookMetaDeletedHookConfigContentTypeEnum = {
    Json: 'json',
    Form: 'form'
} as const;

export type WebhookMetaDeletedHookConfigContentTypeEnum = typeof WebhookMetaDeletedHookConfigContentTypeEnum[keyof typeof WebhookMetaDeletedHookConfigContentTypeEnum];

/**
 * 
 * @export
 * @interface WebhookMilestoneClosed
 */
export interface WebhookMilestoneClosed {
    /**
     * 
     * @type {string}
     * @memberof WebhookMilestoneClosed
     */
    'action': WebhookMilestoneClosedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMilestoneClosed
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMilestoneClosed
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksMilestone}
     * @memberof WebhookMilestoneClosed
     */
    'milestone': WebhooksMilestone;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMilestoneClosed
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMilestoneClosed
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMilestoneClosed
     */
    'sender': SimpleUser;
}

export const WebhookMilestoneClosedActionEnum = {
    Closed: 'closed'
} as const;

export type WebhookMilestoneClosedActionEnum = typeof WebhookMilestoneClosedActionEnum[keyof typeof WebhookMilestoneClosedActionEnum];

/**
 * 
 * @export
 * @interface WebhookMilestoneCreated
 */
export interface WebhookMilestoneCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookMilestoneCreated
     */
    'action': WebhookMilestoneCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMilestoneCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMilestoneCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksMilestone3}
     * @memberof WebhookMilestoneCreated
     */
    'milestone': WebhooksMilestone3;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMilestoneCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMilestoneCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMilestoneCreated
     */
    'sender': SimpleUser;
}

export const WebhookMilestoneCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookMilestoneCreatedActionEnum = typeof WebhookMilestoneCreatedActionEnum[keyof typeof WebhookMilestoneCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookMilestoneDeleted
 */
export interface WebhookMilestoneDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookMilestoneDeleted
     */
    'action': WebhookMilestoneDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMilestoneDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMilestoneDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksMilestone}
     * @memberof WebhookMilestoneDeleted
     */
    'milestone': WebhooksMilestone;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMilestoneDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMilestoneDeleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMilestoneDeleted
     */
    'sender': SimpleUser;
}

export const WebhookMilestoneDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookMilestoneDeletedActionEnum = typeof WebhookMilestoneDeletedActionEnum[keyof typeof WebhookMilestoneDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookMilestoneEdited
 */
export interface WebhookMilestoneEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookMilestoneEdited
     */
    'action': WebhookMilestoneEditedActionEnum;
    /**
     * 
     * @type {WebhookMilestoneEditedChanges}
     * @memberof WebhookMilestoneEdited
     */
    'changes': WebhookMilestoneEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMilestoneEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMilestoneEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksMilestone}
     * @memberof WebhookMilestoneEdited
     */
    'milestone': WebhooksMilestone;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMilestoneEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMilestoneEdited
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMilestoneEdited
     */
    'sender': SimpleUser;
}

export const WebhookMilestoneEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookMilestoneEditedActionEnum = typeof WebhookMilestoneEditedActionEnum[keyof typeof WebhookMilestoneEditedActionEnum];

/**
 * The changes to the milestone if the action was `edited`.
 * @export
 * @interface WebhookMilestoneEditedChanges
 */
export interface WebhookMilestoneEditedChanges {
    /**
     * 
     * @type {WebhookLabelEditedChangesDescription}
     * @memberof WebhookMilestoneEditedChanges
     */
    'description'?: WebhookLabelEditedChangesDescription;
    /**
     * 
     * @type {WebhookMilestoneEditedChangesDueOn}
     * @memberof WebhookMilestoneEditedChanges
     */
    'due_on'?: WebhookMilestoneEditedChangesDueOn;
    /**
     * 
     * @type {WebhookMilestoneEditedChangesTitle}
     * @memberof WebhookMilestoneEditedChanges
     */
    'title'?: WebhookMilestoneEditedChangesTitle;
}
/**
 * 
 * @export
 * @interface WebhookMilestoneEditedChangesDueOn
 */
export interface WebhookMilestoneEditedChangesDueOn {
    /**
     * The previous version of the due date if the action was `edited`.
     * @type {string}
     * @memberof WebhookMilestoneEditedChangesDueOn
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookMilestoneEditedChangesTitle
 */
export interface WebhookMilestoneEditedChangesTitle {
    /**
     * The previous version of the title if the action was `edited`.
     * @type {string}
     * @memberof WebhookMilestoneEditedChangesTitle
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookMilestoneOpened
 */
export interface WebhookMilestoneOpened {
    /**
     * 
     * @type {string}
     * @memberof WebhookMilestoneOpened
     */
    'action': WebhookMilestoneOpenedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookMilestoneOpened
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookMilestoneOpened
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksMilestone3}
     * @memberof WebhookMilestoneOpened
     */
    'milestone': WebhooksMilestone3;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookMilestoneOpened
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookMilestoneOpened
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookMilestoneOpened
     */
    'sender': SimpleUser;
}

export const WebhookMilestoneOpenedActionEnum = {
    Opened: 'opened'
} as const;

export type WebhookMilestoneOpenedActionEnum = typeof WebhookMilestoneOpenedActionEnum[keyof typeof WebhookMilestoneOpenedActionEnum];

/**
 * 
 * @export
 * @interface WebhookOrgBlockBlocked
 */
export interface WebhookOrgBlockBlocked {
    /**
     * 
     * @type {string}
     * @memberof WebhookOrgBlockBlocked
     */
    'action': WebhookOrgBlockBlockedActionEnum;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookOrgBlockBlocked
     */
    'blocked_user': WebhooksUser | null;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookOrgBlockBlocked
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookOrgBlockBlocked
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookOrgBlockBlocked
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookOrgBlockBlocked
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookOrgBlockBlocked
     */
    'sender': SimpleUser;
}

export const WebhookOrgBlockBlockedActionEnum = {
    Blocked: 'blocked'
} as const;

export type WebhookOrgBlockBlockedActionEnum = typeof WebhookOrgBlockBlockedActionEnum[keyof typeof WebhookOrgBlockBlockedActionEnum];

/**
 * 
 * @export
 * @interface WebhookOrgBlockUnblocked
 */
export interface WebhookOrgBlockUnblocked {
    /**
     * 
     * @type {string}
     * @memberof WebhookOrgBlockUnblocked
     */
    'action': WebhookOrgBlockUnblockedActionEnum;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookOrgBlockUnblocked
     */
    'blocked_user': WebhooksUser | null;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookOrgBlockUnblocked
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookOrgBlockUnblocked
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookOrgBlockUnblocked
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookOrgBlockUnblocked
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookOrgBlockUnblocked
     */
    'sender': SimpleUser;
}

export const WebhookOrgBlockUnblockedActionEnum = {
    Unblocked: 'unblocked'
} as const;

export type WebhookOrgBlockUnblockedActionEnum = typeof WebhookOrgBlockUnblockedActionEnum[keyof typeof WebhookOrgBlockUnblockedActionEnum];

/**
 * 
 * @export
 * @interface WebhookOrganizationDeleted
 */
export interface WebhookOrganizationDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationDeleted
     */
    'action': WebhookOrganizationDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookOrganizationDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookOrganizationDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksMembership}
     * @memberof WebhookOrganizationDeleted
     */
    'membership'?: WebhooksMembership;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookOrganizationDeleted
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookOrganizationDeleted
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookOrganizationDeleted
     */
    'sender': SimpleUser;
}

export const WebhookOrganizationDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookOrganizationDeletedActionEnum = typeof WebhookOrganizationDeletedActionEnum[keyof typeof WebhookOrganizationDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookOrganizationMemberAdded
 */
export interface WebhookOrganizationMemberAdded {
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationMemberAdded
     */
    'action': WebhookOrganizationMemberAddedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookOrganizationMemberAdded
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookOrganizationMemberAdded
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksMembership}
     * @memberof WebhookOrganizationMemberAdded
     */
    'membership': WebhooksMembership;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookOrganizationMemberAdded
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookOrganizationMemberAdded
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookOrganizationMemberAdded
     */
    'sender': SimpleUser;
}

export const WebhookOrganizationMemberAddedActionEnum = {
    MemberAdded: 'member_added'
} as const;

export type WebhookOrganizationMemberAddedActionEnum = typeof WebhookOrganizationMemberAddedActionEnum[keyof typeof WebhookOrganizationMemberAddedActionEnum];

/**
 * 
 * @export
 * @interface WebhookOrganizationMemberInvited
 */
export interface WebhookOrganizationMemberInvited {
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationMemberInvited
     */
    'action': WebhookOrganizationMemberInvitedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookOrganizationMemberInvited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookOrganizationMemberInvited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhookOrganizationMemberInvitedInvitation}
     * @memberof WebhookOrganizationMemberInvited
     */
    'invitation': WebhookOrganizationMemberInvitedInvitation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookOrganizationMemberInvited
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookOrganizationMemberInvited
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookOrganizationMemberInvited
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookOrganizationMemberInvited
     */
    'user'?: WebhooksUser | null;
}

export const WebhookOrganizationMemberInvitedActionEnum = {
    MemberInvited: 'member_invited'
} as const;

export type WebhookOrganizationMemberInvitedActionEnum = typeof WebhookOrganizationMemberInvitedActionEnum[keyof typeof WebhookOrganizationMemberInvitedActionEnum];

/**
 * The invitation for the user or email if the action is `member_invited`.
 * @export
 * @interface WebhookOrganizationMemberInvitedInvitation
 */
export interface WebhookOrganizationMemberInvitedInvitation {
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationMemberInvitedInvitation
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationMemberInvitedInvitation
     */
    'email': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationMemberInvitedInvitation
     */
    'failed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationMemberInvitedInvitation
     */
    'failed_reason': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookOrganizationMemberInvitedInvitation
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationMemberInvitedInvitation
     */
    'invitation_teams_url': string;
    /**
     * 
     * @type {User2}
     * @memberof WebhookOrganizationMemberInvitedInvitation
     */
    'inviter': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationMemberInvitedInvitation
     */
    'login': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationMemberInvitedInvitation
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationMemberInvitedInvitation
     */
    'role': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookOrganizationMemberInvitedInvitation
     */
    'team_count': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationMemberInvitedInvitation
     */
    'invitation_source'?: string;
}
/**
 * 
 * @export
 * @interface WebhookOrganizationMemberRemoved
 */
export interface WebhookOrganizationMemberRemoved {
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationMemberRemoved
     */
    'action': WebhookOrganizationMemberRemovedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookOrganizationMemberRemoved
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookOrganizationMemberRemoved
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksMembership}
     * @memberof WebhookOrganizationMemberRemoved
     */
    'membership': WebhooksMembership;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookOrganizationMemberRemoved
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookOrganizationMemberRemoved
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookOrganizationMemberRemoved
     */
    'sender': SimpleUser;
}

export const WebhookOrganizationMemberRemovedActionEnum = {
    MemberRemoved: 'member_removed'
} as const;

export type WebhookOrganizationMemberRemovedActionEnum = typeof WebhookOrganizationMemberRemovedActionEnum[keyof typeof WebhookOrganizationMemberRemovedActionEnum];

/**
 * 
 * @export
 * @interface WebhookOrganizationRenamed
 */
export interface WebhookOrganizationRenamed {
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationRenamed
     */
    'action': WebhookOrganizationRenamedActionEnum;
    /**
     * 
     * @type {WebhookOrganizationRenamedChanges}
     * @memberof WebhookOrganizationRenamed
     */
    'changes'?: WebhookOrganizationRenamedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookOrganizationRenamed
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookOrganizationRenamed
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksMembership}
     * @memberof WebhookOrganizationRenamed
     */
    'membership'?: WebhooksMembership;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookOrganizationRenamed
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookOrganizationRenamed
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookOrganizationRenamed
     */
    'sender': SimpleUser;
}

export const WebhookOrganizationRenamedActionEnum = {
    Renamed: 'renamed'
} as const;

export type WebhookOrganizationRenamedActionEnum = typeof WebhookOrganizationRenamedActionEnum[keyof typeof WebhookOrganizationRenamedActionEnum];

/**
 * 
 * @export
 * @interface WebhookOrganizationRenamedChanges
 */
export interface WebhookOrganizationRenamedChanges {
    /**
     * 
     * @type {WebhookOrganizationRenamedChangesLogin}
     * @memberof WebhookOrganizationRenamedChanges
     */
    'login'?: WebhookOrganizationRenamedChangesLogin;
}
/**
 * 
 * @export
 * @interface WebhookOrganizationRenamedChangesLogin
 */
export interface WebhookOrganizationRenamedChangesLogin {
    /**
     * 
     * @type {string}
     * @memberof WebhookOrganizationRenamedChangesLogin
     */
    'from'?: string;
}
/**
 * 
 * @export
 * @interface WebhookPackagePublished
 */
export interface WebhookPackagePublished {
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublished
     */
    'action': WebhookPackagePublishedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPackagePublished
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPackagePublished
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPackagePublished
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhookPackagePublishedPackage}
     * @memberof WebhookPackagePublished
     */
    'package': WebhookPackagePublishedPackage;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPackagePublished
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPackagePublished
     */
    'sender': SimpleUser;
}

export const WebhookPackagePublishedActionEnum = {
    Published: 'published'
} as const;

export type WebhookPackagePublishedActionEnum = typeof WebhookPackagePublishedActionEnum[keyof typeof WebhookPackagePublishedActionEnum];

/**
 * Information about the package.
 * @export
 * @interface WebhookPackagePublishedPackage
 */
export interface WebhookPackagePublishedPackage {
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackage
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackage
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackage
     */
    'ecosystem': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackage
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPackagePublishedPackage
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackage
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackage
     */
    'namespace': string;
    /**
     * 
     * @type {User2}
     * @memberof WebhookPackagePublishedPackage
     */
    'owner': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackage
     */
    'package_type': string;
    /**
     * 
     * @type {WebhookPackagePublishedPackagePackageVersion}
     * @memberof WebhookPackagePublishedPackage
     */
    'package_version': WebhookPackagePublishedPackagePackageVersion | null;
    /**
     * 
     * @type {WebhookPackagePublishedPackageRegistry}
     * @memberof WebhookPackagePublishedPackage
     */
    'registry': WebhookPackagePublishedPackageRegistry | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackage
     */
    'updated_at': string | null;
}
/**
 * 
 * @export
 * @interface WebhookPackagePublishedPackagePackageVersion
 */
export interface WebhookPackagePublishedPackagePackageVersion {
    /**
     * 
     * @type {User2}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'author'?: User2 | null;
    /**
     * 
     * @type {WebhookPackagePublishedPackagePackageVersionBody}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'body'?: WebhookPackagePublishedPackagePackageVersionBody;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'body_html'?: string;
    /**
     * 
     * @type {WebhookPackagePublishedPackagePackageVersionContainerMetadata}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'container_metadata'?: WebhookPackagePublishedPackagePackageVersionContainerMetadata | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'description': string;
    /**
     * 
     * @type {Array<WebhookPackagePublishedPackagePackageVersionDockerMetadataInner>}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'docker_metadata'?: Array<WebhookPackagePublishedPackagePackageVersionDockerMetadataInner>;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'installation_command': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'manifest'?: string;
    /**
     * 
     * @type {Array<{ [key: string]: any; }>}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'metadata': Array<{ [key: string]: any; }>;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'name': string;
    /**
     * 
     * @type {WebhookPackagePublishedPackagePackageVersionNpmMetadata}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'npm_metadata'?: WebhookPackagePublishedPackagePackageVersionNpmMetadata | null;
    /**
     * 
     * @type {Array<WebhookPackagePublishedPackagePackageVersionNugetMetadataInner>}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'nuget_metadata'?: Array<WebhookPackagePublishedPackagePackageVersionNugetMetadataInner> | null;
    /**
     * 
     * @type {Array<WebhookPackagePublishedPackagePackageVersionPackageFilesInner>}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'package_files': Array<WebhookPackagePublishedPackagePackageVersionPackageFilesInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'package_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'prerelease'?: boolean;
    /**
     * 
     * @type {WebhookPackagePublishedPackagePackageVersionRelease}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'release'?: WebhookPackagePublishedPackagePackageVersionRelease;
    /**
     * 
     * @type {Array<WebhookRubygemsMetadata>}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'rubygems_metadata'?: Array<WebhookRubygemsMetadata>;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'source_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'summary': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'tag_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'target_commitish'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'target_oid'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'updated_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersion
     */
    'version': string;
}
/**
 * @type WebhookPackagePublishedPackagePackageVersionBody
 * @export
 */
export type WebhookPackagePublishedPackagePackageVersionBody = object | string;

/**
 * 
 * @export
 * @interface WebhookPackagePublishedPackagePackageVersionContainerMetadata
 */
export interface WebhookPackagePublishedPackagePackageVersionContainerMetadata {
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionContainerMetadata
     */
    'labels'?: object | null;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionContainerMetadata
     */
    'manifest'?: object | null;
    /**
     * 
     * @type {WebhookPackagePublishedPackagePackageVersionContainerMetadataTag}
     * @memberof WebhookPackagePublishedPackagePackageVersionContainerMetadata
     */
    'tag'?: WebhookPackagePublishedPackagePackageVersionContainerMetadataTag;
}
/**
 * 
 * @export
 * @interface WebhookPackagePublishedPackagePackageVersionContainerMetadataTag
 */
export interface WebhookPackagePublishedPackagePackageVersionContainerMetadataTag {
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionContainerMetadataTag
     */
    'digest'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionContainerMetadataTag
     */
    'name'?: string;
}
/**
 * 
 * @export
 * @interface WebhookPackagePublishedPackagePackageVersionDockerMetadataInner
 */
export interface WebhookPackagePublishedPackagePackageVersionDockerMetadataInner {
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookPackagePublishedPackagePackageVersionDockerMetadataInner
     */
    'tags'?: Array<string>;
}
/**
 * 
 * @export
 * @interface WebhookPackagePublishedPackagePackageVersionNpmMetadata
 */
export interface WebhookPackagePublishedPackagePackageVersionNpmMetadata {
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'version'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'npm_user'?: string;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'author'?: object | null;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'bugs'?: object | null;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'dependencies'?: object;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'dev_dependencies'?: object;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'peer_dependencies'?: object;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'optional_dependencies'?: object;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'description'?: string;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'dist'?: object | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'git_head'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'homepage'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'license'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'main'?: string;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'repository'?: object | null;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'scripts'?: object;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'node_version'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'npm_version'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'has_shrinkwrap'?: boolean;
    /**
     * 
     * @type {Array<object>}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'maintainers'?: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'contributors'?: Array<object>;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'engines'?: object;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'keywords'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'files'?: Array<string>;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'bin'?: object;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'man'?: object;
    /**
     * 
     * @type {object}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'directories'?: object | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'os'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'cpu'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'readme'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'installation_command'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'release_id'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'commit_oid'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'published_via_actions'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof WebhookPackagePublishedPackagePackageVersionNpmMetadata
     */
    'deleted_by_id'?: number;
}
/**
 * 
 * @export
 * @interface WebhookPackagePublishedPackagePackageVersionNugetMetadataInner
 */
export interface WebhookPackagePublishedPackagePackageVersionNugetMetadataInner {
    /**
     * 
     * @type {WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerId}
     * @memberof WebhookPackagePublishedPackagePackageVersionNugetMetadataInner
     */
    'id'?: WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerId;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNugetMetadataInner
     */
    'name'?: string;
    /**
     * 
     * @type {WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerValue}
     * @memberof WebhookPackagePublishedPackagePackageVersionNugetMetadataInner
     */
    'value'?: WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerValue;
}
/**
 * @type WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerId
 * @export
 */
export type WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerId = number | string;

/**
 * @type WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerValue
 * @export
 */
export type WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerValue = WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerValueOneOf | boolean | number | string;

/**
 * 
 * @export
 * @interface WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerValueOneOf
 */
export interface WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerValueOneOf {
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerValueOneOf
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerValueOneOf
     */
    'branch'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerValueOneOf
     */
    'commit'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerValueOneOf
     */
    'type'?: string;
}
/**
 * 
 * @export
 * @interface WebhookPackagePublishedPackagePackageVersionPackageFilesInner
 */
export interface WebhookPackagePublishedPackagePackageVersionPackageFilesInner {
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionPackageFilesInner
     */
    'content_type': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionPackageFilesInner
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionPackageFilesInner
     */
    'download_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPackagePublishedPackagePackageVersionPackageFilesInner
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionPackageFilesInner
     */
    'md5': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionPackageFilesInner
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionPackageFilesInner
     */
    'sha1': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionPackageFilesInner
     */
    'sha256': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookPackagePublishedPackagePackageVersionPackageFilesInner
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionPackageFilesInner
     */
    'state': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionPackageFilesInner
     */
    'updated_at': string;
}
/**
 * 
 * @export
 * @interface WebhookPackagePublishedPackagePackageVersionRelease
 */
export interface WebhookPackagePublishedPackagePackageVersionRelease {
    /**
     * 
     * @type {User2}
     * @memberof WebhookPackagePublishedPackagePackageVersionRelease
     */
    'author': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionRelease
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPackagePublishedPackagePackageVersionRelease
     */
    'draft': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionRelease
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPackagePublishedPackagePackageVersionRelease
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionRelease
     */
    'name': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPackagePublishedPackagePackageVersionRelease
     */
    'prerelease': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionRelease
     */
    'published_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionRelease
     */
    'tag_name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionRelease
     */
    'target_commitish': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackagePackageVersionRelease
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WebhookPackagePublishedPackageRegistry
 */
export interface WebhookPackagePublishedPackageRegistry {
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackageRegistry
     */
    'about_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackageRegistry
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackageRegistry
     */
    'type': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackageRegistry
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackagePublishedPackageRegistry
     */
    'vendor': string;
}
/**
 * 
 * @export
 * @interface WebhookPackageUpdated
 */
export interface WebhookPackageUpdated {
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdated
     */
    'action': WebhookPackageUpdatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPackageUpdated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPackageUpdated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPackageUpdated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhookPackageUpdatedPackage}
     * @memberof WebhookPackageUpdated
     */
    'package': WebhookPackageUpdatedPackage;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPackageUpdated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPackageUpdated
     */
    'sender': SimpleUser;
}

export const WebhookPackageUpdatedActionEnum = {
    Updated: 'updated'
} as const;

export type WebhookPackageUpdatedActionEnum = typeof WebhookPackageUpdatedActionEnum[keyof typeof WebhookPackageUpdatedActionEnum];

/**
 * Information about the package.
 * @export
 * @interface WebhookPackageUpdatedPackage
 */
export interface WebhookPackageUpdatedPackage {
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackage
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackage
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackage
     */
    'ecosystem': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackage
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPackageUpdatedPackage
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackage
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackage
     */
    'namespace': string;
    /**
     * 
     * @type {User2}
     * @memberof WebhookPackageUpdatedPackage
     */
    'owner': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackage
     */
    'package_type': string;
    /**
     * 
     * @type {WebhookPackageUpdatedPackagePackageVersion}
     * @memberof WebhookPackageUpdatedPackage
     */
    'package_version': WebhookPackageUpdatedPackagePackageVersion;
    /**
     * 
     * @type {WebhookPackagePublishedPackageRegistry}
     * @memberof WebhookPackageUpdatedPackage
     */
    'registry': WebhookPackagePublishedPackageRegistry | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackage
     */
    'updated_at': string;
}
/**
 * 
 * @export
 * @interface WebhookPackageUpdatedPackagePackageVersion
 */
export interface WebhookPackageUpdatedPackagePackageVersion {
    /**
     * 
     * @type {User2}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'author': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'body': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'body_html': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'description': string;
    /**
     * 
     * @type {Array<WebhookPackagePublishedPackagePackageVersionDockerMetadataInner>}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'docker_metadata'?: Array<WebhookPackagePublishedPackagePackageVersionDockerMetadataInner>;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'installation_command': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'manifest'?: string;
    /**
     * 
     * @type {Array<{ [key: string]: any; }>}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'metadata': Array<{ [key: string]: any; }>;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'name': string;
    /**
     * 
     * @type {Array<WebhookPackageUpdatedPackagePackageVersionPackageFilesInner>}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'package_files': Array<WebhookPackageUpdatedPackagePackageVersionPackageFilesInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'package_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'prerelease'?: boolean;
    /**
     * 
     * @type {WebhookPackageUpdatedPackagePackageVersionRelease}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'release'?: WebhookPackageUpdatedPackagePackageVersionRelease;
    /**
     * 
     * @type {Array<WebhookRubygemsMetadata>}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'rubygems_metadata'?: Array<WebhookRubygemsMetadata>;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'source_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'summary': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'tag_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'target_commitish': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'target_oid': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersion
     */
    'version': string;
}
/**
 * 
 * @export
 * @interface WebhookPackageUpdatedPackagePackageVersionPackageFilesInner
 */
export interface WebhookPackageUpdatedPackagePackageVersionPackageFilesInner {
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionPackageFilesInner
     */
    'content_type': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionPackageFilesInner
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionPackageFilesInner
     */
    'download_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPackageUpdatedPackagePackageVersionPackageFilesInner
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionPackageFilesInner
     */
    'md5': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionPackageFilesInner
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionPackageFilesInner
     */
    'sha1': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionPackageFilesInner
     */
    'sha256': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPackageUpdatedPackagePackageVersionPackageFilesInner
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionPackageFilesInner
     */
    'state': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionPackageFilesInner
     */
    'updated_at': string;
}
/**
 * 
 * @export
 * @interface WebhookPackageUpdatedPackagePackageVersionRelease
 */
export interface WebhookPackageUpdatedPackagePackageVersionRelease {
    /**
     * 
     * @type {User2}
     * @memberof WebhookPackageUpdatedPackagePackageVersionRelease
     */
    'author': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionRelease
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPackageUpdatedPackagePackageVersionRelease
     */
    'draft': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionRelease
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPackageUpdatedPackagePackageVersionRelease
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionRelease
     */
    'name': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPackageUpdatedPackagePackageVersionRelease
     */
    'prerelease': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionRelease
     */
    'published_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionRelease
     */
    'tag_name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionRelease
     */
    'target_commitish': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPackageUpdatedPackagePackageVersionRelease
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WebhookPageBuild
 */
export interface WebhookPageBuild {
    /**
     * 
     * @type {WebhookPageBuildBuild}
     * @memberof WebhookPageBuild
     */
    'build': WebhookPageBuildBuild;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPageBuild
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {number}
     * @memberof WebhookPageBuild
     */
    'id': number;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPageBuild
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPageBuild
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPageBuild
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPageBuild
     */
    'sender': SimpleUser;
}
/**
 * The [List GitHub Pages builds](https://docs.github.com/rest/pages/pages#list-github-pages-builds) itself.
 * @export
 * @interface WebhookPageBuildBuild
 */
export interface WebhookPageBuildBuild {
    /**
     * 
     * @type {string}
     * @memberof WebhookPageBuildBuild
     */
    'commit': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPageBuildBuild
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPageBuildBuild
     */
    'duration': number;
    /**
     * 
     * @type {PageBuildError}
     * @memberof WebhookPageBuildBuild
     */
    'error': PageBuildError;
    /**
     * 
     * @type {User2}
     * @memberof WebhookPageBuildBuild
     */
    'pusher': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPageBuildBuild
     */
    'status': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPageBuildBuild
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPageBuildBuild
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WebhookPersonalAccessTokenRequestApproved
 */
export interface WebhookPersonalAccessTokenRequestApproved {
    /**
     * 
     * @type {string}
     * @memberof WebhookPersonalAccessTokenRequestApproved
     */
    'action': WebhookPersonalAccessTokenRequestApprovedActionEnum;
    /**
     * 
     * @type {PersonalAccessTokenRequest}
     * @memberof WebhookPersonalAccessTokenRequestApproved
     */
    'personal_access_token_request': PersonalAccessTokenRequest;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPersonalAccessTokenRequestApproved
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPersonalAccessTokenRequestApproved
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPersonalAccessTokenRequestApproved
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPersonalAccessTokenRequestApproved
     */
    'installation': SimpleInstallation;
}

export const WebhookPersonalAccessTokenRequestApprovedActionEnum = {
    Approved: 'approved'
} as const;

export type WebhookPersonalAccessTokenRequestApprovedActionEnum = typeof WebhookPersonalAccessTokenRequestApprovedActionEnum[keyof typeof WebhookPersonalAccessTokenRequestApprovedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPersonalAccessTokenRequestCancelled
 */
export interface WebhookPersonalAccessTokenRequestCancelled {
    /**
     * 
     * @type {string}
     * @memberof WebhookPersonalAccessTokenRequestCancelled
     */
    'action': WebhookPersonalAccessTokenRequestCancelledActionEnum;
    /**
     * 
     * @type {PersonalAccessTokenRequest}
     * @memberof WebhookPersonalAccessTokenRequestCancelled
     */
    'personal_access_token_request': PersonalAccessTokenRequest;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPersonalAccessTokenRequestCancelled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPersonalAccessTokenRequestCancelled
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPersonalAccessTokenRequestCancelled
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPersonalAccessTokenRequestCancelled
     */
    'installation': SimpleInstallation;
}

export const WebhookPersonalAccessTokenRequestCancelledActionEnum = {
    Cancelled: 'cancelled'
} as const;

export type WebhookPersonalAccessTokenRequestCancelledActionEnum = typeof WebhookPersonalAccessTokenRequestCancelledActionEnum[keyof typeof WebhookPersonalAccessTokenRequestCancelledActionEnum];

/**
 * 
 * @export
 * @interface WebhookPersonalAccessTokenRequestCreated
 */
export interface WebhookPersonalAccessTokenRequestCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookPersonalAccessTokenRequestCreated
     */
    'action': WebhookPersonalAccessTokenRequestCreatedActionEnum;
    /**
     * 
     * @type {PersonalAccessTokenRequest}
     * @memberof WebhookPersonalAccessTokenRequestCreated
     */
    'personal_access_token_request': PersonalAccessTokenRequest;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPersonalAccessTokenRequestCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPersonalAccessTokenRequestCreated
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPersonalAccessTokenRequestCreated
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPersonalAccessTokenRequestCreated
     */
    'installation'?: SimpleInstallation;
}

export const WebhookPersonalAccessTokenRequestCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookPersonalAccessTokenRequestCreatedActionEnum = typeof WebhookPersonalAccessTokenRequestCreatedActionEnum[keyof typeof WebhookPersonalAccessTokenRequestCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPersonalAccessTokenRequestDenied
 */
export interface WebhookPersonalAccessTokenRequestDenied {
    /**
     * 
     * @type {string}
     * @memberof WebhookPersonalAccessTokenRequestDenied
     */
    'action': WebhookPersonalAccessTokenRequestDeniedActionEnum;
    /**
     * 
     * @type {PersonalAccessTokenRequest}
     * @memberof WebhookPersonalAccessTokenRequestDenied
     */
    'personal_access_token_request': PersonalAccessTokenRequest;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPersonalAccessTokenRequestDenied
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPersonalAccessTokenRequestDenied
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPersonalAccessTokenRequestDenied
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPersonalAccessTokenRequestDenied
     */
    'installation': SimpleInstallation;
}

export const WebhookPersonalAccessTokenRequestDeniedActionEnum = {
    Denied: 'denied'
} as const;

export type WebhookPersonalAccessTokenRequestDeniedActionEnum = typeof WebhookPersonalAccessTokenRequestDeniedActionEnum[keyof typeof WebhookPersonalAccessTokenRequestDeniedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPing
 */
export interface WebhookPing {
    /**
     * 
     * @type {Webhook}
     * @memberof WebhookPing
     */
    'hook'?: Webhook;
    /**
     * The ID of the webhook that triggered the ping.
     * @type {number}
     * @memberof WebhookPing
     */
    'hook_id'?: number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPing
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPing
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPing
     */
    'sender'?: SimpleUser;
    /**
     * Random string of GitHub zen.
     * @type {string}
     * @memberof WebhookPing
     */
    'zen'?: string;
}
/**
 * The webhooks ping payload encoded with URL encoding.
 * @export
 * @interface WebhookPingFormEncoded
 */
export interface WebhookPingFormEncoded {
    /**
     * A URL-encoded string of the ping JSON payload. The decoded payload is a JSON object.
     * @type {string}
     * @memberof WebhookPingFormEncoded
     */
    'payload': string;
}
/**
 * 
 * @export
 * @interface WebhookProjectCardConverted
 */
export interface WebhookProjectCardConverted {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardConverted
     */
    'action': WebhookProjectCardConvertedActionEnum;
    /**
     * 
     * @type {WebhookProjectCardConvertedChanges}
     * @memberof WebhookProjectCardConverted
     */
    'changes': WebhookProjectCardConvertedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectCardConverted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectCardConverted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectCardConverted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksProjectCard}
     * @memberof WebhookProjectCardConverted
     */
    'project_card': WebhooksProjectCard;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookProjectCardConverted
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectCardConverted
     */
    'sender': SimpleUser;
}

export const WebhookProjectCardConvertedActionEnum = {
    Converted: 'converted'
} as const;

export type WebhookProjectCardConvertedActionEnum = typeof WebhookProjectCardConvertedActionEnum[keyof typeof WebhookProjectCardConvertedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectCardConvertedChanges
 */
export interface WebhookProjectCardConvertedChanges {
    /**
     * 
     * @type {WebhookDiscussionCommentEditedChangesBody}
     * @memberof WebhookProjectCardConvertedChanges
     */
    'note': WebhookDiscussionCommentEditedChangesBody;
}
/**
 * 
 * @export
 * @interface WebhookProjectCardCreated
 */
export interface WebhookProjectCardCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardCreated
     */
    'action': WebhookProjectCardCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectCardCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectCardCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectCardCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksProjectCard}
     * @memberof WebhookProjectCardCreated
     */
    'project_card': WebhooksProjectCard;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookProjectCardCreated
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectCardCreated
     */
    'sender': SimpleUser;
}

export const WebhookProjectCardCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookProjectCardCreatedActionEnum = typeof WebhookProjectCardCreatedActionEnum[keyof typeof WebhookProjectCardCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectCardDeleted
 */
export interface WebhookProjectCardDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardDeleted
     */
    'action': WebhookProjectCardDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectCardDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectCardDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectCardDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectCard}
     * @memberof WebhookProjectCardDeleted
     */
    'project_card': ProjectCard;
    /**
     * 
     * @type {NullableRepositoryWebhooks}
     * @memberof WebhookProjectCardDeleted
     */
    'repository'?: NullableRepositoryWebhooks | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectCardDeleted
     */
    'sender': SimpleUser;
}

export const WebhookProjectCardDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookProjectCardDeletedActionEnum = typeof WebhookProjectCardDeletedActionEnum[keyof typeof WebhookProjectCardDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectCardEdited
 */
export interface WebhookProjectCardEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardEdited
     */
    'action': WebhookProjectCardEditedActionEnum;
    /**
     * 
     * @type {WebhookProjectCardEditedChanges}
     * @memberof WebhookProjectCardEdited
     */
    'changes': WebhookProjectCardEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectCardEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectCardEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectCardEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksProjectCard}
     * @memberof WebhookProjectCardEdited
     */
    'project_card': WebhooksProjectCard;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookProjectCardEdited
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectCardEdited
     */
    'sender': SimpleUser;
}

export const WebhookProjectCardEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookProjectCardEditedActionEnum = typeof WebhookProjectCardEditedActionEnum[keyof typeof WebhookProjectCardEditedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectCardEditedChanges
 */
export interface WebhookProjectCardEditedChanges {
    /**
     * 
     * @type {WebhookProjectCardEditedChangesNote}
     * @memberof WebhookProjectCardEditedChanges
     */
    'note': WebhookProjectCardEditedChangesNote;
}
/**
 * 
 * @export
 * @interface WebhookProjectCardEditedChangesNote
 */
export interface WebhookProjectCardEditedChangesNote {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardEditedChangesNote
     */
    'from': string | null;
}
/**
 * 
 * @export
 * @interface WebhookProjectCardMoved
 */
export interface WebhookProjectCardMoved {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMoved
     */
    'action': WebhookProjectCardMovedActionEnum;
    /**
     * 
     * @type {WebhookProjectCardMovedChanges}
     * @memberof WebhookProjectCardMoved
     */
    'changes'?: WebhookProjectCardMovedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectCardMoved
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectCardMoved
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectCardMoved
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhookProjectCardMovedProjectCard}
     * @memberof WebhookProjectCardMoved
     */
    'project_card': WebhookProjectCardMovedProjectCard;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookProjectCardMoved
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectCardMoved
     */
    'sender': SimpleUser;
}

export const WebhookProjectCardMovedActionEnum = {
    Moved: 'moved'
} as const;

export type WebhookProjectCardMovedActionEnum = typeof WebhookProjectCardMovedActionEnum[keyof typeof WebhookProjectCardMovedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectCardMovedChanges
 */
export interface WebhookProjectCardMovedChanges {
    /**
     * 
     * @type {WebhookProjectCardMovedChangesColumnId}
     * @memberof WebhookProjectCardMovedChanges
     */
    'column_id': WebhookProjectCardMovedChangesColumnId;
}
/**
 * 
 * @export
 * @interface WebhookProjectCardMovedChangesColumnId
 */
export interface WebhookProjectCardMovedChangesColumnId {
    /**
     * 
     * @type {number}
     * @memberof WebhookProjectCardMovedChangesColumnId
     */
    'from': number;
}
/**
 * 
 * @export
 * @interface WebhookProjectCardMovedProjectCard
 */
export interface WebhookProjectCardMovedProjectCard {
    /**
     * 
     * @type {number}
     * @memberof WebhookProjectCardMovedProjectCard
     */
    'after_id': number | null;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookProjectCardMovedProjectCard
     */
    'archived': boolean;
    /**
     * 
     * @type {number}
     * @memberof WebhookProjectCardMovedProjectCard
     */
    'column_id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCard
     */
    'column_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCard
     */
    'content_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCard
     */
    'created_at': string;
    /**
     * 
     * @type {WebhookProjectCardMovedProjectCardAllOfCreator}
     * @memberof WebhookProjectCardMovedProjectCard
     */
    'creator': WebhookProjectCardMovedProjectCardAllOfCreator | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookProjectCardMovedProjectCard
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCard
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCard
     */
    'note': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCard
     */
    'project_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCard
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCard
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WebhookProjectCardMovedProjectCardAllOfCreator
 */
export interface WebhookProjectCardMovedProjectCardAllOfCreator {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'login'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'type'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCardMovedProjectCardAllOfCreator
     */
    'url'?: string;
}
/**
 * 
 * @export
 * @interface WebhookProjectClosed
 */
export interface WebhookProjectClosed {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectClosed
     */
    'action': WebhookProjectClosedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectClosed
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectClosed
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectClosed
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksProject}
     * @memberof WebhookProjectClosed
     */
    'project': WebhooksProject;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookProjectClosed
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectClosed
     */
    'sender': SimpleUser;
}

export const WebhookProjectClosedActionEnum = {
    Closed: 'closed'
} as const;

export type WebhookProjectClosedActionEnum = typeof WebhookProjectClosedActionEnum[keyof typeof WebhookProjectClosedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectColumnCreated
 */
export interface WebhookProjectColumnCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectColumnCreated
     */
    'action': WebhookProjectColumnCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectColumnCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectColumnCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectColumnCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksProjectColumn}
     * @memberof WebhookProjectColumnCreated
     */
    'project_column': WebhooksProjectColumn;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookProjectColumnCreated
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectColumnCreated
     */
    'sender'?: SimpleUser;
}

export const WebhookProjectColumnCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookProjectColumnCreatedActionEnum = typeof WebhookProjectColumnCreatedActionEnum[keyof typeof WebhookProjectColumnCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectColumnDeleted
 */
export interface WebhookProjectColumnDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectColumnDeleted
     */
    'action': WebhookProjectColumnDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectColumnDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectColumnDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectColumnDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksProjectColumn}
     * @memberof WebhookProjectColumnDeleted
     */
    'project_column': WebhooksProjectColumn;
    /**
     * 
     * @type {NullableRepositoryWebhooks}
     * @memberof WebhookProjectColumnDeleted
     */
    'repository'?: NullableRepositoryWebhooks | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectColumnDeleted
     */
    'sender'?: SimpleUser;
}

export const WebhookProjectColumnDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookProjectColumnDeletedActionEnum = typeof WebhookProjectColumnDeletedActionEnum[keyof typeof WebhookProjectColumnDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectColumnEdited
 */
export interface WebhookProjectColumnEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectColumnEdited
     */
    'action': WebhookProjectColumnEditedActionEnum;
    /**
     * 
     * @type {WebhookProjectColumnEditedChanges}
     * @memberof WebhookProjectColumnEdited
     */
    'changes': WebhookProjectColumnEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectColumnEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectColumnEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectColumnEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksProjectColumn}
     * @memberof WebhookProjectColumnEdited
     */
    'project_column': WebhooksProjectColumn;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookProjectColumnEdited
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectColumnEdited
     */
    'sender'?: SimpleUser;
}

export const WebhookProjectColumnEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookProjectColumnEditedActionEnum = typeof WebhookProjectColumnEditedActionEnum[keyof typeof WebhookProjectColumnEditedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectColumnEditedChanges
 */
export interface WebhookProjectColumnEditedChanges {
    /**
     * 
     * @type {WebhookDiscussionCommentEditedChangesBody}
     * @memberof WebhookProjectColumnEditedChanges
     */
    'name'?: WebhookDiscussionCommentEditedChangesBody;
}
/**
 * 
 * @export
 * @interface WebhookProjectColumnMoved
 */
export interface WebhookProjectColumnMoved {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectColumnMoved
     */
    'action': WebhookProjectColumnMovedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectColumnMoved
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectColumnMoved
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectColumnMoved
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksProjectColumn}
     * @memberof WebhookProjectColumnMoved
     */
    'project_column': WebhooksProjectColumn;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookProjectColumnMoved
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectColumnMoved
     */
    'sender': SimpleUser;
}

export const WebhookProjectColumnMovedActionEnum = {
    Moved: 'moved'
} as const;

export type WebhookProjectColumnMovedActionEnum = typeof WebhookProjectColumnMovedActionEnum[keyof typeof WebhookProjectColumnMovedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectCreated
 */
export interface WebhookProjectCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectCreated
     */
    'action': WebhookProjectCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksProject}
     * @memberof WebhookProjectCreated
     */
    'project': WebhooksProject;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookProjectCreated
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectCreated
     */
    'sender': SimpleUser;
}

export const WebhookProjectCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookProjectCreatedActionEnum = typeof WebhookProjectCreatedActionEnum[keyof typeof WebhookProjectCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectDeleted
 */
export interface WebhookProjectDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectDeleted
     */
    'action': WebhookProjectDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksProject}
     * @memberof WebhookProjectDeleted
     */
    'project': WebhooksProject;
    /**
     * 
     * @type {NullableRepositoryWebhooks}
     * @memberof WebhookProjectDeleted
     */
    'repository'?: NullableRepositoryWebhooks | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectDeleted
     */
    'sender'?: SimpleUser;
}

export const WebhookProjectDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookProjectDeletedActionEnum = typeof WebhookProjectDeletedActionEnum[keyof typeof WebhookProjectDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectEdited
 */
export interface WebhookProjectEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectEdited
     */
    'action': WebhookProjectEditedActionEnum;
    /**
     * 
     * @type {WebhookProjectEditedChanges}
     * @memberof WebhookProjectEdited
     */
    'changes'?: WebhookProjectEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksProject}
     * @memberof WebhookProjectEdited
     */
    'project': WebhooksProject;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookProjectEdited
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectEdited
     */
    'sender'?: SimpleUser;
}

export const WebhookProjectEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookProjectEditedActionEnum = typeof WebhookProjectEditedActionEnum[keyof typeof WebhookProjectEditedActionEnum];

/**
 * The changes to the project if the action was `edited`.
 * @export
 * @interface WebhookProjectEditedChanges
 */
export interface WebhookProjectEditedChanges {
    /**
     * 
     * @type {WebhookProjectEditedChangesBody}
     * @memberof WebhookProjectEditedChanges
     */
    'body'?: WebhookProjectEditedChangesBody;
    /**
     * 
     * @type {WebhookProjectEditedChangesName}
     * @memberof WebhookProjectEditedChanges
     */
    'name'?: WebhookProjectEditedChangesName;
}
/**
 * 
 * @export
 * @interface WebhookProjectEditedChangesBody
 */
export interface WebhookProjectEditedChangesBody {
    /**
     * The previous version of the body if the action was `edited`.
     * @type {string}
     * @memberof WebhookProjectEditedChangesBody
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookProjectEditedChangesName
 */
export interface WebhookProjectEditedChangesName {
    /**
     * The changes to the project if the action was `edited`.
     * @type {string}
     * @memberof WebhookProjectEditedChangesName
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookProjectReopened
 */
export interface WebhookProjectReopened {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectReopened
     */
    'action': WebhookProjectReopenedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookProjectReopened
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectReopened
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectReopened
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksProject}
     * @memberof WebhookProjectReopened
     */
    'project': WebhooksProject;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookProjectReopened
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectReopened
     */
    'sender': SimpleUser;
}

export const WebhookProjectReopenedActionEnum = {
    Reopened: 'reopened'
} as const;

export type WebhookProjectReopenedActionEnum = typeof WebhookProjectReopenedActionEnum[keyof typeof WebhookProjectReopenedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2ItemArchived
 */
export interface WebhookProjectsV2ItemArchived {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ItemArchived
     */
    'action': WebhookProjectsV2ItemArchivedActionEnum;
    /**
     * 
     * @type {WebhooksProjectChanges}
     * @memberof WebhookProjectsV2ItemArchived
     */
    'changes': WebhooksProjectChanges;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2ItemArchived
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2ItemArchived
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2Item}
     * @memberof WebhookProjectsV2ItemArchived
     */
    'projects_v2_item': ProjectsV2Item;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2ItemArchived
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2ItemArchivedActionEnum = {
    Archived: 'archived'
} as const;

export type WebhookProjectsV2ItemArchivedActionEnum = typeof WebhookProjectsV2ItemArchivedActionEnum[keyof typeof WebhookProjectsV2ItemArchivedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2ItemConverted
 */
export interface WebhookProjectsV2ItemConverted {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ItemConverted
     */
    'action': WebhookProjectsV2ItemConvertedActionEnum;
    /**
     * 
     * @type {WebhookProjectsV2ItemConvertedChanges}
     * @memberof WebhookProjectsV2ItemConverted
     */
    'changes': WebhookProjectsV2ItemConvertedChanges;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2ItemConverted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2ItemConverted
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2Item}
     * @memberof WebhookProjectsV2ItemConverted
     */
    'projects_v2_item': ProjectsV2Item;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2ItemConverted
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2ItemConvertedActionEnum = {
    Converted: 'converted'
} as const;

export type WebhookProjectsV2ItemConvertedActionEnum = typeof WebhookProjectsV2ItemConvertedActionEnum[keyof typeof WebhookProjectsV2ItemConvertedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2ItemConvertedChanges
 */
export interface WebhookProjectsV2ItemConvertedChanges {
    /**
     * 
     * @type {WebhookProjectsV2ItemConvertedChangesContentType}
     * @memberof WebhookProjectsV2ItemConvertedChanges
     */
    'content_type'?: WebhookProjectsV2ItemConvertedChangesContentType;
}
/**
 * 
 * @export
 * @interface WebhookProjectsV2ItemConvertedChangesContentType
 */
export interface WebhookProjectsV2ItemConvertedChangesContentType {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ItemConvertedChangesContentType
     */
    'from'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ItemConvertedChangesContentType
     */
    'to'?: string;
}
/**
 * 
 * @export
 * @interface WebhookProjectsV2ItemCreated
 */
export interface WebhookProjectsV2ItemCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ItemCreated
     */
    'action': WebhookProjectsV2ItemCreatedActionEnum;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2ItemCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2ItemCreated
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2Item}
     * @memberof WebhookProjectsV2ItemCreated
     */
    'projects_v2_item': ProjectsV2Item;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2ItemCreated
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2ItemCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookProjectsV2ItemCreatedActionEnum = typeof WebhookProjectsV2ItemCreatedActionEnum[keyof typeof WebhookProjectsV2ItemCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2ItemDeleted
 */
export interface WebhookProjectsV2ItemDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ItemDeleted
     */
    'action': WebhookProjectsV2ItemDeletedActionEnum;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2ItemDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2ItemDeleted
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2Item}
     * @memberof WebhookProjectsV2ItemDeleted
     */
    'projects_v2_item': ProjectsV2Item;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2ItemDeleted
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2ItemDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookProjectsV2ItemDeletedActionEnum = typeof WebhookProjectsV2ItemDeletedActionEnum[keyof typeof WebhookProjectsV2ItemDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2ItemEdited
 */
export interface WebhookProjectsV2ItemEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ItemEdited
     */
    'action': WebhookProjectsV2ItemEditedActionEnum;
    /**
     * 
     * @type {WebhookProjectsV2ItemEditedChanges}
     * @memberof WebhookProjectsV2ItemEdited
     */
    'changes'?: WebhookProjectsV2ItemEditedChanges;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2ItemEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2ItemEdited
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2Item}
     * @memberof WebhookProjectsV2ItemEdited
     */
    'projects_v2_item': ProjectsV2Item;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2ItemEdited
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2ItemEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookProjectsV2ItemEditedActionEnum = typeof WebhookProjectsV2ItemEditedActionEnum[keyof typeof WebhookProjectsV2ItemEditedActionEnum];

/**
 * @type WebhookProjectsV2ItemEditedChanges
 * The changes made to the item may involve modifications in the item\'s fields and draft issue body. It includes altered values for text, number, date, single select, and iteration fields, along with the GraphQL node ID of the changed field.
 * @export
 */
export type WebhookProjectsV2ItemEditedChanges = WebhookProjectsV2ItemEditedChangesOneOf | WebhookProjectsV2ItemEditedChangesOneOf1;

/**
 * 
 * @export
 * @interface WebhookProjectsV2ItemEditedChangesOneOf
 */
export interface WebhookProjectsV2ItemEditedChangesOneOf {
    /**
     * 
     * @type {WebhookProjectsV2ItemEditedChangesOneOfFieldValue}
     * @memberof WebhookProjectsV2ItemEditedChangesOneOf
     */
    'field_value': WebhookProjectsV2ItemEditedChangesOneOfFieldValue;
}
/**
 * 
 * @export
 * @interface WebhookProjectsV2ItemEditedChangesOneOf1
 */
export interface WebhookProjectsV2ItemEditedChangesOneOf1 {
    /**
     * 
     * @type {WebhookMemberEditedChangesPermission}
     * @memberof WebhookProjectsV2ItemEditedChangesOneOf1
     */
    'body': WebhookMemberEditedChangesPermission;
}
/**
 * 
 * @export
 * @interface WebhookProjectsV2ItemEditedChangesOneOfFieldValue
 */
export interface WebhookProjectsV2ItemEditedChangesOneOfFieldValue {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ItemEditedChangesOneOfFieldValue
     */
    'field_node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ItemEditedChangesOneOfFieldValue
     */
    'field_type'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ItemEditedChangesOneOfFieldValue
     */
    'field_name'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookProjectsV2ItemEditedChangesOneOfFieldValue
     */
    'project_number'?: number;
    /**
     * 
     * @type {WebhookProjectsV2ItemEditedChangesOneOfFieldValueFrom}
     * @memberof WebhookProjectsV2ItemEditedChangesOneOfFieldValue
     */
    'from'?: WebhookProjectsV2ItemEditedChangesOneOfFieldValueFrom | null;
    /**
     * 
     * @type {WebhookProjectsV2ItemEditedChangesOneOfFieldValueFrom}
     * @memberof WebhookProjectsV2ItemEditedChangesOneOfFieldValue
     */
    'to'?: WebhookProjectsV2ItemEditedChangesOneOfFieldValueFrom | null;
}
/**
 * @type WebhookProjectsV2ItemEditedChangesOneOfFieldValueFrom
 * @export
 */
export type WebhookProjectsV2ItemEditedChangesOneOfFieldValueFrom = ProjectsV2IterationSetting | ProjectsV2SingleSelectOption | number | string;

/**
 * 
 * @export
 * @interface WebhookProjectsV2ItemReordered
 */
export interface WebhookProjectsV2ItemReordered {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ItemReordered
     */
    'action': WebhookProjectsV2ItemReorderedActionEnum;
    /**
     * 
     * @type {WebhookProjectsV2ItemReorderedChanges}
     * @memberof WebhookProjectsV2ItemReordered
     */
    'changes': WebhookProjectsV2ItemReorderedChanges;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2ItemReordered
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2ItemReordered
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2Item}
     * @memberof WebhookProjectsV2ItemReordered
     */
    'projects_v2_item': ProjectsV2Item;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2ItemReordered
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2ItemReorderedActionEnum = {
    Reordered: 'reordered'
} as const;

export type WebhookProjectsV2ItemReorderedActionEnum = typeof WebhookProjectsV2ItemReorderedActionEnum[keyof typeof WebhookProjectsV2ItemReorderedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2ItemReorderedChanges
 */
export interface WebhookProjectsV2ItemReorderedChanges {
    /**
     * 
     * @type {WebhookMemberEditedChangesPermission}
     * @memberof WebhookProjectsV2ItemReorderedChanges
     */
    'previous_projects_v2_item_node_id'?: WebhookMemberEditedChangesPermission;
}
/**
 * 
 * @export
 * @interface WebhookProjectsV2ItemRestored
 */
export interface WebhookProjectsV2ItemRestored {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ItemRestored
     */
    'action': WebhookProjectsV2ItemRestoredActionEnum;
    /**
     * 
     * @type {WebhooksProjectChanges}
     * @memberof WebhookProjectsV2ItemRestored
     */
    'changes': WebhooksProjectChanges;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2ItemRestored
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2ItemRestored
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2Item}
     * @memberof WebhookProjectsV2ItemRestored
     */
    'projects_v2_item': ProjectsV2Item;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2ItemRestored
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2ItemRestoredActionEnum = {
    Restored: 'restored'
} as const;

export type WebhookProjectsV2ItemRestoredActionEnum = typeof WebhookProjectsV2ItemRestoredActionEnum[keyof typeof WebhookProjectsV2ItemRestoredActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2ProjectClosed
 */
export interface WebhookProjectsV2ProjectClosed {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ProjectClosed
     */
    'action': WebhookProjectsV2ProjectClosedActionEnum;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2ProjectClosed
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2ProjectClosed
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2}
     * @memberof WebhookProjectsV2ProjectClosed
     */
    'projects_v2': ProjectsV2;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2ProjectClosed
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2ProjectClosedActionEnum = {
    Closed: 'closed'
} as const;

export type WebhookProjectsV2ProjectClosedActionEnum = typeof WebhookProjectsV2ProjectClosedActionEnum[keyof typeof WebhookProjectsV2ProjectClosedActionEnum];

/**
 * A project was created
 * @export
 * @interface WebhookProjectsV2ProjectCreated
 */
export interface WebhookProjectsV2ProjectCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ProjectCreated
     */
    'action': WebhookProjectsV2ProjectCreatedActionEnum;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2ProjectCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2ProjectCreated
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2}
     * @memberof WebhookProjectsV2ProjectCreated
     */
    'projects_v2': ProjectsV2;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2ProjectCreated
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2ProjectCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookProjectsV2ProjectCreatedActionEnum = typeof WebhookProjectsV2ProjectCreatedActionEnum[keyof typeof WebhookProjectsV2ProjectCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2ProjectDeleted
 */
export interface WebhookProjectsV2ProjectDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ProjectDeleted
     */
    'action': WebhookProjectsV2ProjectDeletedActionEnum;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2ProjectDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2ProjectDeleted
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2}
     * @memberof WebhookProjectsV2ProjectDeleted
     */
    'projects_v2': ProjectsV2;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2ProjectDeleted
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2ProjectDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookProjectsV2ProjectDeletedActionEnum = typeof WebhookProjectsV2ProjectDeletedActionEnum[keyof typeof WebhookProjectsV2ProjectDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2ProjectEdited
 */
export interface WebhookProjectsV2ProjectEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ProjectEdited
     */
    'action': WebhookProjectsV2ProjectEditedActionEnum;
    /**
     * 
     * @type {WebhookProjectsV2ProjectEditedChanges}
     * @memberof WebhookProjectsV2ProjectEdited
     */
    'changes': WebhookProjectsV2ProjectEditedChanges;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2ProjectEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2ProjectEdited
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2}
     * @memberof WebhookProjectsV2ProjectEdited
     */
    'projects_v2': ProjectsV2;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2ProjectEdited
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2ProjectEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookProjectsV2ProjectEditedActionEnum = typeof WebhookProjectsV2ProjectEditedActionEnum[keyof typeof WebhookProjectsV2ProjectEditedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2ProjectEditedChanges
 */
export interface WebhookProjectsV2ProjectEditedChanges {
    /**
     * 
     * @type {WebhookMemberEditedChangesPermission}
     * @memberof WebhookProjectsV2ProjectEditedChanges
     */
    'description'?: WebhookMemberEditedChangesPermission;
    /**
     * 
     * @type {WebhookProjectsV2ProjectEditedChangesPublic}
     * @memberof WebhookProjectsV2ProjectEditedChanges
     */
    'public'?: WebhookProjectsV2ProjectEditedChangesPublic;
    /**
     * 
     * @type {WebhookMemberEditedChangesPermission}
     * @memberof WebhookProjectsV2ProjectEditedChanges
     */
    'short_description'?: WebhookMemberEditedChangesPermission;
    /**
     * 
     * @type {WebhookProjectsV2ProjectEditedChangesTitle}
     * @memberof WebhookProjectsV2ProjectEditedChanges
     */
    'title'?: WebhookProjectsV2ProjectEditedChangesTitle;
}
/**
 * 
 * @export
 * @interface WebhookProjectsV2ProjectEditedChangesPublic
 */
export interface WebhookProjectsV2ProjectEditedChangesPublic {
    /**
     * 
     * @type {boolean}
     * @memberof WebhookProjectsV2ProjectEditedChangesPublic
     */
    'from'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookProjectsV2ProjectEditedChangesPublic
     */
    'to'?: boolean;
}
/**
 * 
 * @export
 * @interface WebhookProjectsV2ProjectEditedChangesTitle
 */
export interface WebhookProjectsV2ProjectEditedChangesTitle {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ProjectEditedChangesTitle
     */
    'from'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ProjectEditedChangesTitle
     */
    'to'?: string;
}
/**
 * 
 * @export
 * @interface WebhookProjectsV2ProjectReopened
 */
export interface WebhookProjectsV2ProjectReopened {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2ProjectReopened
     */
    'action': WebhookProjectsV2ProjectReopenedActionEnum;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2ProjectReopened
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2ProjectReopened
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2}
     * @memberof WebhookProjectsV2ProjectReopened
     */
    'projects_v2': ProjectsV2;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2ProjectReopened
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2ProjectReopenedActionEnum = {
    Reopened: 'reopened'
} as const;

export type WebhookProjectsV2ProjectReopenedActionEnum = typeof WebhookProjectsV2ProjectReopenedActionEnum[keyof typeof WebhookProjectsV2ProjectReopenedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2StatusUpdateCreated
 */
export interface WebhookProjectsV2StatusUpdateCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2StatusUpdateCreated
     */
    'action': WebhookProjectsV2StatusUpdateCreatedActionEnum;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2StatusUpdateCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2StatusUpdateCreated
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2StatusUpdate}
     * @memberof WebhookProjectsV2StatusUpdateCreated
     */
    'projects_v2_status_update': ProjectsV2StatusUpdate;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2StatusUpdateCreated
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2StatusUpdateCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookProjectsV2StatusUpdateCreatedActionEnum = typeof WebhookProjectsV2StatusUpdateCreatedActionEnum[keyof typeof WebhookProjectsV2StatusUpdateCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2StatusUpdateDeleted
 */
export interface WebhookProjectsV2StatusUpdateDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2StatusUpdateDeleted
     */
    'action': WebhookProjectsV2StatusUpdateDeletedActionEnum;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2StatusUpdateDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2StatusUpdateDeleted
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2StatusUpdate}
     * @memberof WebhookProjectsV2StatusUpdateDeleted
     */
    'projects_v2_status_update': ProjectsV2StatusUpdate;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2StatusUpdateDeleted
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2StatusUpdateDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookProjectsV2StatusUpdateDeletedActionEnum = typeof WebhookProjectsV2StatusUpdateDeletedActionEnum[keyof typeof WebhookProjectsV2StatusUpdateDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2StatusUpdateEdited
 */
export interface WebhookProjectsV2StatusUpdateEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2StatusUpdateEdited
     */
    'action': WebhookProjectsV2StatusUpdateEditedActionEnum;
    /**
     * 
     * @type {WebhookProjectsV2StatusUpdateEditedChanges}
     * @memberof WebhookProjectsV2StatusUpdateEdited
     */
    'changes'?: WebhookProjectsV2StatusUpdateEditedChanges;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookProjectsV2StatusUpdateEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookProjectsV2StatusUpdateEdited
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {ProjectsV2StatusUpdate}
     * @memberof WebhookProjectsV2StatusUpdateEdited
     */
    'projects_v2_status_update': ProjectsV2StatusUpdate;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookProjectsV2StatusUpdateEdited
     */
    'sender': SimpleUser;
}

export const WebhookProjectsV2StatusUpdateEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookProjectsV2StatusUpdateEditedActionEnum = typeof WebhookProjectsV2StatusUpdateEditedActionEnum[keyof typeof WebhookProjectsV2StatusUpdateEditedActionEnum];

/**
 * 
 * @export
 * @interface WebhookProjectsV2StatusUpdateEditedChanges
 */
export interface WebhookProjectsV2StatusUpdateEditedChanges {
    /**
     * 
     * @type {WebhookMemberEditedChangesPermission}
     * @memberof WebhookProjectsV2StatusUpdateEditedChanges
     */
    'body'?: WebhookMemberEditedChangesPermission;
    /**
     * 
     * @type {WebhookProjectsV2StatusUpdateEditedChangesStatus}
     * @memberof WebhookProjectsV2StatusUpdateEditedChanges
     */
    'status'?: WebhookProjectsV2StatusUpdateEditedChangesStatus;
    /**
     * 
     * @type {WebhookProjectsV2StatusUpdateEditedChangesStartDate}
     * @memberof WebhookProjectsV2StatusUpdateEditedChanges
     */
    'start_date'?: WebhookProjectsV2StatusUpdateEditedChangesStartDate;
    /**
     * 
     * @type {WebhookProjectsV2StatusUpdateEditedChangesStartDate}
     * @memberof WebhookProjectsV2StatusUpdateEditedChanges
     */
    'target_date'?: WebhookProjectsV2StatusUpdateEditedChangesStartDate;
}
/**
 * 
 * @export
 * @interface WebhookProjectsV2StatusUpdateEditedChangesStartDate
 */
export interface WebhookProjectsV2StatusUpdateEditedChangesStartDate {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2StatusUpdateEditedChangesStartDate
     */
    'from'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2StatusUpdateEditedChangesStartDate
     */
    'to'?: string | null;
}
/**
 * 
 * @export
 * @interface WebhookProjectsV2StatusUpdateEditedChangesStatus
 */
export interface WebhookProjectsV2StatusUpdateEditedChangesStatus {
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2StatusUpdateEditedChangesStatus
     */
    'from'?: WebhookProjectsV2StatusUpdateEditedChangesStatusFromEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookProjectsV2StatusUpdateEditedChangesStatus
     */
    'to'?: WebhookProjectsV2StatusUpdateEditedChangesStatusToEnum | null;
}

export const WebhookProjectsV2StatusUpdateEditedChangesStatusFromEnum = {
    Inactive: 'INACTIVE',
    OnTrack: 'ON_TRACK',
    AtRisk: 'AT_RISK',
    OffTrack: 'OFF_TRACK',
    Complete: 'COMPLETE'
} as const;

export type WebhookProjectsV2StatusUpdateEditedChangesStatusFromEnum = typeof WebhookProjectsV2StatusUpdateEditedChangesStatusFromEnum[keyof typeof WebhookProjectsV2StatusUpdateEditedChangesStatusFromEnum];
export const WebhookProjectsV2StatusUpdateEditedChangesStatusToEnum = {
    Inactive: 'INACTIVE',
    OnTrack: 'ON_TRACK',
    AtRisk: 'AT_RISK',
    OffTrack: 'OFF_TRACK',
    Complete: 'COMPLETE'
} as const;

export type WebhookProjectsV2StatusUpdateEditedChangesStatusToEnum = typeof WebhookProjectsV2StatusUpdateEditedChangesStatusToEnum[keyof typeof WebhookProjectsV2StatusUpdateEditedChangesStatusToEnum];

/**
 * 
 * @export
 * @interface WebhookPublic
 */
export interface WebhookPublic {
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPublic
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPublic
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPublic
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPublic
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPublic
     */
    'sender': SimpleUser;
}
/**
 * 
 * @export
 * @interface WebhookPullRequestAssigned
 */
export interface WebhookPullRequestAssigned {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestAssigned
     */
    'action': WebhookPullRequestAssignedActionEnum;
    /**
     * 
     * @type {WebhooksUser}
     * @memberof WebhookPullRequestAssigned
     */
    'assignee': WebhooksUser | null;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestAssigned
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestAssigned
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestAssigned
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestAssigned
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest}
     * @memberof WebhookPullRequestAssigned
     */
    'pull_request': PullRequest;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestAssigned
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestAssigned
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestAssignedActionEnum = {
    Assigned: 'assigned'
} as const;

export type WebhookPullRequestAssignedActionEnum = typeof WebhookPullRequestAssignedActionEnum[keyof typeof WebhookPullRequestAssignedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestAutoMergeDisabled
 */
export interface WebhookPullRequestAutoMergeDisabled {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestAutoMergeDisabled
     */
    'action': WebhookPullRequestAutoMergeDisabledActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestAutoMergeDisabled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestAutoMergeDisabled
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {number}
     * @memberof WebhookPullRequestAutoMergeDisabled
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestAutoMergeDisabled
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest1}
     * @memberof WebhookPullRequestAutoMergeDisabled
     */
    'pull_request': PullRequest1;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestAutoMergeDisabled
     */
    'reason': string;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestAutoMergeDisabled
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestAutoMergeDisabled
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestAutoMergeDisabledActionEnum = {
    AutoMergeDisabled: 'auto_merge_disabled'
} as const;

export type WebhookPullRequestAutoMergeDisabledActionEnum = typeof WebhookPullRequestAutoMergeDisabledActionEnum[keyof typeof WebhookPullRequestAutoMergeDisabledActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestAutoMergeEnabled
 */
export interface WebhookPullRequestAutoMergeEnabled {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestAutoMergeEnabled
     */
    'action': WebhookPullRequestAutoMergeEnabledActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestAutoMergeEnabled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestAutoMergeEnabled
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {number}
     * @memberof WebhookPullRequestAutoMergeEnabled
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestAutoMergeEnabled
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest2}
     * @memberof WebhookPullRequestAutoMergeEnabled
     */
    'pull_request': PullRequest2;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestAutoMergeEnabled
     */
    'reason'?: string;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestAutoMergeEnabled
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestAutoMergeEnabled
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestAutoMergeEnabledActionEnum = {
    AutoMergeEnabled: 'auto_merge_enabled'
} as const;

export type WebhookPullRequestAutoMergeEnabledActionEnum = typeof WebhookPullRequestAutoMergeEnabledActionEnum[keyof typeof WebhookPullRequestAutoMergeEnabledActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestClosed
 */
export interface WebhookPullRequestClosed {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestClosed
     */
    'action': WebhookPullRequestClosedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestClosed
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestClosed
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestClosed
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestClosed
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequestWebhook}
     * @memberof WebhookPullRequestClosed
     */
    'pull_request': PullRequestWebhook;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestClosed
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestClosed
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestClosedActionEnum = {
    Closed: 'closed'
} as const;

export type WebhookPullRequestClosedActionEnum = typeof WebhookPullRequestClosedActionEnum[keyof typeof WebhookPullRequestClosedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestConvertedToDraft
 */
export interface WebhookPullRequestConvertedToDraft {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestConvertedToDraft
     */
    'action': WebhookPullRequestConvertedToDraftActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestConvertedToDraft
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestConvertedToDraft
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestConvertedToDraft
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestConvertedToDraft
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequestWebhook}
     * @memberof WebhookPullRequestConvertedToDraft
     */
    'pull_request': PullRequestWebhook;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestConvertedToDraft
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestConvertedToDraft
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestConvertedToDraftActionEnum = {
    ConvertedToDraft: 'converted_to_draft'
} as const;

export type WebhookPullRequestConvertedToDraftActionEnum = typeof WebhookPullRequestConvertedToDraftActionEnum[keyof typeof WebhookPullRequestConvertedToDraftActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestDemilestoned
 */
export interface WebhookPullRequestDemilestoned {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestDemilestoned
     */
    'action': WebhookPullRequestDemilestonedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestDemilestoned
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {Milestone}
     * @memberof WebhookPullRequestDemilestoned
     */
    'milestone'?: Milestone;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestDemilestoned
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestDemilestoned
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksPullRequest5}
     * @memberof WebhookPullRequestDemilestoned
     */
    'pull_request': WebhooksPullRequest5;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestDemilestoned
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestDemilestoned
     */
    'sender'?: SimpleUser;
}

export const WebhookPullRequestDemilestonedActionEnum = {
    Demilestoned: 'demilestoned'
} as const;

export type WebhookPullRequestDemilestonedActionEnum = typeof WebhookPullRequestDemilestonedActionEnum[keyof typeof WebhookPullRequestDemilestonedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestDequeued
 */
export interface WebhookPullRequestDequeued {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestDequeued
     */
    'action': WebhookPullRequestDequeuedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestDequeued
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestDequeued
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {number}
     * @memberof WebhookPullRequestDequeued
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestDequeued
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest3}
     * @memberof WebhookPullRequestDequeued
     */
    'pull_request': PullRequest3;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestDequeued
     */
    'reason': WebhookPullRequestDequeuedReasonEnum;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestDequeued
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestDequeued
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestDequeuedActionEnum = {
    Dequeued: 'dequeued'
} as const;

export type WebhookPullRequestDequeuedActionEnum = typeof WebhookPullRequestDequeuedActionEnum[keyof typeof WebhookPullRequestDequeuedActionEnum];
export const WebhookPullRequestDequeuedReasonEnum = {
    UnknownRemovalReason: 'UNKNOWN_REMOVAL_REASON',
    Manual: 'MANUAL',
    Merge: 'MERGE',
    MergeConflict: 'MERGE_CONFLICT',
    CiFailure: 'CI_FAILURE',
    CiTimeout: 'CI_TIMEOUT',
    AlreadyMerged: 'ALREADY_MERGED',
    QueueCleared: 'QUEUE_CLEARED',
    RollBack: 'ROLL_BACK',
    BranchProtections: 'BRANCH_PROTECTIONS',
    GitTreeInvalid: 'GIT_TREE_INVALID',
    InvalidMergeCommit: 'INVALID_MERGE_COMMIT'
} as const;

export type WebhookPullRequestDequeuedReasonEnum = typeof WebhookPullRequestDequeuedReasonEnum[keyof typeof WebhookPullRequestDequeuedReasonEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestEdited
 */
export interface WebhookPullRequestEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestEdited
     */
    'action': WebhookPullRequestEditedActionEnum;
    /**
     * 
     * @type {WebhookPullRequestEditedChanges}
     * @memberof WebhookPullRequestEdited
     */
    'changes': WebhookPullRequestEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestEdited
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequestWebhook}
     * @memberof WebhookPullRequestEdited
     */
    'pull_request': PullRequestWebhook;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestEdited
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestEdited
     */
    'sender'?: SimpleUser;
}

export const WebhookPullRequestEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookPullRequestEditedActionEnum = typeof WebhookPullRequestEditedActionEnum[keyof typeof WebhookPullRequestEditedActionEnum];

/**
 * The changes to the comment if the action was `edited`.
 * @export
 * @interface WebhookPullRequestEditedChanges
 */
export interface WebhookPullRequestEditedChanges {
    /**
     * 
     * @type {WebhookPullRequestEditedChangesBase}
     * @memberof WebhookPullRequestEditedChanges
     */
    'base'?: WebhookPullRequestEditedChangesBase;
    /**
     * 
     * @type {WebhookProjectEditedChangesBody}
     * @memberof WebhookPullRequestEditedChanges
     */
    'body'?: WebhookProjectEditedChangesBody;
    /**
     * 
     * @type {WebhookMilestoneEditedChangesTitle}
     * @memberof WebhookPullRequestEditedChanges
     */
    'title'?: WebhookMilestoneEditedChangesTitle;
}
/**
 * 
 * @export
 * @interface WebhookPullRequestEditedChangesBase
 */
export interface WebhookPullRequestEditedChangesBase {
    /**
     * 
     * @type {WebhookDiscussionCommentEditedChangesBody}
     * @memberof WebhookPullRequestEditedChangesBase
     */
    'ref': WebhookDiscussionCommentEditedChangesBody;
    /**
     * 
     * @type {WebhookDiscussionCommentEditedChangesBody}
     * @memberof WebhookPullRequestEditedChangesBase
     */
    'sha': WebhookDiscussionCommentEditedChangesBody;
}
/**
 * 
 * @export
 * @interface WebhookPullRequestEnqueued
 */
export interface WebhookPullRequestEnqueued {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestEnqueued
     */
    'action': WebhookPullRequestEnqueuedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestEnqueued
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestEnqueued
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {number}
     * @memberof WebhookPullRequestEnqueued
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestEnqueued
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest3}
     * @memberof WebhookPullRequestEnqueued
     */
    'pull_request': PullRequest3;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestEnqueued
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestEnqueued
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestEnqueuedActionEnum = {
    Enqueued: 'enqueued'
} as const;

export type WebhookPullRequestEnqueuedActionEnum = typeof WebhookPullRequestEnqueuedActionEnum[keyof typeof WebhookPullRequestEnqueuedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestLabeled
 */
export interface WebhookPullRequestLabeled {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestLabeled
     */
    'action': WebhookPullRequestLabeledActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestLabeled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestLabeled
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksLabel}
     * @memberof WebhookPullRequestLabeled
     */
    'label'?: WebhooksLabel;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestLabeled
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestLabeled
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest4}
     * @memberof WebhookPullRequestLabeled
     */
    'pull_request': PullRequest4;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestLabeled
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestLabeled
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestLabeledActionEnum = {
    Labeled: 'labeled'
} as const;

export type WebhookPullRequestLabeledActionEnum = typeof WebhookPullRequestLabeledActionEnum[keyof typeof WebhookPullRequestLabeledActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestLocked
 */
export interface WebhookPullRequestLocked {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestLocked
     */
    'action': WebhookPullRequestLockedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestLocked
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestLocked
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestLocked
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestLocked
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest5}
     * @memberof WebhookPullRequestLocked
     */
    'pull_request': PullRequest5;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestLocked
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestLocked
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestLockedActionEnum = {
    Locked: 'locked'
} as const;

export type WebhookPullRequestLockedActionEnum = typeof WebhookPullRequestLockedActionEnum[keyof typeof WebhookPullRequestLockedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestMilestoned
 */
export interface WebhookPullRequestMilestoned {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestMilestoned
     */
    'action': WebhookPullRequestMilestonedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestMilestoned
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {Milestone}
     * @memberof WebhookPullRequestMilestoned
     */
    'milestone'?: Milestone;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestMilestoned
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestMilestoned
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksPullRequest5}
     * @memberof WebhookPullRequestMilestoned
     */
    'pull_request': WebhooksPullRequest5;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestMilestoned
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestMilestoned
     */
    'sender'?: SimpleUser;
}

export const WebhookPullRequestMilestonedActionEnum = {
    Milestoned: 'milestoned'
} as const;

export type WebhookPullRequestMilestonedActionEnum = typeof WebhookPullRequestMilestonedActionEnum[keyof typeof WebhookPullRequestMilestonedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestOpened
 */
export interface WebhookPullRequestOpened {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestOpened
     */
    'action': WebhookPullRequestOpenedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestOpened
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestOpened
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestOpened
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestOpened
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequestWebhook}
     * @memberof WebhookPullRequestOpened
     */
    'pull_request': PullRequestWebhook;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestOpened
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestOpened
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestOpenedActionEnum = {
    Opened: 'opened'
} as const;

export type WebhookPullRequestOpenedActionEnum = typeof WebhookPullRequestOpenedActionEnum[keyof typeof WebhookPullRequestOpenedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReadyForReview
 */
export interface WebhookPullRequestReadyForReview {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReadyForReview
     */
    'action': WebhookPullRequestReadyForReviewActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReadyForReview
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReadyForReview
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestReadyForReview
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReadyForReview
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequestWebhook}
     * @memberof WebhookPullRequestReadyForReview
     */
    'pull_request': PullRequestWebhook;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReadyForReview
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReadyForReview
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestReadyForReviewActionEnum = {
    ReadyForReview: 'ready_for_review'
} as const;

export type WebhookPullRequestReadyForReviewActionEnum = typeof WebhookPullRequestReadyForReviewActionEnum[keyof typeof WebhookPullRequestReadyForReviewActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReopened
 */
export interface WebhookPullRequestReopened {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReopened
     */
    'action': WebhookPullRequestReopenedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReopened
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReopened
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestReopened
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReopened
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequestWebhook}
     * @memberof WebhookPullRequestReopened
     */
    'pull_request': PullRequestWebhook;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReopened
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReopened
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestReopenedActionEnum = {
    Reopened: 'reopened'
} as const;

export type WebhookPullRequestReopenedActionEnum = typeof WebhookPullRequestReopenedActionEnum[keyof typeof WebhookPullRequestReopenedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewCommentCreated
 */
export interface WebhookPullRequestReviewCommentCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreated
     */
    'action': WebhookPullRequestReviewCommentCreatedActionEnum;
    /**
     * 
     * @type {PullRequestReviewComment}
     * @memberof WebhookPullRequestReviewCommentCreated
     */
    'comment': PullRequestReviewComment;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReviewCommentCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReviewCommentCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReviewCommentCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhookPullRequestReviewCommentCreatedPullRequest}
     * @memberof WebhookPullRequestReviewCommentCreated
     */
    'pull_request': WebhookPullRequestReviewCommentCreatedPullRequest;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReviewCommentCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReviewCommentCreated
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestReviewCommentCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookPullRequestReviewCommentCreatedActionEnum = typeof WebhookPullRequestReviewCommentCreatedActionEnum[keyof typeof WebhookPullRequestReviewCommentCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewCommentCreatedPullRequest
 */
export interface WebhookPullRequestReviewCommentCreatedPullRequest {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'active_lock_reason': WebhookPullRequestReviewCommentCreatedPullRequestActiveLockReasonEnum | null;
    /**
     * 
     * @type {User4}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'author_association': WebhookPullRequestReviewCommentCreatedPullRequestAuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'auto_merge'?: PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'closed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'diff_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'draft'?: boolean;
    /**
     * 
     * @type {WebhookPullRequestReviewCommentCreatedPullRequestHead}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'head': WebhookPullRequestReviewCommentCreatedPullRequestHead;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'locked': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'merged_at': string | null;
    /**
     * 
     * @type {Milestone}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'patch_url': string;
    /**
     * 
     * @type {Array<PullRequestRequestedReviewersInner>}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'requested_reviewers': Array<PullRequestRequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'review_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'review_comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'state': WebhookPullRequestReviewCommentCreatedPullRequestStateEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequest
     */
    'user': User3 | null;
}

export const WebhookPullRequestReviewCommentCreatedPullRequestActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type WebhookPullRequestReviewCommentCreatedPullRequestActiveLockReasonEnum = typeof WebhookPullRequestReviewCommentCreatedPullRequestActiveLockReasonEnum[keyof typeof WebhookPullRequestReviewCommentCreatedPullRequestActiveLockReasonEnum];
export const WebhookPullRequestReviewCommentCreatedPullRequestAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type WebhookPullRequestReviewCommentCreatedPullRequestAuthorAssociationEnum = typeof WebhookPullRequestReviewCommentCreatedPullRequestAuthorAssociationEnum[keyof typeof WebhookPullRequestReviewCommentCreatedPullRequestAuthorAssociationEnum];
export const WebhookPullRequestReviewCommentCreatedPullRequestStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type WebhookPullRequestReviewCommentCreatedPullRequestStateEnum = typeof WebhookPullRequestReviewCommentCreatedPullRequestStateEnum[keyof typeof WebhookPullRequestReviewCommentCreatedPullRequestStateEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewCommentCreatedPullRequestHead
 */
export interface WebhookPullRequestReviewCommentCreatedPullRequestHead {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequestHead
     */
    'label': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequestHead
     */
    'ref': string;
    /**
     * 
     * @type {Repository7}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequestHead
     */
    'repo': Repository7 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequestHead
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof WebhookPullRequestReviewCommentCreatedPullRequestHead
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface WebhookPullRequestReviewCommentDeleted
 */
export interface WebhookPullRequestReviewCommentDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeleted
     */
    'action': WebhookPullRequestReviewCommentDeletedActionEnum;
    /**
     * 
     * @type {WebhooksReviewComment}
     * @memberof WebhookPullRequestReviewCommentDeleted
     */
    'comment': WebhooksReviewComment;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReviewCommentDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReviewCommentDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReviewCommentDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhookPullRequestReviewCommentDeletedPullRequest}
     * @memberof WebhookPullRequestReviewCommentDeleted
     */
    'pull_request': WebhookPullRequestReviewCommentDeletedPullRequest;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReviewCommentDeleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReviewCommentDeleted
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestReviewCommentDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookPullRequestReviewCommentDeletedActionEnum = typeof WebhookPullRequestReviewCommentDeletedActionEnum[keyof typeof WebhookPullRequestReviewCommentDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewCommentDeletedPullRequest
 */
export interface WebhookPullRequestReviewCommentDeletedPullRequest {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'active_lock_reason': WebhookPullRequestReviewCommentDeletedPullRequestActiveLockReasonEnum | null;
    /**
     * 
     * @type {User2}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'assignee': User2 | null;
    /**
     * 
     * @type {Array<User>}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'assignees': Array<User>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'author_association': WebhookPullRequestReviewCommentDeletedPullRequestAuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'auto_merge'?: PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'closed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'diff_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'draft'?: boolean;
    /**
     * 
     * @type {WebhookPullRequestReviewCommentDeletedPullRequestHead}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'head': WebhookPullRequestReviewCommentDeletedPullRequestHead;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'locked': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'merged_at': string | null;
    /**
     * 
     * @type {Milestone1}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'patch_url': string;
    /**
     * 
     * @type {Array<PullRequest3RequestedReviewersInner>}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'requested_reviewers': Array<PullRequest3RequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'review_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'review_comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'state': WebhookPullRequestReviewCommentDeletedPullRequestStateEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequest
     */
    'user': User3 | null;
}

export const WebhookPullRequestReviewCommentDeletedPullRequestActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type WebhookPullRequestReviewCommentDeletedPullRequestActiveLockReasonEnum = typeof WebhookPullRequestReviewCommentDeletedPullRequestActiveLockReasonEnum[keyof typeof WebhookPullRequestReviewCommentDeletedPullRequestActiveLockReasonEnum];
export const WebhookPullRequestReviewCommentDeletedPullRequestAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type WebhookPullRequestReviewCommentDeletedPullRequestAuthorAssociationEnum = typeof WebhookPullRequestReviewCommentDeletedPullRequestAuthorAssociationEnum[keyof typeof WebhookPullRequestReviewCommentDeletedPullRequestAuthorAssociationEnum];
export const WebhookPullRequestReviewCommentDeletedPullRequestStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type WebhookPullRequestReviewCommentDeletedPullRequestStateEnum = typeof WebhookPullRequestReviewCommentDeletedPullRequestStateEnum[keyof typeof WebhookPullRequestReviewCommentDeletedPullRequestStateEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewCommentDeletedPullRequestHead
 */
export interface WebhookPullRequestReviewCommentDeletedPullRequestHead {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequestHead
     */
    'label': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequestHead
     */
    'ref': string;
    /**
     * 
     * @type {Repository4}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequestHead
     */
    'repo': Repository4 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequestHead
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof WebhookPullRequestReviewCommentDeletedPullRequestHead
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface WebhookPullRequestReviewCommentEdited
 */
export interface WebhookPullRequestReviewCommentEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEdited
     */
    'action': WebhookPullRequestReviewCommentEditedActionEnum;
    /**
     * 
     * @type {WebhooksChanges}
     * @memberof WebhookPullRequestReviewCommentEdited
     */
    'changes': WebhooksChanges;
    /**
     * 
     * @type {WebhooksReviewComment}
     * @memberof WebhookPullRequestReviewCommentEdited
     */
    'comment': WebhooksReviewComment;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReviewCommentEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReviewCommentEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReviewCommentEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhookPullRequestReviewCommentEditedPullRequest}
     * @memberof WebhookPullRequestReviewCommentEdited
     */
    'pull_request': WebhookPullRequestReviewCommentEditedPullRequest;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReviewCommentEdited
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReviewCommentEdited
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestReviewCommentEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookPullRequestReviewCommentEditedActionEnum = typeof WebhookPullRequestReviewCommentEditedActionEnum[keyof typeof WebhookPullRequestReviewCommentEditedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewCommentEditedPullRequest
 */
export interface WebhookPullRequestReviewCommentEditedPullRequest {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'active_lock_reason': WebhookPullRequestReviewCommentEditedPullRequestActiveLockReasonEnum | null;
    /**
     * 
     * @type {User2}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'assignee': User2 | null;
    /**
     * 
     * @type {Array<User2>}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'assignees': Array<User2>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'author_association': WebhookPullRequestReviewCommentEditedPullRequestAuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'auto_merge'?: PullRequestAutoMerge | null;
    /**
     * 
     * @type {PullRequestBase}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'base': PullRequestBase;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'closed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'diff_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'draft'?: boolean;
    /**
     * 
     * @type {WebhookPullRequestReviewCommentDeletedPullRequestHead}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'head': WebhookPullRequestReviewCommentDeletedPullRequestHead;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'locked': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'merged_at': string | null;
    /**
     * 
     * @type {Milestone}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'patch_url': string;
    /**
     * 
     * @type {Array<PullRequest3RequestedReviewersInner>}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'requested_reviewers': Array<PullRequest3RequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'review_comment_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'review_comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'state': WebhookPullRequestReviewCommentEditedPullRequestStateEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'statuses_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'url': string;
    /**
     * 
     * @type {User7}
     * @memberof WebhookPullRequestReviewCommentEditedPullRequest
     */
    'user': User7 | null;
}

export const WebhookPullRequestReviewCommentEditedPullRequestActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type WebhookPullRequestReviewCommentEditedPullRequestActiveLockReasonEnum = typeof WebhookPullRequestReviewCommentEditedPullRequestActiveLockReasonEnum[keyof typeof WebhookPullRequestReviewCommentEditedPullRequestActiveLockReasonEnum];
export const WebhookPullRequestReviewCommentEditedPullRequestAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type WebhookPullRequestReviewCommentEditedPullRequestAuthorAssociationEnum = typeof WebhookPullRequestReviewCommentEditedPullRequestAuthorAssociationEnum[keyof typeof WebhookPullRequestReviewCommentEditedPullRequestAuthorAssociationEnum];
export const WebhookPullRequestReviewCommentEditedPullRequestStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type WebhookPullRequestReviewCommentEditedPullRequestStateEnum = typeof WebhookPullRequestReviewCommentEditedPullRequestStateEnum[keyof typeof WebhookPullRequestReviewCommentEditedPullRequestStateEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewDismissed
 */
export interface WebhookPullRequestReviewDismissed {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewDismissed
     */
    'action': WebhookPullRequestReviewDismissedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReviewDismissed
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReviewDismissed
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReviewDismissed
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimplePullRequest}
     * @memberof WebhookPullRequestReviewDismissed
     */
    'pull_request': SimplePullRequest;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReviewDismissed
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {WebhookPullRequestReviewDismissedReview}
     * @memberof WebhookPullRequestReviewDismissed
     */
    'review': WebhookPullRequestReviewDismissedReview;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReviewDismissed
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestReviewDismissedActionEnum = {
    Dismissed: 'dismissed'
} as const;

export type WebhookPullRequestReviewDismissedActionEnum = typeof WebhookPullRequestReviewDismissedActionEnum[keyof typeof WebhookPullRequestReviewDismissedActionEnum];

/**
 * The review that was affected.
 * @export
 * @interface WebhookPullRequestReviewDismissedReview
 */
export interface WebhookPullRequestReviewDismissedReview {
    /**
     * 
     * @type {WebhooksReviewLinks}
     * @memberof WebhookPullRequestReviewDismissedReview
     */
    '_links': WebhooksReviewLinks;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof WebhookPullRequestReviewDismissedReview
     */
    'author_association': WebhookPullRequestReviewDismissedReviewAuthorAssociationEnum;
    /**
     * The text of the review.
     * @type {string}
     * @memberof WebhookPullRequestReviewDismissedReview
     */
    'body': string | null;
    /**
     * A commit SHA for the review.
     * @type {string}
     * @memberof WebhookPullRequestReviewDismissedReview
     */
    'commit_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewDismissedReview
     */
    'html_url': string;
    /**
     * Unique identifier of the review
     * @type {number}
     * @memberof WebhookPullRequestReviewDismissedReview
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewDismissedReview
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewDismissedReview
     */
    'pull_request_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewDismissedReview
     */
    'state': WebhookPullRequestReviewDismissedReviewStateEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewDismissedReview
     */
    'submitted_at': string;
    /**
     * 
     * @type {User3}
     * @memberof WebhookPullRequestReviewDismissedReview
     */
    'user': User3 | null;
}

export const WebhookPullRequestReviewDismissedReviewAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type WebhookPullRequestReviewDismissedReviewAuthorAssociationEnum = typeof WebhookPullRequestReviewDismissedReviewAuthorAssociationEnum[keyof typeof WebhookPullRequestReviewDismissedReviewAuthorAssociationEnum];
export const WebhookPullRequestReviewDismissedReviewStateEnum = {
    Dismissed: 'dismissed',
    Approved: 'approved',
    ChangesRequested: 'changes_requested'
} as const;

export type WebhookPullRequestReviewDismissedReviewStateEnum = typeof WebhookPullRequestReviewDismissedReviewStateEnum[keyof typeof WebhookPullRequestReviewDismissedReviewStateEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewEdited
 */
export interface WebhookPullRequestReviewEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewEdited
     */
    'action': WebhookPullRequestReviewEditedActionEnum;
    /**
     * 
     * @type {WebhookPullRequestReviewEditedChanges}
     * @memberof WebhookPullRequestReviewEdited
     */
    'changes': WebhookPullRequestReviewEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReviewEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReviewEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReviewEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimplePullRequest1}
     * @memberof WebhookPullRequestReviewEdited
     */
    'pull_request': SimplePullRequest1;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReviewEdited
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {WebhooksReview}
     * @memberof WebhookPullRequestReviewEdited
     */
    'review': WebhooksReview;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReviewEdited
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestReviewEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookPullRequestReviewEditedActionEnum = typeof WebhookPullRequestReviewEditedActionEnum[keyof typeof WebhookPullRequestReviewEditedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewEditedChanges
 */
export interface WebhookPullRequestReviewEditedChanges {
    /**
     * 
     * @type {WebhookProjectEditedChangesBody}
     * @memberof WebhookPullRequestReviewEditedChanges
     */
    'body'?: WebhookProjectEditedChangesBody;
}
/**
 * @type WebhookPullRequestReviewRequestRemoved
 * @export
 */
export type WebhookPullRequestReviewRequestRemoved = WebhookPullRequestReviewRequestRemovedOneOf | WebhookPullRequestReviewRequestRemovedOneOf1;

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewRequestRemovedOneOf
 */
export interface WebhookPullRequestReviewRequestRemovedOneOf {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf
     */
    'action': WebhookPullRequestReviewRequestRemovedOneOfActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest6}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf
     */
    'pull_request': PullRequest6;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {User2}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf
     */
    'requested_reviewer': User2 | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestReviewRequestRemovedOneOfActionEnum = {
    ReviewRequestRemoved: 'review_request_removed'
} as const;

export type WebhookPullRequestReviewRequestRemovedOneOfActionEnum = typeof WebhookPullRequestReviewRequestRemovedOneOfActionEnum[keyof typeof WebhookPullRequestReviewRequestRemovedOneOfActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewRequestRemovedOneOf1
 */
export interface WebhookPullRequestReviewRequestRemovedOneOf1 {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf1
     */
    'action': WebhookPullRequestReviewRequestRemovedOneOf1ActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf1
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf1
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf1
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf1
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest7}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf1
     */
    'pull_request': PullRequest7;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf1
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {Team1}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf1
     */
    'requested_team': Team1;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReviewRequestRemovedOneOf1
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestReviewRequestRemovedOneOf1ActionEnum = {
    ReviewRequestRemoved: 'review_request_removed'
} as const;

export type WebhookPullRequestReviewRequestRemovedOneOf1ActionEnum = typeof WebhookPullRequestReviewRequestRemovedOneOf1ActionEnum[keyof typeof WebhookPullRequestReviewRequestRemovedOneOf1ActionEnum];

/**
 * @type WebhookPullRequestReviewRequested
 * @export
 */
export type WebhookPullRequestReviewRequested = WebhookPullRequestReviewRequestedOneOf | WebhookPullRequestReviewRequestedOneOf1;

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewRequestedOneOf
 */
export interface WebhookPullRequestReviewRequestedOneOf {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewRequestedOneOf
     */
    'action': WebhookPullRequestReviewRequestedOneOfActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReviewRequestedOneOf
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReviewRequestedOneOf
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestReviewRequestedOneOf
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReviewRequestedOneOf
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest8}
     * @memberof WebhookPullRequestReviewRequestedOneOf
     */
    'pull_request': PullRequest8;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReviewRequestedOneOf
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {User4}
     * @memberof WebhookPullRequestReviewRequestedOneOf
     */
    'requested_reviewer': User4 | null;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReviewRequestedOneOf
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestReviewRequestedOneOfActionEnum = {
    ReviewRequested: 'review_requested'
} as const;

export type WebhookPullRequestReviewRequestedOneOfActionEnum = typeof WebhookPullRequestReviewRequestedOneOfActionEnum[keyof typeof WebhookPullRequestReviewRequestedOneOfActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewRequestedOneOf1
 */
export interface WebhookPullRequestReviewRequestedOneOf1 {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewRequestedOneOf1
     */
    'action': WebhookPullRequestReviewRequestedOneOf1ActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReviewRequestedOneOf1
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReviewRequestedOneOf1
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestReviewRequestedOneOf1
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReviewRequestedOneOf1
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest9}
     * @memberof WebhookPullRequestReviewRequestedOneOf1
     */
    'pull_request': PullRequest9;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReviewRequestedOneOf1
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {Team}
     * @memberof WebhookPullRequestReviewRequestedOneOf1
     */
    'requested_team': Team;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReviewRequestedOneOf1
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestReviewRequestedOneOf1ActionEnum = {
    ReviewRequested: 'review_requested'
} as const;

export type WebhookPullRequestReviewRequestedOneOf1ActionEnum = typeof WebhookPullRequestReviewRequestedOneOf1ActionEnum[keyof typeof WebhookPullRequestReviewRequestedOneOf1ActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewSubmitted
 */
export interface WebhookPullRequestReviewSubmitted {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewSubmitted
     */
    'action': WebhookPullRequestReviewSubmittedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReviewSubmitted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReviewSubmitted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReviewSubmitted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimplePullRequest2}
     * @memberof WebhookPullRequestReviewSubmitted
     */
    'pull_request': SimplePullRequest2;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReviewSubmitted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {WebhooksReview}
     * @memberof WebhookPullRequestReviewSubmitted
     */
    'review': WebhooksReview;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReviewSubmitted
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestReviewSubmittedActionEnum = {
    Submitted: 'submitted'
} as const;

export type WebhookPullRequestReviewSubmittedActionEnum = typeof WebhookPullRequestReviewSubmittedActionEnum[keyof typeof WebhookPullRequestReviewSubmittedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewThreadResolved
 */
export interface WebhookPullRequestReviewThreadResolved {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewThreadResolved
     */
    'action': WebhookPullRequestReviewThreadResolvedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReviewThreadResolved
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReviewThreadResolved
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReviewThreadResolved
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimplePullRequest3}
     * @memberof WebhookPullRequestReviewThreadResolved
     */
    'pull_request': SimplePullRequest3;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReviewThreadResolved
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReviewThreadResolved
     */
    'sender'?: SimpleUser;
    /**
     * 
     * @type {WebhookPullRequestReviewThreadResolvedThread}
     * @memberof WebhookPullRequestReviewThreadResolved
     */
    'thread': WebhookPullRequestReviewThreadResolvedThread;
}

export const WebhookPullRequestReviewThreadResolvedActionEnum = {
    Resolved: 'resolved'
} as const;

export type WebhookPullRequestReviewThreadResolvedActionEnum = typeof WebhookPullRequestReviewThreadResolvedActionEnum[keyof typeof WebhookPullRequestReviewThreadResolvedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewThreadResolvedThread
 */
export interface WebhookPullRequestReviewThreadResolvedThread {
    /**
     * 
     * @type {Array<PullRequestReviewComment1>}
     * @memberof WebhookPullRequestReviewThreadResolvedThread
     */
    'comments': Array<PullRequestReviewComment1>;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewThreadResolvedThread
     */
    'node_id': string;
}
/**
 * 
 * @export
 * @interface WebhookPullRequestReviewThreadUnresolved
 */
export interface WebhookPullRequestReviewThreadUnresolved {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewThreadUnresolved
     */
    'action': WebhookPullRequestReviewThreadUnresolvedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestReviewThreadUnresolved
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestReviewThreadUnresolved
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestReviewThreadUnresolved
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimplePullRequest4}
     * @memberof WebhookPullRequestReviewThreadUnresolved
     */
    'pull_request': SimplePullRequest4;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestReviewThreadUnresolved
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestReviewThreadUnresolved
     */
    'sender'?: SimpleUser;
    /**
     * 
     * @type {WebhookPullRequestReviewThreadUnresolvedThread}
     * @memberof WebhookPullRequestReviewThreadUnresolved
     */
    'thread': WebhookPullRequestReviewThreadUnresolvedThread;
}

export const WebhookPullRequestReviewThreadUnresolvedActionEnum = {
    Unresolved: 'unresolved'
} as const;

export type WebhookPullRequestReviewThreadUnresolvedActionEnum = typeof WebhookPullRequestReviewThreadUnresolvedActionEnum[keyof typeof WebhookPullRequestReviewThreadUnresolvedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestReviewThreadUnresolvedThread
 */
export interface WebhookPullRequestReviewThreadUnresolvedThread {
    /**
     * 
     * @type {Array<PullRequestReviewComment2>}
     * @memberof WebhookPullRequestReviewThreadUnresolvedThread
     */
    'comments': Array<PullRequestReviewComment2>;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestReviewThreadUnresolvedThread
     */
    'node_id': string;
}
/**
 * 
 * @export
 * @interface WebhookPullRequestSynchronize
 */
export interface WebhookPullRequestSynchronize {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestSynchronize
     */
    'action': WebhookPullRequestSynchronizeActionEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestSynchronize
     */
    'after': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestSynchronize
     */
    'before': string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestSynchronize
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestSynchronize
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestSynchronize
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestSynchronize
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest10}
     * @memberof WebhookPullRequestSynchronize
     */
    'pull_request': PullRequest10;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestSynchronize
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestSynchronize
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestSynchronizeActionEnum = {
    Synchronize: 'synchronize'
} as const;

export type WebhookPullRequestSynchronizeActionEnum = typeof WebhookPullRequestSynchronizeActionEnum[keyof typeof WebhookPullRequestSynchronizeActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestUnassigned
 */
export interface WebhookPullRequestUnassigned {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestUnassigned
     */
    'action': WebhookPullRequestUnassignedActionEnum;
    /**
     * 
     * @type {WebhooksUserMannequin}
     * @memberof WebhookPullRequestUnassigned
     */
    'assignee'?: WebhooksUserMannequin | null;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestUnassigned
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestUnassigned
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestUnassigned
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestUnassigned
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest11}
     * @memberof WebhookPullRequestUnassigned
     */
    'pull_request': PullRequest11;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestUnassigned
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestUnassigned
     */
    'sender'?: SimpleUser;
}

export const WebhookPullRequestUnassignedActionEnum = {
    Unassigned: 'unassigned'
} as const;

export type WebhookPullRequestUnassignedActionEnum = typeof WebhookPullRequestUnassignedActionEnum[keyof typeof WebhookPullRequestUnassignedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestUnlabeled
 */
export interface WebhookPullRequestUnlabeled {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestUnlabeled
     */
    'action': WebhookPullRequestUnlabeledActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestUnlabeled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestUnlabeled
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {WebhooksLabel}
     * @memberof WebhookPullRequestUnlabeled
     */
    'label'?: WebhooksLabel;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestUnlabeled
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestUnlabeled
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest12}
     * @memberof WebhookPullRequestUnlabeled
     */
    'pull_request': PullRequest12;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestUnlabeled
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestUnlabeled
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestUnlabeledActionEnum = {
    Unlabeled: 'unlabeled'
} as const;

export type WebhookPullRequestUnlabeledActionEnum = typeof WebhookPullRequestUnlabeledActionEnum[keyof typeof WebhookPullRequestUnlabeledActionEnum];

/**
 * 
 * @export
 * @interface WebhookPullRequestUnlocked
 */
export interface WebhookPullRequestUnlocked {
    /**
     * 
     * @type {string}
     * @memberof WebhookPullRequestUnlocked
     */
    'action': WebhookPullRequestUnlockedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPullRequestUnlocked
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPullRequestUnlocked
     */
    'installation'?: SimpleInstallation;
    /**
     * The pull request number.
     * @type {number}
     * @memberof WebhookPullRequestUnlocked
     */
    'number': number;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPullRequestUnlocked
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {PullRequest13}
     * @memberof WebhookPullRequestUnlocked
     */
    'pull_request': PullRequest13;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookPullRequestUnlocked
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPullRequestUnlocked
     */
    'sender': SimpleUser;
}

export const WebhookPullRequestUnlockedActionEnum = {
    Unlocked: 'unlocked'
} as const;

export type WebhookPullRequestUnlockedActionEnum = typeof WebhookPullRequestUnlockedActionEnum[keyof typeof WebhookPullRequestUnlockedActionEnum];

/**
 * 
 * @export
 * @interface WebhookPush
 */
export interface WebhookPush {
    /**
     * The SHA of the most recent commit on `ref` after the push.
     * @type {string}
     * @memberof WebhookPush
     */
    'after': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookPush
     */
    'base_ref': string | null;
    /**
     * The SHA of the most recent commit on `ref` before the push.
     * @type {string}
     * @memberof WebhookPush
     */
    'before': string;
    /**
     * An array of commit objects describing the pushed commits. (Pushed commits are all commits that are included in the `compare` between the `before` commit and the `after` commit.) The array includes a maximum of 2048 commits. If necessary, you can use the [Commits API](https://docs.github.com/rest/commits) to fetch additional commits.
     * @type {Array<Commit>}
     * @memberof WebhookPush
     */
    'commits': Array<Commit>;
    /**
     * URL that shows the changes in this `ref` update, from the `before` commit to the `after` commit. For a newly created `ref` that is directly based on the default branch, this is the comparison between the head of the default branch and the `after` commit. Otherwise, this shows all commits until the `after` commit.
     * @type {string}
     * @memberof WebhookPush
     */
    'compare': string;
    /**
     * Whether this push created the `ref`.
     * @type {boolean}
     * @memberof WebhookPush
     */
    'created': boolean;
    /**
     * Whether this push deleted the `ref`.
     * @type {boolean}
     * @memberof WebhookPush
     */
    'deleted': boolean;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookPush
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * Whether this push was a force push of the `ref`.
     * @type {boolean}
     * @memberof WebhookPush
     */
    'forced': boolean;
    /**
     * 
     * @type {Commit1}
     * @memberof WebhookPush
     */
    'head_commit': Commit1 | null;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookPush
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookPush
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {Committer1}
     * @memberof WebhookPush
     */
    'pusher': Committer1;
    /**
     * The full git ref that was pushed. Example: `refs/heads/main` or `refs/tags/v3.14.1`.
     * @type {string}
     * @memberof WebhookPush
     */
    'ref': string;
    /**
     * 
     * @type {Repository2}
     * @memberof WebhookPush
     */
    'repository': Repository2;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookPush
     */
    'sender'?: SimpleUser;
}
/**
 * 
 * @export
 * @interface WebhookRegistryPackagePublished
 */
export interface WebhookRegistryPackagePublished {
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublished
     */
    'action': WebhookRegistryPackagePublishedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRegistryPackagePublished
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRegistryPackagePublished
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRegistryPackagePublished
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhookRegistryPackagePublishedRegistryPackage}
     * @memberof WebhookRegistryPackagePublished
     */
    'registry_package': WebhookRegistryPackagePublishedRegistryPackage;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRegistryPackagePublished
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRegistryPackagePublished
     */
    'sender': SimpleUser;
}

export const WebhookRegistryPackagePublishedActionEnum = {
    Published: 'published'
} as const;

export type WebhookRegistryPackagePublishedActionEnum = typeof WebhookRegistryPackagePublishedActionEnum[keyof typeof WebhookRegistryPackagePublishedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRegistryPackagePublishedRegistryPackage
 */
export interface WebhookRegistryPackagePublishedRegistryPackage {
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackage
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackage
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackage
     */
    'ecosystem': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackage
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookRegistryPackagePublishedRegistryPackage
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackage
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackage
     */
    'namespace': string;
    /**
     * 
     * @type {WebhookRegistryPackagePublishedRegistryPackageOwner}
     * @memberof WebhookRegistryPackagePublishedRegistryPackage
     */
    'owner': WebhookRegistryPackagePublishedRegistryPackageOwner;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackage
     */
    'package_type': string;
    /**
     * 
     * @type {WebhookRegistryPackagePublishedRegistryPackagePackageVersion}
     * @memberof WebhookRegistryPackagePublishedRegistryPackage
     */
    'package_version': WebhookRegistryPackagePublishedRegistryPackagePackageVersion | null;
    /**
     * 
     * @type {WebhookRegistryPackagePublishedRegistryPackageRegistry}
     * @memberof WebhookRegistryPackagePublishedRegistryPackage
     */
    'registry': WebhookRegistryPackagePublishedRegistryPackageRegistry | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackage
     */
    'updated_at': string | null;
}
/**
 * 
 * @export
 * @interface WebhookRegistryPackagePublishedRegistryPackageOwner
 */
export interface WebhookRegistryPackagePublishedRegistryPackageOwner {
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'avatar_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'followers_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'following_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'gists_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'gravatar_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'organizations_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'received_events_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'repos_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'site_admin': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'starred_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'subscriptions_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'type': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageOwner
     */
    'user_view_type'?: string;
}
/**
 * 
 * @export
 * @interface WebhookRegistryPackagePublishedRegistryPackagePackageVersion
 */
export interface WebhookRegistryPackagePublishedRegistryPackagePackageVersion {
    /**
     * 
     * @type {WebhookRegistryPackagePublishedRegistryPackageOwner}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'author'?: WebhookRegistryPackagePublishedRegistryPackageOwner;
    /**
     * 
     * @type {WebhookPackagePublishedPackagePackageVersionBody}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'body'?: WebhookPackagePublishedPackagePackageVersionBody;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'body_html'?: string;
    /**
     * 
     * @type {WebhookRegistryPackagePublishedRegistryPackagePackageVersionContainerMetadata}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'container_metadata'?: WebhookRegistryPackagePublishedRegistryPackagePackageVersionContainerMetadata;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'description': string;
    /**
     * 
     * @type {Array<WebhookPackagePublishedPackagePackageVersionDockerMetadataInner>}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'docker_metadata'?: Array<WebhookPackagePublishedPackagePackageVersionDockerMetadataInner>;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'installation_command': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'manifest'?: string;
    /**
     * 
     * @type {Array<{ [key: string]: any; }>}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'metadata': Array<{ [key: string]: any; }>;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'name': string;
    /**
     * 
     * @type {WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'npm_metadata'?: WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata | null;
    /**
     * 
     * @type {Array<WebhookRegistryPackagePublishedRegistryPackagePackageVersionNugetMetadataInner>}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'nuget_metadata'?: Array<WebhookRegistryPackagePublishedRegistryPackagePackageVersionNugetMetadataInner> | null;
    /**
     * 
     * @type {Array<WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner>}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'package_files': Array<WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'package_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'prerelease'?: boolean;
    /**
     * 
     * @type {WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'release'?: WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease;
    /**
     * 
     * @type {Array<WebhookRubygemsMetadata>}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'rubygems_metadata'?: Array<WebhookRubygemsMetadata>;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'summary': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'tag_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'target_commitish'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'target_oid'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'updated_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersion
     */
    'version': string;
}
/**
 * 
 * @export
 * @interface WebhookRegistryPackagePublishedRegistryPackagePackageVersionContainerMetadata
 */
export interface WebhookRegistryPackagePublishedRegistryPackagePackageVersionContainerMetadata {
    /**
     * 
     * @type {object}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionContainerMetadata
     */
    'labels'?: object | null;
    /**
     * 
     * @type {object}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionContainerMetadata
     */
    'manifest'?: object | null;
    /**
     * 
     * @type {WebhookPackagePublishedPackagePackageVersionContainerMetadataTag}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionContainerMetadata
     */
    'tag'?: WebhookPackagePublishedPackagePackageVersionContainerMetadataTag;
}
/**
 * 
 * @export
 * @interface WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
 */
export interface WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata {
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'version'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'npm_user'?: string;
    /**
     * 
     * @type {Deployment1Payload}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'author'?: Deployment1Payload | null;
    /**
     * 
     * @type {Deployment1Payload}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'bugs'?: Deployment1Payload | null;
    /**
     * 
     * @type {object}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'dependencies'?: object;
    /**
     * 
     * @type {object}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'dev_dependencies'?: object;
    /**
     * 
     * @type {object}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'peer_dependencies'?: object;
    /**
     * 
     * @type {object}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'optional_dependencies'?: object;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'description'?: string;
    /**
     * 
     * @type {Deployment1Payload}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'dist'?: Deployment1Payload | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'git_head'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'homepage'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'license'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'main'?: string;
    /**
     * 
     * @type {Deployment1Payload}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'repository'?: Deployment1Payload | null;
    /**
     * 
     * @type {object}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'scripts'?: object;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'node_version'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'npm_version'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'has_shrinkwrap'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'maintainers'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'contributors'?: Array<string>;
    /**
     * 
     * @type {object}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'engines'?: object;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'keywords'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'files'?: Array<string>;
    /**
     * 
     * @type {object}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'bin'?: object;
    /**
     * 
     * @type {object}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'man'?: object;
    /**
     * 
     * @type {Deployment1Payload}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'directories'?: Deployment1Payload | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'os'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'cpu'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'readme'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'installation_command'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'release_id'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'commit_oid'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'published_via_actions'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNpmMetadata
     */
    'deleted_by_id'?: number;
}
/**
 * 
 * @export
 * @interface WebhookRegistryPackagePublishedRegistryPackagePackageVersionNugetMetadataInner
 */
export interface WebhookRegistryPackagePublishedRegistryPackagePackageVersionNugetMetadataInner {
    /**
     * 
     * @type {WebhookRegistryPackagePublishedRegistryPackagePackageVersionNugetMetadataInnerId}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNugetMetadataInner
     */
    'id'?: WebhookRegistryPackagePublishedRegistryPackagePackageVersionNugetMetadataInnerId | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNugetMetadataInner
     */
    'name'?: string;
    /**
     * 
     * @type {WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerValue}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionNugetMetadataInner
     */
    'value'?: WebhookPackagePublishedPackagePackageVersionNugetMetadataInnerValue;
}
/**
 * @type WebhookRegistryPackagePublishedRegistryPackagePackageVersionNugetMetadataInnerId
 * @export
 */
export type WebhookRegistryPackagePublishedRegistryPackagePackageVersionNugetMetadataInnerId = number | object | string;

/**
 * 
 * @export
 * @interface WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner
 */
export interface WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner {
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner
     */
    'content_type': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner
     */
    'download_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner
     */
    'md5': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner
     */
    'sha1': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner
     */
    'sha256': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner
     */
    'size': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner
     */
    'state': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner
     */
    'updated_at': string;
}
/**
 * 
 * @export
 * @interface WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease
 */
export interface WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease {
    /**
     * 
     * @type {WebhooksSponsorshipMaintainer}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease
     */
    'author'?: WebhooksSponsorshipMaintainer;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease
     */
    'created_at'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease
     */
    'name'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease
     */
    'prerelease'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease
     */
    'published_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease
     */
    'tag_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease
     */
    'target_commitish'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackagePackageVersionRelease
     */
    'url'?: string;
}
/**
 * 
 * @export
 * @interface WebhookRegistryPackagePublishedRegistryPackageRegistry
 */
export interface WebhookRegistryPackagePublishedRegistryPackageRegistry {
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageRegistry
     */
    'about_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageRegistry
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageRegistry
     */
    'type'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageRegistry
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackagePublishedRegistryPackageRegistry
     */
    'vendor'?: string;
}
/**
 * 
 * @export
 * @interface WebhookRegistryPackageUpdated
 */
export interface WebhookRegistryPackageUpdated {
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdated
     */
    'action': WebhookRegistryPackageUpdatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRegistryPackageUpdated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRegistryPackageUpdated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRegistryPackageUpdated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhookRegistryPackageUpdatedRegistryPackage}
     * @memberof WebhookRegistryPackageUpdated
     */
    'registry_package': WebhookRegistryPackageUpdatedRegistryPackage;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRegistryPackageUpdated
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRegistryPackageUpdated
     */
    'sender': SimpleUser;
}

export const WebhookRegistryPackageUpdatedActionEnum = {
    Updated: 'updated'
} as const;

export type WebhookRegistryPackageUpdatedActionEnum = typeof WebhookRegistryPackageUpdatedActionEnum[keyof typeof WebhookRegistryPackageUpdatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRegistryPackageUpdatedRegistryPackage
 */
export interface WebhookRegistryPackageUpdatedRegistryPackage {
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackage
     */
    'created_at': string;
    /**
     * 
     * @type {any}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackage
     */
    'description': any | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackage
     */
    'ecosystem': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackage
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackage
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackage
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackage
     */
    'namespace': string;
    /**
     * 
     * @type {WebhookRegistryPackagePublishedRegistryPackageOwner}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackage
     */
    'owner': WebhookRegistryPackagePublishedRegistryPackageOwner;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackage
     */
    'package_type': string;
    /**
     * 
     * @type {WebhookRegistryPackageUpdatedRegistryPackagePackageVersion}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackage
     */
    'package_version': WebhookRegistryPackageUpdatedRegistryPackagePackageVersion;
    /**
     * 
     * @type {object}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackage
     */
    'registry': object | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackage
     */
    'updated_at': string;
}
/**
 * 
 * @export
 * @interface WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
 */
export interface WebhookRegistryPackageUpdatedRegistryPackagePackageVersion {
    /**
     * 
     * @type {WebhookRegistryPackagePublishedRegistryPackageOwner}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'author': WebhookRegistryPackagePublishedRegistryPackageOwner;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'body': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'body_html': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'description': string;
    /**
     * 
     * @type {Array<WebhookRegistryPackageUpdatedRegistryPackagePackageVersionDockerMetadataInner>}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'docker_metadata'?: Array<WebhookRegistryPackageUpdatedRegistryPackagePackageVersionDockerMetadataInner>;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'installation_command': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'manifest'?: string;
    /**
     * 
     * @type {Array<{ [key: string]: any; }>}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'metadata': Array<{ [key: string]: any; }>;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'name': string;
    /**
     * 
     * @type {Array<WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner>}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'package_files': Array<WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'package_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'prerelease'?: boolean;
    /**
     * 
     * @type {WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'release'?: WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease;
    /**
     * 
     * @type {Array<WebhookRubygemsMetadata>}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'rubygems_metadata'?: Array<WebhookRubygemsMetadata>;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'summary': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'tag_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'target_commitish': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'target_oid': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersion
     */
    'version': string;
}
/**
 * 
 * @export
 * @interface WebhookRegistryPackageUpdatedRegistryPackagePackageVersionDockerMetadataInner
 */
export interface WebhookRegistryPackageUpdatedRegistryPackagePackageVersionDockerMetadataInner {
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionDockerMetadataInner
     */
    'tags'?: Array<string>;
}
/**
 * 
 * @export
 * @interface WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner
 */
export interface WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner {
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner
     */
    'content_type'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner
     */
    'created_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner
     */
    'download_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner
     */
    'md5'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner
     */
    'sha1'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner
     */
    'sha256'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner
     */
    'size'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner
     */
    'state'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionPackageFilesInner
     */
    'updated_at'?: string;
}
/**
 * 
 * @export
 * @interface WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease
 */
export interface WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease {
    /**
     * 
     * @type {WebhookRegistryPackagePublishedRegistryPackageOwner}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease
     */
    'author': WebhookRegistryPackagePublishedRegistryPackageOwner;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease
     */
    'draft': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease
     */
    'name': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease
     */
    'prerelease': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease
     */
    'published_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease
     */
    'tag_name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease
     */
    'target_commitish': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WebhookReleaseCreated
 */
export interface WebhookReleaseCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookReleaseCreated
     */
    'action': WebhookReleaseCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookReleaseCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookReleaseCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookReleaseCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksRelease}
     * @memberof WebhookReleaseCreated
     */
    'release': WebhooksRelease;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookReleaseCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookReleaseCreated
     */
    'sender': SimpleUser;
}

export const WebhookReleaseCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookReleaseCreatedActionEnum = typeof WebhookReleaseCreatedActionEnum[keyof typeof WebhookReleaseCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookReleaseDeleted
 */
export interface WebhookReleaseDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookReleaseDeleted
     */
    'action': WebhookReleaseDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookReleaseDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookReleaseDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookReleaseDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksRelease}
     * @memberof WebhookReleaseDeleted
     */
    'release': WebhooksRelease;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookReleaseDeleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookReleaseDeleted
     */
    'sender': SimpleUser;
}

export const WebhookReleaseDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookReleaseDeletedActionEnum = typeof WebhookReleaseDeletedActionEnum[keyof typeof WebhookReleaseDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookReleaseEdited
 */
export interface WebhookReleaseEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookReleaseEdited
     */
    'action': WebhookReleaseEditedActionEnum;
    /**
     * 
     * @type {WebhookReleaseEditedChanges}
     * @memberof WebhookReleaseEdited
     */
    'changes': WebhookReleaseEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookReleaseEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookReleaseEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookReleaseEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksRelease}
     * @memberof WebhookReleaseEdited
     */
    'release': WebhooksRelease;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookReleaseEdited
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookReleaseEdited
     */
    'sender'?: SimpleUser;
}

export const WebhookReleaseEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookReleaseEditedActionEnum = typeof WebhookReleaseEditedActionEnum[keyof typeof WebhookReleaseEditedActionEnum];

/**
 * 
 * @export
 * @interface WebhookReleaseEditedChanges
 */
export interface WebhookReleaseEditedChanges {
    /**
     * 
     * @type {WebhookProjectEditedChangesBody}
     * @memberof WebhookReleaseEditedChanges
     */
    'body'?: WebhookProjectEditedChangesBody;
    /**
     * 
     * @type {WebhookLabelEditedChangesName}
     * @memberof WebhookReleaseEditedChanges
     */
    'name'?: WebhookLabelEditedChangesName;
    /**
     * 
     * @type {WebhookReleaseEditedChangesTagName}
     * @memberof WebhookReleaseEditedChanges
     */
    'tag_name'?: WebhookReleaseEditedChangesTagName;
    /**
     * 
     * @type {WebhookReleaseEditedChangesMakeLatest}
     * @memberof WebhookReleaseEditedChanges
     */
    'make_latest'?: WebhookReleaseEditedChangesMakeLatest;
}
/**
 * 
 * @export
 * @interface WebhookReleaseEditedChangesMakeLatest
 */
export interface WebhookReleaseEditedChangesMakeLatest {
    /**
     * Whether this release was explicitly `edited` to be the latest.
     * @type {boolean}
     * @memberof WebhookReleaseEditedChangesMakeLatest
     */
    'to': boolean;
}
/**
 * 
 * @export
 * @interface WebhookReleaseEditedChangesTagName
 */
export interface WebhookReleaseEditedChangesTagName {
    /**
     * The previous version of the tag_name if the action was `edited`.
     * @type {string}
     * @memberof WebhookReleaseEditedChangesTagName
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookReleasePrereleased
 */
export interface WebhookReleasePrereleased {
    /**
     * 
     * @type {string}
     * @memberof WebhookReleasePrereleased
     */
    'action': WebhookReleasePrereleasedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookReleasePrereleased
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookReleasePrereleased
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookReleasePrereleased
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {Release}
     * @memberof WebhookReleasePrereleased
     */
    'release': Release;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookReleasePrereleased
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookReleasePrereleased
     */
    'sender'?: SimpleUser;
}

export const WebhookReleasePrereleasedActionEnum = {
    Prereleased: 'prereleased'
} as const;

export type WebhookReleasePrereleasedActionEnum = typeof WebhookReleasePrereleasedActionEnum[keyof typeof WebhookReleasePrereleasedActionEnum];

/**
 * 
 * @export
 * @interface WebhookReleasePublished
 */
export interface WebhookReleasePublished {
    /**
     * 
     * @type {string}
     * @memberof WebhookReleasePublished
     */
    'action': WebhookReleasePublishedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookReleasePublished
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookReleasePublished
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookReleasePublished
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksRelease1}
     * @memberof WebhookReleasePublished
     */
    'release': WebhooksRelease1;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookReleasePublished
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookReleasePublished
     */
    'sender'?: SimpleUser;
}

export const WebhookReleasePublishedActionEnum = {
    Published: 'published'
} as const;

export type WebhookReleasePublishedActionEnum = typeof WebhookReleasePublishedActionEnum[keyof typeof WebhookReleasePublishedActionEnum];

/**
 * 
 * @export
 * @interface WebhookReleaseReleased
 */
export interface WebhookReleaseReleased {
    /**
     * 
     * @type {string}
     * @memberof WebhookReleaseReleased
     */
    'action': WebhookReleaseReleasedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookReleaseReleased
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookReleaseReleased
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookReleaseReleased
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksRelease}
     * @memberof WebhookReleaseReleased
     */
    'release': WebhooksRelease;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookReleaseReleased
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookReleaseReleased
     */
    'sender'?: SimpleUser;
}

export const WebhookReleaseReleasedActionEnum = {
    Released: 'released'
} as const;

export type WebhookReleaseReleasedActionEnum = typeof WebhookReleaseReleasedActionEnum[keyof typeof WebhookReleaseReleasedActionEnum];

/**
 * 
 * @export
 * @interface WebhookReleaseUnpublished
 */
export interface WebhookReleaseUnpublished {
    /**
     * 
     * @type {string}
     * @memberof WebhookReleaseUnpublished
     */
    'action': WebhookReleaseUnpublishedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookReleaseUnpublished
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookReleaseUnpublished
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookReleaseUnpublished
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {WebhooksRelease1}
     * @memberof WebhookReleaseUnpublished
     */
    'release': WebhooksRelease1;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookReleaseUnpublished
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookReleaseUnpublished
     */
    'sender'?: SimpleUser;
}

export const WebhookReleaseUnpublishedActionEnum = {
    Unpublished: 'unpublished'
} as const;

export type WebhookReleaseUnpublishedActionEnum = typeof WebhookReleaseUnpublishedActionEnum[keyof typeof WebhookReleaseUnpublishedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryAdvisoryPublished
 */
export interface WebhookRepositoryAdvisoryPublished {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryAdvisoryPublished
     */
    'action': WebhookRepositoryAdvisoryPublishedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryAdvisoryPublished
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryAdvisoryPublished
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryAdvisoryPublished
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryAdvisoryPublished
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {RepositoryAdvisory}
     * @memberof WebhookRepositoryAdvisoryPublished
     */
    'repository_advisory': RepositoryAdvisory;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryAdvisoryPublished
     */
    'sender'?: SimpleUser;
}

export const WebhookRepositoryAdvisoryPublishedActionEnum = {
    Published: 'published'
} as const;

export type WebhookRepositoryAdvisoryPublishedActionEnum = typeof WebhookRepositoryAdvisoryPublishedActionEnum[keyof typeof WebhookRepositoryAdvisoryPublishedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryAdvisoryReported
 */
export interface WebhookRepositoryAdvisoryReported {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryAdvisoryReported
     */
    'action': WebhookRepositoryAdvisoryReportedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryAdvisoryReported
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryAdvisoryReported
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryAdvisoryReported
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryAdvisoryReported
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {RepositoryAdvisory}
     * @memberof WebhookRepositoryAdvisoryReported
     */
    'repository_advisory': RepositoryAdvisory;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryAdvisoryReported
     */
    'sender'?: SimpleUser;
}

export const WebhookRepositoryAdvisoryReportedActionEnum = {
    Reported: 'reported'
} as const;

export type WebhookRepositoryAdvisoryReportedActionEnum = typeof WebhookRepositoryAdvisoryReportedActionEnum[keyof typeof WebhookRepositoryAdvisoryReportedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryArchived
 */
export interface WebhookRepositoryArchived {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryArchived
     */
    'action': WebhookRepositoryArchivedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryArchived
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryArchived
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryArchived
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryArchived
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryArchived
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryArchivedActionEnum = {
    Archived: 'archived'
} as const;

export type WebhookRepositoryArchivedActionEnum = typeof WebhookRepositoryArchivedActionEnum[keyof typeof WebhookRepositoryArchivedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryCreated
 */
export interface WebhookRepositoryCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryCreated
     */
    'action': WebhookRepositoryCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryCreated
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookRepositoryCreatedActionEnum = typeof WebhookRepositoryCreatedActionEnum[keyof typeof WebhookRepositoryCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryDeleted
 */
export interface WebhookRepositoryDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryDeleted
     */
    'action': WebhookRepositoryDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryDeleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryDeleted
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookRepositoryDeletedActionEnum = typeof WebhookRepositoryDeletedActionEnum[keyof typeof WebhookRepositoryDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryDispatchSample
 */
export interface WebhookRepositoryDispatchSample {
    /**
     * The `event_type` that was specified in the `POST /repos/{owner}/{repo}/dispatches` request body.
     * @type {string}
     * @memberof WebhookRepositoryDispatchSample
     */
    'action': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryDispatchSample
     */
    'branch': string;
    /**
     * The `client_payload` that was specified in the `POST /repos/{owner}/{repo}/dispatches` request body.
     * @type {{ [key: string]: any; }}
     * @memberof WebhookRepositoryDispatchSample
     */
    'client_payload': { [key: string]: any; } | null;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryDispatchSample
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryDispatchSample
     */
    'installation': SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryDispatchSample
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryDispatchSample
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryDispatchSample
     */
    'sender': SimpleUser;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryEdited
 */
export interface WebhookRepositoryEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryEdited
     */
    'action': WebhookRepositoryEditedActionEnum;
    /**
     * 
     * @type {WebhookRepositoryEditedChanges}
     * @memberof WebhookRepositoryEdited
     */
    'changes': WebhookRepositoryEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryEdited
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryEdited
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookRepositoryEditedActionEnum = typeof WebhookRepositoryEditedActionEnum[keyof typeof WebhookRepositoryEditedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryEditedChanges
 */
export interface WebhookRepositoryEditedChanges {
    /**
     * 
     * @type {WebhookDiscussionCommentEditedChangesBody}
     * @memberof WebhookRepositoryEditedChanges
     */
    'default_branch'?: WebhookDiscussionCommentEditedChangesBody;
    /**
     * 
     * @type {WebhookProjectCardEditedChangesNote}
     * @memberof WebhookRepositoryEditedChanges
     */
    'description'?: WebhookProjectCardEditedChangesNote;
    /**
     * 
     * @type {WebhookProjectCardEditedChangesNote}
     * @memberof WebhookRepositoryEditedChanges
     */
    'homepage'?: WebhookProjectCardEditedChangesNote;
    /**
     * 
     * @type {WebhookRepositoryEditedChangesTopics}
     * @memberof WebhookRepositoryEditedChanges
     */
    'topics'?: WebhookRepositoryEditedChangesTopics;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryEditedChangesTopics
 */
export interface WebhookRepositoryEditedChangesTopics {
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookRepositoryEditedChangesTopics
     */
    'from'?: Array<string> | null;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryImport
 */
export interface WebhookRepositoryImport {
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryImport
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryImport
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryImport
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryImport
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryImport
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryImport
     */
    'status': WebhookRepositoryImportStatusEnum;
}

export const WebhookRepositoryImportStatusEnum = {
    Success: 'success',
    Cancelled: 'cancelled',
    Failure: 'failure'
} as const;

export type WebhookRepositoryImportStatusEnum = typeof WebhookRepositoryImportStatusEnum[keyof typeof WebhookRepositoryImportStatusEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryPrivatized
 */
export interface WebhookRepositoryPrivatized {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryPrivatized
     */
    'action': WebhookRepositoryPrivatizedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryPrivatized
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryPrivatized
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryPrivatized
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryPrivatized
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryPrivatized
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryPrivatizedActionEnum = {
    Privatized: 'privatized'
} as const;

export type WebhookRepositoryPrivatizedActionEnum = typeof WebhookRepositoryPrivatizedActionEnum[keyof typeof WebhookRepositoryPrivatizedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryPublicized
 */
export interface WebhookRepositoryPublicized {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryPublicized
     */
    'action': WebhookRepositoryPublicizedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryPublicized
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryPublicized
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryPublicized
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryPublicized
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryPublicized
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryPublicizedActionEnum = {
    Publicized: 'publicized'
} as const;

export type WebhookRepositoryPublicizedActionEnum = typeof WebhookRepositoryPublicizedActionEnum[keyof typeof WebhookRepositoryPublicizedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryRenamed
 */
export interface WebhookRepositoryRenamed {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryRenamed
     */
    'action': WebhookRepositoryRenamedActionEnum;
    /**
     * 
     * @type {WebhookRepositoryRenamedChanges}
     * @memberof WebhookRepositoryRenamed
     */
    'changes': WebhookRepositoryRenamedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryRenamed
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryRenamed
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryRenamed
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryRenamed
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryRenamed
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryRenamedActionEnum = {
    Renamed: 'renamed'
} as const;

export type WebhookRepositoryRenamedActionEnum = typeof WebhookRepositoryRenamedActionEnum[keyof typeof WebhookRepositoryRenamedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryRenamedChanges
 */
export interface WebhookRepositoryRenamedChanges {
    /**
     * 
     * @type {WebhookRepositoryRenamedChangesRepository}
     * @memberof WebhookRepositoryRenamedChanges
     */
    'repository': WebhookRepositoryRenamedChangesRepository;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryRenamedChangesRepository
 */
export interface WebhookRepositoryRenamedChangesRepository {
    /**
     * 
     * @type {WebhookDiscussionCommentEditedChangesBody}
     * @memberof WebhookRepositoryRenamedChangesRepository
     */
    'name': WebhookDiscussionCommentEditedChangesBody;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryRulesetCreated
 */
export interface WebhookRepositoryRulesetCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryRulesetCreated
     */
    'action': WebhookRepositoryRulesetCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryRulesetCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryRulesetCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryRulesetCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryRulesetCreated
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {RepositoryRuleset}
     * @memberof WebhookRepositoryRulesetCreated
     */
    'repository_ruleset': RepositoryRuleset;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryRulesetCreated
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryRulesetCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookRepositoryRulesetCreatedActionEnum = typeof WebhookRepositoryRulesetCreatedActionEnum[keyof typeof WebhookRepositoryRulesetCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryRulesetDeleted
 */
export interface WebhookRepositoryRulesetDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryRulesetDeleted
     */
    'action': WebhookRepositoryRulesetDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryRulesetDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryRulesetDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryRulesetDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryRulesetDeleted
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {RepositoryRuleset}
     * @memberof WebhookRepositoryRulesetDeleted
     */
    'repository_ruleset': RepositoryRuleset;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryRulesetDeleted
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryRulesetDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookRepositoryRulesetDeletedActionEnum = typeof WebhookRepositoryRulesetDeletedActionEnum[keyof typeof WebhookRepositoryRulesetDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryRulesetEdited
 */
export interface WebhookRepositoryRulesetEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryRulesetEdited
     */
    'action': WebhookRepositoryRulesetEditedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryRulesetEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryRulesetEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryRulesetEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryRulesetEdited
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {RepositoryRuleset}
     * @memberof WebhookRepositoryRulesetEdited
     */
    'repository_ruleset': RepositoryRuleset;
    /**
     * 
     * @type {WebhookRepositoryRulesetEditedChanges}
     * @memberof WebhookRepositoryRulesetEdited
     */
    'changes'?: WebhookRepositoryRulesetEditedChanges;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryRulesetEdited
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryRulesetEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookRepositoryRulesetEditedActionEnum = typeof WebhookRepositoryRulesetEditedActionEnum[keyof typeof WebhookRepositoryRulesetEditedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryRulesetEditedChanges
 */
export interface WebhookRepositoryRulesetEditedChanges {
    /**
     * 
     * @type {WebhookOrganizationRenamedChangesLogin}
     * @memberof WebhookRepositoryRulesetEditedChanges
     */
    'name'?: WebhookOrganizationRenamedChangesLogin;
    /**
     * 
     * @type {WebhookOrganizationRenamedChangesLogin}
     * @memberof WebhookRepositoryRulesetEditedChanges
     */
    'enforcement'?: WebhookOrganizationRenamedChangesLogin;
    /**
     * 
     * @type {WebhookRepositoryRulesetEditedChangesConditions}
     * @memberof WebhookRepositoryRulesetEditedChanges
     */
    'conditions'?: WebhookRepositoryRulesetEditedChangesConditions;
    /**
     * 
     * @type {WebhookRepositoryRulesetEditedChangesRules}
     * @memberof WebhookRepositoryRulesetEditedChanges
     */
    'rules'?: WebhookRepositoryRulesetEditedChangesRules;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryRulesetEditedChangesConditions
 */
export interface WebhookRepositoryRulesetEditedChangesConditions {
    /**
     * 
     * @type {Array<RepositoryRulesetConditions>}
     * @memberof WebhookRepositoryRulesetEditedChangesConditions
     */
    'added'?: Array<RepositoryRulesetConditions>;
    /**
     * 
     * @type {Array<RepositoryRulesetConditions>}
     * @memberof WebhookRepositoryRulesetEditedChangesConditions
     */
    'deleted'?: Array<RepositoryRulesetConditions>;
    /**
     * 
     * @type {Array<WebhookRepositoryRulesetEditedChangesConditionsUpdatedInner>}
     * @memberof WebhookRepositoryRulesetEditedChangesConditions
     */
    'updated'?: Array<WebhookRepositoryRulesetEditedChangesConditionsUpdatedInner>;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryRulesetEditedChangesConditionsUpdatedInner
 */
export interface WebhookRepositoryRulesetEditedChangesConditionsUpdatedInner {
    /**
     * 
     * @type {RepositoryRulesetConditions}
     * @memberof WebhookRepositoryRulesetEditedChangesConditionsUpdatedInner
     */
    'condition'?: RepositoryRulesetConditions;
    /**
     * 
     * @type {WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChanges}
     * @memberof WebhookRepositoryRulesetEditedChangesConditionsUpdatedInner
     */
    'changes'?: WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChanges;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChanges
 */
export interface WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChanges {
    /**
     * 
     * @type {WebhookOrganizationRenamedChangesLogin}
     * @memberof WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChanges
     */
    'condition_type'?: WebhookOrganizationRenamedChangesLogin;
    /**
     * 
     * @type {WebhookOrganizationRenamedChangesLogin}
     * @memberof WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChanges
     */
    'target'?: WebhookOrganizationRenamedChangesLogin;
    /**
     * 
     * @type {WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChangesInclude}
     * @memberof WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChanges
     */
    'include'?: WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChangesInclude;
    /**
     * 
     * @type {WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChangesInclude}
     * @memberof WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChanges
     */
    'exclude'?: WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChangesInclude;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChangesInclude
 */
export interface WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChangesInclude {
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookRepositoryRulesetEditedChangesConditionsUpdatedInnerChangesInclude
     */
    'from'?: Array<string>;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryRulesetEditedChangesRules
 */
export interface WebhookRepositoryRulesetEditedChangesRules {
    /**
     * 
     * @type {Array<RepositoryRule>}
     * @memberof WebhookRepositoryRulesetEditedChangesRules
     */
    'added'?: Array<RepositoryRule>;
    /**
     * 
     * @type {Array<RepositoryRule>}
     * @memberof WebhookRepositoryRulesetEditedChangesRules
     */
    'deleted'?: Array<RepositoryRule>;
    /**
     * 
     * @type {Array<WebhookRepositoryRulesetEditedChangesRulesUpdatedInner>}
     * @memberof WebhookRepositoryRulesetEditedChangesRules
     */
    'updated'?: Array<WebhookRepositoryRulesetEditedChangesRulesUpdatedInner>;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryRulesetEditedChangesRulesUpdatedInner
 */
export interface WebhookRepositoryRulesetEditedChangesRulesUpdatedInner {
    /**
     * 
     * @type {RepositoryRule}
     * @memberof WebhookRepositoryRulesetEditedChangesRulesUpdatedInner
     */
    'rule'?: RepositoryRule;
    /**
     * 
     * @type {WebhookRepositoryRulesetEditedChangesRulesUpdatedInnerChanges}
     * @memberof WebhookRepositoryRulesetEditedChangesRulesUpdatedInner
     */
    'changes'?: WebhookRepositoryRulesetEditedChangesRulesUpdatedInnerChanges;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryRulesetEditedChangesRulesUpdatedInnerChanges
 */
export interface WebhookRepositoryRulesetEditedChangesRulesUpdatedInnerChanges {
    /**
     * 
     * @type {WebhookOrganizationRenamedChangesLogin}
     * @memberof WebhookRepositoryRulesetEditedChangesRulesUpdatedInnerChanges
     */
    'configuration'?: WebhookOrganizationRenamedChangesLogin;
    /**
     * 
     * @type {WebhookOrganizationRenamedChangesLogin}
     * @memberof WebhookRepositoryRulesetEditedChangesRulesUpdatedInnerChanges
     */
    'rule_type'?: WebhookOrganizationRenamedChangesLogin;
    /**
     * 
     * @type {WebhookOrganizationRenamedChangesLogin}
     * @memberof WebhookRepositoryRulesetEditedChangesRulesUpdatedInnerChanges
     */
    'pattern'?: WebhookOrganizationRenamedChangesLogin;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryTransferred
 */
export interface WebhookRepositoryTransferred {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryTransferred
     */
    'action': WebhookRepositoryTransferredActionEnum;
    /**
     * 
     * @type {WebhookRepositoryTransferredChanges}
     * @memberof WebhookRepositoryTransferred
     */
    'changes': WebhookRepositoryTransferredChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryTransferred
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryTransferred
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryTransferred
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryTransferred
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryTransferred
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryTransferredActionEnum = {
    Transferred: 'transferred'
} as const;

export type WebhookRepositoryTransferredActionEnum = typeof WebhookRepositoryTransferredActionEnum[keyof typeof WebhookRepositoryTransferredActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryTransferredChanges
 */
export interface WebhookRepositoryTransferredChanges {
    /**
     * 
     * @type {WebhookRepositoryTransferredChangesOwner}
     * @memberof WebhookRepositoryTransferredChanges
     */
    'owner': WebhookRepositoryTransferredChangesOwner;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryTransferredChangesOwner
 */
export interface WebhookRepositoryTransferredChangesOwner {
    /**
     * 
     * @type {WebhookRepositoryTransferredChangesOwnerFrom}
     * @memberof WebhookRepositoryTransferredChangesOwner
     */
    'from': WebhookRepositoryTransferredChangesOwnerFrom;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryTransferredChangesOwnerFrom
 */
export interface WebhookRepositoryTransferredChangesOwnerFrom {
    /**
     * 
     * @type {Organization}
     * @memberof WebhookRepositoryTransferredChangesOwnerFrom
     */
    'organization'?: Organization;
    /**
     * 
     * @type {User1}
     * @memberof WebhookRepositoryTransferredChangesOwnerFrom
     */
    'user'?: User1 | null;
}
/**
 * 
 * @export
 * @interface WebhookRepositoryUnarchived
 */
export interface WebhookRepositoryUnarchived {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryUnarchived
     */
    'action': WebhookRepositoryUnarchivedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryUnarchived
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryUnarchived
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryUnarchived
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryUnarchived
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryUnarchived
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryUnarchivedActionEnum = {
    Unarchived: 'unarchived'
} as const;

export type WebhookRepositoryUnarchivedActionEnum = typeof WebhookRepositoryUnarchivedActionEnum[keyof typeof WebhookRepositoryUnarchivedActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryVulnerabilityAlertCreate
 */
export interface WebhookRepositoryVulnerabilityAlertCreate {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryVulnerabilityAlertCreate
     */
    'action': WebhookRepositoryVulnerabilityAlertCreateActionEnum;
    /**
     * 
     * @type {WebhooksAlert}
     * @memberof WebhookRepositoryVulnerabilityAlertCreate
     */
    'alert': WebhooksAlert;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryVulnerabilityAlertCreate
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryVulnerabilityAlertCreate
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryVulnerabilityAlertCreate
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryVulnerabilityAlertCreate
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryVulnerabilityAlertCreate
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryVulnerabilityAlertCreateActionEnum = {
    Create: 'create'
} as const;

export type WebhookRepositoryVulnerabilityAlertCreateActionEnum = typeof WebhookRepositoryVulnerabilityAlertCreateActionEnum[keyof typeof WebhookRepositoryVulnerabilityAlertCreateActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryVulnerabilityAlertDismiss
 */
export interface WebhookRepositoryVulnerabilityAlertDismiss {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryVulnerabilityAlertDismiss
     */
    'action': WebhookRepositoryVulnerabilityAlertDismissActionEnum;
    /**
     * 
     * @type {RepositoryVulnerabilityAlertAlert}
     * @memberof WebhookRepositoryVulnerabilityAlertDismiss
     */
    'alert': RepositoryVulnerabilityAlertAlert;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryVulnerabilityAlertDismiss
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryVulnerabilityAlertDismiss
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryVulnerabilityAlertDismiss
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryVulnerabilityAlertDismiss
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryVulnerabilityAlertDismiss
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryVulnerabilityAlertDismissActionEnum = {
    Dismiss: 'dismiss'
} as const;

export type WebhookRepositoryVulnerabilityAlertDismissActionEnum = typeof WebhookRepositoryVulnerabilityAlertDismissActionEnum[keyof typeof WebhookRepositoryVulnerabilityAlertDismissActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryVulnerabilityAlertReopen
 */
export interface WebhookRepositoryVulnerabilityAlertReopen {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryVulnerabilityAlertReopen
     */
    'action': WebhookRepositoryVulnerabilityAlertReopenActionEnum;
    /**
     * 
     * @type {WebhooksAlert}
     * @memberof WebhookRepositoryVulnerabilityAlertReopen
     */
    'alert': WebhooksAlert;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryVulnerabilityAlertReopen
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryVulnerabilityAlertReopen
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryVulnerabilityAlertReopen
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryVulnerabilityAlertReopen
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryVulnerabilityAlertReopen
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryVulnerabilityAlertReopenActionEnum = {
    Reopen: 'reopen'
} as const;

export type WebhookRepositoryVulnerabilityAlertReopenActionEnum = typeof WebhookRepositoryVulnerabilityAlertReopenActionEnum[keyof typeof WebhookRepositoryVulnerabilityAlertReopenActionEnum];

/**
 * 
 * @export
 * @interface WebhookRepositoryVulnerabilityAlertResolve
 */
export interface WebhookRepositoryVulnerabilityAlertResolve {
    /**
     * 
     * @type {string}
     * @memberof WebhookRepositoryVulnerabilityAlertResolve
     */
    'action': WebhookRepositoryVulnerabilityAlertResolveActionEnum;
    /**
     * 
     * @type {RepositoryVulnerabilityAlertAlert1}
     * @memberof WebhookRepositoryVulnerabilityAlertResolve
     */
    'alert': RepositoryVulnerabilityAlertAlert1;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookRepositoryVulnerabilityAlertResolve
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookRepositoryVulnerabilityAlertResolve
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookRepositoryVulnerabilityAlertResolve
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookRepositoryVulnerabilityAlertResolve
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookRepositoryVulnerabilityAlertResolve
     */
    'sender': SimpleUser;
}

export const WebhookRepositoryVulnerabilityAlertResolveActionEnum = {
    Resolve: 'resolve'
} as const;

export type WebhookRepositoryVulnerabilityAlertResolveActionEnum = typeof WebhookRepositoryVulnerabilityAlertResolveActionEnum[keyof typeof WebhookRepositoryVulnerabilityAlertResolveActionEnum];

/**
 * 
 * @export
 * @interface WebhookRubygemsMetadata
 */
export interface WebhookRubygemsMetadata {
    /**
     * 
     * @type {string}
     * @memberof WebhookRubygemsMetadata
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRubygemsMetadata
     */
    'description'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRubygemsMetadata
     */
    'readme'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookRubygemsMetadata
     */
    'homepage'?: string;
    /**
     * 
     * @type {WebhookRubygemsMetadataVersionInfo}
     * @memberof WebhookRubygemsMetadata
     */
    'version_info'?: WebhookRubygemsMetadataVersionInfo;
    /**
     * 
     * @type {string}
     * @memberof WebhookRubygemsMetadata
     */
    'platform'?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof WebhookRubygemsMetadata
     */
    'metadata'?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof WebhookRubygemsMetadata
     */
    'repo'?: string;
    /**
     * 
     * @type {Array<{ [key: string]: string; }>}
     * @memberof WebhookRubygemsMetadata
     */
    'dependencies'?: Array<{ [key: string]: string; }>;
    /**
     * 
     * @type {string}
     * @memberof WebhookRubygemsMetadata
     */
    'commit_oid'?: string;
}
/**
 * 
 * @export
 * @interface WebhookRubygemsMetadataVersionInfo
 */
export interface WebhookRubygemsMetadataVersionInfo {
    /**
     * 
     * @type {string}
     * @memberof WebhookRubygemsMetadataVersionInfo
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface WebhookSecretScanningAlertCreated
 */
export interface WebhookSecretScanningAlertCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookSecretScanningAlertCreated
     */
    'action': WebhookSecretScanningAlertCreatedActionEnum;
    /**
     * 
     * @type {SecretScanningAlertWebhook}
     * @memberof WebhookSecretScanningAlertCreated
     */
    'alert': SecretScanningAlertWebhook;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSecretScanningAlertCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSecretScanningAlertCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSecretScanningAlertCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSecretScanningAlertCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSecretScanningAlertCreated
     */
    'sender'?: SimpleUser;
}

export const WebhookSecretScanningAlertCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookSecretScanningAlertCreatedActionEnum = typeof WebhookSecretScanningAlertCreatedActionEnum[keyof typeof WebhookSecretScanningAlertCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookSecretScanningAlertLocationCreated
 */
export interface WebhookSecretScanningAlertLocationCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookSecretScanningAlertLocationCreated
     */
    'action'?: WebhookSecretScanningAlertLocationCreatedActionEnum;
    /**
     * 
     * @type {SecretScanningAlertWebhook}
     * @memberof WebhookSecretScanningAlertLocationCreated
     */
    'alert': SecretScanningAlertWebhook;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSecretScanningAlertLocationCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {SecretScanningLocation}
     * @memberof WebhookSecretScanningAlertLocationCreated
     */
    'location': SecretScanningLocation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSecretScanningAlertLocationCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSecretScanningAlertLocationCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSecretScanningAlertLocationCreated
     */
    'sender': SimpleUser;
}

export const WebhookSecretScanningAlertLocationCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookSecretScanningAlertLocationCreatedActionEnum = typeof WebhookSecretScanningAlertLocationCreatedActionEnum[keyof typeof WebhookSecretScanningAlertLocationCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookSecretScanningAlertLocationCreatedFormEncoded
 */
export interface WebhookSecretScanningAlertLocationCreatedFormEncoded {
    /**
     * A URL-encoded string of the secret_scanning_alert_location.created JSON payload. The decoded payload is a JSON object.
     * @type {string}
     * @memberof WebhookSecretScanningAlertLocationCreatedFormEncoded
     */
    'payload': string;
}
/**
 * 
 * @export
 * @interface WebhookSecretScanningAlertPubliclyLeaked
 */
export interface WebhookSecretScanningAlertPubliclyLeaked {
    /**
     * 
     * @type {string}
     * @memberof WebhookSecretScanningAlertPubliclyLeaked
     */
    'action': WebhookSecretScanningAlertPubliclyLeakedActionEnum;
    /**
     * 
     * @type {SecretScanningAlertWebhook}
     * @memberof WebhookSecretScanningAlertPubliclyLeaked
     */
    'alert': SecretScanningAlertWebhook;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSecretScanningAlertPubliclyLeaked
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSecretScanningAlertPubliclyLeaked
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSecretScanningAlertPubliclyLeaked
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSecretScanningAlertPubliclyLeaked
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSecretScanningAlertPubliclyLeaked
     */
    'sender'?: SimpleUser;
}

export const WebhookSecretScanningAlertPubliclyLeakedActionEnum = {
    PubliclyLeaked: 'publicly_leaked'
} as const;

export type WebhookSecretScanningAlertPubliclyLeakedActionEnum = typeof WebhookSecretScanningAlertPubliclyLeakedActionEnum[keyof typeof WebhookSecretScanningAlertPubliclyLeakedActionEnum];

/**
 * 
 * @export
 * @interface WebhookSecretScanningAlertReopened
 */
export interface WebhookSecretScanningAlertReopened {
    /**
     * 
     * @type {string}
     * @memberof WebhookSecretScanningAlertReopened
     */
    'action': WebhookSecretScanningAlertReopenedActionEnum;
    /**
     * 
     * @type {SecretScanningAlertWebhook}
     * @memberof WebhookSecretScanningAlertReopened
     */
    'alert': SecretScanningAlertWebhook;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSecretScanningAlertReopened
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSecretScanningAlertReopened
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSecretScanningAlertReopened
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSecretScanningAlertReopened
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSecretScanningAlertReopened
     */
    'sender'?: SimpleUser;
}

export const WebhookSecretScanningAlertReopenedActionEnum = {
    Reopened: 'reopened'
} as const;

export type WebhookSecretScanningAlertReopenedActionEnum = typeof WebhookSecretScanningAlertReopenedActionEnum[keyof typeof WebhookSecretScanningAlertReopenedActionEnum];

/**
 * 
 * @export
 * @interface WebhookSecretScanningAlertResolved
 */
export interface WebhookSecretScanningAlertResolved {
    /**
     * 
     * @type {string}
     * @memberof WebhookSecretScanningAlertResolved
     */
    'action': WebhookSecretScanningAlertResolvedActionEnum;
    /**
     * 
     * @type {SecretScanningAlertWebhook}
     * @memberof WebhookSecretScanningAlertResolved
     */
    'alert': SecretScanningAlertWebhook;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSecretScanningAlertResolved
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSecretScanningAlertResolved
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSecretScanningAlertResolved
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSecretScanningAlertResolved
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSecretScanningAlertResolved
     */
    'sender'?: SimpleUser;
}

export const WebhookSecretScanningAlertResolvedActionEnum = {
    Resolved: 'resolved'
} as const;

export type WebhookSecretScanningAlertResolvedActionEnum = typeof WebhookSecretScanningAlertResolvedActionEnum[keyof typeof WebhookSecretScanningAlertResolvedActionEnum];

/**
 * 
 * @export
 * @interface WebhookSecretScanningAlertValidated
 */
export interface WebhookSecretScanningAlertValidated {
    /**
     * 
     * @type {string}
     * @memberof WebhookSecretScanningAlertValidated
     */
    'action': WebhookSecretScanningAlertValidatedActionEnum;
    /**
     * 
     * @type {SecretScanningAlertWebhook}
     * @memberof WebhookSecretScanningAlertValidated
     */
    'alert': SecretScanningAlertWebhook;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSecretScanningAlertValidated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSecretScanningAlertValidated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSecretScanningAlertValidated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSecretScanningAlertValidated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSecretScanningAlertValidated
     */
    'sender'?: SimpleUser;
}

export const WebhookSecretScanningAlertValidatedActionEnum = {
    Validated: 'validated'
} as const;

export type WebhookSecretScanningAlertValidatedActionEnum = typeof WebhookSecretScanningAlertValidatedActionEnum[keyof typeof WebhookSecretScanningAlertValidatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookSecretScanningScanCompleted
 */
export interface WebhookSecretScanningScanCompleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookSecretScanningScanCompleted
     */
    'action': WebhookSecretScanningScanCompletedActionEnum;
    /**
     * What type of scan was completed
     * @type {string}
     * @memberof WebhookSecretScanningScanCompleted
     */
    'type': WebhookSecretScanningScanCompletedTypeEnum;
    /**
     * What type of content was scanned
     * @type {string}
     * @memberof WebhookSecretScanningScanCompleted
     */
    'source': WebhookSecretScanningScanCompletedSourceEnum;
    /**
     * The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof WebhookSecretScanningScanCompleted
     */
    'started_at': string;
    /**
     * The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @type {string}
     * @memberof WebhookSecretScanningScanCompleted
     */
    'completed_at': string;
    /**
     * List of patterns that were updated. This will be empty for normal backfill scans or custom pattern updates
     * @type {Array<string>}
     * @memberof WebhookSecretScanningScanCompleted
     */
    'secret_types'?: Array<string> | null;
    /**
     * If the scan was triggered by a custom pattern update, this will be the name of the pattern that was updated
     * @type {string}
     * @memberof WebhookSecretScanningScanCompleted
     */
    'custom_pattern_name'?: string | null;
    /**
     * If the scan was triggered by a custom pattern update, this will be the scope of the pattern that was updated
     * @type {string}
     * @memberof WebhookSecretScanningScanCompleted
     */
    'custom_pattern_scope'?: WebhookSecretScanningScanCompletedCustomPatternScopeEnum | null;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSecretScanningScanCompleted
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSecretScanningScanCompleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSecretScanningScanCompleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSecretScanningScanCompleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSecretScanningScanCompleted
     */
    'sender'?: SimpleUser;
}

export const WebhookSecretScanningScanCompletedActionEnum = {
    Completed: 'completed'
} as const;

export type WebhookSecretScanningScanCompletedActionEnum = typeof WebhookSecretScanningScanCompletedActionEnum[keyof typeof WebhookSecretScanningScanCompletedActionEnum];
export const WebhookSecretScanningScanCompletedTypeEnum = {
    Backfill: 'backfill',
    CustomPatternBackfill: 'custom-pattern-backfill',
    PatternVersionBackfill: 'pattern-version-backfill'
} as const;

export type WebhookSecretScanningScanCompletedTypeEnum = typeof WebhookSecretScanningScanCompletedTypeEnum[keyof typeof WebhookSecretScanningScanCompletedTypeEnum];
export const WebhookSecretScanningScanCompletedSourceEnum = {
    Git: 'git',
    Issues: 'issues',
    PullRequests: 'pull-requests',
    Discussions: 'discussions',
    Wiki: 'wiki'
} as const;

export type WebhookSecretScanningScanCompletedSourceEnum = typeof WebhookSecretScanningScanCompletedSourceEnum[keyof typeof WebhookSecretScanningScanCompletedSourceEnum];
export const WebhookSecretScanningScanCompletedCustomPatternScopeEnum = {
    Repository: 'repository',
    Organization: 'organization',
    Enterprise: 'enterprise'
} as const;

export type WebhookSecretScanningScanCompletedCustomPatternScopeEnum = typeof WebhookSecretScanningScanCompletedCustomPatternScopeEnum[keyof typeof WebhookSecretScanningScanCompletedCustomPatternScopeEnum];

/**
 * 
 * @export
 * @interface WebhookSecurityAdvisoryPublished
 */
export interface WebhookSecurityAdvisoryPublished {
    /**
     * 
     * @type {string}
     * @memberof WebhookSecurityAdvisoryPublished
     */
    'action': WebhookSecurityAdvisoryPublishedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSecurityAdvisoryPublished
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSecurityAdvisoryPublished
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSecurityAdvisoryPublished
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSecurityAdvisoryPublished
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {WebhooksSecurityAdvisory}
     * @memberof WebhookSecurityAdvisoryPublished
     */
    'security_advisory': WebhooksSecurityAdvisory;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSecurityAdvisoryPublished
     */
    'sender'?: SimpleUser;
}

export const WebhookSecurityAdvisoryPublishedActionEnum = {
    Published: 'published'
} as const;

export type WebhookSecurityAdvisoryPublishedActionEnum = typeof WebhookSecurityAdvisoryPublishedActionEnum[keyof typeof WebhookSecurityAdvisoryPublishedActionEnum];

/**
 * 
 * @export
 * @interface WebhookSecurityAdvisoryUpdated
 */
export interface WebhookSecurityAdvisoryUpdated {
    /**
     * 
     * @type {string}
     * @memberof WebhookSecurityAdvisoryUpdated
     */
    'action': WebhookSecurityAdvisoryUpdatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSecurityAdvisoryUpdated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSecurityAdvisoryUpdated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSecurityAdvisoryUpdated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSecurityAdvisoryUpdated
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {WebhooksSecurityAdvisory}
     * @memberof WebhookSecurityAdvisoryUpdated
     */
    'security_advisory': WebhooksSecurityAdvisory;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSecurityAdvisoryUpdated
     */
    'sender'?: SimpleUser;
}

export const WebhookSecurityAdvisoryUpdatedActionEnum = {
    Updated: 'updated'
} as const;

export type WebhookSecurityAdvisoryUpdatedActionEnum = typeof WebhookSecurityAdvisoryUpdatedActionEnum[keyof typeof WebhookSecurityAdvisoryUpdatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookSecurityAdvisoryWithdrawn
 */
export interface WebhookSecurityAdvisoryWithdrawn {
    /**
     * 
     * @type {string}
     * @memberof WebhookSecurityAdvisoryWithdrawn
     */
    'action': WebhookSecurityAdvisoryWithdrawnActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSecurityAdvisoryWithdrawn
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSecurityAdvisoryWithdrawn
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSecurityAdvisoryWithdrawn
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSecurityAdvisoryWithdrawn
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {WebhookSecurityAdvisoryWithdrawnSecurityAdvisory}
     * @memberof WebhookSecurityAdvisoryWithdrawn
     */
    'security_advisory': WebhookSecurityAdvisoryWithdrawnSecurityAdvisory;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSecurityAdvisoryWithdrawn
     */
    'sender'?: SimpleUser;
}

export const WebhookSecurityAdvisoryWithdrawnActionEnum = {
    Withdrawn: 'withdrawn'
} as const;

export type WebhookSecurityAdvisoryWithdrawnActionEnum = typeof WebhookSecurityAdvisoryWithdrawnActionEnum[keyof typeof WebhookSecurityAdvisoryWithdrawnActionEnum];

/**
 * The details of the security advisory, including summary, description, and severity.
 * @export
 * @interface WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
 */
export interface WebhookSecurityAdvisoryWithdrawnSecurityAdvisory {
    /**
     * 
     * @type {WebhooksSecurityAdvisoryCvss}
     * @memberof WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
     */
    'cvss': WebhooksSecurityAdvisoryCvss;
    /**
     * 
     * @type {CvssSeverities}
     * @memberof WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
     */
    'cvss_severities'?: CvssSeverities | null;
    /**
     * 
     * @type {Array<WebhooksSecurityAdvisoryCwesInner>}
     * @memberof WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
     */
    'cwes': Array<WebhooksSecurityAdvisoryCwesInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
     */
    'description': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
     */
    'ghsa_id': string;
    /**
     * 
     * @type {Array<WebhooksSecurityAdvisoryIdentifiersInner>}
     * @memberof WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
     */
    'identifiers': Array<WebhooksSecurityAdvisoryIdentifiersInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
     */
    'published_at': string;
    /**
     * 
     * @type {Array<WebhooksSecurityAdvisoryReferencesInner>}
     * @memberof WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
     */
    'references': Array<WebhooksSecurityAdvisoryReferencesInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
     */
    'severity': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
     */
    'summary': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
     */
    'updated_at': string;
    /**
     * 
     * @type {Array<WebhooksSecurityAdvisoryVulnerabilitiesInner>}
     * @memberof WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
     */
    'vulnerabilities': Array<WebhooksSecurityAdvisoryVulnerabilitiesInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhookSecurityAdvisoryWithdrawnSecurityAdvisory
     */
    'withdrawn_at': string;
}
/**
 * 
 * @export
 * @interface WebhookSecurityAndAnalysis
 */
export interface WebhookSecurityAndAnalysis {
    /**
     * 
     * @type {WebhookSecurityAndAnalysisChanges}
     * @memberof WebhookSecurityAndAnalysis
     */
    'changes': WebhookSecurityAndAnalysisChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSecurityAndAnalysis
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSecurityAndAnalysis
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSecurityAndAnalysis
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {FullRepository}
     * @memberof WebhookSecurityAndAnalysis
     */
    'repository': FullRepository;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSecurityAndAnalysis
     */
    'sender'?: SimpleUser;
}
/**
 * 
 * @export
 * @interface WebhookSecurityAndAnalysisChanges
 */
export interface WebhookSecurityAndAnalysisChanges {
    /**
     * 
     * @type {WebhookSecurityAndAnalysisChangesFrom}
     * @memberof WebhookSecurityAndAnalysisChanges
     */
    'from'?: WebhookSecurityAndAnalysisChangesFrom;
}
/**
 * 
 * @export
 * @interface WebhookSecurityAndAnalysisChangesFrom
 */
export interface WebhookSecurityAndAnalysisChangesFrom {
    /**
     * 
     * @type {SecurityAndAnalysis}
     * @memberof WebhookSecurityAndAnalysisChangesFrom
     */
    'security_and_analysis'?: SecurityAndAnalysis | null;
}
/**
 * 
 * @export
 * @interface WebhookSponsorshipCancelled
 */
export interface WebhookSponsorshipCancelled {
    /**
     * 
     * @type {string}
     * @memberof WebhookSponsorshipCancelled
     */
    'action': WebhookSponsorshipCancelledActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSponsorshipCancelled
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSponsorshipCancelled
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSponsorshipCancelled
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSponsorshipCancelled
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSponsorshipCancelled
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksSponsorship}
     * @memberof WebhookSponsorshipCancelled
     */
    'sponsorship': WebhooksSponsorship;
}

export const WebhookSponsorshipCancelledActionEnum = {
    Cancelled: 'cancelled'
} as const;

export type WebhookSponsorshipCancelledActionEnum = typeof WebhookSponsorshipCancelledActionEnum[keyof typeof WebhookSponsorshipCancelledActionEnum];

/**
 * 
 * @export
 * @interface WebhookSponsorshipCreated
 */
export interface WebhookSponsorshipCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookSponsorshipCreated
     */
    'action': WebhookSponsorshipCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSponsorshipCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSponsorshipCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSponsorshipCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSponsorshipCreated
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSponsorshipCreated
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksSponsorship}
     * @memberof WebhookSponsorshipCreated
     */
    'sponsorship': WebhooksSponsorship;
}

export const WebhookSponsorshipCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookSponsorshipCreatedActionEnum = typeof WebhookSponsorshipCreatedActionEnum[keyof typeof WebhookSponsorshipCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookSponsorshipEdited
 */
export interface WebhookSponsorshipEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookSponsorshipEdited
     */
    'action': WebhookSponsorshipEditedActionEnum;
    /**
     * 
     * @type {WebhookSponsorshipEditedChanges}
     * @memberof WebhookSponsorshipEdited
     */
    'changes': WebhookSponsorshipEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSponsorshipEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSponsorshipEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSponsorshipEdited
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSponsorshipEdited
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSponsorshipEdited
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksSponsorship}
     * @memberof WebhookSponsorshipEdited
     */
    'sponsorship': WebhooksSponsorship;
}

export const WebhookSponsorshipEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookSponsorshipEditedActionEnum = typeof WebhookSponsorshipEditedActionEnum[keyof typeof WebhookSponsorshipEditedActionEnum];

/**
 * 
 * @export
 * @interface WebhookSponsorshipEditedChanges
 */
export interface WebhookSponsorshipEditedChanges {
    /**
     * 
     * @type {WebhookSponsorshipEditedChangesPrivacyLevel}
     * @memberof WebhookSponsorshipEditedChanges
     */
    'privacy_level'?: WebhookSponsorshipEditedChangesPrivacyLevel;
}
/**
 * 
 * @export
 * @interface WebhookSponsorshipEditedChangesPrivacyLevel
 */
export interface WebhookSponsorshipEditedChangesPrivacyLevel {
    /**
     * The `edited` event types include the details about the change when someone edits a sponsorship to change the privacy.
     * @type {string}
     * @memberof WebhookSponsorshipEditedChangesPrivacyLevel
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookSponsorshipPendingCancellation
 */
export interface WebhookSponsorshipPendingCancellation {
    /**
     * 
     * @type {string}
     * @memberof WebhookSponsorshipPendingCancellation
     */
    'action': WebhookSponsorshipPendingCancellationActionEnum;
    /**
     * The `pending_cancellation` and `pending_tier_change` event types will include the date the cancellation or tier change will take effect.
     * @type {string}
     * @memberof WebhookSponsorshipPendingCancellation
     */
    'effective_date'?: string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSponsorshipPendingCancellation
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSponsorshipPendingCancellation
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSponsorshipPendingCancellation
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSponsorshipPendingCancellation
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSponsorshipPendingCancellation
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksSponsorship}
     * @memberof WebhookSponsorshipPendingCancellation
     */
    'sponsorship': WebhooksSponsorship;
}

export const WebhookSponsorshipPendingCancellationActionEnum = {
    PendingCancellation: 'pending_cancellation'
} as const;

export type WebhookSponsorshipPendingCancellationActionEnum = typeof WebhookSponsorshipPendingCancellationActionEnum[keyof typeof WebhookSponsorshipPendingCancellationActionEnum];

/**
 * 
 * @export
 * @interface WebhookSponsorshipPendingTierChange
 */
export interface WebhookSponsorshipPendingTierChange {
    /**
     * 
     * @type {string}
     * @memberof WebhookSponsorshipPendingTierChange
     */
    'action': WebhookSponsorshipPendingTierChangeActionEnum;
    /**
     * 
     * @type {WebhooksChanges8}
     * @memberof WebhookSponsorshipPendingTierChange
     */
    'changes': WebhooksChanges8;
    /**
     * The `pending_cancellation` and `pending_tier_change` event types will include the date the cancellation or tier change will take effect.
     * @type {string}
     * @memberof WebhookSponsorshipPendingTierChange
     */
    'effective_date'?: string;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSponsorshipPendingTierChange
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSponsorshipPendingTierChange
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSponsorshipPendingTierChange
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSponsorshipPendingTierChange
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSponsorshipPendingTierChange
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksSponsorship}
     * @memberof WebhookSponsorshipPendingTierChange
     */
    'sponsorship': WebhooksSponsorship;
}

export const WebhookSponsorshipPendingTierChangeActionEnum = {
    PendingTierChange: 'pending_tier_change'
} as const;

export type WebhookSponsorshipPendingTierChangeActionEnum = typeof WebhookSponsorshipPendingTierChangeActionEnum[keyof typeof WebhookSponsorshipPendingTierChangeActionEnum];

/**
 * 
 * @export
 * @interface WebhookSponsorshipTierChanged
 */
export interface WebhookSponsorshipTierChanged {
    /**
     * 
     * @type {string}
     * @memberof WebhookSponsorshipTierChanged
     */
    'action': WebhookSponsorshipTierChangedActionEnum;
    /**
     * 
     * @type {WebhooksChanges8}
     * @memberof WebhookSponsorshipTierChanged
     */
    'changes': WebhooksChanges8;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookSponsorshipTierChanged
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSponsorshipTierChanged
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSponsorshipTierChanged
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSponsorshipTierChanged
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSponsorshipTierChanged
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksSponsorship}
     * @memberof WebhookSponsorshipTierChanged
     */
    'sponsorship': WebhooksSponsorship;
}

export const WebhookSponsorshipTierChangedActionEnum = {
    TierChanged: 'tier_changed'
} as const;

export type WebhookSponsorshipTierChangedActionEnum = typeof WebhookSponsorshipTierChangedActionEnum[keyof typeof WebhookSponsorshipTierChangedActionEnum];

/**
 * 
 * @export
 * @interface WebhookStarCreated
 */
export interface WebhookStarCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookStarCreated
     */
    'action': WebhookStarCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookStarCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookStarCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookStarCreated
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookStarCreated
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookStarCreated
     */
    'sender': SimpleUser;
    /**
     * The time the star was created. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`. Will be `null` for the `deleted` action.
     * @type {string}
     * @memberof WebhookStarCreated
     */
    'starred_at': string | null;
}

export const WebhookStarCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookStarCreatedActionEnum = typeof WebhookStarCreatedActionEnum[keyof typeof WebhookStarCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookStarDeleted
 */
export interface WebhookStarDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookStarDeleted
     */
    'action': WebhookStarDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookStarDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookStarDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookStarDeleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookStarDeleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookStarDeleted
     */
    'sender': SimpleUser;
    /**
     * The time the star was created. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`. Will be `null` for the `deleted` action.
     * @type {any}
     * @memberof WebhookStarDeleted
     */
    'starred_at': any | null;
}

export const WebhookStarDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookStarDeletedActionEnum = typeof WebhookStarDeletedActionEnum[keyof typeof WebhookStarDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookStatus
 */
export interface WebhookStatus {
    /**
     * 
     * @type {string}
     * @memberof WebhookStatus
     */
    'avatar_url'?: string | null;
    /**
     * An array of branch objects containing the status\' SHA. Each branch contains the given SHA, but the SHA may or may not be the head of the branch. The array includes a maximum of 10 branches.
     * @type {Array<WebhookStatusBranchesInner>}
     * @memberof WebhookStatus
     */
    'branches': Array<WebhookStatusBranchesInner>;
    /**
     * 
     * @type {WebhookStatusCommit}
     * @memberof WebhookStatus
     */
    'commit': WebhookStatusCommit;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatus
     */
    'context': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatus
     */
    'created_at': string;
    /**
     * The optional human-readable description added to the status.
     * @type {string}
     * @memberof WebhookStatus
     */
    'description': string | null;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookStatus
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * The unique identifier of the status.
     * @type {number}
     * @memberof WebhookStatus
     */
    'id': number;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookStatus
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatus
     */
    'name': string;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookStatus
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookStatus
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookStatus
     */
    'sender': SimpleUser;
    /**
     * The Commit SHA.
     * @type {string}
     * @memberof WebhookStatus
     */
    'sha': string;
    /**
     * The new state. Can be `pending`, `success`, `failure`, or `error`.
     * @type {string}
     * @memberof WebhookStatus
     */
    'state': WebhookStatusStateEnum;
    /**
     * The optional link added to the status.
     * @type {string}
     * @memberof WebhookStatus
     */
    'target_url': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatus
     */
    'updated_at': string;
}

export const WebhookStatusStateEnum = {
    Pending: 'pending',
    Success: 'success',
    Failure: 'failure',
    Error: 'error'
} as const;

export type WebhookStatusStateEnum = typeof WebhookStatusStateEnum[keyof typeof WebhookStatusStateEnum];

/**
 * 
 * @export
 * @interface WebhookStatusBranchesInner
 */
export interface WebhookStatusBranchesInner {
    /**
     * 
     * @type {WebhookStatusBranchesInnerCommit}
     * @memberof WebhookStatusBranchesInner
     */
    'commit': WebhookStatusBranchesInnerCommit;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusBranchesInner
     */
    'name': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookStatusBranchesInner
     */
    'protected': boolean;
}
/**
 * 
 * @export
 * @interface WebhookStatusBranchesInnerCommit
 */
export interface WebhookStatusBranchesInnerCommit {
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusBranchesInnerCommit
     */
    'sha': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusBranchesInnerCommit
     */
    'url': string | null;
}
/**
 * 
 * @export
 * @interface WebhookStatusCommit
 */
export interface WebhookStatusCommit {
    /**
     * 
     * @type {User8}
     * @memberof WebhookStatusCommit
     */
    'author': User8 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommit
     */
    'comments_url': string;
    /**
     * 
     * @type {WebhookStatusCommitCommit}
     * @memberof WebhookStatusCommit
     */
    'commit': WebhookStatusCommitCommit;
    /**
     * 
     * @type {User8}
     * @memberof WebhookStatusCommit
     */
    'committer': User8 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommit
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommit
     */
    'node_id': string;
    /**
     * 
     * @type {Array<WebhookStatusCommitParentsInner>}
     * @memberof WebhookStatusCommit
     */
    'parents': Array<WebhookStatusCommitParentsInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommit
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommit
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WebhookStatusCommitCommit
 */
export interface WebhookStatusCommitCommit {
    /**
     * 
     * @type {WebhookStatusCommitCommitAuthor}
     * @memberof WebhookStatusCommitCommit
     */
    'author': WebhookStatusCommitCommitAuthor;
    /**
     * 
     * @type {number}
     * @memberof WebhookStatusCommitCommit
     */
    'comment_count': number;
    /**
     * 
     * @type {WebhookStatusCommitCommitAuthor}
     * @memberof WebhookStatusCommitCommit
     */
    'committer': WebhookStatusCommitCommitAuthor;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommitCommit
     */
    'message': string;
    /**
     * 
     * @type {ShortBranchCommit}
     * @memberof WebhookStatusCommitCommit
     */
    'tree': ShortBranchCommit;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommitCommit
     */
    'url': string;
    /**
     * 
     * @type {WebhookStatusCommitCommitVerification}
     * @memberof WebhookStatusCommitCommit
     */
    'verification': WebhookStatusCommitCommitVerification;
}
/**
 * 
 * @export
 * @interface WebhookStatusCommitCommitAuthor
 */
export interface WebhookStatusCommitCommitAuthor {
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommitCommitAuthor
     */
    'date': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommitCommitAuthor
     */
    'email': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommitCommitAuthor
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommitCommitAuthor
     */
    'username'?: string;
}
/**
 * 
 * @export
 * @interface WebhookStatusCommitCommitVerification
 */
export interface WebhookStatusCommitCommitVerification {
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommitCommitVerification
     */
    'payload': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommitCommitVerification
     */
    'reason': WebhookStatusCommitCommitVerificationReasonEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommitCommitVerification
     */
    'signature': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof WebhookStatusCommitCommitVerification
     */
    'verified': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommitCommitVerification
     */
    'verified_at': string | null;
}

export const WebhookStatusCommitCommitVerificationReasonEnum = {
    ExpiredKey: 'expired_key',
    NotSigningKey: 'not_signing_key',
    GpgverifyError: 'gpgverify_error',
    GpgverifyUnavailable: 'gpgverify_unavailable',
    Unsigned: 'unsigned',
    UnknownSignatureType: 'unknown_signature_type',
    NoUser: 'no_user',
    UnverifiedEmail: 'unverified_email',
    BadEmail: 'bad_email',
    UnknownKey: 'unknown_key',
    MalformedSignature: 'malformed_signature',
    Invalid: 'invalid',
    Valid: 'valid',
    BadCert: 'bad_cert',
    OcspPending: 'ocsp_pending'
} as const;

export type WebhookStatusCommitCommitVerificationReasonEnum = typeof WebhookStatusCommitCommitVerificationReasonEnum[keyof typeof WebhookStatusCommitCommitVerificationReasonEnum];

/**
 * 
 * @export
 * @interface WebhookStatusCommitParentsInner
 */
export interface WebhookStatusCommitParentsInner {
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommitParentsInner
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommitParentsInner
     */
    'sha': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookStatusCommitParentsInner
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WebhookSubIssuesParentIssueAdded
 */
export interface WebhookSubIssuesParentIssueAdded {
    /**
     * 
     * @type {string}
     * @memberof WebhookSubIssuesParentIssueAdded
     */
    'action': WebhookSubIssuesParentIssueAddedActionEnum;
    /**
     * The ID of the parent issue.
     * @type {number}
     * @memberof WebhookSubIssuesParentIssueAdded
     */
    'parent_issue_id': number;
    /**
     * 
     * @type {Issue}
     * @memberof WebhookSubIssuesParentIssueAdded
     */
    'parent_issue': Issue;
    /**
     * 
     * @type {Repository}
     * @memberof WebhookSubIssuesParentIssueAdded
     */
    'parent_issue_repo': Repository;
    /**
     * The ID of the sub-issue.
     * @type {number}
     * @memberof WebhookSubIssuesParentIssueAdded
     */
    'sub_issue_id': number;
    /**
     * 
     * @type {Issue}
     * @memberof WebhookSubIssuesParentIssueAdded
     */
    'sub_issue': Issue;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSubIssuesParentIssueAdded
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSubIssuesParentIssueAdded
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSubIssuesParentIssueAdded
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSubIssuesParentIssueAdded
     */
    'sender'?: SimpleUser;
}

export const WebhookSubIssuesParentIssueAddedActionEnum = {
    ParentIssueAdded: 'parent_issue_added'
} as const;

export type WebhookSubIssuesParentIssueAddedActionEnum = typeof WebhookSubIssuesParentIssueAddedActionEnum[keyof typeof WebhookSubIssuesParentIssueAddedActionEnum];

/**
 * 
 * @export
 * @interface WebhookSubIssuesParentIssueRemoved
 */
export interface WebhookSubIssuesParentIssueRemoved {
    /**
     * 
     * @type {string}
     * @memberof WebhookSubIssuesParentIssueRemoved
     */
    'action': WebhookSubIssuesParentIssueRemovedActionEnum;
    /**
     * The ID of the parent issue.
     * @type {number}
     * @memberof WebhookSubIssuesParentIssueRemoved
     */
    'parent_issue_id': number;
    /**
     * 
     * @type {Issue}
     * @memberof WebhookSubIssuesParentIssueRemoved
     */
    'parent_issue': Issue;
    /**
     * 
     * @type {Repository}
     * @memberof WebhookSubIssuesParentIssueRemoved
     */
    'parent_issue_repo': Repository;
    /**
     * The ID of the sub-issue.
     * @type {number}
     * @memberof WebhookSubIssuesParentIssueRemoved
     */
    'sub_issue_id': number;
    /**
     * 
     * @type {Issue}
     * @memberof WebhookSubIssuesParentIssueRemoved
     */
    'sub_issue': Issue;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSubIssuesParentIssueRemoved
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSubIssuesParentIssueRemoved
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSubIssuesParentIssueRemoved
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSubIssuesParentIssueRemoved
     */
    'sender'?: SimpleUser;
}

export const WebhookSubIssuesParentIssueRemovedActionEnum = {
    ParentIssueRemoved: 'parent_issue_removed'
} as const;

export type WebhookSubIssuesParentIssueRemovedActionEnum = typeof WebhookSubIssuesParentIssueRemovedActionEnum[keyof typeof WebhookSubIssuesParentIssueRemovedActionEnum];

/**
 * 
 * @export
 * @interface WebhookSubIssuesSubIssueAdded
 */
export interface WebhookSubIssuesSubIssueAdded {
    /**
     * 
     * @type {string}
     * @memberof WebhookSubIssuesSubIssueAdded
     */
    'action': WebhookSubIssuesSubIssueAddedActionEnum;
    /**
     * The ID of the sub-issue.
     * @type {number}
     * @memberof WebhookSubIssuesSubIssueAdded
     */
    'sub_issue_id': number;
    /**
     * 
     * @type {Issue}
     * @memberof WebhookSubIssuesSubIssueAdded
     */
    'sub_issue': Issue;
    /**
     * 
     * @type {Repository}
     * @memberof WebhookSubIssuesSubIssueAdded
     */
    'sub_issue_repo': Repository;
    /**
     * The ID of the parent issue.
     * @type {number}
     * @memberof WebhookSubIssuesSubIssueAdded
     */
    'parent_issue_id': number;
    /**
     * 
     * @type {Issue}
     * @memberof WebhookSubIssuesSubIssueAdded
     */
    'parent_issue': Issue;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSubIssuesSubIssueAdded
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSubIssuesSubIssueAdded
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSubIssuesSubIssueAdded
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSubIssuesSubIssueAdded
     */
    'sender'?: SimpleUser;
}

export const WebhookSubIssuesSubIssueAddedActionEnum = {
    SubIssueAdded: 'sub_issue_added'
} as const;

export type WebhookSubIssuesSubIssueAddedActionEnum = typeof WebhookSubIssuesSubIssueAddedActionEnum[keyof typeof WebhookSubIssuesSubIssueAddedActionEnum];

/**
 * 
 * @export
 * @interface WebhookSubIssuesSubIssueRemoved
 */
export interface WebhookSubIssuesSubIssueRemoved {
    /**
     * 
     * @type {string}
     * @memberof WebhookSubIssuesSubIssueRemoved
     */
    'action': WebhookSubIssuesSubIssueRemovedActionEnum;
    /**
     * The ID of the sub-issue.
     * @type {number}
     * @memberof WebhookSubIssuesSubIssueRemoved
     */
    'sub_issue_id': number;
    /**
     * 
     * @type {Issue}
     * @memberof WebhookSubIssuesSubIssueRemoved
     */
    'sub_issue': Issue;
    /**
     * 
     * @type {Repository}
     * @memberof WebhookSubIssuesSubIssueRemoved
     */
    'sub_issue_repo': Repository;
    /**
     * The ID of the parent issue.
     * @type {number}
     * @memberof WebhookSubIssuesSubIssueRemoved
     */
    'parent_issue_id': number;
    /**
     * 
     * @type {Issue}
     * @memberof WebhookSubIssuesSubIssueRemoved
     */
    'parent_issue': Issue;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookSubIssuesSubIssueRemoved
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookSubIssuesSubIssueRemoved
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookSubIssuesSubIssueRemoved
     */
    'repository'?: RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookSubIssuesSubIssueRemoved
     */
    'sender'?: SimpleUser;
}

export const WebhookSubIssuesSubIssueRemovedActionEnum = {
    SubIssueRemoved: 'sub_issue_removed'
} as const;

export type WebhookSubIssuesSubIssueRemovedActionEnum = typeof WebhookSubIssuesSubIssueRemovedActionEnum[keyof typeof WebhookSubIssuesSubIssueRemovedActionEnum];

/**
 * 
 * @export
 * @interface WebhookTeamAdd
 */
export interface WebhookTeamAdd {
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookTeamAdd
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookTeamAdd
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookTeamAdd
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookTeamAdd
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookTeamAdd
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksTeam1}
     * @memberof WebhookTeamAdd
     */
    'team': WebhooksTeam1;
}
/**
 * 
 * @export
 * @interface WebhookTeamAddedToRepository
 */
export interface WebhookTeamAddedToRepository {
    /**
     * 
     * @type {string}
     * @memberof WebhookTeamAddedToRepository
     */
    'action': WebhookTeamAddedToRepositoryActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookTeamAddedToRepository
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookTeamAddedToRepository
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookTeamAddedToRepository
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {Repository15}
     * @memberof WebhookTeamAddedToRepository
     */
    'repository'?: Repository15;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookTeamAddedToRepository
     */
    'sender'?: SimpleUser;
    /**
     * 
     * @type {WebhooksTeam1}
     * @memberof WebhookTeamAddedToRepository
     */
    'team': WebhooksTeam1;
}

export const WebhookTeamAddedToRepositoryActionEnum = {
    AddedToRepository: 'added_to_repository'
} as const;

export type WebhookTeamAddedToRepositoryActionEnum = typeof WebhookTeamAddedToRepositoryActionEnum[keyof typeof WebhookTeamAddedToRepositoryActionEnum];

/**
 * 
 * @export
 * @interface WebhookTeamCreated
 */
export interface WebhookTeamCreated {
    /**
     * 
     * @type {string}
     * @memberof WebhookTeamCreated
     */
    'action': WebhookTeamCreatedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookTeamCreated
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookTeamCreated
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookTeamCreated
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {Repository15}
     * @memberof WebhookTeamCreated
     */
    'repository'?: Repository15;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookTeamCreated
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksTeam1}
     * @memberof WebhookTeamCreated
     */
    'team': WebhooksTeam1;
}

export const WebhookTeamCreatedActionEnum = {
    Created: 'created'
} as const;

export type WebhookTeamCreatedActionEnum = typeof WebhookTeamCreatedActionEnum[keyof typeof WebhookTeamCreatedActionEnum];

/**
 * 
 * @export
 * @interface WebhookTeamDeleted
 */
export interface WebhookTeamDeleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookTeamDeleted
     */
    'action': WebhookTeamDeletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookTeamDeleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookTeamDeleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookTeamDeleted
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {Repository15}
     * @memberof WebhookTeamDeleted
     */
    'repository'?: Repository15;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookTeamDeleted
     */
    'sender'?: SimpleUser;
    /**
     * 
     * @type {WebhooksTeam1}
     * @memberof WebhookTeamDeleted
     */
    'team': WebhooksTeam1;
}

export const WebhookTeamDeletedActionEnum = {
    Deleted: 'deleted'
} as const;

export type WebhookTeamDeletedActionEnum = typeof WebhookTeamDeletedActionEnum[keyof typeof WebhookTeamDeletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookTeamEdited
 */
export interface WebhookTeamEdited {
    /**
     * 
     * @type {string}
     * @memberof WebhookTeamEdited
     */
    'action': WebhookTeamEditedActionEnum;
    /**
     * 
     * @type {WebhookTeamEditedChanges}
     * @memberof WebhookTeamEdited
     */
    'changes': WebhookTeamEditedChanges;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookTeamEdited
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookTeamEdited
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookTeamEdited
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {Repository15}
     * @memberof WebhookTeamEdited
     */
    'repository'?: Repository15;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookTeamEdited
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksTeam1}
     * @memberof WebhookTeamEdited
     */
    'team': WebhooksTeam1;
}

export const WebhookTeamEditedActionEnum = {
    Edited: 'edited'
} as const;

export type WebhookTeamEditedActionEnum = typeof WebhookTeamEditedActionEnum[keyof typeof WebhookTeamEditedActionEnum];

/**
 * The changes to the team if the action was `edited`.
 * @export
 * @interface WebhookTeamEditedChanges
 */
export interface WebhookTeamEditedChanges {
    /**
     * 
     * @type {WebhookLabelEditedChangesDescription}
     * @memberof WebhookTeamEditedChanges
     */
    'description'?: WebhookLabelEditedChangesDescription;
    /**
     * 
     * @type {WebhookLabelEditedChangesName}
     * @memberof WebhookTeamEditedChanges
     */
    'name'?: WebhookLabelEditedChangesName;
    /**
     * 
     * @type {WebhookTeamEditedChangesPrivacy}
     * @memberof WebhookTeamEditedChanges
     */
    'privacy'?: WebhookTeamEditedChangesPrivacy;
    /**
     * 
     * @type {WebhookTeamEditedChangesNotificationSetting}
     * @memberof WebhookTeamEditedChanges
     */
    'notification_setting'?: WebhookTeamEditedChangesNotificationSetting;
    /**
     * 
     * @type {WebhookTeamEditedChangesRepository}
     * @memberof WebhookTeamEditedChanges
     */
    'repository'?: WebhookTeamEditedChangesRepository;
}
/**
 * 
 * @export
 * @interface WebhookTeamEditedChangesNotificationSetting
 */
export interface WebhookTeamEditedChangesNotificationSetting {
    /**
     * The previous version of the team\'s notification setting if the action was `edited`.
     * @type {string}
     * @memberof WebhookTeamEditedChangesNotificationSetting
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookTeamEditedChangesPrivacy
 */
export interface WebhookTeamEditedChangesPrivacy {
    /**
     * The previous version of the team\'s privacy if the action was `edited`.
     * @type {string}
     * @memberof WebhookTeamEditedChangesPrivacy
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhookTeamEditedChangesRepository
 */
export interface WebhookTeamEditedChangesRepository {
    /**
     * 
     * @type {WebhookTeamEditedChangesRepositoryPermissions}
     * @memberof WebhookTeamEditedChangesRepository
     */
    'permissions': WebhookTeamEditedChangesRepositoryPermissions;
}
/**
 * 
 * @export
 * @interface WebhookTeamEditedChangesRepositoryPermissions
 */
export interface WebhookTeamEditedChangesRepositoryPermissions {
    /**
     * 
     * @type {WebhookTeamEditedChangesRepositoryPermissionsFrom}
     * @memberof WebhookTeamEditedChangesRepositoryPermissions
     */
    'from': WebhookTeamEditedChangesRepositoryPermissionsFrom;
}
/**
 * 
 * @export
 * @interface WebhookTeamEditedChangesRepositoryPermissionsFrom
 */
export interface WebhookTeamEditedChangesRepositoryPermissionsFrom {
    /**
     * The previous version of the team member\'s `admin` permission on a repository, if the action was `edited`.
     * @type {boolean}
     * @memberof WebhookTeamEditedChangesRepositoryPermissionsFrom
     */
    'admin'?: boolean;
    /**
     * The previous version of the team member\'s `pull` permission on a repository, if the action was `edited`.
     * @type {boolean}
     * @memberof WebhookTeamEditedChangesRepositoryPermissionsFrom
     */
    'pull'?: boolean;
    /**
     * The previous version of the team member\'s `push` permission on a repository, if the action was `edited`.
     * @type {boolean}
     * @memberof WebhookTeamEditedChangesRepositoryPermissionsFrom
     */
    'push'?: boolean;
}
/**
 * 
 * @export
 * @interface WebhookTeamRemovedFromRepository
 */
export interface WebhookTeamRemovedFromRepository {
    /**
     * 
     * @type {string}
     * @memberof WebhookTeamRemovedFromRepository
     */
    'action': WebhookTeamRemovedFromRepositoryActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookTeamRemovedFromRepository
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookTeamRemovedFromRepository
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookTeamRemovedFromRepository
     */
    'organization': OrganizationSimpleWebhooks;
    /**
     * 
     * @type {Repository15}
     * @memberof WebhookTeamRemovedFromRepository
     */
    'repository'?: Repository15;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookTeamRemovedFromRepository
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksTeam1}
     * @memberof WebhookTeamRemovedFromRepository
     */
    'team': WebhooksTeam1;
}

export const WebhookTeamRemovedFromRepositoryActionEnum = {
    RemovedFromRepository: 'removed_from_repository'
} as const;

export type WebhookTeamRemovedFromRepositoryActionEnum = typeof WebhookTeamRemovedFromRepositoryActionEnum[keyof typeof WebhookTeamRemovedFromRepositoryActionEnum];

/**
 * 
 * @export
 * @interface WebhookWatchStarted
 */
export interface WebhookWatchStarted {
    /**
     * 
     * @type {string}
     * @memberof WebhookWatchStarted
     */
    'action': WebhookWatchStartedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookWatchStarted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookWatchStarted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookWatchStarted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookWatchStarted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookWatchStarted
     */
    'sender': SimpleUser;
}

export const WebhookWatchStartedActionEnum = {
    Started: 'started'
} as const;

export type WebhookWatchStartedActionEnum = typeof WebhookWatchStartedActionEnum[keyof typeof WebhookWatchStartedActionEnum];

/**
 * 
 * @export
 * @interface WebhookWorkflowDispatch
 */
export interface WebhookWorkflowDispatch {
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookWorkflowDispatch
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof WebhookWorkflowDispatch
     */
    'inputs': { [key: string]: any; } | null;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookWorkflowDispatch
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookWorkflowDispatch
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowDispatch
     */
    'ref': string;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookWorkflowDispatch
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookWorkflowDispatch
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowDispatch
     */
    'workflow': string;
}
/**
 * 
 * @export
 * @interface WebhookWorkflowJobCompleted
 */
export interface WebhookWorkflowJobCompleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompleted
     */
    'action': WebhookWorkflowJobCompletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookWorkflowJobCompleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookWorkflowJobCompleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookWorkflowJobCompleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookWorkflowJobCompleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookWorkflowJobCompleted
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhookWorkflowJobCompletedWorkflowJob}
     * @memberof WebhookWorkflowJobCompleted
     */
    'workflow_job': WebhookWorkflowJobCompletedWorkflowJob;
    /**
     * 
     * @type {Deployment}
     * @memberof WebhookWorkflowJobCompleted
     */
    'deployment'?: Deployment;
}

export const WebhookWorkflowJobCompletedActionEnum = {
    Completed: 'completed'
} as const;

export type WebhookWorkflowJobCompletedActionEnum = typeof WebhookWorkflowJobCompletedActionEnum[keyof typeof WebhookWorkflowJobCompletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookWorkflowJobCompletedWorkflowJob
 */
export interface WebhookWorkflowJobCompletedWorkflowJob {
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'check_run_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'completed_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'conclusion': WebhookWorkflowJobCompletedWorkflowJobConclusionEnum;
    /**
     * The time that the job created.
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'id': number;
    /**
     * 
     * @type {Array<string | null>}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'labels': Array<string | null>;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'run_attempt': number;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'run_id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'run_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'runner_group_id': number | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'runner_group_name': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'runner_id': number | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'runner_name': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'started_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'status': string;
    /**
     * The name of the current branch.
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'head_branch': string | null;
    /**
     * The name of the workflow.
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'workflow_name': string | null;
    /**
     * 
     * @type {Array<object | null>}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'steps': Array<object | null>;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobCompletedWorkflowJob
     */
    'url': string;
}

export const WebhookWorkflowJobCompletedWorkflowJobConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Skipped: 'skipped',
    Cancelled: 'cancelled',
    ActionRequired: 'action_required',
    Neutral: 'neutral',
    TimedOut: 'timed_out'
} as const;

export type WebhookWorkflowJobCompletedWorkflowJobConclusionEnum = typeof WebhookWorkflowJobCompletedWorkflowJobConclusionEnum[keyof typeof WebhookWorkflowJobCompletedWorkflowJobConclusionEnum];

/**
 * 
 * @export
 * @interface WebhookWorkflowJobInProgress
 */
export interface WebhookWorkflowJobInProgress {
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgress
     */
    'action': WebhookWorkflowJobInProgressActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookWorkflowJobInProgress
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookWorkflowJobInProgress
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookWorkflowJobInProgress
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookWorkflowJobInProgress
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookWorkflowJobInProgress
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhookWorkflowJobInProgressWorkflowJob}
     * @memberof WebhookWorkflowJobInProgress
     */
    'workflow_job': WebhookWorkflowJobInProgressWorkflowJob;
    /**
     * 
     * @type {Deployment}
     * @memberof WebhookWorkflowJobInProgress
     */
    'deployment'?: Deployment;
}

export const WebhookWorkflowJobInProgressActionEnum = {
    InProgress: 'in_progress'
} as const;

export type WebhookWorkflowJobInProgressActionEnum = typeof WebhookWorkflowJobInProgressActionEnum[keyof typeof WebhookWorkflowJobInProgressActionEnum];

/**
 * 
 * @export
 * @interface WebhookWorkflowJobInProgressWorkflowJob
 */
export interface WebhookWorkflowJobInProgressWorkflowJob {
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'check_run_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'completed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'conclusion': string | null;
    /**
     * The time that the job created.
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'id': number;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'labels': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'run_attempt': number;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'run_id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'run_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'runner_group_id': number | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'runner_group_name': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'runner_id': number | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'runner_name': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'started_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'status': WebhookWorkflowJobInProgressWorkflowJobStatusEnum;
    /**
     * The name of the current branch.
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'head_branch': string | null;
    /**
     * The name of the workflow.
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'workflow_name': string | null;
    /**
     * 
     * @type {Array<WorkflowStep2>}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'steps': Array<WorkflowStep2>;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobInProgressWorkflowJob
     */
    'url': string;
}

export const WebhookWorkflowJobInProgressWorkflowJobStatusEnum = {
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued'
} as const;

export type WebhookWorkflowJobInProgressWorkflowJobStatusEnum = typeof WebhookWorkflowJobInProgressWorkflowJobStatusEnum[keyof typeof WebhookWorkflowJobInProgressWorkflowJobStatusEnum];

/**
 * 
 * @export
 * @interface WebhookWorkflowJobQueued
 */
export interface WebhookWorkflowJobQueued {
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueued
     */
    'action': WebhookWorkflowJobQueuedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookWorkflowJobQueued
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookWorkflowJobQueued
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookWorkflowJobQueued
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookWorkflowJobQueued
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookWorkflowJobQueued
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhookWorkflowJobQueuedWorkflowJob}
     * @memberof WebhookWorkflowJobQueued
     */
    'workflow_job': WebhookWorkflowJobQueuedWorkflowJob;
    /**
     * 
     * @type {Deployment}
     * @memberof WebhookWorkflowJobQueued
     */
    'deployment'?: Deployment;
}

export const WebhookWorkflowJobQueuedActionEnum = {
    Queued: 'queued'
} as const;

export type WebhookWorkflowJobQueuedActionEnum = typeof WebhookWorkflowJobQueuedActionEnum[keyof typeof WebhookWorkflowJobQueuedActionEnum];

/**
 * 
 * @export
 * @interface WebhookWorkflowJobQueuedWorkflowJob
 */
export interface WebhookWorkflowJobQueuedWorkflowJob {
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'check_run_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'completed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'conclusion': string | null;
    /**
     * The time that the job created.
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'id': number;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'labels': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'run_attempt': number;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'run_id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'run_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'runner_group_id': number | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'runner_group_name': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'runner_id': number | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'runner_name': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'started_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'status': WebhookWorkflowJobQueuedWorkflowJobStatusEnum;
    /**
     * The name of the current branch.
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'head_branch': string | null;
    /**
     * The name of the workflow.
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'workflow_name': string | null;
    /**
     * 
     * @type {Array<WorkflowStep3>}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'steps': Array<WorkflowStep3>;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobQueuedWorkflowJob
     */
    'url': string;
}

export const WebhookWorkflowJobQueuedWorkflowJobStatusEnum = {
    Queued: 'queued',
    InProgress: 'in_progress',
    Completed: 'completed',
    Waiting: 'waiting'
} as const;

export type WebhookWorkflowJobQueuedWorkflowJobStatusEnum = typeof WebhookWorkflowJobQueuedWorkflowJobStatusEnum[keyof typeof WebhookWorkflowJobQueuedWorkflowJobStatusEnum];

/**
 * 
 * @export
 * @interface WebhookWorkflowJobWaiting
 */
export interface WebhookWorkflowJobWaiting {
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaiting
     */
    'action': WebhookWorkflowJobWaitingActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookWorkflowJobWaiting
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookWorkflowJobWaiting
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookWorkflowJobWaiting
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookWorkflowJobWaiting
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookWorkflowJobWaiting
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhookWorkflowJobWaitingWorkflowJob}
     * @memberof WebhookWorkflowJobWaiting
     */
    'workflow_job': WebhookWorkflowJobWaitingWorkflowJob;
    /**
     * 
     * @type {Deployment}
     * @memberof WebhookWorkflowJobWaiting
     */
    'deployment'?: Deployment;
}

export const WebhookWorkflowJobWaitingActionEnum = {
    Waiting: 'waiting'
} as const;

export type WebhookWorkflowJobWaitingActionEnum = typeof WebhookWorkflowJobWaitingActionEnum[keyof typeof WebhookWorkflowJobWaitingActionEnum];

/**
 * 
 * @export
 * @interface WebhookWorkflowJobWaitingWorkflowJob
 */
export interface WebhookWorkflowJobWaitingWorkflowJob {
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'check_run_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'completed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'conclusion': string | null;
    /**
     * The time that the job created.
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'id': number;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'labels': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'run_attempt': number;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'run_id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'run_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'runner_group_id': number | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'runner_group_name': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'runner_id': number | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'runner_name': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'started_at': string;
    /**
     * The name of the current branch.
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'head_branch': string | null;
    /**
     * The name of the workflow.
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'workflow_name': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'status': WebhookWorkflowJobWaitingWorkflowJobStatusEnum;
    /**
     * 
     * @type {Array<WorkflowStep4>}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'steps': Array<WorkflowStep4>;
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowJobWaitingWorkflowJob
     */
    'url': string;
}

export const WebhookWorkflowJobWaitingWorkflowJobStatusEnum = {
    Queued: 'queued',
    InProgress: 'in_progress',
    Completed: 'completed',
    Waiting: 'waiting'
} as const;

export type WebhookWorkflowJobWaitingWorkflowJobStatusEnum = typeof WebhookWorkflowJobWaitingWorkflowJobStatusEnum[keyof typeof WebhookWorkflowJobWaitingWorkflowJobStatusEnum];

/**
 * 
 * @export
 * @interface WebhookWorkflowRunCompleted
 */
export interface WebhookWorkflowRunCompleted {
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowRunCompleted
     */
    'action': WebhookWorkflowRunCompletedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookWorkflowRunCompleted
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookWorkflowRunCompleted
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookWorkflowRunCompleted
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookWorkflowRunCompleted
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookWorkflowRunCompleted
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksWorkflow}
     * @memberof WebhookWorkflowRunCompleted
     */
    'workflow': WebhooksWorkflow | null;
    /**
     * 
     * @type {WorkflowRun}
     * @memberof WebhookWorkflowRunCompleted
     */
    'workflow_run': WorkflowRun;
}

export const WebhookWorkflowRunCompletedActionEnum = {
    Completed: 'completed'
} as const;

export type WebhookWorkflowRunCompletedActionEnum = typeof WebhookWorkflowRunCompletedActionEnum[keyof typeof WebhookWorkflowRunCompletedActionEnum];

/**
 * 
 * @export
 * @interface WebhookWorkflowRunInProgress
 */
export interface WebhookWorkflowRunInProgress {
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowRunInProgress
     */
    'action': WebhookWorkflowRunInProgressActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookWorkflowRunInProgress
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookWorkflowRunInProgress
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookWorkflowRunInProgress
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookWorkflowRunInProgress
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookWorkflowRunInProgress
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksWorkflow}
     * @memberof WebhookWorkflowRunInProgress
     */
    'workflow': WebhooksWorkflow | null;
    /**
     * 
     * @type {WorkflowRun1}
     * @memberof WebhookWorkflowRunInProgress
     */
    'workflow_run': WorkflowRun1;
}

export const WebhookWorkflowRunInProgressActionEnum = {
    InProgress: 'in_progress'
} as const;

export type WebhookWorkflowRunInProgressActionEnum = typeof WebhookWorkflowRunInProgressActionEnum[keyof typeof WebhookWorkflowRunInProgressActionEnum];

/**
 * 
 * @export
 * @interface WebhookWorkflowRunRequested
 */
export interface WebhookWorkflowRunRequested {
    /**
     * 
     * @type {string}
     * @memberof WebhookWorkflowRunRequested
     */
    'action': WebhookWorkflowRunRequestedActionEnum;
    /**
     * 
     * @type {EnterpriseWebhooks}
     * @memberof WebhookWorkflowRunRequested
     */
    'enterprise'?: EnterpriseWebhooks;
    /**
     * 
     * @type {SimpleInstallation}
     * @memberof WebhookWorkflowRunRequested
     */
    'installation'?: SimpleInstallation;
    /**
     * 
     * @type {OrganizationSimpleWebhooks}
     * @memberof WebhookWorkflowRunRequested
     */
    'organization'?: OrganizationSimpleWebhooks;
    /**
     * 
     * @type {RepositoryWebhooks}
     * @memberof WebhookWorkflowRunRequested
     */
    'repository': RepositoryWebhooks;
    /**
     * 
     * @type {SimpleUser}
     * @memberof WebhookWorkflowRunRequested
     */
    'sender': SimpleUser;
    /**
     * 
     * @type {WebhooksWorkflow}
     * @memberof WebhookWorkflowRunRequested
     */
    'workflow': WebhooksWorkflow | null;
    /**
     * 
     * @type {WorkflowRun2}
     * @memberof WebhookWorkflowRunRequested
     */
    'workflow_run': WorkflowRun2;
}

export const WebhookWorkflowRunRequestedActionEnum = {
    Requested: 'requested'
} as const;

export type WebhookWorkflowRunRequestedActionEnum = typeof WebhookWorkflowRunRequestedActionEnum[keyof typeof WebhookWorkflowRunRequestedActionEnum];

/**
 * The security alert of the vulnerable dependency.
 * @export
 * @interface WebhooksAlert
 */
export interface WebhooksAlert {
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'affected_package_name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'affected_range': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'dismiss_reason'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'dismissed_at'?: string;
    /**
     * 
     * @type {User}
     * @memberof WebhooksAlert
     */
    'dismisser'?: User | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'external_identifier': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'external_reference': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'fix_reason'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'fixed_at'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'fixed_in'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'ghsa_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksAlert
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksAlert
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'severity': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAlert
     */
    'state': WebhooksAlertStateEnum;
}

export const WebhooksAlertStateEnum = {
    Open: 'open'
} as const;

export type WebhooksAlertStateEnum = typeof WebhooksAlertStateEnum[keyof typeof WebhooksAlertStateEnum];

/**
 * 
 * @export
 * @interface WebhooksAnswer
 */
export interface WebhooksAnswer {
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof WebhooksAnswer
     */
    'author_association': WebhooksAnswerAuthorAssociationEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAnswer
     */
    'body': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksAnswer
     */
    'child_comment_count': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAnswer
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksAnswer
     */
    'discussion_id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAnswer
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksAnswer
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAnswer
     */
    'node_id': string;
    /**
     * 
     * @type {any}
     * @memberof WebhooksAnswer
     */
    'parent_id': any | null;
    /**
     * 
     * @type {Reactions}
     * @memberof WebhooksAnswer
     */
    'reactions'?: Reactions;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAnswer
     */
    'repository_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksAnswer
     */
    'updated_at': string;
    /**
     * 
     * @type {User1}
     * @memberof WebhooksAnswer
     */
    'user': User1 | null;
}

export const WebhooksAnswerAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type WebhooksAnswerAuthorAssociationEnum = typeof WebhooksAnswerAuthorAssociationEnum[keyof typeof WebhooksAnswerAuthorAssociationEnum];

/**
 * 
 * @export
 * @interface WebhooksApprover
 */
export interface WebhooksApprover {
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksApprover
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'login'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksApprover
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'type'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksApprover
     */
    'user_view_type'?: string;
}
/**
 * The changes to the comment.
 * @export
 * @interface WebhooksChanges
 */
export interface WebhooksChanges {
    /**
     * 
     * @type {WebhooksChangesBody}
     * @memberof WebhooksChanges
     */
    'body'?: WebhooksChangesBody;
}
/**
 * 
 * @export
 * @interface WebhooksChanges8
 */
export interface WebhooksChanges8 {
    /**
     * 
     * @type {WebhooksChanges8Tier}
     * @memberof WebhooksChanges8
     */
    'tier': WebhooksChanges8Tier;
}
/**
 * 
 * @export
 * @interface WebhooksChanges8Tier
 */
export interface WebhooksChanges8Tier {
    /**
     * 
     * @type {SponsorshipTier}
     * @memberof WebhooksChanges8Tier
     */
    'from': SponsorshipTier;
}
/**
 * 
 * @export
 * @interface WebhooksChangesBody
 */
export interface WebhooksChangesBody {
    /**
     * The previous version of the body.
     * @type {string}
     * @memberof WebhooksChangesBody
     */
    'from': string;
}
/**
 * 
 * @export
 * @interface WebhooksComment
 */
export interface WebhooksComment {
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof WebhooksComment
     */
    'author_association': WebhooksCommentAuthorAssociationEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksComment
     */
    'body': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksComment
     */
    'child_comment_count': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksComment
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksComment
     */
    'discussion_id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksComment
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksComment
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksComment
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksComment
     */
    'parent_id': number | null;
    /**
     * 
     * @type {Reactions}
     * @memberof WebhooksComment
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof WebhooksComment
     */
    'repository_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksComment
     */
    'updated_at': string;
    /**
     * 
     * @type {User1}
     * @memberof WebhooksComment
     */
    'user': User1 | null;
}

export const WebhooksCommentAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type WebhooksCommentAuthorAssociationEnum = typeof WebhooksCommentAuthorAssociationEnum[keyof typeof WebhooksCommentAuthorAssociationEnum];

/**
 * The [`deploy key`](https://docs.github.com/rest/deploy-keys/deploy-keys#get-a-deploy-key) resource.
 * @export
 * @interface WebhooksDeployKey
 */
export interface WebhooksDeployKey {
    /**
     * 
     * @type {string}
     * @memberof WebhooksDeployKey
     */
    'added_by'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksDeployKey
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksDeployKey
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksDeployKey
     */
    'key': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksDeployKey
     */
    'last_used'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksDeployKey
     */
    'read_only': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksDeployKey
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksDeployKey
     */
    'url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksDeployKey
     */
    'verified': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksDeployKey
     */
    'enabled'?: boolean;
}
/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface WebhooksIssue
 */
export interface WebhooksIssue {
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue
     */
    'active_lock_reason': WebhooksIssueActiveLockReasonEnum | null;
    /**
     * 
     * @type {User4}
     * @memberof WebhooksIssue
     */
    'assignee'?: User4 | null;
    /**
     * 
     * @type {Array<User4>}
     * @memberof WebhooksIssue
     */
    'assignees': Array<User4>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof WebhooksIssue
     */
    'author_association': WebhooksIssueAuthorAssociationEnum;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof WebhooksIssue
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhooksIssue
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksIssue
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksIssue
     */
    'id': number;
    /**
     * 
     * @type {Array<Label>}
     * @memberof WebhooksIssue
     */
    'labels'?: Array<Label>;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksIssue
     */
    'locked'?: boolean;
    /**
     * 
     * @type {Milestone}
     * @memberof WebhooksIssue
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksIssue
     */
    'number': number;
    /**
     * 
     * @type {App}
     * @memberof WebhooksIssue
     */
    'performed_via_github_app'?: App | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof WebhooksIssue
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {Reactions}
     * @memberof WebhooksIssue
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof WebhooksIssue
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof WebhooksIssue
     */
    'state'?: WebhooksIssueStateEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue
     */
    'timeline_url'?: string;
    /**
     * Title of the issue
     * @type {string}
     * @memberof WebhooksIssue
     */
    'title': string;
    /**
     * 
     * @type {IssueType}
     * @memberof WebhooksIssue
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue
     */
    'updated_at': string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof WebhooksIssue
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof WebhooksIssue
     */
    'user': User3 | null;
}

export const WebhooksIssueActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type WebhooksIssueActiveLockReasonEnum = typeof WebhooksIssueActiveLockReasonEnum[keyof typeof WebhooksIssueActiveLockReasonEnum];
export const WebhooksIssueAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type WebhooksIssueAuthorAssociationEnum = typeof WebhooksIssueAuthorAssociationEnum[keyof typeof WebhooksIssueAuthorAssociationEnum];
export const WebhooksIssueStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type WebhooksIssueStateEnum = typeof WebhooksIssueStateEnum[keyof typeof WebhooksIssueStateEnum];

/**
 * The [issue](https://docs.github.com/rest/issues/issues#get-an-issue) itself.
 * @export
 * @interface WebhooksIssue2
 */
export interface WebhooksIssue2 {
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'active_lock_reason': WebhooksIssue2ActiveLockReasonEnum | null;
    /**
     * 
     * @type {User2}
     * @memberof WebhooksIssue2
     */
    'assignee'?: User2 | null;
    /**
     * 
     * @type {Array<User2>}
     * @memberof WebhooksIssue2
     */
    'assignees': Array<User2>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'author_association': WebhooksIssue2AuthorAssociationEnum;
    /**
     * Contents of the issue
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhooksIssue2
     */
    'comments': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'comments_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksIssue2
     */
    'draft'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'events_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksIssue2
     */
    'id': number;
    /**
     * 
     * @type {Array<Label>}
     * @memberof WebhooksIssue2
     */
    'labels'?: Array<Label>;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'labels_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksIssue2
     */
    'locked'?: boolean;
    /**
     * 
     * @type {Milestone1}
     * @memberof WebhooksIssue2
     */
    'milestone': Milestone1 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksIssue2
     */
    'number': number;
    /**
     * 
     * @type {App1}
     * @memberof WebhooksIssue2
     */
    'performed_via_github_app'?: App1 | null;
    /**
     * 
     * @type {WebhooksIssuePullRequest}
     * @memberof WebhooksIssue2
     */
    'pull_request'?: WebhooksIssuePullRequest;
    /**
     * 
     * @type {Reactions}
     * @memberof WebhooksIssue2
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'repository_url': string;
    /**
     * 
     * @type {SubIssuesSummary}
     * @memberof WebhooksIssue2
     */
    'sub_issues_summary'?: SubIssuesSummary;
    /**
     * State of the issue; either \'open\' or \'closed\'
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'state'?: WebhooksIssue2StateEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'state_reason'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'timeline_url'?: string;
    /**
     * Title of the issue
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'title': string;
    /**
     * 
     * @type {IssueType}
     * @memberof WebhooksIssue2
     */
    'type'?: IssueType | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'updated_at': string;
    /**
     * URL for the issue
     * @type {string}
     * @memberof WebhooksIssue2
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof WebhooksIssue2
     */
    'user': User1 | null;
}

export const WebhooksIssue2ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type WebhooksIssue2ActiveLockReasonEnum = typeof WebhooksIssue2ActiveLockReasonEnum[keyof typeof WebhooksIssue2ActiveLockReasonEnum];
export const WebhooksIssue2AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type WebhooksIssue2AuthorAssociationEnum = typeof WebhooksIssue2AuthorAssociationEnum[keyof typeof WebhooksIssue2AuthorAssociationEnum];
export const WebhooksIssue2StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type WebhooksIssue2StateEnum = typeof WebhooksIssue2StateEnum[keyof typeof WebhooksIssue2StateEnum];

/**
 * The [comment](https://docs.github.com/rest/issues/comments#get-an-issue-comment) itself.
 * @export
 * @interface WebhooksIssueComment
 */
export interface WebhooksIssueComment {
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof WebhooksIssueComment
     */
    'author_association': WebhooksIssueCommentAuthorAssociationEnum;
    /**
     * Contents of the issue comment
     * @type {string}
     * @memberof WebhooksIssueComment
     */
    'body': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssueComment
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssueComment
     */
    'html_url': string;
    /**
     * Unique identifier of the issue comment
     * @type {number}
     * @memberof WebhooksIssueComment
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssueComment
     */
    'issue_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssueComment
     */
    'node_id': string;
    /**
     * 
     * @type {Integration}
     * @memberof WebhooksIssueComment
     */
    'performed_via_github_app': Integration | null;
    /**
     * 
     * @type {Reactions}
     * @memberof WebhooksIssueComment
     */
    'reactions': Reactions;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssueComment
     */
    'updated_at': string;
    /**
     * URL for the issue comment
     * @type {string}
     * @memberof WebhooksIssueComment
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof WebhooksIssueComment
     */
    'user': User3 | null;
}

export const WebhooksIssueCommentAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type WebhooksIssueCommentAuthorAssociationEnum = typeof WebhooksIssueCommentAuthorAssociationEnum[keyof typeof WebhooksIssueCommentAuthorAssociationEnum];

/**
 * 
 * @export
 * @interface WebhooksIssuePullRequest
 */
export interface WebhooksIssuePullRequest {
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssuePullRequest
     */
    'diff_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssuePullRequest
     */
    'html_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssuePullRequest
     */
    'merged_at'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssuePullRequest
     */
    'patch_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksIssuePullRequest
     */
    'url'?: string;
}
/**
 * 
 * @export
 * @interface WebhooksLabel
 */
export interface WebhooksLabel {
    /**
     * 6-character hex code, without the leading #, identifying the color
     * @type {string}
     * @memberof WebhooksLabel
     */
    'color': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksLabel
     */
    'default': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksLabel
     */
    'description': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhooksLabel
     */
    'id': number;
    /**
     * The name of the label.
     * @type {string}
     * @memberof WebhooksLabel
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksLabel
     */
    'node_id': string;
    /**
     * URL for the label
     * @type {string}
     * @memberof WebhooksLabel
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WebhooksMarketplacePurchase
 */
export interface WebhooksMarketplacePurchase {
    /**
     * 
     * @type {WebhooksMarketplacePurchaseAccount}
     * @memberof WebhooksMarketplacePurchase
     */
    'account': WebhooksMarketplacePurchaseAccount;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMarketplacePurchase
     */
    'billing_cycle': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMarketplacePurchase
     */
    'free_trial_ends_on': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMarketplacePurchase
     */
    'next_billing_date': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksMarketplacePurchase
     */
    'on_free_trial': boolean;
    /**
     * 
     * @type {WebhooksMarketplacePurchasePlan}
     * @memberof WebhooksMarketplacePurchase
     */
    'plan': WebhooksMarketplacePurchasePlan;
    /**
     * 
     * @type {number}
     * @memberof WebhooksMarketplacePurchase
     */
    'unit_count': number;
}
/**
 * 
 * @export
 * @interface WebhooksMarketplacePurchaseAccount
 */
export interface WebhooksMarketplacePurchaseAccount {
    /**
     * 
     * @type {number}
     * @memberof WebhooksMarketplacePurchaseAccount
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMarketplacePurchaseAccount
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMarketplacePurchaseAccount
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMarketplacePurchaseAccount
     */
    'organization_billing_email': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMarketplacePurchaseAccount
     */
    'type': string;
}
/**
 * 
 * @export
 * @interface WebhooksMarketplacePurchasePlan
 */
export interface WebhooksMarketplacePurchasePlan {
    /**
     * 
     * @type {Array<string | null>}
     * @memberof WebhooksMarketplacePurchasePlan
     */
    'bullets': Array<string | null>;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMarketplacePurchasePlan
     */
    'description': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksMarketplacePurchasePlan
     */
    'has_free_trial': boolean;
    /**
     * 
     * @type {number}
     * @memberof WebhooksMarketplacePurchasePlan
     */
    'id': number;
    /**
     * 
     * @type {number}
     * @memberof WebhooksMarketplacePurchasePlan
     */
    'monthly_price_in_cents': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMarketplacePurchasePlan
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMarketplacePurchasePlan
     */
    'price_model': WebhooksMarketplacePurchasePlanPriceModelEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMarketplacePurchasePlan
     */
    'unit_name': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhooksMarketplacePurchasePlan
     */
    'yearly_price_in_cents': number;
}

export const WebhooksMarketplacePurchasePlanPriceModelEnum = {
    Free: 'FREE',
    FlatRate: 'FLAT_RATE',
    PerUnit: 'PER_UNIT'
} as const;

export type WebhooksMarketplacePurchasePlanPriceModelEnum = typeof WebhooksMarketplacePurchasePlanPriceModelEnum[keyof typeof WebhooksMarketplacePurchasePlanPriceModelEnum];

/**
 * The membership between the user and the organization. Not present when the action is `member_invited`.
 * @export
 * @interface WebhooksMembership
 */
export interface WebhooksMembership {
    /**
     * 
     * @type {string}
     * @memberof WebhooksMembership
     */
    'organization_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMembership
     */
    'role': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMembership
     */
    'state': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMembership
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof WebhooksMembership
     */
    'user': User1 | null;
}
/**
 * A collection of related issues and pull requests.
 * @export
 * @interface WebhooksMilestone
 */
export interface WebhooksMilestone {
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhooksMilestone
     */
    'closed_issues': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone
     */
    'created_at': string;
    /**
     * 
     * @type {User4}
     * @memberof WebhooksMilestone
     */
    'creator': User4 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone
     */
    'due_on': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksMilestone
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone
     */
    'node_id': string;
    /**
     * The number of the milestone.
     * @type {number}
     * @memberof WebhooksMilestone
     */
    'number': number;
    /**
     * 
     * @type {number}
     * @memberof WebhooksMilestone
     */
    'open_issues': number;
    /**
     * The state of the milestone.
     * @type {string}
     * @memberof WebhooksMilestone
     */
    'state': WebhooksMilestoneStateEnum;
    /**
     * The title of the milestone.
     * @type {string}
     * @memberof WebhooksMilestone
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone
     */
    'url': string;
}

export const WebhooksMilestoneStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type WebhooksMilestoneStateEnum = typeof WebhooksMilestoneStateEnum[keyof typeof WebhooksMilestoneStateEnum];

/**
 * A collection of related issues and pull requests.
 * @export
 * @interface WebhooksMilestone3
 */
export interface WebhooksMilestone3 {
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone3
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhooksMilestone3
     */
    'closed_issues': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone3
     */
    'created_at': string;
    /**
     * 
     * @type {User2}
     * @memberof WebhooksMilestone3
     */
    'creator': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone3
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone3
     */
    'due_on': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone3
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksMilestone3
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone3
     */
    'labels_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone3
     */
    'node_id': string;
    /**
     * The number of the milestone.
     * @type {number}
     * @memberof WebhooksMilestone3
     */
    'number': number;
    /**
     * 
     * @type {number}
     * @memberof WebhooksMilestone3
     */
    'open_issues': number;
    /**
     * The state of the milestone.
     * @type {string}
     * @memberof WebhooksMilestone3
     */
    'state': WebhooksMilestone3StateEnum;
    /**
     * The title of the milestone.
     * @type {string}
     * @memberof WebhooksMilestone3
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone3
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksMilestone3
     */
    'url': string;
}

export const WebhooksMilestone3StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type WebhooksMilestone3StateEnum = typeof WebhooksMilestone3StateEnum[keyof typeof WebhooksMilestone3StateEnum];

/**
 * 
 * @export
 * @interface WebhooksPreviousMarketplacePurchase
 */
export interface WebhooksPreviousMarketplacePurchase {
    /**
     * 
     * @type {WebhooksMarketplacePurchaseAccount}
     * @memberof WebhooksPreviousMarketplacePurchase
     */
    'account': WebhooksMarketplacePurchaseAccount;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPreviousMarketplacePurchase
     */
    'billing_cycle': string;
    /**
     * 
     * @type {any}
     * @memberof WebhooksPreviousMarketplacePurchase
     */
    'free_trial_ends_on': any | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPreviousMarketplacePurchase
     */
    'next_billing_date'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksPreviousMarketplacePurchase
     */
    'on_free_trial': boolean;
    /**
     * 
     * @type {WebhooksPreviousMarketplacePurchasePlan}
     * @memberof WebhooksPreviousMarketplacePurchase
     */
    'plan': WebhooksPreviousMarketplacePurchasePlan;
    /**
     * 
     * @type {number}
     * @memberof WebhooksPreviousMarketplacePurchase
     */
    'unit_count': number;
}
/**
 * 
 * @export
 * @interface WebhooksPreviousMarketplacePurchasePlan
 */
export interface WebhooksPreviousMarketplacePurchasePlan {
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhooksPreviousMarketplacePurchasePlan
     */
    'bullets': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPreviousMarketplacePurchasePlan
     */
    'description': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksPreviousMarketplacePurchasePlan
     */
    'has_free_trial': boolean;
    /**
     * 
     * @type {number}
     * @memberof WebhooksPreviousMarketplacePurchasePlan
     */
    'id': number;
    /**
     * 
     * @type {number}
     * @memberof WebhooksPreviousMarketplacePurchasePlan
     */
    'monthly_price_in_cents': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPreviousMarketplacePurchasePlan
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPreviousMarketplacePurchasePlan
     */
    'price_model': WebhooksPreviousMarketplacePurchasePlanPriceModelEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPreviousMarketplacePurchasePlan
     */
    'unit_name': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhooksPreviousMarketplacePurchasePlan
     */
    'yearly_price_in_cents': number;
}

export const WebhooksPreviousMarketplacePurchasePlanPriceModelEnum = {
    Free: 'FREE',
    FlatRate: 'FLAT_RATE',
    PerUnit: 'PER_UNIT'
} as const;

export type WebhooksPreviousMarketplacePurchasePlanPriceModelEnum = typeof WebhooksPreviousMarketplacePurchasePlanPriceModelEnum[keyof typeof WebhooksPreviousMarketplacePurchasePlanPriceModelEnum];

/**
 * 
 * @export
 * @interface WebhooksProject
 */
export interface WebhooksProject {
    /**
     * Body of the project
     * @type {string}
     * @memberof WebhooksProject
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProject
     */
    'columns_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProject
     */
    'created_at': string;
    /**
     * 
     * @type {User2}
     * @memberof WebhooksProject
     */
    'creator': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProject
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksProject
     */
    'id': number;
    /**
     * Name of the project
     * @type {string}
     * @memberof WebhooksProject
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProject
     */
    'node_id': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksProject
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProject
     */
    'owner_url': string;
    /**
     * State of the project; either \'open\' or \'closed\'
     * @type {string}
     * @memberof WebhooksProject
     */
    'state': WebhooksProjectStateEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProject
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProject
     */
    'url': string;
}

export const WebhooksProjectStateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type WebhooksProjectStateEnum = typeof WebhooksProjectStateEnum[keyof typeof WebhooksProjectStateEnum];

/**
 * 
 * @export
 * @interface WebhooksProjectCard
 */
export interface WebhooksProjectCard {
    /**
     * 
     * @type {number}
     * @memberof WebhooksProjectCard
     */
    'after_id'?: number | null;
    /**
     * Whether or not the card is archived
     * @type {boolean}
     * @memberof WebhooksProjectCard
     */
    'archived': boolean;
    /**
     * 
     * @type {number}
     * @memberof WebhooksProjectCard
     */
    'column_id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectCard
     */
    'column_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectCard
     */
    'content_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectCard
     */
    'created_at': string;
    /**
     * 
     * @type {User2}
     * @memberof WebhooksProjectCard
     */
    'creator': User2 | null;
    /**
     * The project card\'s ID
     * @type {number}
     * @memberof WebhooksProjectCard
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectCard
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectCard
     */
    'note': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectCard
     */
    'project_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectCard
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectCard
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WebhooksProjectChanges
 */
export interface WebhooksProjectChanges {
    /**
     * 
     * @type {WebhooksProjectChangesArchivedAt}
     * @memberof WebhooksProjectChanges
     */
    'archived_at'?: WebhooksProjectChangesArchivedAt;
}
/**
 * 
 * @export
 * @interface WebhooksProjectChangesArchivedAt
 */
export interface WebhooksProjectChangesArchivedAt {
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectChangesArchivedAt
     */
    'from'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectChangesArchivedAt
     */
    'to'?: string | null;
}
/**
 * 
 * @export
 * @interface WebhooksProjectColumn
 */
export interface WebhooksProjectColumn {
    /**
     * 
     * @type {number}
     * @memberof WebhooksProjectColumn
     */
    'after_id'?: number | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectColumn
     */
    'cards_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectColumn
     */
    'created_at': string;
    /**
     * The unique identifier of the project column
     * @type {number}
     * @memberof WebhooksProjectColumn
     */
    'id': number;
    /**
     * Name of the project column
     * @type {string}
     * @memberof WebhooksProjectColumn
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectColumn
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectColumn
     */
    'project_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectColumn
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksProjectColumn
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WebhooksPullRequest5
 */
export interface WebhooksPullRequest5 {
    /**
     * 
     * @type {WebhooksPullRequest5Links}
     * @memberof WebhooksPullRequest5
     */
    '_links': WebhooksPullRequest5Links;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'active_lock_reason': WebhooksPullRequest5ActiveLockReasonEnum | null;
    /**
     * 
     * @type {number}
     * @memberof WebhooksPullRequest5
     */
    'additions'?: number;
    /**
     * 
     * @type {User4}
     * @memberof WebhooksPullRequest5
     */
    'assignee': User4 | null;
    /**
     * 
     * @type {Array<User5>}
     * @memberof WebhooksPullRequest5
     */
    'assignees': Array<User5>;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'author_association': WebhooksPullRequest5AuthorAssociationEnum;
    /**
     * 
     * @type {PullRequestAutoMerge}
     * @memberof WebhooksPullRequest5
     */
    'auto_merge': PullRequestAutoMerge | null;
    /**
     * 
     * @type {WebhooksPullRequest5Base}
     * @memberof WebhooksPullRequest5
     */
    'base': WebhooksPullRequest5Base;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'body': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhooksPullRequest5
     */
    'changed_files'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'closed_at': string | null;
    /**
     * 
     * @type {number}
     * @memberof WebhooksPullRequest5
     */
    'comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'comments_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksPullRequest5
     */
    'commits'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'commits_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'created_at': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksPullRequest5
     */
    'deletions'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'diff_url': string;
    /**
     * Indicates whether or not the pull request is a draft.
     * @type {boolean}
     * @memberof WebhooksPullRequest5
     */
    'draft': boolean;
    /**
     * 
     * @type {WebhooksPullRequest5Base}
     * @memberof WebhooksPullRequest5
     */
    'head': WebhooksPullRequest5Base;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksPullRequest5
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'issue_url': string;
    /**
     * 
     * @type {Array<Label>}
     * @memberof WebhooksPullRequest5
     */
    'labels': Array<Label>;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksPullRequest5
     */
    'locked': boolean;
    /**
     * Indicates whether maintainers can modify the pull request.
     * @type {boolean}
     * @memberof WebhooksPullRequest5
     */
    'maintainer_can_modify'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'merge_commit_sha': string | null;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksPullRequest5
     */
    'mergeable'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'mergeable_state'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksPullRequest5
     */
    'merged'?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'merged_at': string | null;
    /**
     * 
     * @type {User4}
     * @memberof WebhooksPullRequest5
     */
    'merged_by'?: User4 | null;
    /**
     * 
     * @type {Milestone}
     * @memberof WebhooksPullRequest5
     */
    'milestone': Milestone | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'node_id': string;
    /**
     * Number uniquely identifying the pull request within its repository.
     * @type {number}
     * @memberof WebhooksPullRequest5
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'patch_url': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksPullRequest5
     */
    'rebaseable'?: boolean | null;
    /**
     * 
     * @type {Array<WebhooksPullRequest5RequestedReviewersInner>}
     * @memberof WebhooksPullRequest5
     */
    'requested_reviewers': Array<WebhooksPullRequest5RequestedReviewersInner>;
    /**
     * 
     * @type {Array<Team>}
     * @memberof WebhooksPullRequest5
     */
    'requested_teams': Array<Team>;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'review_comment_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksPullRequest5
     */
    'review_comments'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'review_comments_url': string;
    /**
     * State of this Pull Request. Either `open` or `closed`.
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'state': WebhooksPullRequest5StateEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'statuses_url': string;
    /**
     * The title of the pull request.
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5
     */
    'url': string;
    /**
     * 
     * @type {User3}
     * @memberof WebhooksPullRequest5
     */
    'user': User3 | null;
}

export const WebhooksPullRequest5ActiveLockReasonEnum = {
    Resolved: 'resolved',
    OffTopic: 'off-topic',
    TooHeated: 'too heated',
    Spam: 'spam'
} as const;

export type WebhooksPullRequest5ActiveLockReasonEnum = typeof WebhooksPullRequest5ActiveLockReasonEnum[keyof typeof WebhooksPullRequest5ActiveLockReasonEnum];
export const WebhooksPullRequest5AuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type WebhooksPullRequest5AuthorAssociationEnum = typeof WebhooksPullRequest5AuthorAssociationEnum[keyof typeof WebhooksPullRequest5AuthorAssociationEnum];
export const WebhooksPullRequest5StateEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;

export type WebhooksPullRequest5StateEnum = typeof WebhooksPullRequest5StateEnum[keyof typeof WebhooksPullRequest5StateEnum];

/**
 * 
 * @export
 * @interface WebhooksPullRequest5Base
 */
export interface WebhooksPullRequest5Base {
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5Base
     */
    'label': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5Base
     */
    'ref': string;
    /**
     * 
     * @type {Repository}
     * @memberof WebhooksPullRequest5Base
     */
    'repo': Repository;
    /**
     * 
     * @type {string}
     * @memberof WebhooksPullRequest5Base
     */
    'sha': string;
    /**
     * 
     * @type {User1}
     * @memberof WebhooksPullRequest5Base
     */
    'user': User1 | null;
}
/**
 * 
 * @export
 * @interface WebhooksPullRequest5Links
 */
export interface WebhooksPullRequest5Links {
    /**
     * 
     * @type {Link}
     * @memberof WebhooksPullRequest5Links
     */
    'comments': Link;
    /**
     * 
     * @type {Link}
     * @memberof WebhooksPullRequest5Links
     */
    'commits': Link;
    /**
     * 
     * @type {Link}
     * @memberof WebhooksPullRequest5Links
     */
    'html': Link;
    /**
     * 
     * @type {Link}
     * @memberof WebhooksPullRequest5Links
     */
    'issue': Link;
    /**
     * 
     * @type {Link}
     * @memberof WebhooksPullRequest5Links
     */
    'review_comment': Link;
    /**
     * 
     * @type {Link}
     * @memberof WebhooksPullRequest5Links
     */
    'review_comments': Link;
    /**
     * 
     * @type {Link}
     * @memberof WebhooksPullRequest5Links
     */
    'self': Link;
    /**
     * 
     * @type {Link}
     * @memberof WebhooksPullRequest5Links
     */
    'statuses': Link;
}
/**
 * @type WebhooksPullRequest5RequestedReviewersInner
 * @export
 */
export type WebhooksPullRequest5RequestedReviewersInner = Team | User;

/**
 * The [release](https://docs.github.com/rest/releases/releases/#get-a-release) object.
 * @export
 * @interface WebhooksRelease
 */
export interface WebhooksRelease {
    /**
     * 
     * @type {Array<ReleaseAsset>}
     * @memberof WebhooksRelease
     */
    'assets': Array<ReleaseAsset>;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease
     */
    'assets_url': string;
    /**
     * 
     * @type {User2}
     * @memberof WebhooksRelease
     */
    'author': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease
     */
    'discussion_url'?: string;
    /**
     * Whether the release is a draft or published
     * @type {boolean}
     * @memberof WebhooksRelease
     */
    'draft': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksRelease
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease
     */
    'name': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease
     */
    'node_id': string;
    /**
     * Whether the release is identified as a prerelease or a full release.
     * @type {boolean}
     * @memberof WebhooksRelease
     */
    'prerelease': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease
     */
    'published_at': string | null;
    /**
     * 
     * @type {Reactions}
     * @memberof WebhooksRelease
     */
    'reactions'?: Reactions;
    /**
     * The name of the tag.
     * @type {string}
     * @memberof WebhooksRelease
     */
    'tag_name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease
     */
    'tarball_url': string | null;
    /**
     * Specifies the commitish value that determines where the Git tag is created from.
     * @type {string}
     * @memberof WebhooksRelease
     */
    'target_commitish': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease
     */
    'upload_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease
     */
    'zipball_url': string | null;
}
/**
 * The [release](https://docs.github.com/rest/releases/releases/#get-a-release) object.
 * @export
 * @interface WebhooksRelease1
 */
export interface WebhooksRelease1 {
    /**
     * 
     * @type {Array<ReleaseAsset1>}
     * @memberof WebhooksRelease1
     */
    'assets': Array<ReleaseAsset1>;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'assets_url': string;
    /**
     * 
     * @type {User2}
     * @memberof WebhooksRelease1
     */
    'author': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'body': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'created_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'discussion_url'?: string;
    /**
     * Whether the release is a draft or published
     * @type {boolean}
     * @memberof WebhooksRelease1
     */
    'draft': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksRelease1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'name': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'node_id': string;
    /**
     * Whether the release is identified as a prerelease or a full release.
     * @type {boolean}
     * @memberof WebhooksRelease1
     */
    'prerelease': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'published_at': string | null;
    /**
     * 
     * @type {Reactions}
     * @memberof WebhooksRelease1
     */
    'reactions'?: Reactions;
    /**
     * The name of the tag.
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'tag_name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'tarball_url': string | null;
    /**
     * Specifies the commitish value that determines where the Git tag is created from.
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'target_commitish': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'upload_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRelease1
     */
    'zipball_url': string | null;
}
/**
 * 
 * @export
 * @interface WebhooksRepositoriesInner
 */
export interface WebhooksRepositoriesInner {
    /**
     * 
     * @type {string}
     * @memberof WebhooksRepositoriesInner
     */
    'full_name': string;
    /**
     * Unique identifier of the repository
     * @type {number}
     * @memberof WebhooksRepositoriesInner
     */
    'id': number;
    /**
     * The name of the repository.
     * @type {string}
     * @memberof WebhooksRepositoriesInner
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRepositoriesInner
     */
    'node_id': string;
    /**
     * Whether the repository is private or public.
     * @type {boolean}
     * @memberof WebhooksRepositoriesInner
     */
    'private': boolean;
}
/**
 * Describe whether all repositories have been selected or there\'s a selection involved
 * @export
 * @enum {string}
 */

export const WebhooksRepositorySelection = {
    All: 'all',
    Selected: 'selected'
} as const;

export type WebhooksRepositorySelection = typeof WebhooksRepositorySelection[keyof typeof WebhooksRepositorySelection];


/**
 * The review that was affected.
 * @export
 * @interface WebhooksReview
 */
export interface WebhooksReview {
    /**
     * 
     * @type {WebhooksReviewLinks}
     * @memberof WebhooksReview
     */
    '_links': WebhooksReviewLinks;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof WebhooksReview
     */
    'author_association': WebhooksReviewAuthorAssociationEnum;
    /**
     * The text of the review.
     * @type {string}
     * @memberof WebhooksReview
     */
    'body': string | null;
    /**
     * A commit SHA for the review.
     * @type {string}
     * @memberof WebhooksReview
     */
    'commit_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksReview
     */
    'html_url': string;
    /**
     * Unique identifier of the review
     * @type {number}
     * @memberof WebhooksReview
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksReview
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksReview
     */
    'pull_request_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksReview
     */
    'state': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksReview
     */
    'submitted_at': string | null;
    /**
     * 
     * @type {User1}
     * @memberof WebhooksReview
     */
    'user': User1 | null;
}

export const WebhooksReviewAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type WebhooksReviewAuthorAssociationEnum = typeof WebhooksReviewAuthorAssociationEnum[keyof typeof WebhooksReviewAuthorAssociationEnum];

/**
 * The [comment](https://docs.github.com/rest/pulls/comments#get-a-review-comment-for-a-pull-request) itself.
 * @export
 * @interface WebhooksReviewComment
 */
export interface WebhooksReviewComment {
    /**
     * 
     * @type {WebhooksReviewCommentLinks}
     * @memberof WebhooksReviewComment
     */
    '_links': WebhooksReviewCommentLinks;
    /**
     * How the author is associated with the repository.
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'author_association': WebhooksReviewCommentAuthorAssociationEnum;
    /**
     * The text of the comment.
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'body': string;
    /**
     * The SHA of the commit to which the comment applies.
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'commit_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'created_at': string;
    /**
     * The diff of the line that the comment refers to.
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'diff_hunk': string;
    /**
     * HTML URL for the pull request review comment.
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'html_url': string;
    /**
     * The ID of the pull request review comment.
     * @type {number}
     * @memberof WebhooksReviewComment
     */
    'id': number;
    /**
     * The comment ID to reply to.
     * @type {number}
     * @memberof WebhooksReviewComment
     */
    'in_reply_to_id'?: number;
    /**
     * The line of the blob to which the comment applies. The last line of the range for a multi-line comment
     * @type {number}
     * @memberof WebhooksReviewComment
     */
    'line': number | null;
    /**
     * The node ID of the pull request review comment.
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'node_id': string;
    /**
     * The SHA of the original commit to which the comment applies.
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'original_commit_id': string;
    /**
     * The line of the blob to which the comment applies. The last line of the range for a multi-line comment
     * @type {number}
     * @memberof WebhooksReviewComment
     */
    'original_line': number;
    /**
     * The index of the original line in the diff to which the comment applies.
     * @type {number}
     * @memberof WebhooksReviewComment
     */
    'original_position': number;
    /**
     * The first line of the range for a multi-line comment.
     * @type {number}
     * @memberof WebhooksReviewComment
     */
    'original_start_line': number | null;
    /**
     * The relative path of the file to which the comment applies.
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'path': string;
    /**
     * The line index in the diff to which the comment applies.
     * @type {number}
     * @memberof WebhooksReviewComment
     */
    'position': number | null;
    /**
     * The ID of the pull request review to which the comment belongs.
     * @type {number}
     * @memberof WebhooksReviewComment
     */
    'pull_request_review_id': number | null;
    /**
     * URL for the pull request that the review comment belongs to.
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'pull_request_url': string;
    /**
     * 
     * @type {Reactions}
     * @memberof WebhooksReviewComment
     */
    'reactions': Reactions;
    /**
     * The side of the first line of the range for a multi-line comment.
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'side': WebhooksReviewCommentSideEnum;
    /**
     * The first line of the range for a multi-line comment.
     * @type {number}
     * @memberof WebhooksReviewComment
     */
    'start_line': number | null;
    /**
     * The side of the first line of the range for a multi-line comment.
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'start_side': WebhooksReviewCommentStartSideEnum | null;
    /**
     * The level at which the comment is targeted, can be a diff line or a file.
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'subject_type'?: WebhooksReviewCommentSubjectTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'updated_at': string;
    /**
     * URL for the pull request review comment
     * @type {string}
     * @memberof WebhooksReviewComment
     */
    'url': string;
    /**
     * 
     * @type {User1}
     * @memberof WebhooksReviewComment
     */
    'user': User1 | null;
}

export const WebhooksReviewCommentAuthorAssociationEnum = {
    Collaborator: 'COLLABORATOR',
    Contributor: 'CONTRIBUTOR',
    FirstTimer: 'FIRST_TIMER',
    FirstTimeContributor: 'FIRST_TIME_CONTRIBUTOR',
    Mannequin: 'MANNEQUIN',
    Member: 'MEMBER',
    None: 'NONE',
    Owner: 'OWNER'
} as const;

export type WebhooksReviewCommentAuthorAssociationEnum = typeof WebhooksReviewCommentAuthorAssociationEnum[keyof typeof WebhooksReviewCommentAuthorAssociationEnum];
export const WebhooksReviewCommentSideEnum = {
    Left: 'LEFT',
    Right: 'RIGHT'
} as const;

export type WebhooksReviewCommentSideEnum = typeof WebhooksReviewCommentSideEnum[keyof typeof WebhooksReviewCommentSideEnum];
export const WebhooksReviewCommentStartSideEnum = {
    Left: 'LEFT',
    Right: 'RIGHT'
} as const;

export type WebhooksReviewCommentStartSideEnum = typeof WebhooksReviewCommentStartSideEnum[keyof typeof WebhooksReviewCommentStartSideEnum];
export const WebhooksReviewCommentSubjectTypeEnum = {
    Line: 'line',
    File: 'file'
} as const;

export type WebhooksReviewCommentSubjectTypeEnum = typeof WebhooksReviewCommentSubjectTypeEnum[keyof typeof WebhooksReviewCommentSubjectTypeEnum];

/**
 * 
 * @export
 * @interface WebhooksReviewCommentLinks
 */
export interface WebhooksReviewCommentLinks {
    /**
     * 
     * @type {Link}
     * @memberof WebhooksReviewCommentLinks
     */
    'html': Link;
    /**
     * 
     * @type {Link}
     * @memberof WebhooksReviewCommentLinks
     */
    'pull_request': Link;
    /**
     * 
     * @type {Link}
     * @memberof WebhooksReviewCommentLinks
     */
    'self': Link;
}
/**
 * 
 * @export
 * @interface WebhooksReviewLinks
 */
export interface WebhooksReviewLinks {
    /**
     * 
     * @type {Link}
     * @memberof WebhooksReviewLinks
     */
    'html': Link;
    /**
     * 
     * @type {Link}
     * @memberof WebhooksReviewLinks
     */
    'pull_request': Link;
}
/**
 * 
 * @export
 * @interface WebhooksReviewersInner
 */
export interface WebhooksReviewersInner {
    /**
     * 
     * @type {User}
     * @memberof WebhooksReviewersInner
     */
    'reviewer'?: User | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksReviewersInner
     */
    'type'?: WebhooksReviewersInnerTypeEnum;
}

export const WebhooksReviewersInnerTypeEnum = {
    User: 'User'
} as const;

export type WebhooksReviewersInnerTypeEnum = typeof WebhooksReviewersInnerTypeEnum[keyof typeof WebhooksReviewersInnerTypeEnum];

/**
 * The branch protection rule. Includes a `name` and all the [branch protection settings](https://docs.github.com/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#about-branch-protection-settings) applied to branches that match the name. Binary settings are boolean. Multi-level configurations are one of `off`, `non_admins`, or `everyone`. Actor and build lists are arrays of strings.
 * @export
 * @interface WebhooksRule
 */
export interface WebhooksRule {
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksRule
     */
    'admin_enforced': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRule
     */
    'allow_deletions_enforcement_level': WebhooksRuleAllowDeletionsEnforcementLevelEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRule
     */
    'allow_force_pushes_enforcement_level': WebhooksRuleAllowForcePushesEnforcementLevelEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhooksRule
     */
    'authorized_actor_names': Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksRule
     */
    'authorized_actors_only': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksRule
     */
    'authorized_dismissal_actors_only': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksRule
     */
    'create_protected'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRule
     */
    'created_at': string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksRule
     */
    'dismiss_stale_reviews_on_push': boolean;
    /**
     * 
     * @type {number}
     * @memberof WebhooksRule
     */
    'id': number;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksRule
     */
    'ignore_approvals_from_contributors': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRule
     */
    'linear_history_requirement_enforcement_level': WebhooksRuleLinearHistoryRequirementEnforcementLevelEnum;
    /**
     * The enforcement level of the branch lock setting. `off` means the branch is not locked, `non_admins` means the branch is read-only for non_admins, and `everyone` means the branch is read-only for everyone.
     * @type {string}
     * @memberof WebhooksRule
     */
    'lock_branch_enforcement_level': WebhooksRuleLockBranchEnforcementLevelEnum;
    /**
     * Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow users to pull changes from upstream when the branch is locked. This setting is only applicable for forks.
     * @type {boolean}
     * @memberof WebhooksRule
     */
    'lock_allows_fork_sync'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRule
     */
    'merge_queue_enforcement_level': WebhooksRuleMergeQueueEnforcementLevelEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRule
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRule
     */
    'pull_request_reviews_enforcement_level': WebhooksRulePullRequestReviewsEnforcementLevelEnum;
    /**
     * 
     * @type {number}
     * @memberof WebhooksRule
     */
    'repository_id': number;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksRule
     */
    'require_code_owner_review': boolean;
    /**
     * Whether the most recent push must be approved by someone other than the person who pushed it
     * @type {boolean}
     * @memberof WebhooksRule
     */
    'require_last_push_approval'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof WebhooksRule
     */
    'required_approving_review_count': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRule
     */
    'required_conversation_resolution_level': WebhooksRuleRequiredConversationResolutionLevelEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRule
     */
    'required_deployments_enforcement_level': WebhooksRuleRequiredDeploymentsEnforcementLevelEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebhooksRule
     */
    'required_status_checks': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRule
     */
    'required_status_checks_enforcement_level': WebhooksRuleRequiredStatusChecksEnforcementLevelEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRule
     */
    'signature_requirement_enforcement_level': WebhooksRuleSignatureRequirementEnforcementLevelEnum;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksRule
     */
    'strict_required_status_checks_policy': boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksRule
     */
    'updated_at': string;
}

export const WebhooksRuleAllowDeletionsEnforcementLevelEnum = {
    Off: 'off',
    NonAdmins: 'non_admins',
    Everyone: 'everyone'
} as const;

export type WebhooksRuleAllowDeletionsEnforcementLevelEnum = typeof WebhooksRuleAllowDeletionsEnforcementLevelEnum[keyof typeof WebhooksRuleAllowDeletionsEnforcementLevelEnum];
export const WebhooksRuleAllowForcePushesEnforcementLevelEnum = {
    Off: 'off',
    NonAdmins: 'non_admins',
    Everyone: 'everyone'
} as const;

export type WebhooksRuleAllowForcePushesEnforcementLevelEnum = typeof WebhooksRuleAllowForcePushesEnforcementLevelEnum[keyof typeof WebhooksRuleAllowForcePushesEnforcementLevelEnum];
export const WebhooksRuleLinearHistoryRequirementEnforcementLevelEnum = {
    Off: 'off',
    NonAdmins: 'non_admins',
    Everyone: 'everyone'
} as const;

export type WebhooksRuleLinearHistoryRequirementEnforcementLevelEnum = typeof WebhooksRuleLinearHistoryRequirementEnforcementLevelEnum[keyof typeof WebhooksRuleLinearHistoryRequirementEnforcementLevelEnum];
export const WebhooksRuleLockBranchEnforcementLevelEnum = {
    Off: 'off',
    NonAdmins: 'non_admins',
    Everyone: 'everyone'
} as const;

export type WebhooksRuleLockBranchEnforcementLevelEnum = typeof WebhooksRuleLockBranchEnforcementLevelEnum[keyof typeof WebhooksRuleLockBranchEnforcementLevelEnum];
export const WebhooksRuleMergeQueueEnforcementLevelEnum = {
    Off: 'off',
    NonAdmins: 'non_admins',
    Everyone: 'everyone'
} as const;

export type WebhooksRuleMergeQueueEnforcementLevelEnum = typeof WebhooksRuleMergeQueueEnforcementLevelEnum[keyof typeof WebhooksRuleMergeQueueEnforcementLevelEnum];
export const WebhooksRulePullRequestReviewsEnforcementLevelEnum = {
    Off: 'off',
    NonAdmins: 'non_admins',
    Everyone: 'everyone'
} as const;

export type WebhooksRulePullRequestReviewsEnforcementLevelEnum = typeof WebhooksRulePullRequestReviewsEnforcementLevelEnum[keyof typeof WebhooksRulePullRequestReviewsEnforcementLevelEnum];
export const WebhooksRuleRequiredConversationResolutionLevelEnum = {
    Off: 'off',
    NonAdmins: 'non_admins',
    Everyone: 'everyone'
} as const;

export type WebhooksRuleRequiredConversationResolutionLevelEnum = typeof WebhooksRuleRequiredConversationResolutionLevelEnum[keyof typeof WebhooksRuleRequiredConversationResolutionLevelEnum];
export const WebhooksRuleRequiredDeploymentsEnforcementLevelEnum = {
    Off: 'off',
    NonAdmins: 'non_admins',
    Everyone: 'everyone'
} as const;

export type WebhooksRuleRequiredDeploymentsEnforcementLevelEnum = typeof WebhooksRuleRequiredDeploymentsEnforcementLevelEnum[keyof typeof WebhooksRuleRequiredDeploymentsEnforcementLevelEnum];
export const WebhooksRuleRequiredStatusChecksEnforcementLevelEnum = {
    Off: 'off',
    NonAdmins: 'non_admins',
    Everyone: 'everyone'
} as const;

export type WebhooksRuleRequiredStatusChecksEnforcementLevelEnum = typeof WebhooksRuleRequiredStatusChecksEnforcementLevelEnum[keyof typeof WebhooksRuleRequiredStatusChecksEnforcementLevelEnum];
export const WebhooksRuleSignatureRequirementEnforcementLevelEnum = {
    Off: 'off',
    NonAdmins: 'non_admins',
    Everyone: 'everyone'
} as const;

export type WebhooksRuleSignatureRequirementEnforcementLevelEnum = typeof WebhooksRuleSignatureRequirementEnforcementLevelEnum[keyof typeof WebhooksRuleSignatureRequirementEnforcementLevelEnum];

/**
 * The details of the security advisory, including summary, description, and severity.
 * @export
 * @interface WebhooksSecurityAdvisory
 */
export interface WebhooksSecurityAdvisory {
    /**
     * 
     * @type {WebhooksSecurityAdvisoryCvss}
     * @memberof WebhooksSecurityAdvisory
     */
    'cvss': WebhooksSecurityAdvisoryCvss;
    /**
     * 
     * @type {CvssSeverities}
     * @memberof WebhooksSecurityAdvisory
     */
    'cvss_severities'?: CvssSeverities | null;
    /**
     * 
     * @type {Array<WebhooksSecurityAdvisoryCwesInner>}
     * @memberof WebhooksSecurityAdvisory
     */
    'cwes': Array<WebhooksSecurityAdvisoryCwesInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisory
     */
    'description': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisory
     */
    'ghsa_id': string;
    /**
     * 
     * @type {Array<WebhooksSecurityAdvisoryIdentifiersInner>}
     * @memberof WebhooksSecurityAdvisory
     */
    'identifiers': Array<WebhooksSecurityAdvisoryIdentifiersInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisory
     */
    'published_at': string;
    /**
     * 
     * @type {Array<WebhooksSecurityAdvisoryReferencesInner>}
     * @memberof WebhooksSecurityAdvisory
     */
    'references': Array<WebhooksSecurityAdvisoryReferencesInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisory
     */
    'severity': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisory
     */
    'summary': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisory
     */
    'updated_at': string;
    /**
     * 
     * @type {Array<WebhooksSecurityAdvisoryVulnerabilitiesInner>}
     * @memberof WebhooksSecurityAdvisory
     */
    'vulnerabilities': Array<WebhooksSecurityAdvisoryVulnerabilitiesInner>;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisory
     */
    'withdrawn_at': string | null;
}
/**
 * 
 * @export
 * @interface WebhooksSecurityAdvisoryCvss
 */
export interface WebhooksSecurityAdvisoryCvss {
    /**
     * 
     * @type {number}
     * @memberof WebhooksSecurityAdvisoryCvss
     */
    'score': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisoryCvss
     */
    'vector_string': string | null;
}
/**
 * 
 * @export
 * @interface WebhooksSecurityAdvisoryCwesInner
 */
export interface WebhooksSecurityAdvisoryCwesInner {
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisoryCwesInner
     */
    'cwe_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisoryCwesInner
     */
    'name': string;
}
/**
 * 
 * @export
 * @interface WebhooksSecurityAdvisoryIdentifiersInner
 */
export interface WebhooksSecurityAdvisoryIdentifiersInner {
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisoryIdentifiersInner
     */
    'type': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisoryIdentifiersInner
     */
    'value': string;
}
/**
 * 
 * @export
 * @interface WebhooksSecurityAdvisoryReferencesInner
 */
export interface WebhooksSecurityAdvisoryReferencesInner {
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisoryReferencesInner
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WebhooksSecurityAdvisoryVulnerabilitiesInner
 */
export interface WebhooksSecurityAdvisoryVulnerabilitiesInner {
    /**
     * 
     * @type {WebhooksSecurityAdvisoryVulnerabilitiesInnerFirstPatchedVersion}
     * @memberof WebhooksSecurityAdvisoryVulnerabilitiesInner
     */
    'first_patched_version': WebhooksSecurityAdvisoryVulnerabilitiesInnerFirstPatchedVersion | null;
    /**
     * 
     * @type {WebhooksSecurityAdvisoryVulnerabilitiesInnerPackage}
     * @memberof WebhooksSecurityAdvisoryVulnerabilitiesInner
     */
    'package': WebhooksSecurityAdvisoryVulnerabilitiesInnerPackage;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisoryVulnerabilitiesInner
     */
    'severity': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisoryVulnerabilitiesInner
     */
    'vulnerable_version_range': string;
}
/**
 * 
 * @export
 * @interface WebhooksSecurityAdvisoryVulnerabilitiesInnerFirstPatchedVersion
 */
export interface WebhooksSecurityAdvisoryVulnerabilitiesInnerFirstPatchedVersion {
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisoryVulnerabilitiesInnerFirstPatchedVersion
     */
    'identifier': string;
}
/**
 * 
 * @export
 * @interface WebhooksSecurityAdvisoryVulnerabilitiesInnerPackage
 */
export interface WebhooksSecurityAdvisoryVulnerabilitiesInnerPackage {
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisoryVulnerabilitiesInnerPackage
     */
    'ecosystem': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSecurityAdvisoryVulnerabilitiesInnerPackage
     */
    'name': string;
}
/**
 * 
 * @export
 * @interface WebhooksSponsorship
 */
export interface WebhooksSponsorship {
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorship
     */
    'created_at': string;
    /**
     * 
     * @type {WebhooksSponsorshipMaintainer}
     * @memberof WebhooksSponsorship
     */
    'maintainer'?: WebhooksSponsorshipMaintainer;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorship
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorship
     */
    'privacy_level': string;
    /**
     * 
     * @type {User2}
     * @memberof WebhooksSponsorship
     */
    'sponsor': User2 | null;
    /**
     * 
     * @type {User2}
     * @memberof WebhooksSponsorship
     */
    'sponsorable': User2 | null;
    /**
     * 
     * @type {SponsorshipTier}
     * @memberof WebhooksSponsorship
     */
    'tier': SponsorshipTier;
}
/**
 * 
 * @export
 * @interface WebhooksSponsorshipMaintainer
 */
export interface WebhooksSponsorshipMaintainer {
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'login'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'type'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksSponsorshipMaintainer
     */
    'user_view_type'?: string;
}
/**
 * Groups of organization members that gives permissions on specified repositories.
 * @export
 * @interface WebhooksTeam
 */
export interface WebhooksTeam {
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksTeam
     */
    'deleted'?: boolean;
    /**
     * Description of the team
     * @type {string}
     * @memberof WebhooksTeam
     */
    'description'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeam
     */
    'html_url'?: string;
    /**
     * Unique identifier of the team
     * @type {number}
     * @memberof WebhooksTeam
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeam
     */
    'members_url'?: string;
    /**
     * Name of the team
     * @type {string}
     * @memberof WebhooksTeam
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeam
     */
    'node_id'?: string;
    /**
     * 
     * @type {WebhooksTeamParent}
     * @memberof WebhooksTeam
     */
    'parent'?: WebhooksTeamParent | null;
    /**
     * Permission that the team will have for its repositories
     * @type {string}
     * @memberof WebhooksTeam
     */
    'permission'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeam
     */
    'privacy'?: WebhooksTeamPrivacyEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeam
     */
    'notification_setting'?: WebhooksTeamNotificationSettingEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeam
     */
    'repositories_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeam
     */
    'slug'?: string;
    /**
     * URL for the team
     * @type {string}
     * @memberof WebhooksTeam
     */
    'url'?: string;
}

export const WebhooksTeamPrivacyEnum = {
    Open: 'open',
    Closed: 'closed',
    Secret: 'secret'
} as const;

export type WebhooksTeamPrivacyEnum = typeof WebhooksTeamPrivacyEnum[keyof typeof WebhooksTeamPrivacyEnum];
export const WebhooksTeamNotificationSettingEnum = {
    NotificationsEnabled: 'notifications_enabled',
    NotificationsDisabled: 'notifications_disabled'
} as const;

export type WebhooksTeamNotificationSettingEnum = typeof WebhooksTeamNotificationSettingEnum[keyof typeof WebhooksTeamNotificationSettingEnum];

/**
 * Groups of organization members that gives permissions on specified repositories.
 * @export
 * @interface WebhooksTeam1
 */
export interface WebhooksTeam1 {
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksTeam1
     */
    'deleted'?: boolean;
    /**
     * Description of the team
     * @type {string}
     * @memberof WebhooksTeam1
     */
    'description'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeam1
     */
    'html_url'?: string;
    /**
     * Unique identifier of the team
     * @type {number}
     * @memberof WebhooksTeam1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeam1
     */
    'members_url'?: string;
    /**
     * Name of the team
     * @type {string}
     * @memberof WebhooksTeam1
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeam1
     */
    'node_id'?: string;
    /**
     * 
     * @type {WebhooksTeamParent}
     * @memberof WebhooksTeam1
     */
    'parent'?: WebhooksTeamParent | null;
    /**
     * Permission that the team will have for its repositories
     * @type {string}
     * @memberof WebhooksTeam1
     */
    'permission'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeam1
     */
    'privacy'?: WebhooksTeam1PrivacyEnum;
    /**
     * Whether team members will receive notifications when their team is @mentioned
     * @type {string}
     * @memberof WebhooksTeam1
     */
    'notification_setting'?: WebhooksTeam1NotificationSettingEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeam1
     */
    'repositories_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeam1
     */
    'slug'?: string;
    /**
     * URL for the team
     * @type {string}
     * @memberof WebhooksTeam1
     */
    'url'?: string;
}

export const WebhooksTeam1PrivacyEnum = {
    Open: 'open',
    Closed: 'closed',
    Secret: 'secret'
} as const;

export type WebhooksTeam1PrivacyEnum = typeof WebhooksTeam1PrivacyEnum[keyof typeof WebhooksTeam1PrivacyEnum];
export const WebhooksTeam1NotificationSettingEnum = {
    NotificationsEnabled: 'notifications_enabled',
    NotificationsDisabled: 'notifications_disabled'
} as const;

export type WebhooksTeam1NotificationSettingEnum = typeof WebhooksTeam1NotificationSettingEnum[keyof typeof WebhooksTeam1NotificationSettingEnum];

/**
 * 
 * @export
 * @interface WebhooksTeamParent
 */
export interface WebhooksTeamParent {
    /**
     * Description of the team
     * @type {string}
     * @memberof WebhooksTeamParent
     */
    'description': string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeamParent
     */
    'html_url': string;
    /**
     * Unique identifier of the team
     * @type {number}
     * @memberof WebhooksTeamParent
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeamParent
     */
    'members_url': string;
    /**
     * Name of the team
     * @type {string}
     * @memberof WebhooksTeamParent
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeamParent
     */
    'node_id': string;
    /**
     * Permission that the team will have for its repositories
     * @type {string}
     * @memberof WebhooksTeamParent
     */
    'permission': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeamParent
     */
    'privacy': WebhooksTeamParentPrivacyEnum;
    /**
     * Whether team members will receive notifications when their team is @mentioned
     * @type {string}
     * @memberof WebhooksTeamParent
     */
    'notification_setting': WebhooksTeamParentNotificationSettingEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeamParent
     */
    'repositories_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksTeamParent
     */
    'slug': string;
    /**
     * URL for the team
     * @type {string}
     * @memberof WebhooksTeamParent
     */
    'url': string;
}

export const WebhooksTeamParentPrivacyEnum = {
    Open: 'open',
    Closed: 'closed',
    Secret: 'secret'
} as const;

export type WebhooksTeamParentPrivacyEnum = typeof WebhooksTeamParentPrivacyEnum[keyof typeof WebhooksTeamParentPrivacyEnum];
export const WebhooksTeamParentNotificationSettingEnum = {
    NotificationsEnabled: 'notifications_enabled',
    NotificationsDisabled: 'notifications_disabled'
} as const;

export type WebhooksTeamParentNotificationSettingEnum = typeof WebhooksTeamParentNotificationSettingEnum[keyof typeof WebhooksTeamParentNotificationSettingEnum];

/**
 * 
 * @export
 * @interface WebhooksUser
 */
export interface WebhooksUser {
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksUser
     */
    'deleted'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksUser
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksUser
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'type'?: WebhooksUserTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUser
     */
    'user_view_type'?: string;
}

export const WebhooksUserTypeEnum = {
    Bot: 'Bot',
    User: 'User',
    Organization: 'Organization'
} as const;

export type WebhooksUserTypeEnum = typeof WebhooksUserTypeEnum[keyof typeof WebhooksUserTypeEnum];

/**
 * 
 * @export
 * @interface WebhooksUserMannequin
 */
export interface WebhooksUserMannequin {
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksUserMannequin
     */
    'deleted'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'email'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'followers_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'following_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'gists_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'gravatar_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'html_url'?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksUserMannequin
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'login': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'node_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'organizations_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'received_events_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'repos_url'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebhooksUserMannequin
     */
    'site_admin'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'starred_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'subscriptions_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'type'?: WebhooksUserMannequinTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'url'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksUserMannequin
     */
    'user_view_type'?: string;
}

export const WebhooksUserMannequinTypeEnum = {
    Bot: 'Bot',
    User: 'User',
    Organization: 'Organization',
    Mannequin: 'Mannequin'
} as const;

export type WebhooksUserMannequinTypeEnum = typeof WebhooksUserMannequinTypeEnum[keyof typeof WebhooksUserMannequinTypeEnum];

/**
 * 
 * @export
 * @interface WebhooksWorkflow
 */
export interface WebhooksWorkflow {
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflow
     */
    'badge_url': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflow
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflow
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksWorkflow
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflow
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflow
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflow
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflow
     */
    'state': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflow
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflow
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WebhooksWorkflowJobRun
 */
export interface WebhooksWorkflowJobRun {
    /**
     * 
     * @type {any}
     * @memberof WebhooksWorkflowJobRun
     */
    'conclusion': any | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflowJobRun
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflowJobRun
     */
    'environment': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflowJobRun
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WebhooksWorkflowJobRun
     */
    'id': number;
    /**
     * 
     * @type {any}
     * @memberof WebhooksWorkflowJobRun
     */
    'name': any | null;
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflowJobRun
     */
    'status': string;
    /**
     * 
     * @type {string}
     * @memberof WebhooksWorkflowJobRun
     */
    'updated_at': string;
}
/**
 * A GitHub Actions workflow
 * @export
 * @interface Workflow
 */
export interface Workflow {
    /**
     * 
     * @type {number}
     * @memberof Workflow
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    'state': WorkflowStateEnum;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    'html_url': string;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    'badge_url': string;
    /**
     * 
     * @type {string}
     * @memberof Workflow
     */
    'deleted_at'?: string;
}

export const WorkflowStateEnum = {
    Active: 'active',
    Deleted: 'deleted',
    DisabledFork: 'disabled_fork',
    DisabledInactivity: 'disabled_inactivity',
    DisabledManually: 'disabled_manually'
} as const;

export type WorkflowStateEnum = typeof WorkflowStateEnum[keyof typeof WorkflowStateEnum];

/**
 * 
 * @export
 * @interface WorkflowRun
 */
export interface WorkflowRun {
    /**
     * 
     * @type {User2}
     * @memberof WorkflowRun
     */
    'actor': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'artifacts_url': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'cancel_url': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun
     */
    'check_suite_id': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'check_suite_node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'check_suite_url': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'conclusion': WorkflowRunConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'head_branch': string | null;
    /**
     * 
     * @type {SimpleCommit}
     * @memberof WorkflowRun
     */
    'head_commit': SimpleCommit;
    /**
     * 
     * @type {RepositoryLite}
     * @memberof WorkflowRun
     */
    'head_repository': RepositoryLite;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'jobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'logs_url': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'name': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'previous_attempt_url': string | null;
    /**
     * 
     * @type {Array<WorkflowRunPullRequestsInner>}
     * @memberof WorkflowRun
     */
    'pull_requests': Array<WorkflowRunPullRequestsInner>;
    /**
     * 
     * @type {Array<DeploymentWorkflowRunReferencedWorkflowsInner>}
     * @memberof WorkflowRun
     */
    'referenced_workflows'?: Array<DeploymentWorkflowRunReferencedWorkflowsInner> | null;
    /**
     * 
     * @type {RepositoryLite}
     * @memberof WorkflowRun
     */
    'repository': RepositoryLite;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'rerun_url': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun
     */
    'run_attempt': number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun
     */
    'run_number': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'run_started_at': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'status': WorkflowRunStatusEnum;
    /**
     * 
     * @type {User2}
     * @memberof WorkflowRun
     */
    'triggering_actor': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun
     */
    'workflow_id': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun
     */
    'workflow_url': string;
    /**
     * The event-specific title associated with the run or the run-name if set, or the value of `run-name` if it is set in the workflow.
     * @type {string}
     * @memberof WorkflowRun
     */
    'display_title'?: string;
}

export const WorkflowRunConclusionEnum = {
    ActionRequired: 'action_required',
    Cancelled: 'cancelled',
    Failure: 'failure',
    Neutral: 'neutral',
    Skipped: 'skipped',
    Stale: 'stale',
    Success: 'success',
    TimedOut: 'timed_out',
    StartupFailure: 'startup_failure'
} as const;

export type WorkflowRunConclusionEnum = typeof WorkflowRunConclusionEnum[keyof typeof WorkflowRunConclusionEnum];
export const WorkflowRunStatusEnum = {
    Requested: 'requested',
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued',
    Pending: 'pending',
    Waiting: 'waiting'
} as const;

export type WorkflowRunStatusEnum = typeof WorkflowRunStatusEnum[keyof typeof WorkflowRunStatusEnum];

/**
 * 
 * @export
 * @interface WorkflowRun1
 */
export interface WorkflowRun1 {
    /**
     * 
     * @type {User}
     * @memberof WorkflowRun1
     */
    'actor': User | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'artifacts_url': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'cancel_url': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun1
     */
    'check_suite_id': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'check_suite_node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'check_suite_url': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'conclusion': WorkflowRun1ConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'head_branch': string | null;
    /**
     * 
     * @type {SimpleCommit}
     * @memberof WorkflowRun1
     */
    'head_commit': SimpleCommit;
    /**
     * 
     * @type {RepositoryLite1}
     * @memberof WorkflowRun1
     */
    'head_repository': RepositoryLite1;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun1
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'jobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'logs_url': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'name': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'previous_attempt_url': string | null;
    /**
     * 
     * @type {Array<WorkflowRunPullRequestsInner>}
     * @memberof WorkflowRun1
     */
    'pull_requests': Array<WorkflowRunPullRequestsInner>;
    /**
     * 
     * @type {Array<DeploymentWorkflowRunReferencedWorkflowsInner>}
     * @memberof WorkflowRun1
     */
    'referenced_workflows'?: Array<DeploymentWorkflowRunReferencedWorkflowsInner> | null;
    /**
     * 
     * @type {RepositoryLite2}
     * @memberof WorkflowRun1
     */
    'repository': RepositoryLite2;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'rerun_url': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun1
     */
    'run_attempt': number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun1
     */
    'run_number': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'run_started_at': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'status': WorkflowRun1StatusEnum;
    /**
     * 
     * @type {User}
     * @memberof WorkflowRun1
     */
    'triggering_actor': User | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun1
     */
    'workflow_id': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun1
     */
    'workflow_url': string;
}

export const WorkflowRun1ConclusionEnum = {
    ActionRequired: 'action_required',
    Cancelled: 'cancelled',
    Failure: 'failure',
    Neutral: 'neutral',
    Skipped: 'skipped',
    Stale: 'stale',
    Success: 'success',
    TimedOut: 'timed_out'
} as const;

export type WorkflowRun1ConclusionEnum = typeof WorkflowRun1ConclusionEnum[keyof typeof WorkflowRun1ConclusionEnum];
export const WorkflowRun1StatusEnum = {
    Requested: 'requested',
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued',
    Pending: 'pending'
} as const;

export type WorkflowRun1StatusEnum = typeof WorkflowRun1StatusEnum[keyof typeof WorkflowRun1StatusEnum];

/**
 * 
 * @export
 * @interface WorkflowRun2
 */
export interface WorkflowRun2 {
    /**
     * 
     * @type {User2}
     * @memberof WorkflowRun2
     */
    'actor': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'artifacts_url': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'cancel_url': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun2
     */
    'check_suite_id': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'check_suite_node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'check_suite_url': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'conclusion': WorkflowRun2ConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'event': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'head_branch': string | null;
    /**
     * 
     * @type {SimpleCommit}
     * @memberof WorkflowRun2
     */
    'head_commit': SimpleCommit;
    /**
     * 
     * @type {RepositoryLite}
     * @memberof WorkflowRun2
     */
    'head_repository': RepositoryLite;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'head_sha': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'html_url': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun2
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'jobs_url': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'logs_url': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'name': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'node_id': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'path': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'previous_attempt_url': string | null;
    /**
     * 
     * @type {Array<WorkflowRun2PullRequestsInner>}
     * @memberof WorkflowRun2
     */
    'pull_requests': Array<WorkflowRun2PullRequestsInner>;
    /**
     * 
     * @type {Array<DeploymentWorkflowRunReferencedWorkflowsInner>}
     * @memberof WorkflowRun2
     */
    'referenced_workflows'?: Array<DeploymentWorkflowRunReferencedWorkflowsInner> | null;
    /**
     * 
     * @type {RepositoryLite}
     * @memberof WorkflowRun2
     */
    'repository': RepositoryLite;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'rerun_url': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun2
     */
    'run_attempt': number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun2
     */
    'run_number': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'run_started_at': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'status': WorkflowRun2StatusEnum;
    /**
     * 
     * @type {User2}
     * @memberof WorkflowRun2
     */
    'triggering_actor': User2 | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'updated_at': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'url': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun2
     */
    'workflow_id': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'workflow_url': string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2
     */
    'display_title': string;
}

export const WorkflowRun2ConclusionEnum = {
    Success: 'success',
    Failure: 'failure',
    Neutral: 'neutral',
    Cancelled: 'cancelled',
    TimedOut: 'timed_out',
    ActionRequired: 'action_required',
    Stale: 'stale',
    Skipped: 'skipped',
    StartupFailure: 'startup_failure'
} as const;

export type WorkflowRun2ConclusionEnum = typeof WorkflowRun2ConclusionEnum[keyof typeof WorkflowRun2ConclusionEnum];
export const WorkflowRun2StatusEnum = {
    Requested: 'requested',
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued',
    Pending: 'pending',
    Waiting: 'waiting'
} as const;

export type WorkflowRun2StatusEnum = typeof WorkflowRun2StatusEnum[keyof typeof WorkflowRun2StatusEnum];

/**
 * 
 * @export
 * @interface WorkflowRun2PullRequestsInner
 */
export interface WorkflowRun2PullRequestsInner {
    /**
     * 
     * @type {CheckRunPullRequestBase}
     * @memberof WorkflowRun2PullRequestsInner
     */
    'base': CheckRunPullRequestBase;
    /**
     * 
     * @type {CheckRunPullRequestBase}
     * @memberof WorkflowRun2PullRequestsInner
     */
    'head': CheckRunPullRequestBase;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun2PullRequestsInner
     */
    'id': number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRun2PullRequestsInner
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRun2PullRequestsInner
     */
    'url': string;
}
/**
 * 
 * @export
 * @interface WorkflowRunPullRequestsInner
 */
export interface WorkflowRunPullRequestsInner {
    /**
     * 
     * @type {CheckRunPullRequestBase}
     * @memberof WorkflowRunPullRequestsInner
     */
    'base': CheckRunPullRequestBase;
    /**
     * 
     * @type {CheckRunPullRequestBase}
     * @memberof WorkflowRunPullRequestsInner
     */
    'head': CheckRunPullRequestBase;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRunPullRequestsInner
     */
    'id': number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRunPullRequestsInner
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowRunPullRequestsInner
     */
    'url': string;
}
/**
 * Workflow Run Usage
 * @export
 * @interface WorkflowRunUsage
 */
export interface WorkflowRunUsage {
    /**
     * 
     * @type {WorkflowRunUsageBillable}
     * @memberof WorkflowRunUsage
     */
    'billable': WorkflowRunUsageBillable;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRunUsage
     */
    'run_duration_ms'?: number;
}
/**
 * 
 * @export
 * @interface WorkflowRunUsageBillable
 */
export interface WorkflowRunUsageBillable {
    /**
     * 
     * @type {WorkflowRunUsageBillableUBUNTU}
     * @memberof WorkflowRunUsageBillable
     */
    'UBUNTU'?: WorkflowRunUsageBillableUBUNTU;
    /**
     * 
     * @type {WorkflowRunUsageBillableUBUNTU}
     * @memberof WorkflowRunUsageBillable
     */
    'MACOS'?: WorkflowRunUsageBillableUBUNTU;
    /**
     * 
     * @type {WorkflowRunUsageBillableUBUNTU}
     * @memberof WorkflowRunUsageBillable
     */
    'WINDOWS'?: WorkflowRunUsageBillableUBUNTU;
}
/**
 * 
 * @export
 * @interface WorkflowRunUsageBillableUBUNTU
 */
export interface WorkflowRunUsageBillableUBUNTU {
    /**
     * 
     * @type {number}
     * @memberof WorkflowRunUsageBillableUBUNTU
     */
    'total_ms': number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRunUsageBillableUBUNTU
     */
    'jobs': number;
    /**
     * 
     * @type {Array<WorkflowRunUsageBillableUBUNTUJobRunsInner>}
     * @memberof WorkflowRunUsageBillableUBUNTU
     */
    'job_runs'?: Array<WorkflowRunUsageBillableUBUNTUJobRunsInner>;
}
/**
 * 
 * @export
 * @interface WorkflowRunUsageBillableUBUNTUJobRunsInner
 */
export interface WorkflowRunUsageBillableUBUNTUJobRunsInner {
    /**
     * 
     * @type {number}
     * @memberof WorkflowRunUsageBillableUBUNTUJobRunsInner
     */
    'job_id': number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowRunUsageBillableUBUNTUJobRunsInner
     */
    'duration_ms': number;
}
/**
 * 
 * @export
 * @interface WorkflowStep
 */
export interface WorkflowStep {
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep
     */
    'completed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep
     */
    'conclusion': WorkflowStepConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep
     */
    'name': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowStep
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep
     */
    'started_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep
     */
    'status': WorkflowStepStatusEnum;
}

export const WorkflowStepConclusionEnum = {
    Failure: 'failure',
    Skipped: 'skipped',
    Success: 'success',
    Cancelled: 'cancelled'
} as const;

export type WorkflowStepConclusionEnum = typeof WorkflowStepConclusionEnum[keyof typeof WorkflowStepConclusionEnum];
export const WorkflowStepStatusEnum = {
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued'
} as const;

export type WorkflowStepStatusEnum = typeof WorkflowStepStatusEnum[keyof typeof WorkflowStepStatusEnum];

/**
 * 
 * @export
 * @interface WorkflowStep1
 */
export interface WorkflowStep1 {
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep1
     */
    'completed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep1
     */
    'conclusion': WorkflowStep1ConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep1
     */
    'name': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowStep1
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep1
     */
    'started_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep1
     */
    'status': WorkflowStep1StatusEnum;
}

export const WorkflowStep1ConclusionEnum = {
    Failure: 'failure',
    Skipped: 'skipped',
    Success: 'success',
    Cancelled: 'cancelled'
} as const;

export type WorkflowStep1ConclusionEnum = typeof WorkflowStep1ConclusionEnum[keyof typeof WorkflowStep1ConclusionEnum];
export const WorkflowStep1StatusEnum = {
    InProgress: 'in_progress',
    Completed: 'completed',
    Queued: 'queued',
    Pending: 'pending'
} as const;

export type WorkflowStep1StatusEnum = typeof WorkflowStep1StatusEnum[keyof typeof WorkflowStep1StatusEnum];

/**
 * 
 * @export
 * @interface WorkflowStep2
 */
export interface WorkflowStep2 {
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep2
     */
    'completed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep2
     */
    'conclusion': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep2
     */
    'name': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowStep2
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep2
     */
    'started_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep2
     */
    'status': WorkflowStep2StatusEnum;
}

export const WorkflowStep2StatusEnum = {
    InProgress: 'in_progress',
    Completed: 'completed',
    Pending: 'pending',
    Queued: 'queued'
} as const;

export type WorkflowStep2StatusEnum = typeof WorkflowStep2StatusEnum[keyof typeof WorkflowStep2StatusEnum];

/**
 * 
 * @export
 * @interface WorkflowStep3
 */
export interface WorkflowStep3 {
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep3
     */
    'completed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep3
     */
    'conclusion': WorkflowStep3ConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep3
     */
    'name': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowStep3
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep3
     */
    'started_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep3
     */
    'status': WorkflowStep3StatusEnum;
}

export const WorkflowStep3ConclusionEnum = {
    Failure: 'failure',
    Skipped: 'skipped',
    Success: 'success',
    Cancelled: 'cancelled'
} as const;

export type WorkflowStep3ConclusionEnum = typeof WorkflowStep3ConclusionEnum[keyof typeof WorkflowStep3ConclusionEnum];
export const WorkflowStep3StatusEnum = {
    Completed: 'completed',
    InProgress: 'in_progress',
    Queued: 'queued',
    Pending: 'pending'
} as const;

export type WorkflowStep3StatusEnum = typeof WorkflowStep3StatusEnum[keyof typeof WorkflowStep3StatusEnum];

/**
 * 
 * @export
 * @interface WorkflowStep4
 */
export interface WorkflowStep4 {
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep4
     */
    'completed_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep4
     */
    'conclusion': WorkflowStep4ConclusionEnum | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep4
     */
    'name': string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowStep4
     */
    'number': number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep4
     */
    'started_at': string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStep4
     */
    'status': WorkflowStep4StatusEnum;
}

export const WorkflowStep4ConclusionEnum = {
    Failure: 'failure',
    Skipped: 'skipped',
    Success: 'success',
    Cancelled: 'cancelled'
} as const;

export type WorkflowStep4ConclusionEnum = typeof WorkflowStep4ConclusionEnum[keyof typeof WorkflowStep4ConclusionEnum];
export const WorkflowStep4StatusEnum = {
    Completed: 'completed',
    InProgress: 'in_progress',
    Queued: 'queued',
    Pending: 'pending',
    Waiting: 'waiting'
} as const;

export type WorkflowStep4StatusEnum = typeof WorkflowStep4StatusEnum[keyof typeof WorkflowStep4StatusEnum];

/**
 * Workflow Usage
 * @export
 * @interface WorkflowUsage
 */
export interface WorkflowUsage {
    /**
     * 
     * @type {WorkflowUsageBillable}
     * @memberof WorkflowUsage
     */
    'billable': WorkflowUsageBillable;
}
/**
 * 
 * @export
 * @interface WorkflowUsageBillable
 */
export interface WorkflowUsageBillable {
    /**
     * 
     * @type {WorkflowUsageBillableUBUNTU}
     * @memberof WorkflowUsageBillable
     */
    'UBUNTU'?: WorkflowUsageBillableUBUNTU;
    /**
     * 
     * @type {WorkflowUsageBillableUBUNTU}
     * @memberof WorkflowUsageBillable
     */
    'MACOS'?: WorkflowUsageBillableUBUNTU;
    /**
     * 
     * @type {WorkflowUsageBillableUBUNTU}
     * @memberof WorkflowUsageBillable
     */
    'WINDOWS'?: WorkflowUsageBillableUBUNTU;
}
/**
 * 
 * @export
 * @interface WorkflowUsageBillableUBUNTU
 */
export interface WorkflowUsageBillableUBUNTU {
    /**
     * 
     * @type {number}
     * @memberof WorkflowUsageBillableUBUNTU
     */
    'total_ms'?: number;
}

/**
 * UsersApi - axios parameter creator
 * @export
 */
export const UsersApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Provides publicly available information about someone with a GitHub account.  If you are requesting information about an [Enterprise Managed User](https://docs.github.com/enterprise-cloud@latest/admin/managing-iam/understanding-iam-for-enterprises/about-enterprise-managed-users), or a GitHub App bot that is installed in an organization that uses Enterprise Managed Users, your requests must be authenticated as a user or GitHub App that has access to the organization to view that account\'s information. If you are not authorized, the request will return a `404 Not Found` status.  The `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be public which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#authentication).  The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see [Emails API](https://docs.github.com/rest/users/emails).
         * @summary Get a user
         * @param {string} username The handle for the GitHub user account.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        usersGetByUsername: async (username: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'username' is not null or undefined
            assertParamExists('usersGetByUsername', 'username', username)
            const localVarPath = `/users/{username}`
                .replace(`{${"username"}}`, encodeURIComponent(String(username)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * UsersApi - functional programming interface
 * @export
 */
export const UsersApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = UsersApiAxiosParamCreator(configuration)
    return {
        /**
         * Provides publicly available information about someone with a GitHub account.  If you are requesting information about an [Enterprise Managed User](https://docs.github.com/enterprise-cloud@latest/admin/managing-iam/understanding-iam-for-enterprises/about-enterprise-managed-users), or a GitHub App bot that is installed in an organization that uses Enterprise Managed Users, your requests must be authenticated as a user or GitHub App that has access to the organization to view that account\'s information. If you are not authorized, the request will return a `404 Not Found` status.  The `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be public which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#authentication).  The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see [Emails API](https://docs.github.com/rest/users/emails).
         * @summary Get a user
         * @param {string} username The handle for the GitHub user account.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async usersGetByUsername(username: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UsersGetByUsername200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.usersGetByUsername(username, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['UsersApi.usersGetByUsername']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
    }
};

/**
 * UsersApi - factory interface
 * @export
 */
export const UsersApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = UsersApiFp(configuration)
    return {
        /**
         * Provides publicly available information about someone with a GitHub account.  If you are requesting information about an [Enterprise Managed User](https://docs.github.com/enterprise-cloud@latest/admin/managing-iam/understanding-iam-for-enterprises/about-enterprise-managed-users), or a GitHub App bot that is installed in an organization that uses Enterprise Managed Users, your requests must be authenticated as a user or GitHub App that has access to the organization to view that account\'s information. If you are not authorized, the request will return a `404 Not Found` status.  The `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be public which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#authentication).  The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see [Emails API](https://docs.github.com/rest/users/emails).
         * @summary Get a user
         * @param {string} username The handle for the GitHub user account.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        usersGetByUsername(username: string, options?: RawAxiosRequestConfig): AxiosPromise<UsersGetByUsername200Response> {
            return localVarFp.usersGetByUsername(username, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * UsersApi - interface
 * @export
 * @interface UsersApi
 */
export interface UsersApiInterface {
    /**
     * Provides publicly available information about someone with a GitHub account.  If you are requesting information about an [Enterprise Managed User](https://docs.github.com/enterprise-cloud@latest/admin/managing-iam/understanding-iam-for-enterprises/about-enterprise-managed-users), or a GitHub App bot that is installed in an organization that uses Enterprise Managed Users, your requests must be authenticated as a user or GitHub App that has access to the organization to view that account\'s information. If you are not authorized, the request will return a `404 Not Found` status.  The `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be public which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#authentication).  The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see [Emails API](https://docs.github.com/rest/users/emails).
     * @summary Get a user
     * @param {string} username The handle for the GitHub user account.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApiInterface
     */
    usersGetByUsername(username: string, options?: RawAxiosRequestConfig): AxiosPromise<UsersGetByUsername200Response>;

}

/**
 * UsersApi - object-oriented interface
 * @export
 * @class UsersApi
 * @extends {BaseAPI}
 */
export class UsersApi extends BaseAPI implements UsersApiInterface {
    /**
     * Provides publicly available information about someone with a GitHub account.  If you are requesting information about an [Enterprise Managed User](https://docs.github.com/enterprise-cloud@latest/admin/managing-iam/understanding-iam-for-enterprises/about-enterprise-managed-users), or a GitHub App bot that is installed in an organization that uses Enterprise Managed Users, your requests must be authenticated as a user or GitHub App that has access to the organization to view that account\'s information. If you are not authorized, the request will return a `404 Not Found` status.  The `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be public which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#authentication).  The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see [Emails API](https://docs.github.com/rest/users/emails).
     * @summary Get a user
     * @param {string} username The handle for the GitHub user account.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    public usersGetByUsername(username: string, options?: RawAxiosRequestConfig) {
        return UsersApiFp(this.configuration).usersGetByUsername(username, options).then((request) => request(this.axios, this.basePath));
    }
}



